{
    "configurations": [

        
    
        {
            "cwd": "${workspaceFolder}",
            "executable": "./build/STM32_MCSDK_Project.elf",
            "name": "JTAG DEBUGGING ",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "openocd",
            "interface": "swd",
            "svdFile": "${workspaceRoot}/STM32G431xx.svd",
         //   "runToEntryPoint": "main",
            "configFiles": [
                "interface/stlink.cfg",
                "target/stm32g4x.cfg"
            ],
            "preRestartCommands": [
                "load",
                "enable breakpoint",
                "monitor reset"
            ],
            "showDevDebugOutput": true,
         //"openOCDLaunchCommands": ["adapter serial 066CFF313050353043214925"]
            // 066FFF313050353043205739  066CFF313050353043214925 
            //3000590010000059334A4D4E 48FF6D066567495726091187 1D17040029135147324D4E00
       },
       {
            "showDevDebugOutput": "parsed",
            "cwd": "${workspaceRoot}",
            "executable": "./build/STM32_MCSDK_Project.elf",
            "name": "Debug STM32",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "openocd",
            "preLaunchTask": "Build STM",
            "device": "stm32g431",
            "configFiles": [
                "openocd.cfg"
            ],
            "svdFile": "${workspaceRoot}/STM32G431xx.svd"
        },
        {
            "showDevDebugOutput": "parsed",
            "cwd": "${workspaceRoot}",
            "executable": "./build/STM32_MCSDK_Project.elf",
            "name": "Attach STM32",
            "request": "attach",
            "type": "cortex-debug",
            "servertype": "openocd",
            "preLaunchTask": "Build STM",
            "device": "stm32g431",
            "configFiles": [
                "openocd.cfg"
            ],
            "svdFile": "${workspaceRoot}/STM32G431xx.svd"
        },
        {
            "showDevDebugOutput": "parsed",
            "cwd": "${workspaceRoot}",
            "executable": "./build/STM32_MCSDK_Project.elf",
            "name": "Launch JLink",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "jlink",
            "interface": "swd",
            "preLaunchTask": "Build STM",
            "device": "STM32G431CB",
            "preLaunchCommands": [
                "make flash-jlink"
            ],
            "swoConfig": {
                "enabled": true,
                "cpuFrequency": 96000000,
                "swoFrequency": 4000000,
                "source": "probe",
                "decoders": [
                    {
                        "type": "console",
                        "label": "ITM port 0 output",
                        "port": 0,
                        "showOnStartup": true,
                        "encoding": "ascii"
                    }
                ]
            },
            "svdFile": "STM32G431xx.svd"
        },
        {
            "showDevDebugOutput": "parsed",
            "cwd": "${workspaceRoot}",
            "executable": "./build/STM32_MCSDK_Project.elf",
            "name": "Attach JLink",
            "request": "attach",
            "type": "cortex-debug",
            "servertype": "jlink",
            "interface": "swd",
            "preLaunchTask": "Build STM",
            "device": "STM32G431CB",
            "preAttachCommands": [
                "make flash-jlink"
            ],
            "swoConfig": {
                "enabled": true,
                "cpuFrequency": 96000000,
                "swoFrequency": 4000000,
                "source": "probe",
                "decoders": [
                    {
                        "type": "console",
                        "label": "ITM port 0 output",
                        "port": 0,
                        "showOnStartup": true,
                        "encoding": "ascii"
                    }
                ]
            },
            "svdFile": "STM32G431xx.svd"
        },
    ]
}
