ARM GAS  /tmp/cccMYuWq.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"aspep.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ASPEP_ComputeHeaderCRC,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	ASPEP_ComputeHeaderCRC:
  26              	.LVL0:
  27              	.LFB1437:
  28              		.file 1 "Src/aspep.c"
   1:Src/aspep.c   **** 
   2:Src/aspep.c   **** /**
   3:Src/aspep.c   ****   ******************************************************************************
   4:Src/aspep.c   ****   * @file   aspep.c
   5:Src/aspep.c   ****   * @author Motor Control SDK Team, ST Microelectronics
   6:Src/aspep.c   ****   * @brief  This file provides firmware functions that implement the aspep protocol
   7:Src/aspep.c   ****   *
   8:Src/aspep.c   ****   *
   9:Src/aspep.c   ****   ******************************************************************************
  10:Src/aspep.c   ****   * @attention
  11:Src/aspep.c   ****   *
  12:Src/aspep.c   ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  13:Src/aspep.c   ****   * All rights reserved.</center></h2>
  14:Src/aspep.c   ****   *
  15:Src/aspep.c   ****   * This software component is licensed by ST under Ultimate Liberty license
  16:Src/aspep.c   ****   * SLA0044, the "License"; You may not use this file except in compliance with
  17:Src/aspep.c   ****   * the License. You may obtain a copy of the License at:
  18:Src/aspep.c   ****   *                             www.st.com/SLA0044
  19:Src/aspep.c   ****   *
  20:Src/aspep.c   ****   ******************************************************************************
  21:Src/aspep.c   ****   */
  22:Src/aspep.c   **** #include <stdint.h>
  23:Src/aspep.c   **** #include "aspep.h"
  24:Src/aspep.c   **** 
  25:Src/aspep.c   **** #define MIN(a,b) ( ((a) < (b)) ? (a) : (b) )
  26:Src/aspep.c   **** 
  27:Src/aspep.c   ****                                                              static uint8_t ASPEP_TXframeProcess(AS
  28:Src/aspep.c   **** void ASPEP_sendBeacon(ASPEP_Handle_t *pHandle, ASPEP_Capabilities_def *capabilities);
  29:Src/aspep.c   **** void ASPEP_sendPing(ASPEP_Handle_t *pHandle, uint8_t state, uint16_t PacketNumber);
  30:Src/aspep.c   **** 
ARM GAS  /tmp/cccMYuWq.s 			page 2


  31:Src/aspep.c   **** #ifndef CRC4_PER_NIBBLE
  32:Src/aspep.c   **** /**
  33:Src/aspep.c   ****   * @brief CRC-4 lookup table with 256 entries
  34:Src/aspep.c   ****   *
  35:Src/aspep.c   ****   *  Used to compute and check the CRC on the header with the BYTE granularity.
  36:Src/aspep.c   ****   *
  37:Src/aspep.c   ****   * When computing the CRC, the 7th nibble must to be processed with the CRC_Lookup4
  38:Src/aspep.c   ****   * table. Indeed, the header contains 7 nibbles (28 bits) of data on which the CRC is
  39:Src/aspep.c   ****   * to be computed. Hence, the CRC4_Lookup8 table cannot be used for the last nibble.
  40:Src/aspep.c   ****   *
  41:Src/aspep.c   ****   * Using only this lookup table requires that the amount of input data is a multiple of
  42:Src/aspep.c   ****   * 8 bits.
  43:Src/aspep.c   ****   */
  44:Src/aspep.c   **** static uint8_t const CRC4_Lookup8[] =
  45:Src/aspep.c   **** {
  46:Src/aspep.c   ****   /*          0,    1,    2,    3,    4,    5,    6,    7,    8,    9,   A,     B,    C,    D,    E
  47:Src/aspep.c   ****   /* 0 */  0x00, 0x02, 0x04, 0x06, 0x08, 0x0a, 0x0c, 0x0e, 0x07, 0x05, 0x03, 0x01, 0x0f, 0x0d, 0x0b
  48:Src/aspep.c   ****   /* 1 */  0x07, 0x05, 0x03, 0x01, 0x0f, 0x0d, 0x0b, 0x09, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0a, 0x0c
  49:Src/aspep.c   ****   /* 2 */  0x0e, 0x0c, 0x0a, 0x08, 0x06, 0x04, 0x02, 0x00, 0x09, 0x0b, 0x0d, 0x0f, 0x01, 0x03, 0x05
  50:Src/aspep.c   ****   /* 3 */  0x09, 0x0b, 0x0d, 0x0f, 0x01, 0x03, 0x05, 0x07, 0x0e, 0x0c, 0x0a, 0x08, 0x06, 0x04, 0x02
  51:Src/aspep.c   ****   /* 4 */  0x0b, 0x09, 0x0f, 0x0d, 0x03, 0x01, 0x07, 0x05, 0x0c, 0x0e, 0x08, 0x0a, 0x04, 0x06, 0x00
  52:Src/aspep.c   ****   /* 5 */  0x0c, 0x0e, 0x08, 0x0a, 0x04, 0x06, 0x00, 0x02, 0x0b, 0x09, 0x0f, 0x0d, 0x03, 0x01, 0x07
  53:Src/aspep.c   ****   /* 6 */  0x05, 0x07, 0x01, 0x03, 0x0d, 0x0f, 0x09, 0x0b, 0x02, 0x00, 0x06, 0x04, 0x0a, 0x08, 0x0e
  54:Src/aspep.c   ****   /* 7 */  0x02, 0x00, 0x06, 0x04, 0x0a, 0x08, 0x0e, 0x0c, 0x05, 0x07, 0x01, 0x03, 0x0d, 0x0f, 0x09
  55:Src/aspep.c   ****   /* 8 */  0x01, 0x03, 0x05, 0x07, 0x09, 0x0b, 0x0d, 0x0f, 0x06, 0x04, 0x02, 0x00, 0x0e, 0x0c, 0x0a
  56:Src/aspep.c   ****   /* 9 */  0x06, 0x04, 0x02, 0x00, 0x0e, 0x0c, 0x0a, 0x08, 0x01, 0x03, 0x05, 0x07, 0x09, 0x0b, 0x0d
  57:Src/aspep.c   ****   /* A */  0x0f, 0x0d, 0x0b, 0x09, 0x07, 0x05, 0x03, 0x01, 0x08, 0x0a, 0x0c, 0x0e, 0x00, 0x02, 0x04
  58:Src/aspep.c   ****   /* B */  0x08, 0x0a, 0x0c, 0x0e, 0x00, 0x02, 0x04, 0x06, 0x0f, 0x0d, 0x0b, 0x09, 0x07, 0x05, 0x03
  59:Src/aspep.c   ****   /* C */  0x0a, 0x08, 0x0e, 0x0c, 0x02, 0x00, 0x06, 0x04, 0x0d, 0x0f, 0x09, 0x0b, 0x05, 0x07, 0x01
  60:Src/aspep.c   ****   /* D */  0x0d, 0x0f, 0x09, 0x0b, 0x05, 0x07, 0x01, 0x03, 0x0a, 0x08, 0x0e, 0x0c, 0x02, 0x00, 0x06
  61:Src/aspep.c   ****   /* E */  0x04, 0x06, 0x00, 0x02, 0x0c, 0x0e, 0x08, 0x0a, 0x03, 0x01, 0x07, 0x05, 0x0b, 0x09, 0x0f
  62:Src/aspep.c   ****   /* F */  0x03, 0x01, 0x07, 0x05, 0x0b, 0x09, 0x0f, 0x0d, 0x04, 0x06, 0x00, 0x02, 0x0c, 0x0e, 0x08
  63:Src/aspep.c   **** };
  64:Src/aspep.c   **** 
  65:Src/aspep.c   **** /**
  66:Src/aspep.c   ****   * @brief CRC-4 lookup table with 16 entries
  67:Src/aspep.c   ****   *
  68:Src/aspep.c   ****   *  Used to compute and check the CRC on the header with either the BYTE or NIBBLE granularity
  69:Src/aspep.c   ****   * In case the BYTE granularity is used, the table is used only with the 7th nibble of the header
  70:Src/aspep.c   ****   * (bits 24 to 27) when computing the CRC.
  71:Src/aspep.c   ****   */
  72:Src/aspep.c   ****   //cstat !MISRAC2012-Rule-8.9_a
  73:Src/aspep.c   **** static uint8_t const CRC4_Lookup4[] =
  74:Src/aspep.c   **** {
  75:Src/aspep.c   ****   /*   0,    1,    2,    3,    4,    5,    6,    7,    8,    9,   A,     B,    C,    D,    E,    F 
  76:Src/aspep.c   ****   0x00, 0x07, 0x0e, 0x09, 0x0b, 0x0c, 0x05, 0x02, 0x01, 0x06, 0x0f, 0x08, 0x0a, 0x0d, 0x04, 0x03
  77:Src/aspep.c   **** };
  78:Src/aspep.c   **** #endif /* CRC4_PER_NIBBLE */
  79:Src/aspep.c   **** 
  80:Src/aspep.c   **** /**
  81:Src/aspep.c   ****   * @brief Computes a 4-bit CRC on the 28 LSBs of @p header and returns it in the 4 MSB of the head
  82:Src/aspep.c   ****   *
  83:Src/aspep.c   ****   *  The generator polynomial used for the CRC is x^4+x+1 (ref. CCITT-G704).
  84:Src/aspep.c   ****   *
  85:Src/aspep.c   ****   *  The 28 input bits are split into 7 nibbles that are processed from the least significant to th
  86:Src/aspep.c   ****   * most significant one as follows:
  87:Src/aspep.c   ****   *
ARM GAS  /tmp/cccMYuWq.s 			page 3


  88:Src/aspep.c   ****   *  - the least significant (4-bit) nibble is processed first as if it were the most significant p
  89:Src/aspep.c   ****   *    of the divident;
  90:Src/aspep.c   ****   *  - the order of bits in each nibble is unchanged for processing which would leads to the follow
  91:Src/aspep.c   ****   *    bit processing sequence: 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12, 19, 18, 17, 1
  92:Src/aspep.c   ****   *    23, 22, 21, 20, 27, 26, 25, 24.
  93:Src/aspep.c   ****   *
  94:Src/aspep.c   ****   *  Two lookup tables based implementations are proposed: one solely relying on a 16 entries looku
  95:Src/aspep.c   ****   * table and another one that also uses a 256 entries lookup table. This last one is the default. 
  96:Src/aspep.c   ****   * requires 256 more bytes than the first but is also roughly two times faster.
  97:Src/aspep.c   ****   *
  98:Src/aspep.c   ****   *  The 16 entries lookup table based implementation is enabled when the CRC4_PER_NIBBLE preproces
  99:Src/aspep.c   ****   * flag is defined.
 100:Src/aspep.c   ****   *
 101:Src/aspep.c   ****   *  Note that the default, 256 entries lookup table based implementation also uses the 16 entries 
 102:Src/aspep.c   ****   * table because the amount of input data is not a multiple of 8 bits.
 103:Src/aspep.c   ****   *
 104:Src/aspep.c   ****   * The resulting CRC is written in bits 28 to 31 of @p header and the whole header is returned.
 105:Src/aspep.c   ****   */
 106:Src/aspep.c   **** static void ASPEP_ComputeHeaderCRC(uint32_t *headerPtr)
 107:Src/aspep.c   **** {
  29              		.loc 1 107 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 107 1 is_stmt 0 view .LVU1
  35 0000 10B4     		push	{r4}
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 4, -4
 108:Src/aspep.c   ****   uint8_t crc = 0;
  38              		.loc 1 108 3 is_stmt 1 view .LVU2
  39              	.LVL1:
 109:Src/aspep.c   ****   uint32_t header = *headerPtr;
  40              		.loc 1 109 3 view .LVU3
  41              		.loc 1 109 12 is_stmt 0 view .LVU4
  42 0002 0368     		ldr	r3, [r0]
  43              	.LVL2:
 110:Src/aspep.c   **** 
 111:Src/aspep.c   **** #ifndef CRC4_PER_NIBBLE
 112:Src/aspep.c   ****   header &= 0x0fffffffU;
  44              		.loc 1 112 3 is_stmt 1 view .LVU5
 113:Src/aspep.c   **** 
 114:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)(header         & 0xffU)];
  45              		.loc 1 114 3 view .LVU6
  46              		.loc 1 114 26 is_stmt 0 view .LVU7
  47 0004 DAB2     		uxtb	r2, r3
  48              		.loc 1 114 7 view .LVU8
  49 0006 0A49     		ldr	r1, .L3
  50 0008 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
  51              	.LVL3:
 115:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
  52              		.loc 1 115 3 is_stmt 1 view .LVU9
  53              		.loc 1 115 28 is_stmt 0 view .LVU10
  54 000a C3F30722 		ubfx	r2, r3, #8, #8
  55              		.loc 1 115 26 view .LVU11
  56 000e 6240     		eors	r2, r2, r4
  57              		.loc 1 115 7 view .LVU12
ARM GAS  /tmp/cccMYuWq.s 			page 4


  58 0010 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
  59              	.LVL4:
 116:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
  60              		.loc 1 116 3 is_stmt 1 view .LVU13
  61              		.loc 1 116 28 is_stmt 0 view .LVU14
  62 0012 C3F30742 		ubfx	r2, r3, #16, #8
  63              		.loc 1 116 26 view .LVU15
  64 0016 6240     		eors	r2, r2, r4
  65              		.loc 1 116 7 view .LVU16
  66 0018 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
  67              	.LVL5:
 117:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0x0fU)];
  68              		.loc 1 117 3 is_stmt 1 view .LVU17
  69              		.loc 1 117 28 is_stmt 0 view .LVU18
  70 001a C3F30361 		ubfx	r1, r3, #24, #4
  71              		.loc 1 117 26 view .LVU19
  72 001e 4A40     		eors	r2, r2, r1
  73              	.LVL6:
  74              		.loc 1 117 7 view .LVU20
  75 0020 0449     		ldr	r1, .L3+4
  76 0022 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
  77              	.LVL7:
 118:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 119:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)(header         & 0xfU)];
 120:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  4U) & 0xfU)];
 121:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  8U) & 0xfU)];
 122:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 12U) & 0xfU)];
 123:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 16U) & 0xfU)];
 124:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 20U) & 0xfU)];
 125:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0xfU)];
 126:Src/aspep.c   **** #endif /* CRC4_PER_NIBBLE */
 127:Src/aspep.c   **** 
 128:Src/aspep.c   ****   *headerPtr |= (uint32_t)crc << 28;
  78              		.loc 1 128 3 is_stmt 1 view .LVU21
  79              		.loc 1 128 14 is_stmt 0 view .LVU22
  80 0024 43EA0273 		orr	r3, r3, r2, lsl #28
  81              	.LVL8:
  82              		.loc 1 128 14 view .LVU23
  83 0028 0360     		str	r3, [r0]
  84              	.LVL9:
 129:Src/aspep.c   ****   return;
  85              		.loc 1 129 3 is_stmt 1 view .LVU24
 130:Src/aspep.c   **** }
  86              		.loc 1 130 1 is_stmt 0 view .LVU25
  87 002a 5DF8044B 		ldr	r4, [sp], #4
  88              		.cfi_restore 4
  89              		.cfi_def_cfa_offset 0
  90 002e 7047     		bx	lr
  91              	.L4:
  92              		.align	2
  93              	.L3:
  94 0030 00000000 		.word	.LANCHOR0
  95 0034 00000000 		.word	.LANCHOR1
  96              		.cfi_endproc
  97              	.LFE1437:
  99              		.section	.text.ASPEP_CheckHeaderCRC,"ax",%progbits
 100              		.align	1
ARM GAS  /tmp/cccMYuWq.s 			page 5


 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 104              		.fpu fpv4-sp-d16
 106              	ASPEP_CheckHeaderCRC:
 107              	.LVL10:
 108              	.LFB1438:
 131:Src/aspep.c   **** 
 132:Src/aspep.c   **** /**
 133:Src/aspep.c   ****   * @brief Checks if @p header contains a valid 4-bit CRC and return true if this is the case and f
 134:Src/aspep.c   ****   *
 135:Src/aspep.c   ****   *  The CRC is computed over the 32 bits of the @p header. If the result is 0, the CRC is consider
 136:Src/aspep.c   ****   * and true is returned. If the result is not 0, false is returned.
 137:Src/aspep.c   ****   *
 138:Src/aspep.c   ****   * @sa ASPEP_ComputeHeaderCRC
 139:Src/aspep.c   ****   */
 140:Src/aspep.c   **** static bool ASPEP_CheckHeaderCRC(uint32_t header)
 141:Src/aspep.c   **** {
 109              		.loc 1 141 1 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 142:Src/aspep.c   ****   uint8_t crc = 0;
 114              		.loc 1 142 3 view .LVU27
 143:Src/aspep.c   **** 
 144:Src/aspep.c   **** #ifndef CRC4_PER_NIBBLE
 145:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)(header         & 0xffU)];
 115              		.loc 1 145 3 view .LVU28
 116              		.loc 1 145 26 is_stmt 0 view .LVU29
 117 0000 C2B2     		uxtb	r2, r0
 118              		.loc 1 145 7 view .LVU30
 119 0002 084B     		ldr	r3, .L6
 120 0004 995C     		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 121              	.LVL11:
 146:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 8U) & 0xffU)];
 122              		.loc 1 146 3 is_stmt 1 view .LVU31
 123              		.loc 1 146 28 is_stmt 0 view .LVU32
 124 0006 C0F30722 		ubfx	r2, r0, #8, #8
 125              		.loc 1 146 26 view .LVU33
 126 000a 4A40     		eors	r2, r2, r1
 127              		.loc 1 146 7 view .LVU34
 128 000c 995C     		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 129              	.LVL12:
 147:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 16U) & 0xffU)];
 130              		.loc 1 147 3 is_stmt 1 view .LVU35
 131              		.loc 1 147 28 is_stmt 0 view .LVU36
 132 000e C0F30742 		ubfx	r2, r0, #16, #8
 133              		.loc 1 147 26 view .LVU37
 134 0012 4A40     		eors	r2, r2, r1
 135              		.loc 1 147 7 view .LVU38
 136 0014 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 137              	.LVL13:
 148:Src/aspep.c   ****   crc = CRC4_Lookup8[crc ^ (uint8_t)((header >> 24U) & 0xffU)];
 138              		.loc 1 148 3 is_stmt 1 view .LVU39
 139              		.loc 1 148 26 is_stmt 0 view .LVU40
 140 0016 82EA1060 		eor	r0, r2, r0, lsr #24
ARM GAS  /tmp/cccMYuWq.s 			page 6


 141              	.LVL14:
 142              		.loc 1 148 7 view .LVU41
 143 001a 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 144              	.LVL15:
 149:Src/aspep.c   **** #else /* CRC4_PER_NIBBLE */
 150:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)(header         & 0xfU)];
 151:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  4U) & 0xfU)];
 152:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >>  8U) & 0xfU)];
 153:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 12U) & 0xfU)];
 154:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 16U) & 0xfU)];
 155:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 20U) & 0xfU)];
 156:Src/aspep.c   ****   crc = CRC4_Lookup4[crc ^ (uint8_t)((header >> 24U) & 0xfU)];
 157:Src/aspep.c   ****   crc = crc ^ (uint8_t)((header >> 28) & 0xf);
 158:Src/aspep.c   **** #endif /* CRC4_PER_NIBBLE */
 159:Src/aspep.c   **** 
 160:Src/aspep.c   ****   return (crc == 0U);
 145              		.loc 1 160 3 is_stmt 1 view .LVU42
 161:Src/aspep.c   **** }
 146              		.loc 1 161 1 is_stmt 0 view .LVU43
 147 001c B0FA80F0 		clz	r0, r0
 148              	.LVL16:
 149              		.loc 1 161 1 view .LVU44
 150 0020 4009     		lsrs	r0, r0, #5
 151 0022 7047     		bx	lr
 152              	.L7:
 153              		.align	2
 154              	.L6:
 155 0024 00000000 		.word	.LANCHOR0
 156              		.cfi_endproc
 157              	.LFE1438:
 159              		.section	.text.ASPEP_TXframeProcess,"ax",%progbits
 160              		.align	1
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv4-sp-d16
 166              	ASPEP_TXframeProcess:
 167              	.LVL17:
 168              	.LFB1446:
 162:Src/aspep.c   **** 
 163:Src/aspep.c   **** void ASPEP_start(ASPEP_Handle_t *pHandle)
 164:Src/aspep.c   **** {
 165:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 166:Src/aspep.c   ****   if (MC_NULL == pHandle)
 167:Src/aspep.c   ****   {
 168:Src/aspep.c   ****     /* Nothing to do */
 169:Src/aspep.c   ****   }
 170:Src/aspep.c   ****   else
 171:Src/aspep.c   ****   {
 172:Src/aspep.c   **** #endif
 173:Src/aspep.c   ****     pHandle->fASPEP_HWInit(pHandle->HWIp);
 174:Src/aspep.c   ****     pHandle->ASPEP_State = ASPEP_IDLE;
 175:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
 176:Src/aspep.c   ****     pHandle->syncPacketCount = 0; /* Sync packet counter is reset only at startup*/
 177:Src/aspep.c   **** 
 178:Src/aspep.c   ****     /* Configure UART to receive first packet*/
 179:Src/aspep.c   ****     pHandle->fASPEP_receive(pHandle->HWIp, pHandle->rxHeader, ASPEP_HEADER_SIZE);
ARM GAS  /tmp/cccMYuWq.s 			page 7


 180:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 181:Src/aspep.c   ****   }
 182:Src/aspep.c   **** #endif
 183:Src/aspep.c   **** }
 184:Src/aspep.c   **** 
 185:Src/aspep.c   **** void ASPEP_sendBeacon(ASPEP_Handle_t *pHandle, ASPEP_Capabilities_def *capabilities)
 186:Src/aspep.c   **** {
 187:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 188:Src/aspep.c   ****   if ((MC_NULL == pHandle) || (NULL == capabilities))
 189:Src/aspep.c   ****   {
 190:Src/aspep.c   ****     /* Nothing to do */
 191:Src/aspep.c   ****   }
 192:Src/aspep.c   ****   else
 193:Src/aspep.c   ****   {
 194:Src/aspep.c   **** #endif
 195:Src/aspep.c   ****     uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 196:Src/aspep.c   ****     *packet = (BEACON
 197:Src/aspep.c   ****                | (((uint32_t)capabilities->version) << 4U)
 198:Src/aspep.c   ****                | (((uint32_t)capabilities->DATA_CRC) << 7U)
 199:Src/aspep.c   ****                | (((uint32_t)capabilities->RX_maxSize) << 8U)
 200:Src/aspep.c   ****                | (((uint32_t)capabilities->TXS_maxSize) << 14U)
 201:Src/aspep.c   ****                | (((uint32_t)capabilities->TXA_maxSize) << 21U));
 202:Src/aspep.c   **** 
 203:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 204:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 205:Src/aspep.c   ****   }
 206:Src/aspep.c   **** #endif
 207:Src/aspep.c   **** }
 208:Src/aspep.c   **** 
 209:Src/aspep.c   **** static void ASPEP_sendNack(ASPEP_Handle_t *pHandle, uint8_t errorInfo)
 210:Src/aspep.c   **** {
 211:Src/aspep.c   ****   uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 212:Src/aspep.c   ****   *packet = NACK | (uint32_t)(((uint32_t) errorInfo) << 8U) | (uint32_t)(((uint32_t) errorInfo) << 
 213:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 214:Src/aspep.c   **** }
 215:Src/aspep.c   **** 
 216:Src/aspep.c   **** void ASPEP_sendPing(ASPEP_Handle_t *pHandle, uint8_t cBit, uint16_t packetNumber)
 217:Src/aspep.c   **** {
 218:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 219:Src/aspep.c   ****   if (MC_NULL == pHandle)
 220:Src/aspep.c   ****   {
 221:Src/aspep.c   ****     /* Nothing to do */
 222:Src/aspep.c   ****   }
 223:Src/aspep.c   ****   else
 224:Src/aspep.c   ****   {
 225:Src/aspep.c   **** #endif
 226:Src/aspep.c   ****     uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 227:Src/aspep.c   ****     uint8_t Nbit = pHandle->syncPacketCount & 0x1U; /* Keep only LSB */
 228:Src/aspep.c   ****     uint8_t ipID = pHandle->liid & 0xFU;
 229:Src/aspep.c   ****     *packet = PING | (uint32_t)((uint32_t)cBit << 4U)
 230:Src/aspep.c   ****               | (uint32_t)((uint32_t)cBit << 5U)
 231:Src/aspep.c   ****               | (uint32_t)((uint32_t)Nbit << 6U)
 232:Src/aspep.c   ****               | (uint32_t)((uint32_t)Nbit << 7U)
 233:Src/aspep.c   ****               | (uint32_t)((uint32_t)ipID << 8U)
 234:Src/aspep.c   ****               | (uint32_t)(((uint32_t) packetNumber) << 12U);
 235:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 236:Src/aspep.c   **** #ifdef NULL_PTR_ASP
ARM GAS  /tmp/cccMYuWq.s 			page 8


 237:Src/aspep.c   ****   }
 238:Src/aspep.c   **** #endif
 239:Src/aspep.c   **** }
 240:Src/aspep.c   **** 
 241:Src/aspep.c   **** bool ASPEP_getBuffer(MCTL_Handle_t *pSupHandle, void **buffer,  uint8_t syncAsync)
 242:Src/aspep.c   **** {
 243:Src/aspep.c   ****   bool result = true;
 244:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 245:Src/aspep.c   ****   if (MC_NULL == buffer)
 246:Src/aspep.c   ****   {
 247:Src/aspep.c   ****     result = false;
 248:Src/aspep.c   ****   }
 249:Src/aspep.c   ****   else
 250:Src/aspep.c   ****   {
 251:Src/aspep.c   **** #endif
 252:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 253:Src/aspep.c   **** 
 254:Src/aspep.c   ****     if (MCTL_SYNC == syncAsync)
 255:Src/aspep.c   ****     {
 256:Src/aspep.c   ****       if (pHandle->syncBuffer.state <= writeLock) /* Possible values are free or writeLock*/
 257:Src/aspep.c   ****       {
 258:Src/aspep.c   ****         *buffer = &pHandle->syncBuffer.buffer[ASPEP_HEADER_SIZE];
 259:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 260:Src/aspep.c   ****       }
 261:Src/aspep.c   ****       else
 262:Src/aspep.c   ****       {
 263:Src/aspep.c   ****         result = false;
 264:Src/aspep.c   ****       }
 265:Src/aspep.c   ****     }
 266:Src/aspep.c   ****     else /* Asynchronous buffer request */
 267:Src/aspep.c   ****     {
 268:Src/aspep.c   ****       if ((pHandle->asyncBufferA.state > writeLock) && (pHandle->asyncBufferB.state > writeLock))
 269:Src/aspep.c   ****       {
 270:Src/aspep.c   ****         result = false;
 271:Src/aspep.c   ****       }
 272:Src/aspep.c   ****       else
 273:Src/aspep.c   ****       {
 274:Src/aspep.c   ****         if (pHandle->asyncBufferA.state <= writeLock)
 275:Src/aspep.c   ****         {
 276:Src/aspep.c   ****           pHandle->asyncBufferA.state = writeLock;
 277:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferA;
 278:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 279:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 280:Src/aspep.c   ****           pHandle->asyncBufferA.RequestedNumber++;
 281:Src/aspep.c   **** #endif
 282:Src/aspep.c   ****         }
 283:Src/aspep.c   ****         else if (pHandle->asyncBufferB.state <= writeLock)
 284:Src/aspep.c   ****         {
 285:Src/aspep.c   ****           pHandle->asyncBufferB.state = writeLock;
 286:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferB;
 287:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 288:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 289:Src/aspep.c   ****           pHandle->asyncBufferB.RequestedNumber++;
 290:Src/aspep.c   **** #endif
 291:Src/aspep.c   ****         }
 292:Src/aspep.c   ****         else
 293:Src/aspep.c   ****         {
ARM GAS  /tmp/cccMYuWq.s 			page 9


 294:Src/aspep.c   ****           /* Nothing to do */
 295:Src/aspep.c   ****         }
 296:Src/aspep.c   ****       }
 297:Src/aspep.c   ****     }
 298:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 299:Src/aspep.c   ****   }
 300:Src/aspep.c   **** #endif
 301:Src/aspep.c   ****   return (result);
 302:Src/aspep.c   **** }
 303:Src/aspep.c   **** 
 304:Src/aspep.c   **** bool ASPEP_CheckBeacon (ASPEP_Handle_t * pHandle)
 305:Src/aspep.c   **** {
 306:Src/aspep.c   ****   bool result = true;
 307:Src/aspep.c   ****   uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
 308:Src/aspep.c   ****   ASPEP_Capabilities_def MasterCapabilities;
 309:Src/aspep.c   ****   MasterCapabilities.version =  (uint8_t)((packetHeader &0x70U)>> 4U); /*Bits 4 to 6*/
 310:Src/aspep.c   ****   MasterCapabilities.DATA_CRC = pHandle->rxHeader[0] >> 7U ;      /*Bit 7 */
 311:Src/aspep.c   ****   MasterCapabilities.RX_maxSize =  pHandle->rxHeader[1] &0x3FU; /*Bits 8 to  13*/
 312:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 313:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21); /*Bits 21 to 27  */
 314:Src/aspep.c   **** 
 315:Src/aspep.c   ****   pHandle->Capabilities.DATA_CRC = MIN(pHandle->Capabilities.DATA_CRC ,MasterCapabilities.DATA_CRC)
 316:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 317:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 318:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 319:Src/aspep.c   **** 
 320:Src/aspep.c   ****   if ((MasterCapabilities.DATA_CRC != pHandle->Capabilities.DATA_CRC)
 321:Src/aspep.c   ****    /* Data packet the master can send is bigger than slave can receive */
 322:Src/aspep.c   ****    || (MasterCapabilities.RX_maxSize > pHandle->Capabilities.RX_maxSize)
 323:Src/aspep.c   ****    /* Sync packet size alignement is required in order for the master to be able to store it, and t
 324:Src/aspep.c   ****     * response bigger than slave capability */
 325:Src/aspep.c   ****    || (pHandle->Capabilities.TXS_maxSize != MasterCapabilities.TXS_maxSize )
 326:Src/aspep.c   ****    /* Async packet the slave can send is bigger than the master can receive (but master must not re
 327:Src/aspep.c   ****     * packet than slave can transmit */
 328:Src/aspep.c   ****    || (pHandle->Capabilities.TXA_maxSize != MasterCapabilities.TXA_maxSize )
 329:Src/aspep.c   ****    /* For the time being, master version has to match slave version */
 330:Src/aspep.c   ****    || (MasterCapabilities.version != pHandle->Capabilities.version) )
 331:Src/aspep.c   ****   {
 332:Src/aspep.c   ****     result = false;
 333:Src/aspep.c   ****   }
 334:Src/aspep.c   **** 
 335:Src/aspep.c   ****   return (result);
 336:Src/aspep.c   **** }
 337:Src/aspep.c   **** 
 338:Src/aspep.c   **** /*
 339:Src/aspep.c   **** 
 340:Src/aspep.c   ****  void *txBuffer, can be 8, 16 or 32 bits, but must be 32 bits aligned.
 341:Src/aspep.c   ****  uint16_t txDataLength Size of useful data in byte
 342:Src/aspep.c   **** 
 343:Src/aspep.c   ****   */
 344:Src/aspep.c   **** 
 345:Src/aspep.c   **** uint8_t ASPEP_sendPacket(MCTL_Handle_t *pSupHandle, void *txBuffer, uint16_t txDataLength, uint8_t 
 346:Src/aspep.c   **** {
 347:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 348:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 349:Src/aspep.c   ****   if ((MC_NULL == pSupHandle) || (MC_NULL == txBuffer))
 350:Src/aspep.c   ****   {
ARM GAS  /tmp/cccMYuWq.s 			page 10


 351:Src/aspep.c   ****     result = ASPEP_BUFFER_ERROR;
 352:Src/aspep.c   ****   }
 353:Src/aspep.c   ****   else
 354:Src/aspep.c   ****   {
 355:Src/aspep.c   **** #endif
 356:Src/aspep.c   ****     uint8_t *packet;
 357:Src/aspep.c   ****     uint32_t *header;
 358:Src/aspep.c   ****     uint32_t tmpHeader;
 359:Src/aspep.c   ****     uint16_t txDataLengthTemp;
 360:Src/aspep.c   **** 
 361:Src/aspep.c   ****     txDataLengthTemp = txDataLength;
 362:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 363:Src/aspep.c   **** 
 364:Src/aspep.c   ****     if (ASPEP_CONNECTED == pHandle-> ASPEP_State)
 365:Src/aspep.c   ****     {
 366:Src/aspep.c   ****       /*We must add packet header on  */
 367:Src/aspep.c   ****       /* | [0101|0011] | Length 13b | Reserved |CRCH 4b| */
 368:Src/aspep.c   ****       packet = (uint8_t *)txBuffer; //cstat !MISRAC2012-Rule-11.5
 369:Src/aspep.c   ****       header = (uint32_t *)txBuffer; //cstat !MISRAC2012-Rule-11.5
 370:Src/aspep.c   ****       header--; /* Header ues 4*8 bits on top of txBuffer*/
 371:Src/aspep.c   ****       tmpHeader = ((uint32_t)((uint32_t)txDataLengthTemp << (uint32_t)4) | (uint32_t)syncAsync);
 372:Src/aspep.c   ****       *header = tmpHeader;
 373:Src/aspep.c   ****       if (1U == pHandle->Capabilities.DATA_CRC)
 374:Src/aspep.c   ****       {
 375:Src/aspep.c   ****         /* TODO : Compute real CRC*/
 376:Src/aspep.c   ****         packet[txDataLengthTemp] = (uint8_t)0xCA; /* Dummy CRC */
 377:Src/aspep.c   ****         packet[txDataLengthTemp + 1U] = (uint8_t)0xFE; /* Dummy CRC */
 378:Src/aspep.c   ****         txDataLengthTemp += (uint16_t)ASPEP_DATACRC_SIZE;
 379:Src/aspep.c   ****       }
 380:Src/aspep.c   ****       if (MCTL_SYNC == syncAsync)
 381:Src/aspep.c   ****       {
 382:Src/aspep.c   ****         if (pSupHandle->MCP_PacketAvailable)
 383:Src/aspep.c   ****         {
 384:Src/aspep.c   ****           pSupHandle->MCP_PacketAvailable = false; /* CMD from master is processed*/
 385:Src/aspep.c   ****         }
 386:Src/aspep.c   ****         else
 387:Src/aspep.c   ****         {
 388:Src/aspep.c   ****           result = MCTL_SYNC_NOT_EXPECTED;
 389:Src/aspep.c   ****         }
 390:Src/aspep.c   ****       }
 391:Src/aspep.c   ****       if (ASPEP_OK == result) /* Send packet only if no error detected so far*/
 392:Src/aspep.c   ****       {
 393:Src/aspep.c   ****         result = ASPEP_TXframeProcess(pHandle, syncAsync, header, txDataLengthTemp + (uint16_t)ASPE
 394:Src/aspep.c   ****       }
 395:Src/aspep.c   ****     }
 396:Src/aspep.c   ****     else
 397:Src/aspep.c   ****     {
 398:Src/aspep.c   ****       result = ASPEP_NOT_CONNECTED;
 399:Src/aspep.c   ****     }
 400:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 401:Src/aspep.c   ****   }
 402:Src/aspep.c   **** #endif
 403:Src/aspep.c   ****   return (result);
 404:Src/aspep.c   **** }
 405:Src/aspep.c   **** 
 406:Src/aspep.c   **** /*
 407:Src/aspep.c   ****  This function contains a critical section.
ARM GAS  /tmp/cccMYuWq.s 			page 11


 408:Src/aspep.c   ****  It can be accessed concurently under High frequency task (by MCPA_datalog)
 409:Src/aspep.c   ****  and under Medium frequency task (MC_Scheduler -> ASPEP_RxFrameProcess )
 410:Src/aspep.c   **** 
 411:Src/aspep.c   **** dataType can be Synchronous (answer to Master packet), Asynchronous or a CTL packet
 412:Src/aspep.c   **** 
 413:Src/aspep.c   ****   */
 414:Src/aspep.c   **** 
 415:Src/aspep.c   **** uint8_t ASPEP_TXframeProcess(ASPEP_Handle_t *pHandle, uint8_t dataType, void *txBuffer, uint16_t bu
 416:Src/aspep.c   **** {
 169              		.loc 1 416 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		.loc 1 416 1 is_stmt 0 view .LVU46
 174 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 175              		.cfi_def_cfa_offset 24
 176              		.cfi_offset 3, -24
 177              		.cfi_offset 4, -20
 178              		.cfi_offset 5, -16
 179              		.cfi_offset 6, -12
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 0446     		mov	r4, r0
 183 0004 0D46     		mov	r5, r1
 184 0006 1646     		mov	r6, r2
 185 0008 1F46     		mov	r7, r3
 417:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 186              		.loc 1 417 3 is_stmt 1 view .LVU47
 187              	.LVL18:
 418:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 419:Src/aspep.c   ****   if (MC_NULL == txBuffer)
 420:Src/aspep.c   ****   {
 421:Src/aspep.c   ****     result = ASPEP_BUFFER_ERROR;
 422:Src/aspep.c   ****   }
 423:Src/aspep.c   ****   else
 424:Src/aspep.c   ****   {
 425:Src/aspep.c   **** #endif
 426:Src/aspep.c   ****     /* Insert CRC header in the packet to send */
 427:Src/aspep.c   ****     ASPEP_ComputeHeaderCRC((uint32_t *)txBuffer); //cstat !MISRAC2012-Rule-11.5
 188              		.loc 1 427 5 view .LVU48
 189 000a 1046     		mov	r0, r2
 190              	.LVL19:
 191              		.loc 1 427 5 is_stmt 0 view .LVU49
 192 000c FFF7FEFF 		bl	ASPEP_ComputeHeaderCRC
 193              	.LVL20:
 428:Src/aspep.c   ****     __disable_irq(); /*TODO: Disable High frequency task is enough */
 194              		.loc 1 428 5 is_stmt 1 view .LVU50
 195              	.LBB14:
 196              	.LBI14:
 197              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
ARM GAS  /tmp/cccMYuWq.s 			page 12


   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
ARM GAS  /tmp/cccMYuWq.s 			page 13


  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cccMYuWq.s 			page 14


 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
ARM GAS  /tmp/cccMYuWq.s 			page 15


 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 198              		.loc 2 207 27 view .LVU51
 199              	.LBB15:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 200              		.loc 2 209 3 view .LVU52
 201              		.syntax unified
 202              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 203 0010 72B6     		cpsid i
 204              	@ 0 "" 2
 205              		.thumb
 206              		.syntax unified
 207              	.LBE15:
 208              	.LBE14:
 429:Src/aspep.c   ****     if (NULL == pHandle->lockBuffer) /* Communication Ip free to send data*/
 209              		.loc 1 429 5 view .LVU53
 210              		.loc 1 429 24 is_stmt 0 view .LVU54
 211 0012 A26C     		ldr	r2, [r4, #72]
 212              		.loc 1 429 8 view .LVU55
 213 0014 72B1     		cbz	r2, .L23
 430:Src/aspep.c   ****     {
 431:Src/aspep.c   ****       if (MCTL_ASYNC == dataType)
 432:Src/aspep.c   ****       {
 433:Src/aspep.c   ****         /* In ASYNC, two flipflop buffers are used, the txBuffer points always to lastRequestedAsyn
 434:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->state = readLock;
 435:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 436:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 437:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->SentNumber++;
 438:Src/aspep.c   **** #endif
ARM GAS  /tmp/cccMYuWq.s 			page 16


 439:Src/aspep.c   ****       }
 440:Src/aspep.c   ****       else if (MCTL_SYNC == dataType)
 441:Src/aspep.c   ****       {
 442:Src/aspep.c   ****         pHandle->syncBuffer.state = readLock;
 443:Src/aspep.c   ****         pHandle->lockBuffer = (void *) &pHandle->syncBuffer;
 444:Src/aspep.c   ****       }
 445:Src/aspep.c   ****       else
 446:Src/aspep.c   ****       {
 447:Src/aspep.c   ****         pHandle->ctrlBuffer.state = readLock;
 448:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 449:Src/aspep.c   ****       }
 450:Src/aspep.c   ****       /* Enable HF task It */
 451:Src/aspep.c   ****       __enable_irq(); /*TODO: Enable High frequency task is enough */
 452:Src/aspep.c   ****       pHandle->fASPEP_send(pHandle->HWIp, txBuffer, bufferLength);
 453:Src/aspep.c   ****     }
 454:Src/aspep.c   ****     else /* HW resource busy, saving packet to sent it once resource will be freed*/
 455:Src/aspep.c   ****     {
 456:Src/aspep.c   ****       __enable_irq(); /*TODO: Enable High frequency task is enough */
 214              		.loc 1 456 7 is_stmt 1 view .LVU56
 215              	.LBB16:
 216              	.LBI16:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 217              		.loc 2 196 27 view .LVU57
 218              	.LBB17:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 219              		.loc 2 198 3 view .LVU58
 220              		.syntax unified
 221              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 222 0016 62B6     		cpsie i
 223              	@ 0 "" 2
 224              		.thumb
 225              		.syntax unified
 226              	.LBE17:
 227              	.LBE16:
 457:Src/aspep.c   ****       /* Lock buffer can be freed here */
 458:Src/aspep.c   ****       if (MCTL_ASYNC == dataType)
 228              		.loc 1 458 7 view .LVU59
 229              		.loc 1 458 10 is_stmt 0 view .LVU60
 230 0018 092D     		cmp	r5, #9
 231 001a 2AD0     		beq	.L24
 459:Src/aspep.c   ****       {
 460:Src/aspep.c   ****         /* Check that the buffer received is the one expected - probably useless */
 461:Src/aspep.c   ****         if (txBuffer != (uint8_t *)pHandle->lastRequestedAsyncBuff->buffer)
 462:Src/aspep.c   ****         {
 463:Src/aspep.c   ****           result = ASPEP_BUFFER_ERROR;
 464:Src/aspep.c   ****         }
 465:Src/aspep.c   ****         if (NULL == pHandle->asyncNextBuffer)
 466:Src/aspep.c   ****         {
 467:Src/aspep.c   ****           /* Required to keep the right sending order */
 468:Src/aspep.c   ****           pHandle->asyncNextBuffer = pHandle->lastRequestedAsyncBuff;
 469:Src/aspep.c   ****         }
 470:Src/aspep.c   ****       else
 471:Src/aspep.c   ****       {
 472:Src/aspep.c   ****         /* nothing to do */
 473:Src/aspep.c   ****       }
 474:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->state = pending;
 475:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->length = bufferLength;
ARM GAS  /tmp/cccMYuWq.s 			page 17


 476:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 477:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->PendingNumber++;
 478:Src/aspep.c   **** #endif
 479:Src/aspep.c   ****       }
 480:Src/aspep.c   ****       else if (MCTL_SYNC == dataType)
 232              		.loc 1 480 12 is_stmt 1 view .LVU61
 233              		.loc 1 480 15 is_stmt 0 view .LVU62
 234 001c 0A2D     		cmp	r5, #10
 235 001e 38D0     		beq	.L25
 481:Src/aspep.c   ****       {
 482:Src/aspep.c   ****         if (pHandle -> syncBuffer.state != writeLock)
 483:Src/aspep.c   ****         {
 484:Src/aspep.c   ****           result = ASPEP_BUFFER_ERROR;
 485:Src/aspep.c   ****         }
 486:Src/aspep.c   ****         else
 487:Src/aspep.c   ****         {
 488:Src/aspep.c   ****           pHandle->syncBuffer.state = pending;
 489:Src/aspep.c   ****           pHandle->syncBuffer.length = bufferLength;
 490:Src/aspep.c   ****         }
 491:Src/aspep.c   ****       }
 492:Src/aspep.c   ****       else if(ASPEP_CTRL == dataType)
 236              		.loc 1 492 12 is_stmt 1 view .LVU63
 237              		.loc 1 492 14 is_stmt 0 view .LVU64
 238 0020 002D     		cmp	r5, #0
 239 0022 42D1     		bne	.L20
 493:Src/aspep.c   ****       {
 494:Src/aspep.c   ****         if (pHandle->ctrlBuffer.state != available)
 240              		.loc 1 494 9 is_stmt 1 view .LVU65
 241              		.loc 1 494 32 is_stmt 0 view .LVU66
 242 0024 94F82400 		ldrb	r0, [r4, #36]	@ zero_extendqisi2
 243              		.loc 1 494 12 view .LVU67
 244 0028 0028     		cmp	r0, #0
 245 002a 40D1     		bne	.L21
 495:Src/aspep.c   ****         {
 496:Src/aspep.c   ****           result = ASPEP_BUFFER_ERROR;
 497:Src/aspep.c   ****         }
 498:Src/aspep.c   ****         else
 499:Src/aspep.c   ****         {
 500:Src/aspep.c   ****           pHandle->ctrlBuffer.state = pending;
 246              		.loc 1 500 11 is_stmt 1 view .LVU68
 247              		.loc 1 500 37 is_stmt 0 view .LVU69
 248 002c 0223     		movs	r3, #2
 249 002e 84F82430 		strb	r3, [r4, #36]
 250 0032 10E0     		b	.L13
 251              	.L23:
 431:Src/aspep.c   ****       {
 252              		.loc 1 431 7 is_stmt 1 view .LVU70
 431:Src/aspep.c   ****       {
 253              		.loc 1 431 10 is_stmt 0 view .LVU71
 254 0034 092D     		cmp	r5, #9
 255 0036 0FD0     		beq	.L26
 440:Src/aspep.c   ****       {
 256              		.loc 1 440 12 is_stmt 1 view .LVU72
 440:Src/aspep.c   ****       {
 257              		.loc 1 440 15 is_stmt 0 view .LVU73
 258 0038 0A2D     		cmp	r5, #10
 259 003a 13D0     		beq	.L27
ARM GAS  /tmp/cccMYuWq.s 			page 18


 447:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 260              		.loc 1 447 9 is_stmt 1 view .LVU74
 447:Src/aspep.c   ****         pHandle->lockBuffer = (void *)&pHandle->ctrlBuffer;
 261              		.loc 1 447 35 is_stmt 0 view .LVU75
 262 003c 0323     		movs	r3, #3
 263 003e 84F82430 		strb	r3, [r4, #36]
 448:Src/aspep.c   ****       }
 264              		.loc 1 448 9 is_stmt 1 view .LVU76
 448:Src/aspep.c   ****       }
 265              		.loc 1 448 39 is_stmt 0 view .LVU77
 266 0042 04F12003 		add	r3, r4, #32
 448:Src/aspep.c   ****       }
 267              		.loc 1 448 29 view .LVU78
 268 0046 A364     		str	r3, [r4, #72]
 269              	.L11:
 451:Src/aspep.c   ****       pHandle->fASPEP_send(pHandle->HWIp, txBuffer, bufferLength);
 270              		.loc 1 451 7 is_stmt 1 view .LVU79
 271              	.LBB18:
 272              	.LBI18:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 273              		.loc 2 196 27 view .LVU80
 274              	.LBB19:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 275              		.loc 2 198 3 view .LVU81
 276              		.syntax unified
 277              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 278 0048 62B6     		cpsie i
 279              	@ 0 "" 2
 280              		.thumb
 281              		.syntax unified
 282              	.LBE19:
 283              	.LBE18:
 452:Src/aspep.c   ****     }
 284              		.loc 1 452 7 view .LVU82
 452:Src/aspep.c   ****     }
 285              		.loc 1 452 14 is_stmt 0 view .LVU83
 286 004a A36D     		ldr	r3, [r4, #88]
 452:Src/aspep.c   ****     }
 287              		.loc 1 452 7 view .LVU84
 288 004c 3A46     		mov	r2, r7
 289 004e 3146     		mov	r1, r6
 290 0050 6069     		ldr	r0, [r4, #20]
 291 0052 9847     		blx	r3
 292              	.LVL21:
 417:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 293              		.loc 1 417 11 view .LVU85
 294 0054 0020     		movs	r0, #0
 295              	.LVL22:
 296              	.L13:
 501:Src/aspep.c   ****         }
 502:Src/aspep.c   ****       }
 503:Src/aspep.c   ****       else
 504:Src/aspep.c   ****       {
 505:Src/aspep.c   ****         /* Nothing to do */
 506:Src/aspep.c   ****       }
 297              		.loc 1 506 7 is_stmt 1 view .LVU86
 507:Src/aspep.c   ****     }
ARM GAS  /tmp/cccMYuWq.s 			page 19


 508:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 509:Src/aspep.c   ****   }
 510:Src/aspep.c   **** #endif
 511:Src/aspep.c   ****   return (result);
 298              		.loc 1 511 3 view .LVU87
 512:Src/aspep.c   **** }
 299              		.loc 1 512 1 is_stmt 0 view .LVU88
 300 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 301              	.LVL23:
 302              	.L26:
 434:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 303              		.loc 1 434 9 is_stmt 1 view .LVU89
 434:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 304              		.loc 1 434 16 is_stmt 0 view .LVU90
 305 0058 236C     		ldr	r3, [r4, #64]
 434:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->lastRequestedAsyncBuff;
 306              		.loc 1 434 48 view .LVU91
 307 005a 0322     		movs	r2, #3
 308 005c 9A71     		strb	r2, [r3, #6]
 435:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 309              		.loc 1 435 9 is_stmt 1 view .LVU92
 435:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 310              		.loc 1 435 46 is_stmt 0 view .LVU93
 311 005e 236C     		ldr	r3, [r4, #64]
 435:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 312              		.loc 1 435 29 view .LVU94
 313 0060 A364     		str	r3, [r4, #72]
 314 0062 F1E7     		b	.L11
 315              	.L27:
 442:Src/aspep.c   ****         pHandle->lockBuffer = (void *) &pHandle->syncBuffer;
 316              		.loc 1 442 9 is_stmt 1 view .LVU95
 442:Src/aspep.c   ****         pHandle->lockBuffer = (void *) &pHandle->syncBuffer;
 317              		.loc 1 442 35 is_stmt 0 view .LVU96
 318 0064 0323     		movs	r3, #3
 319 0066 84F82E30 		strb	r3, [r4, #46]
 443:Src/aspep.c   ****       }
 320              		.loc 1 443 9 is_stmt 1 view .LVU97
 443:Src/aspep.c   ****       }
 321              		.loc 1 443 40 is_stmt 0 view .LVU98
 322 006a 04F12803 		add	r3, r4, #40
 443:Src/aspep.c   ****       }
 323              		.loc 1 443 29 view .LVU99
 324 006e A364     		str	r3, [r4, #72]
 325 0070 EAE7     		b	.L11
 326              	.L24:
 461:Src/aspep.c   ****         {
 327              		.loc 1 461 9 is_stmt 1 view .LVU100
 461:Src/aspep.c   ****         {
 328              		.loc 1 461 43 is_stmt 0 view .LVU101
 329 0072 236C     		ldr	r3, [r4, #64]
 461:Src/aspep.c   ****         {
 330              		.loc 1 461 67 view .LVU102
 331 0074 1A68     		ldr	r2, [r3]
 461:Src/aspep.c   ****         {
 332              		.loc 1 461 12 view .LVU103
 333 0076 B242     		cmp	r2, r6
 334 0078 07D0     		beq	.L28
ARM GAS  /tmp/cccMYuWq.s 			page 20


 463:Src/aspep.c   ****         }
 335              		.loc 1 463 18 view .LVU104
 336 007a 0320     		movs	r0, #3
 337              	.L15:
 338              	.LVL24:
 465:Src/aspep.c   ****         {
 339              		.loc 1 465 9 is_stmt 1 view .LVU105
 465:Src/aspep.c   ****         {
 340              		.loc 1 465 28 is_stmt 0 view .LVU106
 341 007c 626C     		ldr	r2, [r4, #68]
 465:Src/aspep.c   ****         {
 342              		.loc 1 465 12 view .LVU107
 343 007e 32B1     		cbz	r2, .L29
 344              	.L16:
 473:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->state = pending;
 345              		.loc 1 473 7 is_stmt 1 view .LVU108
 474:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->length = bufferLength;
 346              		.loc 1 474 9 view .LVU109
 474:Src/aspep.c   ****         pHandle->lastRequestedAsyncBuff->length = bufferLength;
 347              		.loc 1 474 48 is_stmt 0 view .LVU110
 348 0080 0222     		movs	r2, #2
 349 0082 9A71     		strb	r2, [r3, #6]
 475:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 350              		.loc 1 475 9 is_stmt 1 view .LVU111
 475:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 351              		.loc 1 475 16 is_stmt 0 view .LVU112
 352 0084 236C     		ldr	r3, [r4, #64]
 475:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 353              		.loc 1 475 49 view .LVU113
 354 0086 9F80     		strh	r7, [r3, #4]	@ movhi
 355 0088 E5E7     		b	.L13
 356              	.LVL25:
 357              	.L28:
 417:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 358              		.loc 1 417 11 view .LVU114
 359 008a 0020     		movs	r0, #0
 360 008c F6E7     		b	.L15
 361              	.LVL26:
 362              	.L29:
 468:Src/aspep.c   ****         }
 363              		.loc 1 468 11 is_stmt 1 view .LVU115
 468:Src/aspep.c   ****         }
 364              		.loc 1 468 36 is_stmt 0 view .LVU116
 365 008e 6364     		str	r3, [r4, #68]
 366 0090 F6E7     		b	.L16
 367              	.LVL27:
 368              	.L25:
 482:Src/aspep.c   ****         {
 369              		.loc 1 482 9 is_stmt 1 view .LVU117
 482:Src/aspep.c   ****         {
 370              		.loc 1 482 34 is_stmt 0 view .LVU118
 371 0092 94F82E30 		ldrb	r3, [r4, #46]	@ zero_extendqisi2
 482:Src/aspep.c   ****         {
 372              		.loc 1 482 12 view .LVU119
 373 0096 012B     		cmp	r3, #1
 374 0098 01D0     		beq	.L30
 484:Src/aspep.c   ****         }
ARM GAS  /tmp/cccMYuWq.s 			page 21


 375              		.loc 1 484 18 view .LVU120
 376 009a 0320     		movs	r0, #3
 377 009c DBE7     		b	.L13
 378              	.L30:
 488:Src/aspep.c   ****           pHandle->syncBuffer.length = bufferLength;
 379              		.loc 1 488 11 is_stmt 1 view .LVU121
 488:Src/aspep.c   ****           pHandle->syncBuffer.length = bufferLength;
 380              		.loc 1 488 37 is_stmt 0 view .LVU122
 381 009e 0223     		movs	r3, #2
 382 00a0 84F82E30 		strb	r3, [r4, #46]
 489:Src/aspep.c   ****         }
 383              		.loc 1 489 11 is_stmt 1 view .LVU123
 489:Src/aspep.c   ****         }
 384              		.loc 1 489 38 is_stmt 0 view .LVU124
 385 00a4 A785     		strh	r7, [r4, #44]	@ movhi
 417:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 386              		.loc 1 417 11 view .LVU125
 387 00a6 0020     		movs	r0, #0
 388 00a8 D5E7     		b	.L13
 389              	.L20:
 417:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 390              		.loc 1 417 11 view .LVU126
 391 00aa 0020     		movs	r0, #0
 392 00ac D3E7     		b	.L13
 393              	.L21:
 496:Src/aspep.c   ****         }
 394              		.loc 1 496 18 view .LVU127
 395 00ae 0320     		movs	r0, #3
 396 00b0 D1E7     		b	.L13
 397              		.cfi_endproc
 398              	.LFE1446:
 400              		.section	.text.ASPEP_sendNack,"ax",%progbits
 401              		.align	1
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv4-sp-d16
 407              	ASPEP_sendNack:
 408              	.LVL28:
 409              	.LFB1441:
 210:Src/aspep.c   ****   uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 410              		.loc 1 210 1 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 210:Src/aspep.c   ****   uint32_t *packet = (uint32_t *)pHandle->ctrlBuffer.buffer; //cstat !MISRAC2012-Rule-11.3
 414              		.loc 1 210 1 is_stmt 0 view .LVU129
 415 0000 08B5     		push	{r3, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 3, -8
 418              		.cfi_offset 14, -4
 419 0002 0246     		mov	r2, r0
 211:Src/aspep.c   ****   *packet = NACK | (uint32_t)(((uint32_t) errorInfo) << 8U) | (uint32_t)(((uint32_t) errorInfo) << 
 420              		.loc 1 211 3 is_stmt 1 view .LVU130
 421              	.LVL29:
 212:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 422              		.loc 1 212 3 view .LVU131
ARM GAS  /tmp/cccMYuWq.s 			page 22


 212:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 423              		.loc 1 212 63 is_stmt 0 view .LVU132
 424 0004 0B04     		lsls	r3, r1, #16
 212:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 425              		.loc 1 212 61 view .LVU133
 426 0006 43EA0121 		orr	r1, r3, r1, lsl #8
 427              	.LVL30:
 212:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 428              		.loc 1 212 61 view .LVU134
 429 000a 41F00F01 		orr	r1, r1, #15
 212:Src/aspep.c   ****   (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 430              		.loc 1 212 11 view .LVU135
 431 000e 42F8201F 		str	r1, [r2, #32]!
 432              	.LVL31:
 213:Src/aspep.c   **** }
 433              		.loc 1 213 3 is_stmt 1 view .LVU136
 213:Src/aspep.c   **** }
 434              		.loc 1 213 9 is_stmt 0 view .LVU137
 435 0012 0423     		movs	r3, #4
 436 0014 0021     		movs	r1, #0
 437 0016 FFF7FEFF 		bl	ASPEP_TXframeProcess
 438              	.LVL32:
 214:Src/aspep.c   **** 
 439              		.loc 1 214 1 view .LVU138
 440 001a 08BD     		pop	{r3, pc}
 441              		.cfi_endproc
 442              	.LFE1441:
 444              		.section	.text.ASPEP_start,"ax",%progbits
 445              		.align	1
 446              		.global	ASPEP_start
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv4-sp-d16
 452              	ASPEP_start:
 453              	.LVL33:
 454              	.LFB1439:
 164:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 455              		.loc 1 164 1 is_stmt 1 view -0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 164:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 459              		.loc 1 164 1 is_stmt 0 view .LVU140
 460 0000 10B5     		push	{r4, lr}
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 4, -8
 463              		.cfi_offset 14, -4
 464 0002 0446     		mov	r4, r0
 173:Src/aspep.c   ****     pHandle->ASPEP_State = ASPEP_IDLE;
 465              		.loc 1 173 5 is_stmt 1 view .LVU141
 173:Src/aspep.c   ****     pHandle->ASPEP_State = ASPEP_IDLE;
 466              		.loc 1 173 12 is_stmt 0 view .LVU142
 467 0004 C36C     		ldr	r3, [r0, #76]
 173:Src/aspep.c   ****     pHandle->ASPEP_State = ASPEP_IDLE;
 468              		.loc 1 173 5 view .LVU143
 469 0006 4069     		ldr	r0, [r0, #20]
ARM GAS  /tmp/cccMYuWq.s 			page 23


 470              	.LVL34:
 173:Src/aspep.c   ****     pHandle->ASPEP_State = ASPEP_IDLE;
 471              		.loc 1 173 5 view .LVU144
 472 0008 9847     		blx	r3
 473              	.LVL35:
 174:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
 474              		.loc 1 174 5 is_stmt 1 view .LVU145
 174:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
 475              		.loc 1 174 26 is_stmt 0 view .LVU146
 476 000a 0023     		movs	r3, #0
 477 000c 84F86430 		strb	r3, [r4, #100]
 175:Src/aspep.c   ****     pHandle->syncPacketCount = 0; /* Sync packet counter is reset only at startup*/
 478              		.loc 1 175 5 is_stmt 1 view .LVU147
 175:Src/aspep.c   ****     pHandle->syncPacketCount = 0; /* Sync packet counter is reset only at startup*/
 479              		.loc 1 175 29 is_stmt 0 view .LVU148
 480 0010 84F86530 		strb	r3, [r4, #101]
 176:Src/aspep.c   **** 
 481              		.loc 1 176 5 is_stmt 1 view .LVU149
 176:Src/aspep.c   **** 
 482              		.loc 1 176 30 is_stmt 0 view .LVU150
 483 0014 84F86030 		strb	r3, [r4, #96]
 179:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 484              		.loc 1 179 5 is_stmt 1 view .LVU151
 179:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 485              		.loc 1 179 12 is_stmt 0 view .LVU152
 486 0018 636D     		ldr	r3, [r4, #84]
 179:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 487              		.loc 1 179 5 view .LVU153
 488 001a 0422     		movs	r2, #4
 489 001c 04F11C01 		add	r1, r4, #28
 490 0020 6069     		ldr	r0, [r4, #20]
 491 0022 9847     		blx	r3
 492              	.LVL36:
 183:Src/aspep.c   **** 
 493              		.loc 1 183 1 view .LVU154
 494 0024 10BD     		pop	{r4, pc}
 183:Src/aspep.c   **** 
 495              		.loc 1 183 1 view .LVU155
 496              		.cfi_endproc
 497              	.LFE1439:
 499              		.section	.text.ASPEP_sendBeacon,"ax",%progbits
 500              		.align	1
 501              		.global	ASPEP_sendBeacon
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 505              		.fpu fpv4-sp-d16
 507              	ASPEP_sendBeacon:
 508              	.LVL37:
 509              	.LFB1440:
 186:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 510              		.loc 1 186 1 is_stmt 1 view -0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 186:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 514              		.loc 1 186 1 is_stmt 0 view .LVU157
ARM GAS  /tmp/cccMYuWq.s 			page 24


 515 0000 10B5     		push	{r4, lr}
 516              		.cfi_def_cfa_offset 8
 517              		.cfi_offset 4, -8
 518              		.cfi_offset 14, -4
 519 0002 0246     		mov	r2, r0
 195:Src/aspep.c   ****     *packet = (BEACON
 520              		.loc 1 195 5 is_stmt 1 view .LVU158
 521              	.LVL38:
 196:Src/aspep.c   ****                | (((uint32_t)capabilities->version) << 4U)
 522              		.loc 1 196 5 view .LVU159
 197:Src/aspep.c   ****                | (((uint32_t)capabilities->DATA_CRC) << 7U)
 523              		.loc 1 197 42 is_stmt 0 view .LVU160
 524 0004 0C79     		ldrb	r4, [r1, #4]	@ zero_extendqisi2
 198:Src/aspep.c   ****                | (((uint32_t)capabilities->RX_maxSize) << 8U)
 525              		.loc 1 198 42 view .LVU161
 526 0006 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 198:Src/aspep.c   ****                | (((uint32_t)capabilities->RX_maxSize) << 8U)
 527              		.loc 1 198 54 view .LVU162
 528 0008 DB01     		lsls	r3, r3, #7
 198:Src/aspep.c   ****                | (((uint32_t)capabilities->RX_maxSize) << 8U)
 529              		.loc 1 198 16 view .LVU163
 530 000a 43EA0413 		orr	r3, r3, r4, lsl #4
 199:Src/aspep.c   ****                | (((uint32_t)capabilities->TXS_maxSize) << 14U)
 531              		.loc 1 199 42 view .LVU164
 532 000e 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 199:Src/aspep.c   ****                | (((uint32_t)capabilities->TXS_maxSize) << 14U)
 533              		.loc 1 199 16 view .LVU165
 534 0010 43EA0423 		orr	r3, r3, r4, lsl #8
 200:Src/aspep.c   ****                | (((uint32_t)capabilities->TXA_maxSize) << 21U));
 535              		.loc 1 200 42 view .LVU166
 536 0014 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 200:Src/aspep.c   ****                | (((uint32_t)capabilities->TXA_maxSize) << 21U));
 537              		.loc 1 200 16 view .LVU167
 538 0016 43EA8433 		orr	r3, r3, r4, lsl #14
 201:Src/aspep.c   **** 
 539              		.loc 1 201 42 view .LVU168
 540 001a C978     		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 541              	.LVL39:
 201:Src/aspep.c   **** 
 542              		.loc 1 201 16 view .LVU169
 543 001c 43EA4153 		orr	r3, r3, r1, lsl #21
 544 0020 43F00503 		orr	r3, r3, #5
 196:Src/aspep.c   ****                | (((uint32_t)capabilities->version) << 4U)
 545              		.loc 1 196 13 view .LVU170
 546 0024 42F8203F 		str	r3, [r2, #32]!
 547              	.LVL40:
 203:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 548              		.loc 1 203 5 is_stmt 1 view .LVU171
 203:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 549              		.loc 1 203 11 is_stmt 0 view .LVU172
 550 0028 0423     		movs	r3, #4
 551 002a 0021     		movs	r1, #0
 552 002c FFF7FEFF 		bl	ASPEP_TXframeProcess
 553              	.LVL41:
 207:Src/aspep.c   **** 
 554              		.loc 1 207 1 view .LVU173
 555 0030 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cccMYuWq.s 			page 25


 556              		.cfi_endproc
 557              	.LFE1440:
 559              		.section	.text.ASPEP_sendPing,"ax",%progbits
 560              		.align	1
 561              		.global	ASPEP_sendPing
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu fpv4-sp-d16
 567              	ASPEP_sendPing:
 568              	.LVL42:
 569              	.LFB1442:
 217:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 570              		.loc 1 217 1 is_stmt 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 217:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 574              		.loc 1 217 1 is_stmt 0 view .LVU175
 575 0000 70B5     		push	{r4, r5, r6, lr}
 576              		.cfi_def_cfa_offset 16
 577              		.cfi_offset 4, -16
 578              		.cfi_offset 5, -12
 579              		.cfi_offset 6, -8
 580              		.cfi_offset 14, -4
 226:Src/aspep.c   ****     uint8_t Nbit = pHandle->syncPacketCount & 0x1U; /* Keep only LSB */
 581              		.loc 1 226 5 is_stmt 1 view .LVU176
 582              	.LVL43:
 227:Src/aspep.c   ****     uint8_t ipID = pHandle->liid & 0xFU;
 583              		.loc 1 227 5 view .LVU177
 227:Src/aspep.c   ****     uint8_t ipID = pHandle->liid & 0xFU;
 584              		.loc 1 227 27 is_stmt 0 view .LVU178
 585 0002 90F86050 		ldrb	r5, [r0, #96]	@ zero_extendqisi2
 227:Src/aspep.c   ****     uint8_t ipID = pHandle->liid & 0xFU;
 586              		.loc 1 227 13 view .LVU179
 587 0006 05F00105 		and	r5, r5, #1
 588              	.LVL44:
 228:Src/aspep.c   ****     *packet = PING | (uint32_t)((uint32_t)cBit << 4U)
 589              		.loc 1 228 5 is_stmt 1 view .LVU180
 228:Src/aspep.c   ****     *packet = PING | (uint32_t)((uint32_t)cBit << 4U)
 590              		.loc 1 228 27 is_stmt 0 view .LVU181
 591 000a 90F86360 		ldrb	r6, [r0, #99]	@ zero_extendqisi2
 228:Src/aspep.c   ****     *packet = PING | (uint32_t)((uint32_t)cBit << 4U)
 592              		.loc 1 228 13 view .LVU182
 593 000e 06F00F06 		and	r6, r6, #15
 594              	.LVL45:
 229:Src/aspep.c   ****               | (uint32_t)((uint32_t)cBit << 5U)
 595              		.loc 1 229 5 is_stmt 1 view .LVU183
 230:Src/aspep.c   ****               | (uint32_t)((uint32_t)Nbit << 6U)
 596              		.loc 1 230 17 is_stmt 0 view .LVU184
 597 0012 4B01     		lsls	r3, r1, #5
 230:Src/aspep.c   ****               | (uint32_t)((uint32_t)Nbit << 6U)
 598              		.loc 1 230 15 view .LVU185
 599 0014 43EA0113 		orr	r3, r3, r1, lsl #4
 231:Src/aspep.c   ****               | (uint32_t)((uint32_t)Nbit << 7U)
 600              		.loc 1 231 15 view .LVU186
 601 0018 43EA8513 		orr	r3, r3, r5, lsl #6
ARM GAS  /tmp/cccMYuWq.s 			page 26


 232:Src/aspep.c   ****               | (uint32_t)((uint32_t)ipID << 8U)
 602              		.loc 1 232 15 view .LVU187
 603 001c 43EAC513 		orr	r3, r3, r5, lsl #7
 233:Src/aspep.c   ****               | (uint32_t)(((uint32_t) packetNumber) << 12U);
 604              		.loc 1 233 15 view .LVU188
 605 0020 43EA0623 		orr	r3, r3, r6, lsl #8
 234:Src/aspep.c   ****     (void)ASPEP_TXframeProcess(pHandle, ASPEP_CTRL, &pHandle->ctrlBuffer, ASPEP_CTRL_SIZE);
 606              		.loc 1 234 15 view .LVU189
 607 0024 43EA0233 		orr	r3, r3, r2, lsl #12
 608 0028 43F00603 		orr	r3, r3, #6
 229:Src/aspep.c   ****               | (uint32_t)((uint32_t)cBit << 5U)
 609              		.loc 1 229 13 view .LVU190
 610 002c 0246     		mov	r2, r0
 611              	.LVL46:
 229:Src/aspep.c   ****               | (uint32_t)((uint32_t)cBit << 5U)
 612              		.loc 1 229 13 view .LVU191
 613 002e 42F8203F 		str	r3, [r2, #32]!
 614              	.LVL47:
 235:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 615              		.loc 1 235 5 is_stmt 1 view .LVU192
 235:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 616              		.loc 1 235 11 is_stmt 0 view .LVU193
 617 0032 0423     		movs	r3, #4
 618 0034 0021     		movs	r1, #0
 619              	.LVL48:
 235:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 620              		.loc 1 235 11 view .LVU194
 621 0036 FFF7FEFF 		bl	ASPEP_TXframeProcess
 622              	.LVL49:
 239:Src/aspep.c   **** 
 623              		.loc 1 239 1 view .LVU195
 624 003a 70BD     		pop	{r4, r5, r6, pc}
 239:Src/aspep.c   **** 
 625              		.loc 1 239 1 view .LVU196
 626              		.cfi_endproc
 627              	.LFE1442:
 629              		.section	.text.ASPEP_getBuffer,"ax",%progbits
 630              		.align	1
 631              		.global	ASPEP_getBuffer
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu fpv4-sp-d16
 637              	ASPEP_getBuffer:
 638              	.LVL50:
 639              	.LFB1443:
 242:Src/aspep.c   ****   bool result = true;
 640              		.loc 1 242 1 is_stmt 1 view -0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 243:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 645              		.loc 1 243 3 view .LVU198
 252:Src/aspep.c   **** 
 646              		.loc 1 252 5 view .LVU199
 254:Src/aspep.c   ****     {
ARM GAS  /tmp/cccMYuWq.s 			page 27


 647              		.loc 1 254 5 view .LVU200
 254:Src/aspep.c   ****     {
 648              		.loc 1 254 8 is_stmt 0 view .LVU201
 649 0000 0A2A     		cmp	r2, #10
 650 0002 09D0     		beq	.L47
 268:Src/aspep.c   ****       {
 651              		.loc 1 268 7 is_stmt 1 view .LVU202
 268:Src/aspep.c   ****       {
 652              		.loc 1 268 33 is_stmt 0 view .LVU203
 653 0004 90F83630 		ldrb	r3, [r0, #54]	@ zero_extendqisi2
 268:Src/aspep.c   ****       {
 654              		.loc 1 268 10 view .LVU204
 655 0008 012B     		cmp	r3, #1
 656 000a 13D9     		bls	.L42
 268:Src/aspep.c   ****       {
 657              		.loc 1 268 78 discriminator 1 view .LVU205
 658 000c 90F83E20 		ldrb	r2, [r0, #62]	@ zero_extendqisi2
 659              	.LVL51:
 268:Src/aspep.c   ****       {
 660              		.loc 1 268 53 discriminator 1 view .LVU206
 661 0010 012A     		cmp	r2, #1
 662 0012 0FD9     		bls	.L42
 270:Src/aspep.c   ****       }
 663              		.loc 1 270 16 view .LVU207
 664 0014 0020     		movs	r0, #0
 665              	.LVL52:
 270:Src/aspep.c   ****       }
 666              		.loc 1 270 16 view .LVU208
 667 0016 7047     		bx	lr
 668              	.LVL53:
 669              	.L47:
 256:Src/aspep.c   ****       {
 670              		.loc 1 256 7 is_stmt 1 view .LVU209
 256:Src/aspep.c   ****       {
 671              		.loc 1 256 30 is_stmt 0 view .LVU210
 672 0018 90F82E30 		ldrb	r3, [r0, #46]	@ zero_extendqisi2
 256:Src/aspep.c   ****       {
 673              		.loc 1 256 10 view .LVU211
 674 001c 012B     		cmp	r3, #1
 675 001e 01D9     		bls	.L48
 263:Src/aspep.c   ****       }
 676              		.loc 1 263 16 view .LVU212
 677 0020 0020     		movs	r0, #0
 678              	.LVL54:
 263:Src/aspep.c   ****       }
 679              		.loc 1 263 16 view .LVU213
 680 0022 7047     		bx	lr
 681              	.LVL55:
 682              	.L48:
 258:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 683              		.loc 1 258 9 is_stmt 1 view .LVU214
 258:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 684              		.loc 1 258 39 is_stmt 0 view .LVU215
 685 0024 836A     		ldr	r3, [r0, #40]
 258:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 686              		.loc 1 258 19 view .LVU216
 687 0026 0433     		adds	r3, r3, #4
ARM GAS  /tmp/cccMYuWq.s 			page 28


 258:Src/aspep.c   ****         pHandle->syncBuffer.state = writeLock;
 688              		.loc 1 258 17 view .LVU217
 689 0028 0B60     		str	r3, [r1]
 259:Src/aspep.c   ****       }
 690              		.loc 1 259 9 is_stmt 1 view .LVU218
 259:Src/aspep.c   ****       }
 691              		.loc 1 259 35 is_stmt 0 view .LVU219
 692 002a 0123     		movs	r3, #1
 693 002c 80F82E30 		strb	r3, [r0, #46]
 243:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 694              		.loc 1 243 8 view .LVU220
 695 0030 1846     		mov	r0, r3
 696              	.LVL56:
 243:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 697              		.loc 1 243 8 view .LVU221
 698 0032 7047     		bx	lr
 699              	.LVL57:
 700              	.L42:
 274:Src/aspep.c   ****         {
 701              		.loc 1 274 9 is_stmt 1 view .LVU222
 274:Src/aspep.c   ****         {
 702              		.loc 1 274 12 is_stmt 0 view .LVU223
 703 0034 012B     		cmp	r3, #1
 704 0036 05D9     		bls	.L49
 283:Src/aspep.c   ****         {
 705              		.loc 1 283 14 is_stmt 1 view .LVU224
 283:Src/aspep.c   ****         {
 706              		.loc 1 283 39 is_stmt 0 view .LVU225
 707 0038 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 283:Src/aspep.c   ****         {
 708              		.loc 1 283 17 view .LVU226
 709 003c 012B     		cmp	r3, #1
 710 003e 0CD9     		bls	.L50
 243:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 711              		.loc 1 243 8 view .LVU227
 712 0040 0120     		movs	r0, #1
 713              	.LVL58:
 295:Src/aspep.c   ****       }
 714              		.loc 1 295 9 is_stmt 1 view .LVU228
 301:Src/aspep.c   **** }
 715              		.loc 1 301 3 view .LVU229
 302:Src/aspep.c   **** 
 716              		.loc 1 302 1 is_stmt 0 view .LVU230
 717 0042 7047     		bx	lr
 718              	.LVL59:
 719              	.L49:
 276:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferA;
 720              		.loc 1 276 11 is_stmt 1 view .LVU231
 276:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferA;
 721              		.loc 1 276 39 is_stmt 0 view .LVU232
 722 0044 0123     		movs	r3, #1
 723 0046 80F83630 		strb	r3, [r0, #54]
 277:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 724              		.loc 1 277 11 is_stmt 1 view .LVU233
 277:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 725              		.loc 1 277 45 is_stmt 0 view .LVU234
 726 004a 00F13002 		add	r2, r0, #48
ARM GAS  /tmp/cccMYuWq.s 			page 29


 277:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferA.buffer[ASPEP_HEADER_SIZE];
 727              		.loc 1 277 43 view .LVU235
 728 004e 0264     		str	r2, [r0, #64]
 278:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 729              		.loc 1 278 11 is_stmt 1 view .LVU236
 278:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 730              		.loc 1 278 43 is_stmt 0 view .LVU237
 731 0050 026B     		ldr	r2, [r0, #48]
 278:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 732              		.loc 1 278 21 view .LVU238
 733 0052 0432     		adds	r2, r2, #4
 278:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 734              		.loc 1 278 19 view .LVU239
 735 0054 0A60     		str	r2, [r1]
 243:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 736              		.loc 1 243 8 view .LVU240
 737 0056 1846     		mov	r0, r3
 738              	.LVL60:
 243:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 739              		.loc 1 243 8 view .LVU241
 740 0058 7047     		bx	lr
 741              	.LVL61:
 742              	.L50:
 285:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferB;
 743              		.loc 1 285 11 is_stmt 1 view .LVU242
 285:Src/aspep.c   ****           pHandle->lastRequestedAsyncBuff = &pHandle->asyncBufferB;
 744              		.loc 1 285 39 is_stmt 0 view .LVU243
 745 005a 0123     		movs	r3, #1
 746 005c 80F83E30 		strb	r3, [r0, #62]
 286:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 747              		.loc 1 286 11 is_stmt 1 view .LVU244
 286:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 748              		.loc 1 286 45 is_stmt 0 view .LVU245
 749 0060 00F13802 		add	r2, r0, #56
 286:Src/aspep.c   ****           *buffer = &pHandle->asyncBufferB.buffer[ASPEP_HEADER_SIZE];
 750              		.loc 1 286 43 view .LVU246
 751 0064 0264     		str	r2, [r0, #64]
 287:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 752              		.loc 1 287 11 is_stmt 1 view .LVU247
 287:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 753              		.loc 1 287 43 is_stmt 0 view .LVU248
 754 0066 826B     		ldr	r2, [r0, #56]
 287:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 755              		.loc 1 287 21 view .LVU249
 756 0068 0432     		adds	r2, r2, #4
 287:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 757              		.loc 1 287 19 view .LVU250
 758 006a 0A60     		str	r2, [r1]
 243:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 759              		.loc 1 243 8 view .LVU251
 760 006c 1846     		mov	r0, r3
 761              	.LVL62:
 243:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 762              		.loc 1 243 8 view .LVU252
 763 006e 7047     		bx	lr
 764              		.cfi_endproc
 765              	.LFE1443:
ARM GAS  /tmp/cccMYuWq.s 			page 30


 767              		.section	.text.ASPEP_CheckBeacon,"ax",%progbits
 768              		.align	1
 769              		.global	ASPEP_CheckBeacon
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	ASPEP_CheckBeacon:
 776              	.LVL63:
 777              	.LFB1444:
 305:Src/aspep.c   ****   bool result = true;
 778              		.loc 1 305 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 305:Src/aspep.c   ****   bool result = true;
 782              		.loc 1 305 1 is_stmt 0 view .LVU254
 783 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 784              		.cfi_def_cfa_offset 20
 785              		.cfi_offset 4, -20
 786              		.cfi_offset 5, -16
 787              		.cfi_offset 6, -12
 788              		.cfi_offset 7, -8
 789              		.cfi_offset 14, -4
 306:Src/aspep.c   ****   uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
 790              		.loc 1 306 3 is_stmt 1 view .LVU255
 791              	.LVL64:
 307:Src/aspep.c   ****   ASPEP_Capabilities_def MasterCapabilities;
 792              		.loc 1 307 3 view .LVU256
 307:Src/aspep.c   ****   ASPEP_Capabilities_def MasterCapabilities;
 793              		.loc 1 307 12 is_stmt 0 view .LVU257
 794 0002 C369     		ldr	r3, [r0, #28]
 795              	.LVL65:
 308:Src/aspep.c   ****   MasterCapabilities.version =  (uint8_t)((packetHeader &0x70U)>> 4U); /*Bits 4 to 6*/
 796              		.loc 1 308 3 is_stmt 1 view .LVU258
 309:Src/aspep.c   ****   MasterCapabilities.DATA_CRC = pHandle->rxHeader[0] >> 7U ;      /*Bit 7 */
 797              		.loc 1 309 3 view .LVU259
 309:Src/aspep.c   ****   MasterCapabilities.DATA_CRC = pHandle->rxHeader[0] >> 7U ;      /*Bit 7 */
 798              		.loc 1 309 33 is_stmt 0 view .LVU260
 799 0004 C3F3021E 		ubfx	lr, r3, #4, #3
 310:Src/aspep.c   ****   MasterCapabilities.RX_maxSize =  pHandle->rxHeader[1] &0x3FU; /*Bits 8 to  13*/
 800              		.loc 1 310 3 is_stmt 1 view .LVU261
 310:Src/aspep.c   ****   MasterCapabilities.RX_maxSize =  pHandle->rxHeader[1] &0x3FU; /*Bits 8 to  13*/
 801              		.loc 1 310 50 is_stmt 0 view .LVU262
 802 0008 017F     		ldrb	r1, [r0, #28]	@ zero_extendqisi2
 310:Src/aspep.c   ****   MasterCapabilities.RX_maxSize =  pHandle->rxHeader[1] &0x3FU; /*Bits 8 to  13*/
 803              		.loc 1 310 31 view .LVU263
 804 000a C909     		lsrs	r1, r1, #7
 311:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 805              		.loc 1 311 3 is_stmt 1 view .LVU264
 311:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 806              		.loc 1 311 53 is_stmt 0 view .LVU265
 807 000c 457F     		ldrb	r5, [r0, #29]	@ zero_extendqisi2
 311:Src/aspep.c   ****   MasterCapabilities.TXS_maxSize = (uint8_t)((packetHeader&0x01FC000U)  >> 14); /*Bits 14 to 20 */
 808              		.loc 1 311 57 view .LVU266
 809 000e 05F03F05 		and	r5, r5, #63
 312:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21); /*Bits 21 to 27  */
ARM GAS  /tmp/cccMYuWq.s 			page 31


 810              		.loc 1 312 3 is_stmt 1 view .LVU267
 312:Src/aspep.c   ****   MasterCapabilities.TXA_maxSize = (uint8_t)((packetHeader&0xFE00000U) >> 21); /*Bits 21 to 27  */
 811              		.loc 1 312 36 is_stmt 0 view .LVU268
 812 0012 C3F3863C 		ubfx	ip, r3, #14, #7
 313:Src/aspep.c   **** 
 813              		.loc 1 313 3 is_stmt 1 view .LVU269
 313:Src/aspep.c   **** 
 814              		.loc 1 313 36 is_stmt 0 view .LVU270
 815 0016 C3F34653 		ubfx	r3, r3, #21, #7
 816              	.LVL66:
 315:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 817              		.loc 1 315 3 is_stmt 1 view .LVU271
 315:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 818              		.loc 1 315 36 is_stmt 0 view .LVU272
 819 001a 90F86C20 		ldrb	r2, [r0, #108]	@ zero_extendqisi2
 820 001e 8A42     		cmp	r2, r1
 821 0020 28BF     		it	cs
 822 0022 0A46     		movcs	r2, r1
 315:Src/aspep.c   ****   pHandle->Capabilities.RX_maxSize = MIN(pHandle->Capabilities.RX_maxSize, MasterCapabilities.RX_ma
 823              		.loc 1 315 34 view .LVU273
 824 0024 80F86C20 		strb	r2, [r0, #108]
 316:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 825              		.loc 1 316 3 is_stmt 1 view .LVU274
 316:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 826              		.loc 1 316 38 is_stmt 0 view .LVU275
 827 0028 90F86D40 		ldrb	r4, [r0, #109]	@ zero_extendqisi2
 828 002c AC42     		cmp	r4, r5
 829 002e 28BF     		it	cs
 830 0030 2C46     		movcs	r4, r5
 316:Src/aspep.c   ****   pHandle->Capabilities.TXS_maxSize = MIN(pHandle->Capabilities.TXS_maxSize, MasterCapabilities.TXS
 831              		.loc 1 316 36 view .LVU276
 832 0032 80F86D40 		strb	r4, [r0, #109]
 317:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 833              		.loc 1 317 3 is_stmt 1 view .LVU277
 317:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 834              		.loc 1 317 39 is_stmt 0 view .LVU278
 835 0036 90F86E60 		ldrb	r6, [r0, #110]	@ zero_extendqisi2
 836 003a 6645     		cmp	r6, ip
 837 003c 28BF     		it	cs
 838 003e 6646     		movcs	r6, ip
 317:Src/aspep.c   ****   pHandle->Capabilities.TXA_maxSize = MIN(pHandle->Capabilities.TXA_maxSize, MasterCapabilities.TXA
 839              		.loc 1 317 37 view .LVU279
 840 0040 80F86E60 		strb	r6, [r0, #110]
 318:Src/aspep.c   **** 
 841              		.loc 1 318 3 is_stmt 1 view .LVU280
 318:Src/aspep.c   **** 
 842              		.loc 1 318 39 is_stmt 0 view .LVU281
 843 0044 90F86F70 		ldrb	r7, [r0, #111]	@ zero_extendqisi2
 844 0048 9F42     		cmp	r7, r3
 845 004a 28BF     		it	cs
 846 004c 1F46     		movcs	r7, r3
 318:Src/aspep.c   **** 
 847              		.loc 1 318 37 view .LVU282
 848 004e 80F86F70 		strb	r7, [r0, #111]
 320:Src/aspep.c   ****    /* Data packet the master can send is bigger than slave can receive */
 849              		.loc 1 320 3 is_stmt 1 view .LVU283
 320:Src/aspep.c   ****    /* Data packet the master can send is bigger than slave can receive */
ARM GAS  /tmp/cccMYuWq.s 			page 32


 850              		.loc 1 320 6 is_stmt 0 view .LVU284
 851 0052 9142     		cmp	r1, r2
 852 0054 01D0     		beq	.L59
 332:Src/aspep.c   ****   }
 853              		.loc 1 332 12 view .LVU285
 854 0056 0020     		movs	r0, #0
 855              	.LVL67:
 856              	.L52:
 335:Src/aspep.c   **** }
 857              		.loc 1 335 3 is_stmt 1 view .LVU286
 336:Src/aspep.c   **** 
 858              		.loc 1 336 1 is_stmt 0 view .LVU287
 859 0058 F0BD     		pop	{r4, r5, r6, r7, pc}
 860              	.LVL68:
 861              	.L59:
 322:Src/aspep.c   ****    /* Sync packet size alignement is required in order for the master to be able to store it, and t
 862              		.loc 1 322 4 view .LVU288
 863 005a A542     		cmp	r5, r4
 864 005c 0FD8     		bhi	.L54
 325:Src/aspep.c   ****    /* Async packet the slave can send is bigger than the master can receive (but master must not re
 865              		.loc 1 325 4 view .LVU289
 866 005e B445     		cmp	ip, r6
 867 0060 01D0     		beq	.L60
 332:Src/aspep.c   ****   }
 868              		.loc 1 332 12 view .LVU290
 869 0062 0020     		movs	r0, #0
 870              	.LVL69:
 332:Src/aspep.c   ****   }
 871              		.loc 1 332 12 view .LVU291
 872 0064 F8E7     		b	.L52
 873              	.LVL70:
 874              	.L60:
 328:Src/aspep.c   ****    /* For the time being, master version has to match slave version */
 875              		.loc 1 328 4 view .LVU292
 876 0066 BB42     		cmp	r3, r7
 877 0068 01D0     		beq	.L61
 332:Src/aspep.c   ****   }
 878              		.loc 1 332 12 view .LVU293
 879 006a 0020     		movs	r0, #0
 880              	.LVL71:
 332:Src/aspep.c   ****   }
 881              		.loc 1 332 12 view .LVU294
 882 006c F4E7     		b	.L52
 883              	.LVL72:
 884              	.L61:
 330:Src/aspep.c   ****   {
 885              		.loc 1 330 59 view .LVU295
 886 006e 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 330:Src/aspep.c   ****   {
 887              		.loc 1 330 4 view .LVU296
 888 0072 9E45     		cmp	lr, r3
 889 0074 01D0     		beq	.L62
 332:Src/aspep.c   ****   }
 890              		.loc 1 332 12 view .LVU297
 891 0076 0020     		movs	r0, #0
 892              	.LVL73:
 332:Src/aspep.c   ****   }
ARM GAS  /tmp/cccMYuWq.s 			page 33


 893              		.loc 1 332 12 view .LVU298
 894 0078 EEE7     		b	.L52
 895              	.LVL74:
 896              	.L62:
 306:Src/aspep.c   ****   uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
 897              		.loc 1 306 8 view .LVU299
 898 007a 0120     		movs	r0, #1
 899              	.LVL75:
 306:Src/aspep.c   ****   uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
 900              		.loc 1 306 8 view .LVU300
 901 007c ECE7     		b	.L52
 902              	.LVL76:
 903              	.L54:
 332:Src/aspep.c   ****   }
 904              		.loc 1 332 12 view .LVU301
 905 007e 0020     		movs	r0, #0
 906              	.LVL77:
 332:Src/aspep.c   ****   }
 907              		.loc 1 332 12 view .LVU302
 908 0080 EAE7     		b	.L52
 909              		.cfi_endproc
 910              	.LFE1444:
 912              		.section	.text.ASPEP_sendPacket,"ax",%progbits
 913              		.align	1
 914              		.global	ASPEP_sendPacket
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu fpv4-sp-d16
 920              	ASPEP_sendPacket:
 921              	.LVL78:
 922              	.LFB1445:
 346:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 923              		.loc 1 346 1 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 346:Src/aspep.c   ****   uint8_t result = ASPEP_OK;
 927              		.loc 1 346 1 is_stmt 0 view .LVU304
 928 0000 70B5     		push	{r4, r5, r6, lr}
 929              		.cfi_def_cfa_offset 16
 930              		.cfi_offset 4, -16
 931              		.cfi_offset 5, -12
 932              		.cfi_offset 6, -8
 933              		.cfi_offset 14, -4
 934 0002 1446     		mov	r4, r2
 347:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 935              		.loc 1 347 3 is_stmt 1 view .LVU305
 936              	.LVL79:
 356:Src/aspep.c   ****     uint32_t *header;
 937              		.loc 1 356 5 view .LVU306
 357:Src/aspep.c   ****     uint32_t tmpHeader;
 938              		.loc 1 357 5 view .LVU307
 358:Src/aspep.c   ****     uint16_t txDataLengthTemp;
 939              		.loc 1 358 5 view .LVU308
 359:Src/aspep.c   **** 
 940              		.loc 1 359 5 view .LVU309
ARM GAS  /tmp/cccMYuWq.s 			page 34


 361:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 941              		.loc 1 361 5 view .LVU310
 362:Src/aspep.c   **** 
 942              		.loc 1 362 5 view .LVU311
 364:Src/aspep.c   ****     {
 943              		.loc 1 364 5 view .LVU312
 364:Src/aspep.c   ****     {
 944              		.loc 1 364 35 is_stmt 0 view .LVU313
 945 0004 90F86420 		ldrb	r2, [r0, #100]	@ zero_extendqisi2
 946              	.LVL80:
 364:Src/aspep.c   ****     {
 947              		.loc 1 364 8 view .LVU314
 948 0008 022A     		cmp	r2, #2
 949 000a 01D0     		beq	.L70
 398:Src/aspep.c   ****     }
 950              		.loc 1 398 14 view .LVU315
 951 000c 0220     		movs	r0, #2
 952              	.LVL81:
 953              	.L64:
 403:Src/aspep.c   **** }
 954              		.loc 1 403 3 is_stmt 1 view .LVU316
 404:Src/aspep.c   **** 
 955              		.loc 1 404 1 is_stmt 0 view .LVU317
 956 000e 70BD     		pop	{r4, r5, r6, pc}
 957              	.LVL82:
 958              	.L70:
 404:Src/aspep.c   **** 
 959              		.loc 1 404 1 view .LVU318
 960 0010 1D46     		mov	r5, r3
 368:Src/aspep.c   ****       header = (uint32_t *)txBuffer; //cstat !MISRAC2012-Rule-11.5
 961              		.loc 1 368 7 is_stmt 1 view .LVU319
 962              	.LVL83:
 369:Src/aspep.c   ****       header--; /* Header ues 4*8 bits on top of txBuffer*/
 963              		.loc 1 369 7 view .LVU320
 370:Src/aspep.c   ****       tmpHeader = ((uint32_t)((uint32_t)txDataLengthTemp << (uint32_t)4) | (uint32_t)syncAsync);
 964              		.loc 1 370 7 view .LVU321
 370:Src/aspep.c   ****       tmpHeader = ((uint32_t)((uint32_t)txDataLengthTemp << (uint32_t)4) | (uint32_t)syncAsync);
 965              		.loc 1 370 13 is_stmt 0 view .LVU322
 966 0012 0A1F     		subs	r2, r1, #4
 967              	.LVL84:
 371:Src/aspep.c   ****       *header = tmpHeader;
 968              		.loc 1 371 7 is_stmt 1 view .LVU323
 371:Src/aspep.c   ****       *header = tmpHeader;
 969              		.loc 1 371 17 is_stmt 0 view .LVU324
 970 0014 43EA0413 		orr	r3, r3, r4, lsl #4
 971              	.LVL85:
 372:Src/aspep.c   ****       if (1U == pHandle->Capabilities.DATA_CRC)
 972              		.loc 1 372 7 is_stmt 1 view .LVU325
 372:Src/aspep.c   ****       if (1U == pHandle->Capabilities.DATA_CRC)
 973              		.loc 1 372 15 is_stmt 0 view .LVU326
 974 0018 41F8043C 		str	r3, [r1, #-4]
 373:Src/aspep.c   ****       {
 975              		.loc 1 373 7 is_stmt 1 view .LVU327
 373:Src/aspep.c   ****       {
 976              		.loc 1 373 38 is_stmt 0 view .LVU328
 977 001c 90F86C30 		ldrb	r3, [r0, #108]	@ zero_extendqisi2
 978              	.LVL86:
ARM GAS  /tmp/cccMYuWq.s 			page 35


 373:Src/aspep.c   ****       {
 979              		.loc 1 373 10 view .LVU329
 980 0020 012B     		cmp	r3, #1
 981 0022 0BD0     		beq	.L71
 982              	.LVL87:
 983              	.L65:
 380:Src/aspep.c   ****       {
 984              		.loc 1 380 7 is_stmt 1 view .LVU330
 380:Src/aspep.c   ****       {
 985              		.loc 1 380 10 is_stmt 0 view .LVU331
 986 0024 0A2D     		cmp	r5, #10
 987 0026 03D1     		bne	.L66
 382:Src/aspep.c   ****         {
 988              		.loc 1 382 9 is_stmt 1 view .LVU332
 382:Src/aspep.c   ****         {
 989              		.loc 1 382 23 is_stmt 0 view .LVU333
 990 0028 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 382:Src/aspep.c   ****         {
 991              		.loc 1 382 12 view .LVU334
 992 002a 7BB1     		cbz	r3, .L68
 384:Src/aspep.c   ****         }
 993              		.loc 1 384 11 is_stmt 1 view .LVU335
 384:Src/aspep.c   ****         }
 994              		.loc 1 384 43 is_stmt 0 view .LVU336
 995 002c 0023     		movs	r3, #0
 996 002e 0374     		strb	r3, [r0, #16]
 391:Src/aspep.c   ****       {
 997              		.loc 1 391 7 is_stmt 1 view .LVU337
 998              	.L66:
 999              	.LVL88:
 393:Src/aspep.c   ****       }
 1000              		.loc 1 393 9 view .LVU338
 393:Src/aspep.c   ****       }
 1001              		.loc 1 393 18 is_stmt 0 view .LVU339
 1002 0030 0434     		adds	r4, r4, #4
 1003              	.LVL89:
 393:Src/aspep.c   ****       }
 1004              		.loc 1 393 18 view .LVU340
 1005 0032 A3B2     		uxth	r3, r4
 1006 0034 2946     		mov	r1, r5
 1007              	.LVL90:
 393:Src/aspep.c   ****       }
 1008              		.loc 1 393 18 view .LVU341
 1009 0036 FFF7FEFF 		bl	ASPEP_TXframeProcess
 1010              	.LVL91:
 393:Src/aspep.c   ****       }
 1011              		.loc 1 393 18 view .LVU342
 1012 003a E8E7     		b	.L64
 1013              	.LVL92:
 1014              	.L71:
 376:Src/aspep.c   ****         packet[txDataLengthTemp + 1U] = (uint8_t)0xFE; /* Dummy CRC */
 1015              		.loc 1 376 9 is_stmt 1 view .LVU343
 376:Src/aspep.c   ****         packet[txDataLengthTemp + 1U] = (uint8_t)0xFE; /* Dummy CRC */
 1016              		.loc 1 376 34 is_stmt 0 view .LVU344
 1017 003c CA23     		movs	r3, #202
 1018 003e 0B55     		strb	r3, [r1, r4]
 1019              	.LVL93:
ARM GAS  /tmp/cccMYuWq.s 			page 36


 377:Src/aspep.c   ****         txDataLengthTemp += (uint16_t)ASPEP_DATACRC_SIZE;
 1020              		.loc 1 377 9 is_stmt 1 view .LVU345
 377:Src/aspep.c   ****         txDataLengthTemp += (uint16_t)ASPEP_DATACRC_SIZE;
 1021              		.loc 1 377 15 is_stmt 0 view .LVU346
 1022 0040 631C     		adds	r3, r4, #1
 377:Src/aspep.c   ****         txDataLengthTemp += (uint16_t)ASPEP_DATACRC_SIZE;
 1023              		.loc 1 377 39 view .LVU347
 1024 0042 FE26     		movs	r6, #254
 1025 0044 CE54     		strb	r6, [r1, r3]
 378:Src/aspep.c   ****       }
 1026              		.loc 1 378 9 is_stmt 1 view .LVU348
 378:Src/aspep.c   ****       }
 1027              		.loc 1 378 26 is_stmt 0 view .LVU349
 1028 0046 0234     		adds	r4, r4, #2
 1029              	.LVL94:
 378:Src/aspep.c   ****       }
 1030              		.loc 1 378 26 view .LVU350
 1031 0048 A4B2     		uxth	r4, r4
 1032              	.LVL95:
 378:Src/aspep.c   ****       }
 1033              		.loc 1 378 26 view .LVU351
 1034 004a EBE7     		b	.L65
 1035              	.LVL96:
 1036              	.L68:
 388:Src/aspep.c   ****         }
 1037              		.loc 1 388 18 view .LVU352
 1038 004c 0120     		movs	r0, #1
 1039              	.LVL97:
 388:Src/aspep.c   ****         }
 1040              		.loc 1 388 18 view .LVU353
 1041 004e DEE7     		b	.L64
 1042              		.cfi_endproc
 1043              	.LFE1445:
 1045              		.section	.text.ASPEP_HWDataTransmittedIT,"ax",%progbits
 1046              		.align	1
 1047              		.global	ASPEP_HWDataTransmittedIT
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1051              		.fpu fpv4-sp-d16
 1053              	ASPEP_HWDataTransmittedIT:
 1054              	.LVL98:
 1055              	.LFB1447:
 513:Src/aspep.c   **** 
 514:Src/aspep.c   **** /* ASPEP_HWDataTransmittedIT is called as soon as previous packet transfer is completed */
 515:Src/aspep.c   **** /* pHandle->lockBuffer is set before packet transmission and is never read here after */
 516:Src/aspep.c   **** /* therefore, there is no need to protect this ISR against another higher priority ISR (HF Task)*/
 517:Src/aspep.c   **** 
 518:Src/aspep.c   **** void ASPEP_HWDataTransmittedIT(ASPEP_Handle_t *pHandle)
 519:Src/aspep.c   **** {
 1056              		.loc 1 519 1 is_stmt 1 view -0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 0
 1059              		@ frame_needed = 0, uses_anonymous_args = 0
 1060              		.loc 1 519 1 is_stmt 0 view .LVU355
 1061 0000 38B5     		push	{r3, r4, r5, lr}
 1062              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cccMYuWq.s 			page 37


 1063              		.cfi_offset 3, -16
 1064              		.cfi_offset 4, -12
 1065              		.cfi_offset 5, -8
 1066              		.cfi_offset 14, -4
 1067 0002 0446     		mov	r4, r0
 520:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 521:Src/aspep.c   ****   if (NULL == pHandle)
 522:Src/aspep.c   ****   {
 523:Src/aspep.c   ****     /* Nothing to do */
 524:Src/aspep.c   ****   }
 525:Src/aspep.c   ****   else
 526:Src/aspep.c   ****   {
 527:Src/aspep.c   **** #endif
 528:Src/aspep.c   ****     /* First free previous readLock buffer */
 529:Src/aspep.c   ****     if (pHandle->ctrlBuffer.state == readLock)
 1068              		.loc 1 529 5 is_stmt 1 view .LVU356
 1069              		.loc 1 529 28 is_stmt 0 view .LVU357
 1070 0004 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1071              		.loc 1 529 8 view .LVU358
 1072 0008 032B     		cmp	r3, #3
 1073 000a 22D0     		beq	.L83
 1074              	.LBB20:
 530:Src/aspep.c   ****     {
 531:Src/aspep.c   ****       pHandle->ctrlBuffer.state = available;
 532:Src/aspep.c   ****     }
 533:Src/aspep.c   ****     else /* if previous buffer was not ASPEP_CTRL, then the buffer locked is a MCTL_Buff_t */
 534:Src/aspep.c   ****     {
 535:Src/aspep.c   ****       MCTL_Buff_t *tempBuff = (MCTL_Buff_t *)pHandle->lockBuffer; //cstat !MISRAC2012-Rule-11.5
 1075              		.loc 1 535 7 is_stmt 1 view .LVU359
 1076              		.loc 1 535 20 is_stmt 0 view .LVU360
 1077 000c 836C     		ldr	r3, [r0, #72]
 1078              	.LVL99:
 536:Src/aspep.c   ****       tempBuff->state = available;
 1079              		.loc 1 536 7 is_stmt 1 view .LVU361
 1080              		.loc 1 536 23 is_stmt 0 view .LVU362
 1081 000e 0022     		movs	r2, #0
 1082 0010 9A71     		strb	r2, [r3, #6]
 1083              	.LVL100:
 1084              	.L74:
 1085              		.loc 1 536 23 view .LVU363
 1086              	.LBE20:
 537:Src/aspep.c   ****     }
 538:Src/aspep.c   ****     if (pHandle->syncBuffer.state == pending)
 1087              		.loc 1 538 5 is_stmt 1 view .LVU364
 1088              		.loc 1 538 28 is_stmt 0 view .LVU365
 1089 0012 94F82E30 		ldrb	r3, [r4, #46]	@ zero_extendqisi2
 1090              		.loc 1 538 8 view .LVU366
 1091 0016 022B     		cmp	r3, #2
 1092 0018 1FD0     		beq	.L84
 539:Src/aspep.c   ****     {
 540:Src/aspep.c   ****       pHandle->lockBuffer = (void *)&pHandle->syncBuffer;
 541:Src/aspep.c   ****       pHandle->fASPEP_send(pHandle->HWIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.length);
 542:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 543:Src/aspep.c   ****     }
 544:Src/aspep.c   ****     /* Second prepare transfer of pending buffer */
 545:Src/aspep.c   ****     else if (pHandle->ctrlBuffer.state == pending)
 1093              		.loc 1 545 10 is_stmt 1 view .LVU367
ARM GAS  /tmp/cccMYuWq.s 			page 38


 1094              		.loc 1 545 33 is_stmt 0 view .LVU368
 1095 001a 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 1096              		.loc 1 545 13 view .LVU369
 1097 001e 022B     		cmp	r3, #2
 1098 0020 27D0     		beq	.L85
 546:Src/aspep.c   ****     {
 547:Src/aspep.c   ****       pHandle->lockBuffer = (void *)(&pHandle ->ctrlBuffer);
 548:Src/aspep.c   ****       pHandle->fASPEP_send(pHandle ->HWIp, pHandle->ctrlBuffer.buffer, ASPEP_CTRL_SIZE);
 549:Src/aspep.c   ****       pHandle->ctrlBuffer.state = readLock;
 550:Src/aspep.c   ****     }
 551:Src/aspep.c   ****     else
 552:Src/aspep.c   ****     {
 553:Src/aspep.c   ****       __disable_irq();
 1099              		.loc 1 553 7 is_stmt 1 view .LVU370
 1100              	.LBB21:
 1101              	.LBI21:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1102              		.loc 2 207 27 view .LVU371
 1103              	.LBB22:
 1104              		.loc 2 209 3 view .LVU372
 1105              		.syntax unified
 1106              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1107 0022 72B6     		cpsid i
 1108              	@ 0 "" 2
 1109              		.thumb
 1110              		.syntax unified
 1111              	.LBE22:
 1112              	.LBE21:
 554:Src/aspep.c   ****       if (pHandle->asyncNextBuffer != NULL)
 1113              		.loc 1 554 7 view .LVU373
 1114              		.loc 1 554 18 is_stmt 0 view .LVU374
 1115 0024 636C     		ldr	r3, [r4, #68]
 1116              		.loc 1 554 10 view .LVU375
 1117 0026 002B     		cmp	r3, #0
 1118 0028 38D0     		beq	.L78
 555:Src/aspep.c   ****       {
 556:Src/aspep.c   ****         pHandle->lockBuffer = (void *)pHandle->asyncNextBuffer;
 1119              		.loc 1 556 9 is_stmt 1 view .LVU376
 1120              		.loc 1 556 29 is_stmt 0 view .LVU377
 1121 002a A364     		str	r3, [r4, #72]
 557:Src/aspep.c   ****         pHandle->asyncNextBuffer->state = readLock;
 1122              		.loc 1 557 9 is_stmt 1 view .LVU378
 1123              		.loc 1 557 41 is_stmt 0 view .LVU379
 1124 002c 0322     		movs	r2, #3
 1125 002e 9A71     		strb	r2, [r3, #6]
 558:Src/aspep.c   **** #ifdef MCP_DEBUG_METRICS
 559:Src/aspep.c   ****         pHandle->asyncNextBuffer->SentNumber++;
 560:Src/aspep.c   **** #endif
 561:Src/aspep.c   ****         pHandle->fASPEP_send(pHandle ->HWIp, pHandle->asyncNextBuffer->buffer, pHandle->asyncNextBu
 1126              		.loc 1 561 9 is_stmt 1 view .LVU380
 1127              		.loc 1 561 16 is_stmt 0 view .LVU381
 1128 0030 A56D     		ldr	r5, [r4, #88]
 1129              		.loc 1 561 53 view .LVU382
 1130 0032 636C     		ldr	r3, [r4, #68]
 1131              		.loc 1 561 9 view .LVU383
 1132 0034 9A88     		ldrh	r2, [r3, #4]
 1133 0036 1968     		ldr	r1, [r3]
ARM GAS  /tmp/cccMYuWq.s 			page 39


 1134 0038 6069     		ldr	r0, [r4, #20]
 1135              	.LVL101:
 1136              		.loc 1 561 9 view .LVU384
 1137 003a A847     		blx	r5
 1138              	.LVL102:
 562:Src/aspep.c   ****         /* If one Async buffer is still pending, assign it to the asyncNextBuffer pointer*/
 563:Src/aspep.c   ****         if ((pHandle->asyncBufferA.state == pending) || (pHandle->asyncBufferB.state == pending))
 1139              		.loc 1 563 9 is_stmt 1 view .LVU385
 1140              		.loc 1 563 35 is_stmt 0 view .LVU386
 1141 003c 94F83630 		ldrb	r3, [r4, #54]	@ zero_extendqisi2
 1142              		.loc 1 563 12 view .LVU387
 1143 0040 022B     		cmp	r3, #2
 1144 0042 21D0     		beq	.L79
 1145              		.loc 1 563 79 discriminator 1 view .LVU388
 1146 0044 94F83E30 		ldrb	r3, [r4, #62]	@ zero_extendqisi2
 1147              		.loc 1 563 54 discriminator 1 view .LVU389
 1148 0048 022B     		cmp	r3, #2
 1149 004a 1DD0     		beq	.L79
 564:Src/aspep.c   ****         {
 565:Src/aspep.c   ****           //cstat !MISRAC2012-Rule-11.4
 566:Src/aspep.c   ****           uint32_t temp = (uint32_t)&pHandle->asyncBufferA + (uint32_t)&pHandle->asyncBufferB
 567:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 568:Src/aspep.c   ****           pHandle->asyncNextBuffer = (MCTL_Buff_t *) temp; //cstat !MISRAC2012-Rule-11.4
 569:Src/aspep.c   ****         }
 570:Src/aspep.c   ****         else
 571:Src/aspep.c   ****         {
 572:Src/aspep.c   ****           pHandle->asyncNextBuffer = NULL;
 1150              		.loc 1 572 11 is_stmt 1 view .LVU390
 1151              		.loc 1 572 36 is_stmt 0 view .LVU391
 1152 004c 0023     		movs	r3, #0
 1153 004e 6364     		str	r3, [r4, #68]
 1154 0050 22E0     		b	.L81
 1155              	.LVL103:
 1156              	.L83:
 531:Src/aspep.c   ****     }
 1157              		.loc 1 531 7 is_stmt 1 view .LVU392
 531:Src/aspep.c   ****     }
 1158              		.loc 1 531 33 is_stmt 0 view .LVU393
 1159 0052 0023     		movs	r3, #0
 1160 0054 80F82430 		strb	r3, [r0, #36]
 1161 0058 DBE7     		b	.L74
 1162              	.L84:
 540:Src/aspep.c   ****       pHandle->fASPEP_send(pHandle->HWIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.length);
 1163              		.loc 1 540 7 is_stmt 1 view .LVU394
 540:Src/aspep.c   ****       pHandle->fASPEP_send(pHandle->HWIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.length);
 1164              		.loc 1 540 37 is_stmt 0 view .LVU395
 1165 005a 04F12803 		add	r3, r4, #40
 540:Src/aspep.c   ****       pHandle->fASPEP_send(pHandle->HWIp, pHandle->syncBuffer.buffer, pHandle->syncBuffer.length);
 1166              		.loc 1 540 27 view .LVU396
 1167 005e A364     		str	r3, [r4, #72]
 541:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 1168              		.loc 1 541 7 is_stmt 1 view .LVU397
 541:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 1169              		.loc 1 541 14 is_stmt 0 view .LVU398
 1170 0060 A36D     		ldr	r3, [r4, #88]
 541:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 1171              		.loc 1 541 7 view .LVU399
ARM GAS  /tmp/cccMYuWq.s 			page 40


 1172 0062 A28D     		ldrh	r2, [r4, #44]
 1173 0064 A16A     		ldr	r1, [r4, #40]
 1174 0066 6069     		ldr	r0, [r4, #20]
 1175              	.LVL104:
 541:Src/aspep.c   ****       pHandle->syncBuffer.state = readLock;
 1176              		.loc 1 541 7 view .LVU400
 1177 0068 9847     		blx	r3
 1178              	.LVL105:
 542:Src/aspep.c   ****     }
 1179              		.loc 1 542 7 is_stmt 1 view .LVU401
 542:Src/aspep.c   ****     }
 1180              		.loc 1 542 33 is_stmt 0 view .LVU402
 1181 006a 0323     		movs	r3, #3
 1182 006c 84F82E30 		strb	r3, [r4, #46]
 1183 0070 13E0     		b	.L72
 1184              	.LVL106:
 1185              	.L85:
 547:Src/aspep.c   ****       pHandle->fASPEP_send(pHandle ->HWIp, pHandle->ctrlBuffer.buffer, ASPEP_CTRL_SIZE);
 1186              		.loc 1 547 7 is_stmt 1 view .LVU403
 547:Src/aspep.c   ****       pHandle->fASPEP_send(pHandle ->HWIp, pHandle->ctrlBuffer.buffer, ASPEP_CTRL_SIZE);
 1187              		.loc 1 547 38 is_stmt 0 view .LVU404
 1188 0072 04F12001 		add	r1, r4, #32
 547:Src/aspep.c   ****       pHandle->fASPEP_send(pHandle ->HWIp, pHandle->ctrlBuffer.buffer, ASPEP_CTRL_SIZE);
 1189              		.loc 1 547 27 view .LVU405
 1190 0076 A164     		str	r1, [r4, #72]
 548:Src/aspep.c   ****       pHandle->ctrlBuffer.state = readLock;
 1191              		.loc 1 548 7 is_stmt 1 view .LVU406
 548:Src/aspep.c   ****       pHandle->ctrlBuffer.state = readLock;
 1192              		.loc 1 548 14 is_stmt 0 view .LVU407
 1193 0078 A36D     		ldr	r3, [r4, #88]
 548:Src/aspep.c   ****       pHandle->ctrlBuffer.state = readLock;
 1194              		.loc 1 548 7 view .LVU408
 1195 007a 0422     		movs	r2, #4
 1196 007c 6069     		ldr	r0, [r4, #20]
 1197              	.LVL107:
 548:Src/aspep.c   ****       pHandle->ctrlBuffer.state = readLock;
 1198              		.loc 1 548 7 view .LVU409
 1199 007e 9847     		blx	r3
 1200              	.LVL108:
 549:Src/aspep.c   ****     }
 1201              		.loc 1 549 7 is_stmt 1 view .LVU410
 549:Src/aspep.c   ****     }
 1202              		.loc 1 549 33 is_stmt 0 view .LVU411
 1203 0080 0323     		movs	r3, #3
 1204 0082 84F82430 		strb	r3, [r4, #36]
 1205 0086 08E0     		b	.L72
 1206              	.L79:
 1207              	.LBB23:
 566:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1208              		.loc 1 566 11 is_stmt 1 view .LVU412
 566:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1209              		.loc 1 566 37 is_stmt 0 view .LVU413
 1210 0088 04F13003 		add	r3, r4, #48
 566:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1211              		.loc 1 566 72 view .LVU414
 1212 008c 04F13802 		add	r2, r4, #56
 566:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
ARM GAS  /tmp/cccMYuWq.s 			page 41


 1213              		.loc 1 566 60 view .LVU415
 1214 0090 1344     		add	r3, r3, r2
 567:Src/aspep.c   ****           pHandle->asyncNextBuffer = (MCTL_Buff_t *) temp; //cstat !MISRAC2012-Rule-11.4
 1215              		.loc 1 567 47 view .LVU416
 1216 0092 626C     		ldr	r2, [r4, #68]
 566:Src/aspep.c   ****                           - (uint32_t) pHandle->asyncNextBuffer; //cstat !MISRAC2012-Rule-11.4
 1217              		.loc 1 566 20 view .LVU417
 1218 0094 9B1A     		subs	r3, r3, r2
 1219              	.LVL109:
 568:Src/aspep.c   ****         }
 1220              		.loc 1 568 11 is_stmt 1 view .LVU418
 568:Src/aspep.c   ****         }
 1221              		.loc 1 568 36 is_stmt 0 view .LVU419
 1222 0096 6364     		str	r3, [r4, #68]
 1223              	.LVL110:
 1224              	.L81:
 568:Src/aspep.c   ****         }
 1225              		.loc 1 568 36 view .LVU420
 1226              	.LBE23:
 573:Src/aspep.c   ****         }
 574:Src/aspep.c   ****       }
 575:Src/aspep.c   ****       else /* No TX packet are pending, HW resource is free*/
 576:Src/aspep.c   ****       {
 577:Src/aspep.c   ****         pHandle->lockBuffer = NULL;
 578:Src/aspep.c   ****       }
 579:Src/aspep.c   ****       __enable_irq();
 1227              		.loc 1 579 7 is_stmt 1 view .LVU421
 1228              	.LBB24:
 1229              	.LBI24:
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1230              		.loc 2 196 27 view .LVU422
 1231              	.LBB25:
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1232              		.loc 2 198 3 view .LVU423
 1233              		.syntax unified
 1234              	@ 198 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1235 0098 62B6     		cpsie i
 1236              	@ 0 "" 2
 1237              		.thumb
 1238              		.syntax unified
 1239              	.L72:
 1240              	.LBE25:
 1241              	.LBE24:
 580:Src/aspep.c   ****     }
 581:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 582:Src/aspep.c   ****   }
 583:Src/aspep.c   **** #endif
 584:Src/aspep.c   **** }
 1242              		.loc 1 584 1 is_stmt 0 view .LVU424
 1243 009a 38BD     		pop	{r3, r4, r5, pc}
 1244              	.LVL111:
 1245              	.L78:
 577:Src/aspep.c   ****       }
 1246              		.loc 1 577 9 is_stmt 1 view .LVU425
 577:Src/aspep.c   ****       }
 1247              		.loc 1 577 29 is_stmt 0 view .LVU426
 1248 009c 0023     		movs	r3, #0
ARM GAS  /tmp/cccMYuWq.s 			page 42


 1249 009e A364     		str	r3, [r4, #72]
 1250 00a0 FAE7     		b	.L81
 1251              		.cfi_endproc
 1252              	.LFE1447:
 1254              		.section	.text.ASPEP_RXframeProcess,"ax",%progbits
 1255              		.align	1
 1256              		.global	ASPEP_RXframeProcess
 1257              		.syntax unified
 1258              		.thumb
 1259              		.thumb_func
 1260              		.fpu fpv4-sp-d16
 1262              	ASPEP_RXframeProcess:
 1263              	.LVL112:
 1264              	.LFB1448:
 585:Src/aspep.c   **** 
 586:Src/aspep.c   **** uint8_t *ASPEP_RXframeProcess(MCTL_Handle_t *pSupHandle, uint16_t *packetLength)
 587:Src/aspep.c   **** {
 1265              		.loc 1 587 1 is_stmt 1 view -0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 1269              		.loc 1 587 1 is_stmt 0 view .LVU428
 1270 0000 38B5     		push	{r3, r4, r5, lr}
 1271              		.cfi_def_cfa_offset 16
 1272              		.cfi_offset 3, -16
 1273              		.cfi_offset 4, -12
 1274              		.cfi_offset 5, -8
 1275              		.cfi_offset 14, -4
 1276 0002 0446     		mov	r4, r0
 588:Src/aspep.c   ****   uint8_t *result = NULL;
 1277              		.loc 1 588 3 is_stmt 1 view .LVU429
 1278              	.LVL113:
 589:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 590:Src/aspep.c   ****   if ((NULL == pSupHandle) || (NULL == packetLength))
 591:Src/aspep.c   ****   {
 592:Src/aspep.c   ****     /* Nothing to do */
 593:Src/aspep.c   ****   }
 594:Src/aspep.c   ****   else
 595:Src/aspep.c   ****   {
 596:Src/aspep.c   **** #endif
 597:Src/aspep.c   ****     ASPEP_Handle_t *pHandle = (ASPEP_Handle_t *)pSupHandle; //cstat !MISRAC2012-Rule-11.3
 1279              		.loc 1 597 5 view .LVU430
 598:Src/aspep.c   ****     uint32_t packetHeader = *((uint32_t *)pHandle->rxHeader); //cstat !MISRAC2012-Rule-11.3
 1280              		.loc 1 598 5 view .LVU431
 1281              		.loc 1 598 14 is_stmt 0 view .LVU432
 1282 0004 C269     		ldr	r2, [r0, #28]
 1283              	.LVL114:
 599:Src/aspep.c   ****     uint16_t packetNumber;
 1284              		.loc 1 599 5 is_stmt 1 view .LVU433
 600:Src/aspep.c   ****     bool validCRCData = true;
 1285              		.loc 1 600 5 view .LVU434
 601:Src/aspep.c   **** 
 602:Src/aspep.c   ****     *packetLength = 0;
 1286              		.loc 1 602 5 view .LVU435
 1287              		.loc 1 602 19 is_stmt 0 view .LVU436
 1288 0006 0023     		movs	r3, #0
 1289 0008 0B80     		strh	r3, [r1]	@ movhi
ARM GAS  /tmp/cccMYuWq.s 			page 43


 603:Src/aspep.c   ****     if (pHandle->NewPacketAvailable)
 1290              		.loc 1 603 5 is_stmt 1 view .LVU437
 1291              		.loc 1 603 16 is_stmt 0 view .LVU438
 1292 000a 90F86130 		ldrb	r3, [r0, #97]	@ zero_extendqisi2
 1293              		.loc 1 603 8 view .LVU439
 1294 000e 002B     		cmp	r3, #0
 1295 0010 00F08780 		beq	.L87
 604:Src/aspep.c   ****     {
 605:Src/aspep.c   ****       pHandle->NewPacketAvailable = false; /* Consumes new packet*/
 1296              		.loc 1 605 7 is_stmt 1 view .LVU440
 1297              		.loc 1 605 35 is_stmt 0 view .LVU441
 1298 0014 0023     		movs	r3, #0
 1299 0016 80F86130 		strb	r3, [r0, #97]
 606:Src/aspep.c   ****       switch (pHandle->ASPEP_State)
 1300              		.loc 1 606 7 is_stmt 1 view .LVU442
 1301              		.loc 1 606 22 is_stmt 0 view .LVU443
 1302 001a 90F86430 		ldrb	r3, [r0, #100]	@ zero_extendqisi2
 1303              		.loc 1 606 7 view .LVU444
 1304 001e 012B     		cmp	r3, #1
 1305 0020 35D0     		beq	.L88
 1306 0022 022B     		cmp	r3, #2
 1307 0024 51D0     		beq	.L89
 1308 0026 43B1     		cbz	r3, .L106
 1309 0028 0025     		movs	r5, #0
 1310              	.LVL115:
 1311              	.L90:
 607:Src/aspep.c   ****       {
 608:Src/aspep.c   ****         case ASPEP_IDLE:
 609:Src/aspep.c   ****         {
 610:Src/aspep.c   ****           if (BEACON == pHandle->rxPacketType)
 611:Src/aspep.c   ****           {
 612:Src/aspep.c   ****             if (ASPEP_CheckBeacon(pHandle) == true)
 613:Src/aspep.c   ****             {
 614:Src/aspep.c   ****               /* Master capabilities match Salve capabilities.*/
 615:Src/aspep.c   ****               pSupHandle->txSyncMaxPayload = (pHandle->Capabilities.TXS_maxSize + (uint16_t)1U) * (
 616:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 617:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 618:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 619:Src/aspep.c   ****             }
 620:Src/aspep.c   ****             else
 621:Src/aspep.c   ****             {
 622:Src/aspep.c   ****               /* Nothing to do, master has to send back new beacon with matching capabilities */
 623:Src/aspep.c   ****             }
 624:Src/aspep.c   ****             /* Beacon Packet must be answered*/
 625:Src/aspep.c   ****             ASPEP_sendBeacon(pHandle, &pHandle->Capabilities);
 626:Src/aspep.c   ****           }
 627:Src/aspep.c   ****           else if (PING == pHandle->rxPacketType)
 628:Src/aspep.c   ****           {
 629:Src/aspep.c   ****             /* In Listening for master slave, */
 630:Src/aspep.c   ****             packetNumber = (uint16_t)((packetHeader & 0x0FFFF000U) >> (uint16_t)12U);
 631:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_RESET, packetNumber);
 632:Src/aspep.c   ****           }
 633:Src/aspep.c   ****           else
 634:Src/aspep.c   ****           {
 635:Src/aspep.c   ****             /* Nothing to do */
 636:Src/aspep.c   ****           }
 637:Src/aspep.c   ****           break;
ARM GAS  /tmp/cccMYuWq.s 			page 44


 638:Src/aspep.c   ****         }
 639:Src/aspep.c   **** 
 640:Src/aspep.c   ****         case ASPEP_CONFIGURED:
 641:Src/aspep.c   ****         {
 642:Src/aspep.c   ****           if (BEACON == pHandle->rxPacketType)
 643:Src/aspep.c   ****           {
 644:Src/aspep.c   ****             if (ASPEP_CheckBeacon(pHandle) == false)
 645:Src/aspep.c   ****             {
 646:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_IDLE;
 647:Src/aspep.c   ****             }
 648:Src/aspep.c   ****             else
 649:Src/aspep.c   ****             {
 650:Src/aspep.c   ****               /* Nothing to do */
 651:Src/aspep.c   ****             }
 652:Src/aspep.c   **** 
 653:Src/aspep.c   ****             ASPEP_sendBeacon (pHandle, &pHandle->Capabilities);
 654:Src/aspep.c   ****           }
 655:Src/aspep.c   ****           else if (PING == pHandle->rxPacketType)
 656:Src/aspep.c   ****           {
 657:Src/aspep.c   ****             /* In Listening for master slave, */
 658:Src/aspep.c   ****             packetNumber = (uint16_t)((packetHeader & 0x0FFFF000U) >> (uint16_t)12U);
 659:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 660:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 661:Src/aspep.c   ****           }
 662:Src/aspep.c   ****           else
 663:Src/aspep.c   ****           {
 664:Src/aspep.c   ****             /* Nothing to do */
 665:Src/aspep.c   ****           }
 666:Src/aspep.c   ****           break;
 667:Src/aspep.c   ****         }
 668:Src/aspep.c   **** 
 669:Src/aspep.c   ****         case ASPEP_CONNECTED:
 670:Src/aspep.c   ****         {
 671:Src/aspep.c   ****           if (BEACON == pHandle->rxPacketType)
 672:Src/aspep.c   ****           {
 673:Src/aspep.c   ****             if (ASPEP_CheckBeacon(pHandle) == false)
 674:Src/aspep.c   ****             {
 675:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_IDLE;
 676:Src/aspep.c   ****             }
 677:Src/aspep.c   ****             else
 678:Src/aspep.c   ****             {
 679:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 680:Src/aspep.c   ****             }
 681:Src/aspep.c   ****             ASPEP_sendBeacon(pHandle, &pHandle->Capabilities);
 682:Src/aspep.c   ****           }
 683:Src/aspep.c   ****           else if (PING == pHandle->rxPacketType)
 684:Src/aspep.c   ****           {
 685:Src/aspep.c   ****             packetNumber = pHandle->rxHeader[1];
 686:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 687:Src/aspep.c   ****           }
 688:Src/aspep.c   ****           else if (DATA_PACKET == pHandle->rxPacketType)
 689:Src/aspep.c   ****           {
 690:Src/aspep.c   ****             if (validCRCData)
 691:Src/aspep.c   ****             {
 692:Src/aspep.c   ****               pHandle->syncPacketCount++; /* this counter is incremented at each valid data packet 
 693:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 694:Src/aspep.c   ****               *packetLength = pHandle->rxLength;
ARM GAS  /tmp/cccMYuWq.s 			page 45


 695:Src/aspep.c   ****               result = pHandle->rxBuffer;
 696:Src/aspep.c   ****             }
 697:Src/aspep.c   ****             else
 698:Src/aspep.c   ****             {
 699:Src/aspep.c   ****               ASPEP_sendNack (pHandle, ASPEP_BAD_CRC_DATA);
 700:Src/aspep.c   ****             }
 701:Src/aspep.c   ****           }
 702:Src/aspep.c   ****           else
 703:Src/aspep.c   ****           {
 704:Src/aspep.c   ****             /* This condition is not reachable because already filtred by NewPacketAvailable */
 705:Src/aspep.c   ****             /* ASPEP_sendNack (pHandle, ASPEP_BAD_PACKET_TYPE) */
 706:Src/aspep.c   ****           }
 707:Src/aspep.c   ****           break;
 708:Src/aspep.c   ****         }
 709:Src/aspep.c   **** 
 710:Src/aspep.c   ****         default:
 711:Src/aspep.c   ****           break;
 712:Src/aspep.c   ****       }
 713:Src/aspep.c   ****       /* The valid received packet is now safely consumes, we are ready to receive a new packet */
 714:Src/aspep.c   ****       pHandle->fASPEP_receive(pHandle->HWIp, pHandle->rxHeader, ASPEP_HEADER_SIZE);
 1312              		.loc 1 714 7 is_stmt 1 view .LVU445
 1313              		.loc 1 714 14 is_stmt 0 view .LVU446
 1314 002a 636D     		ldr	r3, [r4, #84]
 1315              		.loc 1 714 7 view .LVU447
 1316 002c 0422     		movs	r2, #4
 1317 002e 04F11C01 		add	r1, r4, #28
 1318 0032 6069     		ldr	r0, [r4, #20]
 1319 0034 9847     		blx	r3
 1320              	.LVL116:
 1321              	.L86:
 715:Src/aspep.c   ****     }
 716:Src/aspep.c   ****     else if (pHandle->badPacketFlag > ASPEP_OK)
 717:Src/aspep.c   ****     {
 718:Src/aspep.c   ****       ASPEP_sendNack(pHandle, pHandle->badPacketFlag);
 719:Src/aspep.c   ****       /* ASPEP_RXframeProcess can be called before reception of another packet */
 720:Src/aspep.c   ****       pHandle->badPacketFlag = ASPEP_OK;
 721:Src/aspep.c   ****       /* As we received a packet with a bad header, we need to be sure that the HW IP is well Synch
 722:Src/aspep.c   ****         * DMA will be configured to receive next packet as soon as HW IP RX line is free to receive
 723:Src/aspep.c   ****         * It is important to note that we will detect only the NEXT free line transition, it means 
 724:Src/aspep.c   ****         * be lost but the end of this lost packet will generate the IDLE interrupt
 725:Src/aspep.c   ****         * the IDLE interrupt will call ASPEP_HWDMAReset (in charge of the IP_aspep driver to call i
 726:Src/aspep.c   ****         * time)*/
 727:Src/aspep.c   ****       pHandle->fASPEP_HWSync(pHandle->HWIp);
 728:Src/aspep.c   ****     }
 729:Src/aspep.c   ****     else
 730:Src/aspep.c   ****     {
 731:Src/aspep.c   ****       /* Nothing to do, no response is due to the master */
 732:Src/aspep.c   ****     }
 733:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 734:Src/aspep.c   ****   }
 735:Src/aspep.c   **** #endif
 736:Src/aspep.c   ****   return (result);
 737:Src/aspep.c   **** }
 1322              		.loc 1 737 1 view .LVU448
 1323 0036 2846     		mov	r0, r5
 1324 0038 38BD     		pop	{r3, r4, r5, pc}
 1325              	.LVL117:
ARM GAS  /tmp/cccMYuWq.s 			page 46


 1326              	.L106:
 610:Src/aspep.c   ****           {
 1327              		.loc 1 610 11 is_stmt 1 view .LVU449
 610:Src/aspep.c   ****           {
 1328              		.loc 1 610 32 is_stmt 0 view .LVU450
 1329 003a 836E     		ldr	r3, [r0, #104]
 610:Src/aspep.c   ****           {
 1330              		.loc 1 610 14 view .LVU451
 1331 003c 052B     		cmp	r3, #5
 1332 003e 03D0     		beq	.L107
 627:Src/aspep.c   ****           {
 1333              		.loc 1 627 16 is_stmt 1 view .LVU452
 627:Src/aspep.c   ****           {
 1334              		.loc 1 627 19 is_stmt 0 view .LVU453
 1335 0040 062B     		cmp	r3, #6
 1336 0042 1DD0     		beq	.L108
 588:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1337              		.loc 1 588 12 view .LVU454
 1338 0044 0025     		movs	r5, #0
 1339 0046 F0E7     		b	.L90
 1340              	.L107:
 612:Src/aspep.c   ****             {
 1341              		.loc 1 612 13 is_stmt 1 view .LVU455
 612:Src/aspep.c   ****             {
 1342              		.loc 1 612 17 is_stmt 0 view .LVU456
 1343 0048 FFF7FEFF 		bl	ASPEP_CheckBeacon
 1344              	.LVL118:
 612:Src/aspep.c   ****             {
 1345              		.loc 1 612 16 view .LVU457
 1346 004c 88B1     		cbz	r0, .L92
 615:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 1347              		.loc 1 615 15 is_stmt 1 view .LVU458
 615:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 1348              		.loc 1 615 68 is_stmt 0 view .LVU459
 1349 004e 94F86E30 		ldrb	r3, [r4, #110]	@ zero_extendqisi2
 615:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 1350              		.loc 1 615 81 view .LVU460
 1351 0052 0133     		adds	r3, r3, #1
 615:Src/aspep.c   ****               pSupHandle->txAsyncMaxPayload = (pHandle->Capabilities.TXA_maxSize) * (uint16_t)64U;
 1352              		.loc 1 615 44 view .LVU461
 1353 0054 5B01     		lsls	r3, r3, #5
 1354 0056 A381     		strh	r3, [r4, #12]	@ movhi
 616:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 1355              		.loc 1 616 15 is_stmt 1 view .LVU462
 616:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 1356              		.loc 1 616 69 is_stmt 0 view .LVU463
 1357 0058 94F86F30 		ldrb	r3, [r4, #111]	@ zero_extendqisi2
 616:Src/aspep.c   ****               pHandle->maxRXPayload = (pHandle->Capabilities.RX_maxSize + (uint16_t)1U) * (uint16_t
 1358              		.loc 1 616 45 view .LVU464
 1359 005c 9B01     		lsls	r3, r3, #6
 1360 005e E381     		strh	r3, [r4, #14]	@ movhi
 617:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 1361              		.loc 1 617 15 is_stmt 1 view .LVU465
 617:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 1362              		.loc 1 617 61 is_stmt 0 view .LVU466
 1363 0060 94F86D30 		ldrb	r3, [r4, #109]	@ zero_extendqisi2
 617:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
ARM GAS  /tmp/cccMYuWq.s 			page 47


 1364              		.loc 1 617 73 view .LVU467
 1365 0064 0133     		adds	r3, r3, #1
 617:Src/aspep.c   ****               pHandle->ASPEP_State = ASPEP_CONFIGURED;
 1366              		.loc 1 617 37 view .LVU468
 1367 0066 5B01     		lsls	r3, r3, #5
 1368 0068 A4F85E30 		strh	r3, [r4, #94]	@ movhi
 618:Src/aspep.c   ****             }
 1369              		.loc 1 618 15 is_stmt 1 view .LVU469
 618:Src/aspep.c   ****             }
 1370              		.loc 1 618 36 is_stmt 0 view .LVU470
 1371 006c 0123     		movs	r3, #1
 1372 006e 84F86430 		strb	r3, [r4, #100]
 1373              	.L92:
 623:Src/aspep.c   ****             /* Beacon Packet must be answered*/
 1374              		.loc 1 623 13 is_stmt 1 view .LVU471
 625:Src/aspep.c   ****           }
 1375              		.loc 1 625 13 view .LVU472
 1376 0072 04F16C01 		add	r1, r4, #108
 1377 0076 2046     		mov	r0, r4
 1378 0078 FFF7FEFF 		bl	ASPEP_sendBeacon
 1379              	.LVL119:
 588:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1380              		.loc 1 588 12 is_stmt 0 view .LVU473
 1381 007c 0025     		movs	r5, #0
 1382 007e D4E7     		b	.L90
 1383              	.LVL120:
 1384              	.L108:
 630:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_RESET, packetNumber);
 1385              		.loc 1 630 13 is_stmt 1 view .LVU474
 631:Src/aspep.c   ****           }
 1386              		.loc 1 631 13 view .LVU475
 1387 0080 C2F30F32 		ubfx	r2, r2, #12, #16
 1388              	.LVL121:
 631:Src/aspep.c   ****           }
 1389              		.loc 1 631 13 is_stmt 0 view .LVU476
 1390 0084 0021     		movs	r1, #0
 1391              	.LVL122:
 631:Src/aspep.c   ****           }
 1392              		.loc 1 631 13 view .LVU477
 1393 0086 FFF7FEFF 		bl	ASPEP_sendPing
 1394              	.LVL123:
 588:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1395              		.loc 1 588 12 view .LVU478
 1396 008a 0025     		movs	r5, #0
 1397 008c CDE7     		b	.L90
 1398              	.LVL124:
 1399              	.L88:
 642:Src/aspep.c   ****           {
 1400              		.loc 1 642 11 is_stmt 1 view .LVU479
 642:Src/aspep.c   ****           {
 1401              		.loc 1 642 32 is_stmt 0 view .LVU480
 1402 008e 836E     		ldr	r3, [r0, #104]
 642:Src/aspep.c   ****           {
 1403              		.loc 1 642 14 view .LVU481
 1404 0090 052B     		cmp	r3, #5
 1405 0092 03D0     		beq	.L109
 655:Src/aspep.c   ****           {
ARM GAS  /tmp/cccMYuWq.s 			page 48


 1406              		.loc 1 655 16 is_stmt 1 view .LVU482
 655:Src/aspep.c   ****           {
 1407              		.loc 1 655 19 is_stmt 0 view .LVU483
 1408 0094 062B     		cmp	r3, #6
 1409 0096 0ED0     		beq	.L110
 588:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1410              		.loc 1 588 12 view .LVU484
 1411 0098 0025     		movs	r5, #0
 1412 009a C6E7     		b	.L90
 1413              	.L109:
 644:Src/aspep.c   ****             {
 1414              		.loc 1 644 13 is_stmt 1 view .LVU485
 644:Src/aspep.c   ****             {
 1415              		.loc 1 644 17 is_stmt 0 view .LVU486
 1416 009c FFF7FEFF 		bl	ASPEP_CheckBeacon
 1417              	.LVL125:
 644:Src/aspep.c   ****             {
 1418              		.loc 1 644 16 view .LVU487
 1419 00a0 10B9     		cbnz	r0, .L94
 646:Src/aspep.c   ****             }
 1420              		.loc 1 646 15 is_stmt 1 view .LVU488
 646:Src/aspep.c   ****             }
 1421              		.loc 1 646 36 is_stmt 0 view .LVU489
 1422 00a2 0023     		movs	r3, #0
 1423 00a4 84F86430 		strb	r3, [r4, #100]
 1424              	.L94:
 651:Src/aspep.c   **** 
 1425              		.loc 1 651 13 is_stmt 1 view .LVU490
 653:Src/aspep.c   ****           }
 1426              		.loc 1 653 13 view .LVU491
 1427 00a8 04F16C01 		add	r1, r4, #108
 1428 00ac 2046     		mov	r0, r4
 1429 00ae FFF7FEFF 		bl	ASPEP_sendBeacon
 1430              	.LVL126:
 588:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1431              		.loc 1 588 12 is_stmt 0 view .LVU492
 1432 00b2 0025     		movs	r5, #0
 1433 00b4 B9E7     		b	.L90
 1434              	.LVL127:
 1435              	.L110:
 658:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 1436              		.loc 1 658 13 is_stmt 1 view .LVU493
 659:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 1437              		.loc 1 659 13 view .LVU494
 1438 00b6 C2F30F32 		ubfx	r2, r2, #12, #16
 1439              	.LVL128:
 659:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 1440              		.loc 1 659 13 is_stmt 0 view .LVU495
 1441 00ba 0121     		movs	r1, #1
 1442              	.LVL129:
 659:Src/aspep.c   ****             pHandle->ASPEP_State = ASPEP_CONNECTED;
 1443              		.loc 1 659 13 view .LVU496
 1444 00bc FFF7FEFF 		bl	ASPEP_sendPing
 1445              	.LVL130:
 660:Src/aspep.c   ****           }
 1446              		.loc 1 660 13 is_stmt 1 view .LVU497
 660:Src/aspep.c   ****           }
ARM GAS  /tmp/cccMYuWq.s 			page 49


 1447              		.loc 1 660 34 is_stmt 0 view .LVU498
 1448 00c0 0223     		movs	r3, #2
 1449 00c2 84F86430 		strb	r3, [r4, #100]
 588:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1450              		.loc 1 588 12 view .LVU499
 1451 00c6 0025     		movs	r5, #0
 1452 00c8 AFE7     		b	.L90
 1453              	.LVL131:
 1454              	.L89:
 671:Src/aspep.c   ****           {
 1455              		.loc 1 671 11 is_stmt 1 view .LVU500
 671:Src/aspep.c   ****           {
 1456              		.loc 1 671 32 is_stmt 0 view .LVU501
 1457 00ca 836E     		ldr	r3, [r0, #104]
 671:Src/aspep.c   ****           {
 1458              		.loc 1 671 14 view .LVU502
 1459 00cc 052B     		cmp	r3, #5
 1460 00ce 05D0     		beq	.L111
 683:Src/aspep.c   ****           {
 1461              		.loc 1 683 16 is_stmt 1 view .LVU503
 683:Src/aspep.c   ****           {
 1462              		.loc 1 683 19 is_stmt 0 view .LVU504
 1463 00d0 062B     		cmp	r3, #6
 1464 00d2 14D0     		beq	.L112
 688:Src/aspep.c   ****           {
 1465              		.loc 1 688 16 is_stmt 1 view .LVU505
 688:Src/aspep.c   ****           {
 1466              		.loc 1 688 19 is_stmt 0 view .LVU506
 1467 00d4 092B     		cmp	r3, #9
 1468 00d6 18D0     		beq	.L113
 588:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1469              		.loc 1 588 12 view .LVU507
 1470 00d8 0025     		movs	r5, #0
 1471 00da A6E7     		b	.L90
 1472              	.L111:
 673:Src/aspep.c   ****             {
 1473              		.loc 1 673 13 is_stmt 1 view .LVU508
 673:Src/aspep.c   ****             {
 1474              		.loc 1 673 17 is_stmt 0 view .LVU509
 1475 00dc FFF7FEFF 		bl	ASPEP_CheckBeacon
 1476              	.LVL132:
 673:Src/aspep.c   ****             {
 1477              		.loc 1 673 16 view .LVU510
 1478 00e0 48B9     		cbnz	r0, .L96
 675:Src/aspep.c   ****             }
 1479              		.loc 1 675 15 is_stmt 1 view .LVU511
 675:Src/aspep.c   ****             }
 1480              		.loc 1 675 36 is_stmt 0 view .LVU512
 1481 00e2 0023     		movs	r3, #0
 1482 00e4 84F86430 		strb	r3, [r4, #100]
 1483              	.L97:
 681:Src/aspep.c   ****           }
 1484              		.loc 1 681 13 is_stmt 1 view .LVU513
 1485 00e8 04F16C01 		add	r1, r4, #108
 1486 00ec 2046     		mov	r0, r4
 1487 00ee FFF7FEFF 		bl	ASPEP_sendBeacon
 1488              	.LVL133:
ARM GAS  /tmp/cccMYuWq.s 			page 50


 588:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1489              		.loc 1 588 12 is_stmt 0 view .LVU514
 1490 00f2 0025     		movs	r5, #0
 1491 00f4 99E7     		b	.L90
 1492              	.L96:
 679:Src/aspep.c   ****             }
 1493              		.loc 1 679 15 is_stmt 1 view .LVU515
 679:Src/aspep.c   ****             }
 1494              		.loc 1 679 36 is_stmt 0 view .LVU516
 1495 00f6 0123     		movs	r3, #1
 1496 00f8 84F86430 		strb	r3, [r4, #100]
 1497 00fc F4E7     		b	.L97
 1498              	.LVL134:
 1499              	.L112:
 685:Src/aspep.c   ****             ASPEP_sendPing(pHandle, ASPEP_PING_CFG, packetNumber);
 1500              		.loc 1 685 13 is_stmt 1 view .LVU517
 686:Src/aspep.c   ****           }
 1501              		.loc 1 686 13 view .LVU518
 1502 00fe 427F     		ldrb	r2, [r0, #29]	@ zero_extendqisi2
 1503              	.LVL135:
 686:Src/aspep.c   ****           }
 1504              		.loc 1 686 13 is_stmt 0 view .LVU519
 1505 0100 0121     		movs	r1, #1
 1506              	.LVL136:
 686:Src/aspep.c   ****           }
 1507              		.loc 1 686 13 view .LVU520
 1508 0102 FFF7FEFF 		bl	ASPEP_sendPing
 1509              	.LVL137:
 588:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1510              		.loc 1 588 12 view .LVU521
 1511 0106 0025     		movs	r5, #0
 1512 0108 8FE7     		b	.L90
 1513              	.LVL138:
 1514              	.L113:
 690:Src/aspep.c   ****             {
 1515              		.loc 1 690 13 is_stmt 1 view .LVU522
 692:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 1516              		.loc 1 692 15 view .LVU523
 692:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 1517              		.loc 1 692 22 is_stmt 0 view .LVU524
 1518 010a 90F86030 		ldrb	r3, [r0, #96]	@ zero_extendqisi2
 692:Src/aspep.c   ****               pSupHandle->MCP_PacketAvailable = true; /* Will be consumed in ASPEP_sendPacket */
 1519              		.loc 1 692 39 view .LVU525
 1520 010e 0133     		adds	r3, r3, #1
 1521 0110 80F86030 		strb	r3, [r0, #96]
 693:Src/aspep.c   ****               *packetLength = pHandle->rxLength;
 1522              		.loc 1 693 15 is_stmt 1 view .LVU526
 693:Src/aspep.c   ****               *packetLength = pHandle->rxLength;
 1523              		.loc 1 693 47 is_stmt 0 view .LVU527
 1524 0114 0123     		movs	r3, #1
 1525 0116 0374     		strb	r3, [r0, #16]
 694:Src/aspep.c   ****               result = pHandle->rxBuffer;
 1526              		.loc 1 694 15 is_stmt 1 view .LVU528
 694:Src/aspep.c   ****               result = pHandle->rxBuffer;
 1527              		.loc 1 694 38 is_stmt 0 view .LVU529
 1528 0118 B0F85C30 		ldrh	r3, [r0, #92]
 694:Src/aspep.c   ****               result = pHandle->rxBuffer;
ARM GAS  /tmp/cccMYuWq.s 			page 51


 1529              		.loc 1 694 29 view .LVU530
 1530 011c 0B80     		strh	r3, [r1]	@ movhi
 695:Src/aspep.c   ****             }
 1531              		.loc 1 695 15 is_stmt 1 view .LVU531
 695:Src/aspep.c   ****             }
 1532              		.loc 1 695 22 is_stmt 0 view .LVU532
 1533 011e 8569     		ldr	r5, [r0, #24]
 1534              	.LVL139:
 695:Src/aspep.c   ****             }
 1535              		.loc 1 695 22 view .LVU533
 1536 0120 83E7     		b	.L90
 1537              	.LVL140:
 1538              	.L87:
 716:Src/aspep.c   ****     {
 1539              		.loc 1 716 10 is_stmt 1 view .LVU534
 716:Src/aspep.c   ****     {
 1540              		.loc 1 716 21 is_stmt 0 view .LVU535
 1541 0122 90F86210 		ldrb	r1, [r0, #98]	@ zero_extendqisi2
 1542              	.LVL141:
 716:Src/aspep.c   ****     {
 1543              		.loc 1 716 13 view .LVU536
 1544 0126 09B9     		cbnz	r1, .L114
 588:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1545              		.loc 1 588 12 view .LVU537
 1546 0128 0025     		movs	r5, #0
 732:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 1547              		.loc 1 732 5 is_stmt 1 view .LVU538
 736:Src/aspep.c   **** }
 1548              		.loc 1 736 3 view .LVU539
 736:Src/aspep.c   **** }
 1549              		.loc 1 736 10 is_stmt 0 view .LVU540
 1550 012a 84E7     		b	.L86
 1551              	.L114:
 718:Src/aspep.c   ****       /* ASPEP_RXframeProcess can be called before reception of another packet */
 1552              		.loc 1 718 7 is_stmt 1 view .LVU541
 1553 012c FFF7FEFF 		bl	ASPEP_sendNack
 1554              	.LVL142:
 720:Src/aspep.c   ****       /* As we received a packet with a bad header, we need to be sure that the HW IP is well Synch
 1555              		.loc 1 720 7 view .LVU542
 720:Src/aspep.c   ****       /* As we received a packet with a bad header, we need to be sure that the HW IP is well Synch
 1556              		.loc 1 720 30 is_stmt 0 view .LVU543
 1557 0130 0025     		movs	r5, #0
 1558 0132 84F86250 		strb	r5, [r4, #98]
 727:Src/aspep.c   ****     }
 1559              		.loc 1 727 7 is_stmt 1 view .LVU544
 727:Src/aspep.c   ****     }
 1560              		.loc 1 727 14 is_stmt 0 view .LVU545
 1561 0136 236D     		ldr	r3, [r4, #80]
 727:Src/aspep.c   ****     }
 1562              		.loc 1 727 7 view .LVU546
 1563 0138 6069     		ldr	r0, [r4, #20]
 1564 013a 9847     		blx	r3
 1565              	.LVL143:
 1566 013c 7BE7     		b	.L86
 1567              		.cfi_endproc
 1568              	.LFE1448:
 1570              		.section	.text.ASPEP_HWDataReceivedIT,"ax",%progbits
ARM GAS  /tmp/cccMYuWq.s 			page 52


 1571              		.align	1
 1572              		.global	ASPEP_HWDataReceivedIT
 1573              		.syntax unified
 1574              		.thumb
 1575              		.thumb_func
 1576              		.fpu fpv4-sp-d16
 1578              	ASPEP_HWDataReceivedIT:
 1579              	.LVL144:
 1580              	.LFB1449:
 738:Src/aspep.c   **** 
 739:Src/aspep.c   **** /* This function is called once DMA has transfered the configure number of byte*/
 740:Src/aspep.c   **** void ASPEP_HWDataReceivedIT(ASPEP_Handle_t *pHandle)
 741:Src/aspep.c   **** {
 1581              		.loc 1 741 1 is_stmt 1 view -0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              		.loc 1 741 1 is_stmt 0 view .LVU548
 1586 0000 38B5     		push	{r3, r4, r5, lr}
 1587              		.cfi_def_cfa_offset 16
 1588              		.cfi_offset 3, -16
 1589              		.cfi_offset 4, -12
 1590              		.cfi_offset 5, -8
 1591              		.cfi_offset 14, -4
 1592 0002 0446     		mov	r4, r0
 742:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 743:Src/aspep.c   ****   if (MC_NULL == pHandle)
 744:Src/aspep.c   ****   {
 745:Src/aspep.c   ****     /* Nothing to do */
 746:Src/aspep.c   ****   }
 747:Src/aspep.c   ****   else
 748:Src/aspep.c   ****   {
 749:Src/aspep.c   **** #endif
 750:Src/aspep.c   ****     /* Upon reception of a Newpacket the DMA will be re-configured only once the answer has been se
 751:Src/aspep.c   ****       * This is mandatory to avoid a race condition in case of a new packet is received while execu
 752:Src/aspep.c   ****       * RXframeProcess
 753:Src/aspep.c   ****       * If the packet received contains an error in the header, the HW IP will be re-synchronised f
 754:Src/aspep.c   ****       * configured after.*/
 755:Src/aspep.c   ****     switch (pHandle->ASPEP_TL_State)
 1593              		.loc 1 755 5 is_stmt 1 view .LVU549
 1594              		.loc 1 755 20 is_stmt 0 view .LVU550
 1595 0004 90F86530 		ldrb	r3, [r0, #101]	@ zero_extendqisi2
 1596              		.loc 1 755 5 view .LVU551
 1597 0008 13B1     		cbz	r3, .L116
 1598 000a 012B     		cmp	r3, #1
 1599 000c 37D0     		beq	.L117
 1600              	.LVL145:
 1601              	.L115:
 756:Src/aspep.c   ****     {
 757:Src/aspep.c   ****       case WAITING_PACKET:
 758:Src/aspep.c   ****       {
 759:Src/aspep.c   ****         if (ASPEP_CheckHeaderCRC(*(uint32_t *)pHandle->rxHeader) == true) //cstat !MISRAC2012-Rule-
 760:Src/aspep.c   ****         {
 761:Src/aspep.c   ****           pHandle->rxPacketType = (ASPEP_packetType)(((uint32_t)pHandle->rxHeader[0]) & ID_MASK);
 762:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 763:Src/aspep.c   ****           {
 764:Src/aspep.c   ****             case DATA_PACKET:
ARM GAS  /tmp/cccMYuWq.s 			page 53


 765:Src/aspep.c   ****             {
 766:Src/aspep.c   ****               //cstat !MISRAC2012-Rule-11.3
 767:Src/aspep.c   ****               pHandle->rxLength = (uint16_t)((*((uint16_t *)pHandle->rxHeader) & 0x1FFF0U) >> (uint
 768:Src/aspep.c   ****               if (0U == pHandle->rxLength) /* data packet with length 0 is a valid packet */
 769:Src/aspep.c   ****               {
 770:Src/aspep.c   ****                 pHandle->NewPacketAvailable = true;
 771:Src/aspep.c   ****                 /* The receiver is not reconfigure right now on purpose to avoid race condition whe
 772:Src/aspep.c   ****                   *  processed in ASPEP_RXframeProcess */
 773:Src/aspep.c   ****               }
 774:Src/aspep.c   ****               else if (pHandle->rxLength <= pHandle->maxRXPayload)
 775:Src/aspep.c   ****               {
 776:Src/aspep.c   ****                 pHandle->fASPEP_receive(pHandle->HWIp, pHandle->rxBuffer,  /* need to read + 2 byte
 777:Src/aspep.c   ****                                         (pHandle->rxLength + ((uint16_t)ASPEP_DATACRC_SIZE * (uint1
 778:Src/aspep.c   ****                 pHandle->ASPEP_TL_State = WAITING_PAYLOAD;
 779:Src/aspep.c   ****               }
 780:Src/aspep.c   ****               else
 781:Src/aspep.c   ****               {
 782:Src/aspep.c   ****                 pHandle->badPacketFlag = ASPEP_BAD_PACKET_SIZE;
 783:Src/aspep.c   ****               }
 784:Src/aspep.c   ****               break;
 785:Src/aspep.c   ****             }
 786:Src/aspep.c   **** 
 787:Src/aspep.c   ****             case BEACON:
 788:Src/aspep.c   ****             case PING:
 789:Src/aspep.c   ****             {
 790:Src/aspep.c   ****               pHandle->NewPacketAvailable = true;
 791:Src/aspep.c   ****               /* The receiver is not reconfigure right now on purpose to avoid race condition when 
 792:Src/aspep.c   ****                 * processed in ASPEP_RXframeProcess */
 793:Src/aspep.c   ****               break;
 794:Src/aspep.c   ****             }
 795:Src/aspep.c   **** 
 796:Src/aspep.c   ****             default:
 797:Src/aspep.c   ****             {
 798:Src/aspep.c   ****               pHandle->badPacketFlag = ASPEP_BAD_PACKET_TYPE;
 799:Src/aspep.c   ****               break;
 800:Src/aspep.c   ****             }
 801:Src/aspep.c   ****           }
 802:Src/aspep.c   ****         }
 803:Src/aspep.c   ****         else
 804:Src/aspep.c   ****         {
 805:Src/aspep.c   ****           pHandle->badPacketFlag = ASPEP_BAD_CRC_HEADER;
 806:Src/aspep.c   ****         }
 807:Src/aspep.c   ****         break;
 808:Src/aspep.c   ****       }
 809:Src/aspep.c   **** 
 810:Src/aspep.c   ****       case WAITING_PAYLOAD:
 811:Src/aspep.c   ****       {
 812:Src/aspep.c   ****         pHandle->ASPEP_TL_State = WAITING_PACKET;
 813:Src/aspep.c   ****         /* Payload received, */
 814:Src/aspep.c   ****         pHandle->NewPacketAvailable = true;
 815:Src/aspep.c   ****         /* The receiver is not reconfigure right now on purpose to avoid race condition when the pa
 816:Src/aspep.c   ****           * processed in ASPEP_RXframeProcess */
 817:Src/aspep.c   ****         break;
 818:Src/aspep.c   ****       }
 819:Src/aspep.c   **** 
 820:Src/aspep.c   ****       default:
 821:Src/aspep.c   ****         break;
ARM GAS  /tmp/cccMYuWq.s 			page 54


 822:Src/aspep.c   ****     }
 823:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 824:Src/aspep.c   ****   }
 825:Src/aspep.c   **** #endif
 826:Src/aspep.c   **** }
 1602              		.loc 1 826 1 view .LVU552
 1603 000e 38BD     		pop	{r3, r4, r5, pc}
 1604              	.LVL146:
 1605              	.L116:
 759:Src/aspep.c   ****         {
 1606              		.loc 1 759 9 is_stmt 1 view .LVU553
 759:Src/aspep.c   ****         {
 1607              		.loc 1 759 13 is_stmt 0 view .LVU554
 1608 0010 C069     		ldr	r0, [r0, #28]
 1609              	.LVL147:
 759:Src/aspep.c   ****         {
 1610              		.loc 1 759 13 view .LVU555
 1611 0012 FFF7FEFF 		bl	ASPEP_CheckHeaderCRC
 1612              	.LVL148:
 759:Src/aspep.c   ****         {
 1613              		.loc 1 759 12 view .LVU556
 1614 0016 70B3     		cbz	r0, .L119
 761:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 1615              		.loc 1 761 11 is_stmt 1 view .LVU557
 761:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 1616              		.loc 1 761 82 is_stmt 0 view .LVU558
 1617 0018 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 761:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 1618              		.loc 1 761 35 view .LVU559
 1619 001a 03F00F03 		and	r3, r3, #15
 761:Src/aspep.c   ****           switch (pHandle->rxPacketType)
 1620              		.loc 1 761 33 view .LVU560
 1621 001e A366     		str	r3, [r4, #104]
 762:Src/aspep.c   ****           {
 1622              		.loc 1 762 11 is_stmt 1 view .LVU561
 1623 0020 062B     		cmp	r3, #6
 1624 0022 0AD9     		bls	.L126
 1625 0024 092B     		cmp	r3, #9
 1626 0026 0AD1     		bne	.L122
 767:Src/aspep.c   ****               if (0U == pHandle->rxLength) /* data packet with length 0 is a valid packet */
 1627              		.loc 1 767 15 view .LVU562
 767:Src/aspep.c   ****               if (0U == pHandle->rxLength) /* data packet with length 0 is a valid packet */
 1628              		.loc 1 767 47 is_stmt 0 view .LVU563
 1629 0028 A38B     		ldrh	r3, [r4, #28]
 767:Src/aspep.c   ****               if (0U == pHandle->rxLength) /* data packet with length 0 is a valid packet */
 1630              		.loc 1 767 92 view .LVU564
 1631 002a 1B09     		lsrs	r3, r3, #4
 767:Src/aspep.c   ****               if (0U == pHandle->rxLength) /* data packet with length 0 is a valid packet */
 1632              		.loc 1 767 33 view .LVU565
 1633 002c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 768:Src/aspep.c   ****               {
 1634              		.loc 1 768 15 is_stmt 1 view .LVU566
 768:Src/aspep.c   ****               {
 1635              		.loc 1 768 18 is_stmt 0 view .LVU567
 1636 0030 4BB9     		cbnz	r3, .L123
 770:Src/aspep.c   ****                 /* The receiver is not reconfigure right now on purpose to avoid race condition whe
 1637              		.loc 1 770 17 is_stmt 1 view .LVU568
ARM GAS  /tmp/cccMYuWq.s 			page 55


 770:Src/aspep.c   ****                 /* The receiver is not reconfigure right now on purpose to avoid race condition whe
 1638              		.loc 1 770 45 is_stmt 0 view .LVU569
 1639 0032 0123     		movs	r3, #1
 1640 0034 84F86130 		strb	r3, [r4, #97]
 1641 0038 E9E7     		b	.L115
 1642              	.L126:
 1643 003a 052B     		cmp	r3, #5
 1644 003c 17D2     		bcs	.L127
 1645              	.L122:
 798:Src/aspep.c   ****               break;
 1646              		.loc 1 798 15 is_stmt 1 view .LVU570
 798:Src/aspep.c   ****               break;
 1647              		.loc 1 798 38 is_stmt 0 view .LVU571
 1648 003e 0123     		movs	r3, #1
 1649 0040 84F86230 		strb	r3, [r4, #98]
 799:Src/aspep.c   ****             }
 1650              		.loc 1 799 15 is_stmt 1 view .LVU572
 1651 0044 E3E7     		b	.L115
 1652              	.L123:
 774:Src/aspep.c   ****               {
 1653              		.loc 1 774 20 view .LVU573
 774:Src/aspep.c   ****               {
 1654              		.loc 1 774 52 is_stmt 0 view .LVU574
 1655 0046 B4F85E20 		ldrh	r2, [r4, #94]
 774:Src/aspep.c   ****               {
 1656              		.loc 1 774 23 view .LVU575
 1657 004a 9342     		cmp	r3, r2
 1658 004c 0BD8     		bhi	.L124
 776:Src/aspep.c   ****                                         (pHandle->rxLength + ((uint16_t)ASPEP_DATACRC_SIZE * (uint1
 1659              		.loc 1 776 17 is_stmt 1 view .LVU576
 776:Src/aspep.c   ****                                         (pHandle->rxLength + ((uint16_t)ASPEP_DATACRC_SIZE * (uint1
 1660              		.loc 1 776 24 is_stmt 0 view .LVU577
 1661 004e 656D     		ldr	r5, [r4, #84]
 777:Src/aspep.c   ****                 pHandle->ASPEP_TL_State = WAITING_PAYLOAD;
 1662              		.loc 1 777 125 view .LVU578
 1663 0050 94F86C20 		ldrb	r2, [r4, #108]	@ zero_extendqisi2
 776:Src/aspep.c   ****                                         (pHandle->rxLength + ((uint16_t)ASPEP_DATACRC_SIZE * (uint1
 1664              		.loc 1 776 17 view .LVU579
 1665 0054 03EB4202 		add	r2, r3, r2, lsl #1
 1666 0058 A169     		ldr	r1, [r4, #24]
 1667 005a 6069     		ldr	r0, [r4, #20]
 1668 005c A847     		blx	r5
 1669              	.LVL149:
 778:Src/aspep.c   ****               }
 1670              		.loc 1 778 17 is_stmt 1 view .LVU580
 778:Src/aspep.c   ****               }
 1671              		.loc 1 778 41 is_stmt 0 view .LVU581
 1672 005e 0123     		movs	r3, #1
 1673 0060 84F86530 		strb	r3, [r4, #101]
 1674 0064 D3E7     		b	.L115
 1675              	.L124:
 782:Src/aspep.c   ****               }
 1676              		.loc 1 782 17 is_stmt 1 view .LVU582
 782:Src/aspep.c   ****               }
 1677              		.loc 1 782 40 is_stmt 0 view .LVU583
 1678 0066 0223     		movs	r3, #2
 1679 0068 84F86230 		strb	r3, [r4, #98]
ARM GAS  /tmp/cccMYuWq.s 			page 56


 1680 006c CFE7     		b	.L115
 1681              	.L127:
 790:Src/aspep.c   ****               /* The receiver is not reconfigure right now on purpose to avoid race condition when 
 1682              		.loc 1 790 15 is_stmt 1 view .LVU584
 790:Src/aspep.c   ****               /* The receiver is not reconfigure right now on purpose to avoid race condition when 
 1683              		.loc 1 790 43 is_stmt 0 view .LVU585
 1684 006e 0123     		movs	r3, #1
 1685 0070 84F86130 		strb	r3, [r4, #97]
 793:Src/aspep.c   ****             }
 1686              		.loc 1 793 15 is_stmt 1 view .LVU586
 1687 0074 CBE7     		b	.L115
 1688              	.L119:
 805:Src/aspep.c   ****         }
 1689              		.loc 1 805 11 view .LVU587
 805:Src/aspep.c   ****         }
 1690              		.loc 1 805 34 is_stmt 0 view .LVU588
 1691 0076 0423     		movs	r3, #4
 1692 0078 84F86230 		strb	r3, [r4, #98]
 1693 007c C7E7     		b	.L115
 1694              	.LVL150:
 1695              	.L117:
 812:Src/aspep.c   ****         /* Payload received, */
 1696              		.loc 1 812 9 is_stmt 1 view .LVU589
 812:Src/aspep.c   ****         /* Payload received, */
 1697              		.loc 1 812 33 is_stmt 0 view .LVU590
 1698 007e 0023     		movs	r3, #0
 1699 0080 80F86530 		strb	r3, [r0, #101]
 814:Src/aspep.c   ****         /* The receiver is not reconfigure right now on purpose to avoid race condition when the pa
 1700              		.loc 1 814 9 is_stmt 1 view .LVU591
 814:Src/aspep.c   ****         /* The receiver is not reconfigure right now on purpose to avoid race condition when the pa
 1701              		.loc 1 814 37 is_stmt 0 view .LVU592
 1702 0084 0123     		movs	r3, #1
 1703 0086 80F86130 		strb	r3, [r0, #97]
 817:Src/aspep.c   ****       }
 1704              		.loc 1 817 9 is_stmt 1 view .LVU593
 1705              		.loc 1 826 1 is_stmt 0 view .LVU594
 1706 008a C0E7     		b	.L115
 1707              		.cfi_endproc
 1708              	.LFE1449:
 1710              		.section	.text.ASPEP_HWDMAReset,"ax",%progbits
 1711              		.align	1
 1712              		.global	ASPEP_HWDMAReset
 1713              		.syntax unified
 1714              		.thumb
 1715              		.thumb_func
 1716              		.fpu fpv4-sp-d16
 1718              	ASPEP_HWDMAReset:
 1719              	.LVL151:
 1720              	.LFB1450:
 827:Src/aspep.c   **** 
 828:Src/aspep.c   **** /* Called after debugger has stopped the MCU*/
 829:Src/aspep.c   **** void ASPEP_HWDMAReset(ASPEP_Handle_t *pHandle)
 830:Src/aspep.c   **** {
 1721              		.loc 1 830 1 is_stmt 1 view -0
 1722              		.cfi_startproc
 1723              		@ args = 0, pretend = 0, frame = 0
 1724              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cccMYuWq.s 			page 57


 1725              		.loc 1 830 1 is_stmt 0 view .LVU596
 1726 0000 08B5     		push	{r3, lr}
 1727              		.cfi_def_cfa_offset 8
 1728              		.cfi_offset 3, -8
 1729              		.cfi_offset 14, -4
 831:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 832:Src/aspep.c   ****   if (NULL == pHandle)
 833:Src/aspep.c   ****   {
 834:Src/aspep.c   ****     /* Nothing to do */
 835:Src/aspep.c   ****   }
 836:Src/aspep.c   ****   else
 837:Src/aspep.c   ****   {
 838:Src/aspep.c   **** #endif
 839:Src/aspep.c   ****     /* We must reset the RX state machine to be sure to not be in Waiting packet state */
 840:Src/aspep.c   ****     /* Otherwise the arrival of a new packet will trigger a NewPacketAvailable despite */
 841:Src/aspep.c   ****     /* the fact that bytes have been lost because of overrun (debugger paused for instance) */
 842:Src/aspep.c   ****     pHandle->ASPEP_TL_State = WAITING_PACKET;
 1730              		.loc 1 842 5 is_stmt 1 view .LVU597
 1731              		.loc 1 842 29 is_stmt 0 view .LVU598
 1732 0002 0023     		movs	r3, #0
 1733 0004 80F86530 		strb	r3, [r0, #101]
 843:Src/aspep.c   ****     pHandle->fASPEP_receive(pHandle->HWIp, pHandle->rxHeader, ASPEP_HEADER_SIZE);
 1734              		.loc 1 843 5 is_stmt 1 view .LVU599
 1735              		.loc 1 843 12 is_stmt 0 view .LVU600
 1736 0008 436D     		ldr	r3, [r0, #84]
 1737              		.loc 1 843 5 view .LVU601
 1738 000a 0422     		movs	r2, #4
 1739 000c 00F11C01 		add	r1, r0, #28
 1740 0010 4069     		ldr	r0, [r0, #20]
 1741              	.LVL152:
 1742              		.loc 1 843 5 view .LVU602
 1743 0012 9847     		blx	r3
 1744              	.LVL153:
 844:Src/aspep.c   **** #ifdef NULL_PTR_ASP
 845:Src/aspep.c   ****   }
 846:Src/aspep.c   **** #endif
 847:Src/aspep.c   **** }
 1745              		.loc 1 847 1 view .LVU603
 1746 0014 08BD     		pop	{r3, pc}
 1747              		.cfi_endproc
 1748              	.LFE1450:
 1750              		.section	.rodata.CRC4_Lookup4,"a"
 1751              		.align	2
 1752              		.set	.LANCHOR1,. + 0
 1755              	CRC4_Lookup4:
 1756 0000 00070E09 		.ascii	"\000\007\016\011\013\014\005\002\001\006\017\010\012"
 1756      0B0C0502 
 1756      01060F08 
 1756      0A
 1757 000d 0D0403   		.ascii	"\015\004\003"
 1758              		.section	.rodata.CRC4_Lookup8,"a"
 1759              		.align	2
 1760              		.set	.LANCHOR0,. + 0
 1763              	CRC4_Lookup8:
 1764 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\016\007\005\003\001\017"
 1764      080A0C0E 
 1764      07050301 
ARM GAS  /tmp/cccMYuWq.s 			page 58


 1764      0F
 1765 000d 0D0B0907 		.ascii	"\015\013\011\007\005\003\001\017\015\013\011\000\002"
 1765      0503010F 
 1765      0D0B0900 
 1765      02
 1766 001a 0406080A 		.ascii	"\004\006\010\012\014\016\016\014\012\010\006\004\002"
 1766      0C0E0E0C 
 1766      0A080604 
 1766      02
 1767 0027 00090B0D 		.ascii	"\000\011\013\015\017\001\003\005\007\011\013\015\017"
 1767      0F010305 
 1767      07090B0D 
 1767      0F
 1768 0034 01030507 		.ascii	"\001\003\005\007\016\014\012\010\006\004\002\000\013"
 1768      0E0C0A08 
 1768      06040200 
 1768      0B
 1769 0041 090F0D03 		.ascii	"\011\017\015\003\001\007\005\014\016\010\012\004\006"
 1769      0107050C 
 1769      0E080A04 
 1769      06
 1770 004e 00020C0E 		.ascii	"\000\002\014\016\010\012\004\006\000\002\013\011\017"
 1770      080A0406 
 1770      00020B09 
 1770      0F
 1771 005b 0D030107 		.ascii	"\015\003\001\007\005\005\007\001\003\015\017\011\013"
 1771      05050701 
 1771      030D0F09 
 1771      0B
 1772 0068 02000604 		.ascii	"\002\000\006\004\012\010\016\014\002\000\006\004\012"
 1772      0A080E0C 
 1772      02000604 
 1772      0A
 1773 0075 080E0C05 		.ascii	"\010\016\014\005\007\001\003\015\017\011\013\001\003"
 1773      0701030D 
 1773      0F090B01 
 1773      03
 1774 0082 0507090B 		.ascii	"\005\007\011\013\015\017\006\004\002\000\016\014\012"
 1774      0D0F0604 
 1774      02000E0C 
 1774      0A
 1775 008f 08060402 		.ascii	"\010\006\004\002\000\016\014\012\010\001\003\005\007"
 1775      000E0C0A 
 1775      08010305 
 1775      07
 1776 009c 090B0D0F 		.ascii	"\011\013\015\017\017\015\013\011\007\005\003\001\010"
 1776      0F0D0B09 
 1776      07050301 
 1776      08
 1777 00a9 0A0C0E00 		.ascii	"\012\014\016\000\002\004\006\010\012\014\016\000\002"
 1777      02040608 
 1777      0A0C0E00 
 1777      02
 1778 00b6 04060F0D 		.ascii	"\004\006\017\015\013\011\007\005\003\001\012\010\016"
 1778      0B090705 
 1778      03010A08 
 1778      0E
ARM GAS  /tmp/cccMYuWq.s 			page 59


 1779 00c3 0C020006 		.ascii	"\014\002\000\006\004\015\017\011\013\005\007\001\003"
 1779      040D0F09 
 1779      0B050701 
 1779      03
 1780 00d0 0D0F090B 		.ascii	"\015\017\011\013\005\007\001\003\012\010\016\014\002"
 1780      05070103 
 1780      0A080E0C 
 1780      02
 1781 00dd 00060404 		.ascii	"\000\006\004\004\006\000\002\014\016\010\012\003\001"
 1781      0600020C 
 1781      0E080A03 
 1781      01
 1782 00ea 07050B09 		.ascii	"\007\005\013\011\017\015\003\001\007\005\013\011\017"
 1782      0F0D0301 
 1782      07050B09 
 1782      0F
 1783 00f7 0D040600 		.ascii	"\015\004\006\000\002\014\016\010\012"
 1783      020C0E08 
 1783      0A
 1784              		.text
 1785              	.Letext0:
 1786              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1787              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1788              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 1789              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1790              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 1791              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 1792              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 1793              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 1794              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 1795              		.file 12 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcptl.h"
 1796              		.file 13 "Inc/aspep.h"
ARM GAS  /tmp/cccMYuWq.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 aspep.c
     /tmp/cccMYuWq.s:18     .text.ASPEP_ComputeHeaderCRC:0000000000000000 $t
     /tmp/cccMYuWq.s:25     .text.ASPEP_ComputeHeaderCRC:0000000000000000 ASPEP_ComputeHeaderCRC
     /tmp/cccMYuWq.s:94     .text.ASPEP_ComputeHeaderCRC:0000000000000030 $d
     /tmp/cccMYuWq.s:100    .text.ASPEP_CheckHeaderCRC:0000000000000000 $t
     /tmp/cccMYuWq.s:106    .text.ASPEP_CheckHeaderCRC:0000000000000000 ASPEP_CheckHeaderCRC
     /tmp/cccMYuWq.s:155    .text.ASPEP_CheckHeaderCRC:0000000000000024 $d
     /tmp/cccMYuWq.s:160    .text.ASPEP_TXframeProcess:0000000000000000 $t
     /tmp/cccMYuWq.s:166    .text.ASPEP_TXframeProcess:0000000000000000 ASPEP_TXframeProcess
     /tmp/cccMYuWq.s:401    .text.ASPEP_sendNack:0000000000000000 $t
     /tmp/cccMYuWq.s:407    .text.ASPEP_sendNack:0000000000000000 ASPEP_sendNack
     /tmp/cccMYuWq.s:445    .text.ASPEP_start:0000000000000000 $t
     /tmp/cccMYuWq.s:452    .text.ASPEP_start:0000000000000000 ASPEP_start
     /tmp/cccMYuWq.s:500    .text.ASPEP_sendBeacon:0000000000000000 $t
     /tmp/cccMYuWq.s:507    .text.ASPEP_sendBeacon:0000000000000000 ASPEP_sendBeacon
     /tmp/cccMYuWq.s:560    .text.ASPEP_sendPing:0000000000000000 $t
     /tmp/cccMYuWq.s:567    .text.ASPEP_sendPing:0000000000000000 ASPEP_sendPing
     /tmp/cccMYuWq.s:630    .text.ASPEP_getBuffer:0000000000000000 $t
     /tmp/cccMYuWq.s:637    .text.ASPEP_getBuffer:0000000000000000 ASPEP_getBuffer
     /tmp/cccMYuWq.s:768    .text.ASPEP_CheckBeacon:0000000000000000 $t
     /tmp/cccMYuWq.s:775    .text.ASPEP_CheckBeacon:0000000000000000 ASPEP_CheckBeacon
     /tmp/cccMYuWq.s:913    .text.ASPEP_sendPacket:0000000000000000 $t
     /tmp/cccMYuWq.s:920    .text.ASPEP_sendPacket:0000000000000000 ASPEP_sendPacket
     /tmp/cccMYuWq.s:1046   .text.ASPEP_HWDataTransmittedIT:0000000000000000 $t
     /tmp/cccMYuWq.s:1053   .text.ASPEP_HWDataTransmittedIT:0000000000000000 ASPEP_HWDataTransmittedIT
     /tmp/cccMYuWq.s:1255   .text.ASPEP_RXframeProcess:0000000000000000 $t
     /tmp/cccMYuWq.s:1262   .text.ASPEP_RXframeProcess:0000000000000000 ASPEP_RXframeProcess
     /tmp/cccMYuWq.s:1571   .text.ASPEP_HWDataReceivedIT:0000000000000000 $t
     /tmp/cccMYuWq.s:1578   .text.ASPEP_HWDataReceivedIT:0000000000000000 ASPEP_HWDataReceivedIT
     /tmp/cccMYuWq.s:1711   .text.ASPEP_HWDMAReset:0000000000000000 $t
     /tmp/cccMYuWq.s:1718   .text.ASPEP_HWDMAReset:0000000000000000 ASPEP_HWDMAReset
     /tmp/cccMYuWq.s:1751   .rodata.CRC4_Lookup4:0000000000000000 $d
     /tmp/cccMYuWq.s:1755   .rodata.CRC4_Lookup4:0000000000000000 CRC4_Lookup4
     /tmp/cccMYuWq.s:1759   .rodata.CRC4_Lookup8:0000000000000000 $d
     /tmp/cccMYuWq.s:1763   .rodata.CRC4_Lookup8:0000000000000000 CRC4_Lookup8

NO UNDEFINED SYMBOLS
