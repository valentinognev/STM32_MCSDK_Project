ARM GAS  /tmp/cc85dWdm.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_NVIC_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_NVIC_Init:
  26              	.LFB1624:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2023 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** 
  22:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  23:Src/main.c    **** /* USER CODE BEGIN Includes */
  24:Src/main.c    **** #include "debug_scope.h"
  25:Src/main.c    **** /* USER CODE END Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN PTD */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END PTD */
  31:Src/main.c    **** 
ARM GAS  /tmp/cc85dWdm.s 			page 2


  32:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PD */
  34:Src/main.c    **** /* USER CODE END PD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PM */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* USER CODE END PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  42:Src/main.c    **** int32_t encoder=0;
  43:Src/main.c    **** TIM_HandleTypeDef htim4;
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN PV */
  46:Src/main.c    **** extern OuterControlParameters_Handle_t outerControlParametersM1;
  47:Src/main.c    **** extern MCI_Handle_t* pMCI[NBR_OF_MOTORS];
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  52:Src/main.c    **** void SystemClock_Config(void);
  53:Src/main.c    **** static void MX_GPIO_Init(void);
  54:Src/main.c    **** static void MX_DMA_Init(void);
  55:Src/main.c    **** static void MX_ADC1_Init(void);
  56:Src/main.c    **** static void MX_ADC2_Init(void);
  57:Src/main.c    **** static void MX_COMP1_Init(void);
  58:Src/main.c    **** static void MX_COMP2_Init(void);
  59:Src/main.c    **** static void MX_COMP4_Init(void);
  60:Src/main.c    **** static void MX_CORDIC_Init(void);
  61:Src/main.c    **** static void MX_DAC3_Init(void);
  62:Src/main.c    **** static void MX_OPAMP1_Init(void);
  63:Src/main.c    **** static void MX_OPAMP2_Init(void);
  64:Src/main.c    **** static void MX_OPAMP3_Init(void);
  65:Src/main.c    **** static void MX_TIM1_Init(void);
  66:Src/main.c    **** static void MX_TIM4_Init(void);
  67:Src/main.c    **** static void MX_USART2_UART_Init(void);
  68:Src/main.c    **** static void MX_NVIC_Init(void);
  69:Src/main.c    **** /* USER CODE BEGIN PFP */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END PFP */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  74:Src/main.c    **** /* USER CODE BEGIN 0 */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** /**
  79:Src/main.c    ****   * @brief  The application entry point.
  80:Src/main.c    ****   * @retval int
  81:Src/main.c    ****   */
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  84:Src/main.c    ****   /* USER CODE BEGIN 1 */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END 1 */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
ARM GAS  /tmp/cc85dWdm.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  91:Src/main.c    ****   HAL_Init();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END Init */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Configure the system clock */
  98:Src/main.c    ****   SystemClock_Config();
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END SysInit */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Initialize all configured peripherals */
 105:Src/main.c    ****   MX_GPIO_Init();
 106:Src/main.c    ****   MX_DMA_Init();
 107:Src/main.c    ****   MX_ADC1_Init();
 108:Src/main.c    ****   MX_ADC2_Init();
 109:Src/main.c    ****   MX_COMP1_Init();
 110:Src/main.c    ****   MX_COMP2_Init();
 111:Src/main.c    ****   MX_COMP4_Init();
 112:Src/main.c    ****   MX_CORDIC_Init();
 113:Src/main.c    ****   MX_DAC3_Init();
 114:Src/main.c    ****   MX_OPAMP1_Init();
 115:Src/main.c    ****   MX_OPAMP2_Init();
 116:Src/main.c    ****   MX_OPAMP3_Init();
 117:Src/main.c    ****   MX_TIM1_Init();
 118:Src/main.c    ****   MX_TIM4_Init();
 119:Src/main.c    ****   MX_USART2_UART_Init();
 120:Src/main.c    ****   MX_MotorControl_Init();
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Initialize interrupts */
 123:Src/main.c    ****   MX_NVIC_Init();
 124:Src/main.c    ****   /* USER CODE BEGIN 2 */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE END 2 */
 127:Src/main.c    ****   LL_TIM_EnableCounter(TIM4);
 128:Src/main.c    ****   /* Infinite loop */
 129:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 130:Src/main.c    **** 
 131:Src/main.c    ****   
 132:Src/main.c    ****   int32_t counter;
 133:Src/main.c    ****   while (1)
 134:Src/main.c    ****   {
 135:Src/main.c    ****     encoder = LL_TIM_GetCounter(TIM4);
 136:Src/main.c    ****     counter++;
 137:Src/main.c    ****     LL_mDelay(1);
 138:Src/main.c    ****     /* USER CODE END WHILE */
 139:Src/main.c    ****     // if (MC_GetLastCommandMotor1() == MCI_CMD_EXECSPEEDRAMP && 
 140:Src/main.c    ****     //     MC_GetCommandStateMotor1() == MCI_BUFFER_EMPTY &&
 141:Src/main.c    ****     //     getTickMSCounter()-getStartMotorTick() > 2000)
 142:Src/main.c    ****     // {
 143:Src/main.c    ****     //   int16_t hFinalSpeedMean = MC_GetMecSpeedAverageMotor1();
 144:Src/main.c    ****     //   MCI_GetLastRampFinalSpeed(pMCI[M1]);
 145:Src/main.c    ****     //   int16_t hFinalSpeedAmp = hFinalSpeedMean/5;
ARM GAS  /tmp/cc85dWdm.s 			page 4


 146:Src/main.c    ****     //   int16_t hPhase = 0;
 147:Src/main.c    ****     //   MC_ProgramSpeedSinMotor1(hFinalSpeedMean, hFinalSpeedAmp, hPhase);
 148:Src/main.c    **** 
 149:Src/main.c    ****     /* USER CODE BEGIN 3 */
 150:Src/main.c    ****   }
 151:Src/main.c    ****   /* USER CODE END 3 */
 152:Src/main.c    **** }
 153:Src/main.c    **** 
 154:Src/main.c    **** /**
 155:Src/main.c    ****   * @brief System Clock Configuration
 156:Src/main.c    ****   * @retval None
 157:Src/main.c    ****   */
 158:Src/main.c    **** void SystemClock_Config(void)
 159:Src/main.c    **** {
 160:Src/main.c    ****   LL_FLASH_SetLatency(LL_FLASH_LATENCY_4);
 161:Src/main.c    ****   while(LL_FLASH_GetLatency() != LL_FLASH_LATENCY_4)
 162:Src/main.c    ****   {
 163:Src/main.c    ****   }
 164:Src/main.c    ****   LL_PWR_EnableRange1BoostMode();
 165:Src/main.c    ****   LL_RCC_HSE_Enable();
 166:Src/main.c    ****    /* Wait till HSE is ready */
 167:Src/main.c    ****   while(LL_RCC_HSE_IsReady() != 1)
 168:Src/main.c    ****   {
 169:Src/main.c    ****   }
 170:Src/main.c    **** 
 171:Src/main.c    ****   LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSE, LL_RCC_PLLM_DIV_2, 85, LL_RCC_PLLR_DIV_2);
 172:Src/main.c    ****   LL_RCC_PLL_ConfigDomain_ADC(LL_RCC_PLLSOURCE_HSE, LL_RCC_PLLM_DIV_2, 85, LL_RCC_PLLP_DIV_8);
 173:Src/main.c    ****   LL_RCC_PLL_EnableDomain_SYS();
 174:Src/main.c    ****   LL_RCC_PLL_EnableDomain_ADC();
 175:Src/main.c    ****   LL_RCC_PLL_Enable();
 176:Src/main.c    ****    /* Wait till PLL is ready */
 177:Src/main.c    ****   while(LL_RCC_PLL_IsReady() != 1)
 178:Src/main.c    ****   {
 179:Src/main.c    ****   }
 180:Src/main.c    **** 
 181:Src/main.c    ****   LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 182:Src/main.c    ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_2);
 183:Src/main.c    ****    /* Wait till System clock is ready */
 184:Src/main.c    ****   while(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 185:Src/main.c    ****   {
 186:Src/main.c    ****   }
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* Insure 1us transition state at intermediate medium speed clock based on DWT */
 189:Src/main.c    ****   CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 190:Src/main.c    ****   DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 191:Src/main.c    ****   DWT->CYCCNT = 0;
 192:Src/main.c    ****   while(DWT->CYCCNT < 100);
 193:Src/main.c    ****   /* Set AHB prescaler*/
 194:Src/main.c    ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 195:Src/main.c    ****   LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);
 196:Src/main.c    ****   LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
 197:Src/main.c    ****   LL_SetSystemCoreClock(170000000);
 198:Src/main.c    **** 
 199:Src/main.c    ****    /* Update the time base */
 200:Src/main.c    ****   if (HAL_InitTick (TICK_INT_PRIORITY) != HAL_OK)
 201:Src/main.c    ****   {
 202:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/cc85dWdm.s 			page 5


 203:Src/main.c    ****   }
 204:Src/main.c    **** }
 205:Src/main.c    **** 
 206:Src/main.c    **** /**
 207:Src/main.c    ****   * @brief NVIC Configuration.
 208:Src/main.c    ****   * @retval None
 209:Src/main.c    ****   */
 210:Src/main.c    **** static void MX_NVIC_Init(void)
 211:Src/main.c    **** {
  28              		.loc 1 211 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 212:Src/main.c    ****   /* USART2_IRQn interrupt configuration */
 213:Src/main.c    ****   NVIC_SetPriority(USART2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),3, 1));
  33              		.loc 1 213 3 view .LVU1
  34              	.LBB506:
  35              	.LBI506:
  36              		.file 2 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.0
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     13. March 2019
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
ARM GAS  /tmp/cc85dWdm.s 			page 6


  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
ARM GAS  /tmp/cc85dWdm.s 			page 7


  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
ARM GAS  /tmp/cc85dWdm.s 			page 8


 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
ARM GAS  /tmp/cc85dWdm.s 			page 9


 209:Drivers/CMSIS/Include/core_cm4.h **** /**
 210:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:Drivers/CMSIS/Include/core_cm4.h **** 
 212:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:Drivers/CMSIS/Include/core_cm4.h **** */
 216:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:Drivers/CMSIS/Include/core_cm4.h **** #else
 219:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** 
 224:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:Drivers/CMSIS/Include/core_cm4.h **** 
 231:Drivers/CMSIS/Include/core_cm4.h **** 
 232:Drivers/CMSIS/Include/core_cm4.h **** 
 233:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 237:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:Drivers/CMSIS/Include/core_cm4.h **** /**
 245:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:Drivers/CMSIS/Include/core_cm4.h **** */
 248:Drivers/CMSIS/Include/core_cm4.h **** 
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:Drivers/CMSIS/Include/core_cm4.h ****   @{
 254:Drivers/CMSIS/Include/core_cm4.h ****  */
 255:Drivers/CMSIS/Include/core_cm4.h **** 
 256:Drivers/CMSIS/Include/core_cm4.h **** /**
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:Drivers/CMSIS/Include/core_cm4.h ****  */
 259:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 260:Drivers/CMSIS/Include/core_cm4.h **** {
 261:Drivers/CMSIS/Include/core_cm4.h ****   struct
 262:Drivers/CMSIS/Include/core_cm4.h ****   {
 263:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
ARM GAS  /tmp/cc85dWdm.s 			page 10


 266:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:Drivers/CMSIS/Include/core_cm4.h **** 
 275:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:Drivers/CMSIS/Include/core_cm4.h **** 
 279:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:Drivers/CMSIS/Include/core_cm4.h **** 
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:Drivers/CMSIS/Include/core_cm4.h **** 
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:Drivers/CMSIS/Include/core_cm4.h **** 
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:Drivers/CMSIS/Include/core_cm4.h **** 
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:Drivers/CMSIS/Include/core_cm4.h **** 
 294:Drivers/CMSIS/Include/core_cm4.h **** 
 295:Drivers/CMSIS/Include/core_cm4.h **** /**
 296:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:Drivers/CMSIS/Include/core_cm4.h ****  */
 298:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 299:Drivers/CMSIS/Include/core_cm4.h **** {
 300:Drivers/CMSIS/Include/core_cm4.h ****   struct
 301:Drivers/CMSIS/Include/core_cm4.h ****   {
 302:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:Drivers/CMSIS/Include/core_cm4.h **** 
 308:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:Drivers/CMSIS/Include/core_cm4.h **** 
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /**
 314:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:Drivers/CMSIS/Include/core_cm4.h ****  */
 316:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 317:Drivers/CMSIS/Include/core_cm4.h **** {
 318:Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:Drivers/CMSIS/Include/core_cm4.h ****   {
 320:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
ARM GAS  /tmp/cc85dWdm.s 			page 11


 323:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:Drivers/CMSIS/Include/core_cm4.h **** 
 336:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:Drivers/CMSIS/Include/core_cm4.h **** 
 340:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:Drivers/CMSIS/Include/core_cm4.h **** 
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:Drivers/CMSIS/Include/core_cm4.h **** 
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:Drivers/CMSIS/Include/core_cm4.h **** 
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:Drivers/CMSIS/Include/core_cm4.h **** 
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm4.h **** 
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm4.h **** 
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** 
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm4.h **** 
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm4.h **** 
 367:Drivers/CMSIS/Include/core_cm4.h **** 
 368:Drivers/CMSIS/Include/core_cm4.h **** /**
 369:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:Drivers/CMSIS/Include/core_cm4.h ****  */
 371:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 372:Drivers/CMSIS/Include/core_cm4.h **** {
 373:Drivers/CMSIS/Include/core_cm4.h ****   struct
 374:Drivers/CMSIS/Include/core_cm4.h ****   {
 375:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  /tmp/cc85dWdm.s 			page 12


 380:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:Drivers/CMSIS/Include/core_cm4.h **** 
 383:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:Drivers/CMSIS/Include/core_cm4.h **** 
 387:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:Drivers/CMSIS/Include/core_cm4.h **** 
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:Drivers/CMSIS/Include/core_cm4.h **** 
 393:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** 
 396:Drivers/CMSIS/Include/core_cm4.h **** /**
 397:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:Drivers/CMSIS/Include/core_cm4.h ****   @{
 401:Drivers/CMSIS/Include/core_cm4.h ****  */
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** /**
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:Drivers/CMSIS/Include/core_cm4.h ****  */
 406:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 407:Drivers/CMSIS/Include/core_cm4.h **** {
 408:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:Drivers/CMSIS/Include/core_cm4.h **** 
 423:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:Drivers/CMSIS/Include/core_cm4.h **** 
 427:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:Drivers/CMSIS/Include/core_cm4.h **** 
 429:Drivers/CMSIS/Include/core_cm4.h **** 
 430:Drivers/CMSIS/Include/core_cm4.h **** /**
 431:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:Drivers/CMSIS/Include/core_cm4.h ****   @{
 435:Drivers/CMSIS/Include/core_cm4.h ****  */
 436:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 13


 437:Drivers/CMSIS/Include/core_cm4.h **** /**
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:Drivers/CMSIS/Include/core_cm4.h ****  */
 440:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 441:Drivers/CMSIS/Include/core_cm4.h **** {
 442:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:Drivers/CMSIS/Include/core_cm4.h **** 
 465:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm4.h **** 
 469:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:Drivers/CMSIS/Include/core_cm4.h **** 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:Drivers/CMSIS/Include/core_cm4.h **** 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:Drivers/CMSIS/Include/core_cm4.h **** 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:Drivers/CMSIS/Include/core_cm4.h **** 
 481:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** 
 485:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm4.h **** 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:Drivers/CMSIS/Include/core_cm4.h **** 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 14


 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm4.h **** 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm4.h **** 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm4.h **** 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm4.h **** 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm4.h **** 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm4.h **** 
 512:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** 
 516:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm4.h **** 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** 
 538:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
ARM GAS  /tmp/cc85dWdm.s 			page 15


 551:Drivers/CMSIS/Include/core_cm4.h **** 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm4.h **** 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm4.h **** 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** 
 567:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm4.h **** 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm4.h **** 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm4.h **** 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm4.h **** 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm4.h **** 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm4.h **** 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm4.h **** 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm4.h **** 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm4.h **** 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
ARM GAS  /tmp/cc85dWdm.s 			page 16


 608:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm4.h **** 
 610:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** 
 614:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm4.h **** 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm4.h **** 
 620:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** 
 624:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm4.h **** 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm4.h **** 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm4.h **** 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm4.h **** 
 639:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm4.h **** 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm4.h **** 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm4.h **** 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm4.h **** 
 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:Drivers/CMSIS/Include/core_cm4.h **** 
 661:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 17


 665:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm4.h **** 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm4.h **** 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm4.h **** 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm4.h **** 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm4.h **** 
 680:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** 
 684:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm4.h **** 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm4.h **** 
 690:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:Drivers/CMSIS/Include/core_cm4.h **** 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:Drivers/CMSIS/Include/core_cm4.h **** 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:Drivers/CMSIS/Include/core_cm4.h **** 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:Drivers/CMSIS/Include/core_cm4.h **** 
 706:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** 
 709:Drivers/CMSIS/Include/core_cm4.h **** /**
 710:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:Drivers/CMSIS/Include/core_cm4.h ****   @{
 714:Drivers/CMSIS/Include/core_cm4.h ****  */
 715:Drivers/CMSIS/Include/core_cm4.h **** 
 716:Drivers/CMSIS/Include/core_cm4.h **** /**
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:Drivers/CMSIS/Include/core_cm4.h ****  */
 719:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 720:Drivers/CMSIS/Include/core_cm4.h **** {
 721:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
ARM GAS  /tmp/cc85dWdm.s 			page 18


 722:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:Drivers/CMSIS/Include/core_cm4.h **** 
 726:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:Drivers/CMSIS/Include/core_cm4.h **** 
 730:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:Drivers/CMSIS/Include/core_cm4.h **** 
 734:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:Drivers/CMSIS/Include/core_cm4.h **** 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:Drivers/CMSIS/Include/core_cm4.h **** 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:Drivers/CMSIS/Include/core_cm4.h **** 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:Drivers/CMSIS/Include/core_cm4.h **** 
 746:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** 
 749:Drivers/CMSIS/Include/core_cm4.h **** /**
 750:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:Drivers/CMSIS/Include/core_cm4.h ****   @{
 754:Drivers/CMSIS/Include/core_cm4.h ****  */
 755:Drivers/CMSIS/Include/core_cm4.h **** 
 756:Drivers/CMSIS/Include/core_cm4.h **** /**
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:Drivers/CMSIS/Include/core_cm4.h ****  */
 759:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 760:Drivers/CMSIS/Include/core_cm4.h **** {
 761:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:Drivers/CMSIS/Include/core_cm4.h **** 
 767:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:Drivers/CMSIS/Include/core_cm4.h **** 
 771:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:Drivers/CMSIS/Include/core_cm4.h **** 
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:Drivers/CMSIS/Include/core_cm4.h **** 
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
ARM GAS  /tmp/cc85dWdm.s 			page 19


 779:Drivers/CMSIS/Include/core_cm4.h **** 
 780:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** 
 784:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** 
 788:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** 
 792:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:Drivers/CMSIS/Include/core_cm4.h **** 
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:Drivers/CMSIS/Include/core_cm4.h **** 
 798:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** 
 801:Drivers/CMSIS/Include/core_cm4.h **** /**
 802:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:Drivers/CMSIS/Include/core_cm4.h ****   @{
 806:Drivers/CMSIS/Include/core_cm4.h ****  */
 807:Drivers/CMSIS/Include/core_cm4.h **** 
 808:Drivers/CMSIS/Include/core_cm4.h **** /**
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:Drivers/CMSIS/Include/core_cm4.h ****  */
 811:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 812:Drivers/CMSIS/Include/core_cm4.h **** {
 813:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 814:Drivers/CMSIS/Include/core_cm4.h ****   {
 815:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
ARM GAS  /tmp/cc85dWdm.s 			page 20


 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 843:Drivers/CMSIS/Include/core_cm4.h **** 
 844:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:Drivers/CMSIS/Include/core_cm4.h **** 
 848:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:Drivers/CMSIS/Include/core_cm4.h **** 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:Drivers/CMSIS/Include/core_cm4.h **** 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:Drivers/CMSIS/Include/core_cm4.h **** 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:Drivers/CMSIS/Include/core_cm4.h **** 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:Drivers/CMSIS/Include/core_cm4.h **** 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:Drivers/CMSIS/Include/core_cm4.h **** 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** 
 880:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:Drivers/CMSIS/Include/core_cm4.h **** 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:Drivers/CMSIS/Include/core_cm4.h **** 
 886:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** 
 889:Drivers/CMSIS/Include/core_cm4.h **** /**
 890:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
ARM GAS  /tmp/cc85dWdm.s 			page 21


 893:Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:Drivers/CMSIS/Include/core_cm4.h ****  */
 895:Drivers/CMSIS/Include/core_cm4.h **** 
 896:Drivers/CMSIS/Include/core_cm4.h **** /**
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:Drivers/CMSIS/Include/core_cm4.h ****  */
 899:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:Drivers/CMSIS/Include/core_cm4.h **** {
 901:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:Drivers/CMSIS/Include/core_cm4.h **** 
 926:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:Drivers/CMSIS/Include/core_cm4.h **** 
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:Drivers/CMSIS/Include/core_cm4.h **** 
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:Drivers/CMSIS/Include/core_cm4.h **** 
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
ARM GAS  /tmp/cc85dWdm.s 			page 22


 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:Drivers/CMSIS/Include/core_cm4.h **** 
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:Drivers/CMSIS/Include/core_cm4.h **** 
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:Drivers/CMSIS/Include/core_cm4.h **** 
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:Drivers/CMSIS/Include/core_cm4.h **** 
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:Drivers/CMSIS/Include/core_cm4.h **** 
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:Drivers/CMSIS/Include/core_cm4.h **** 
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:Drivers/CMSIS/Include/core_cm4.h **** 
 981:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:Drivers/CMSIS/Include/core_cm4.h **** 
 989:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:Drivers/CMSIS/Include/core_cm4.h **** 
 993:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:Drivers/CMSIS/Include/core_cm4.h **** 
1001:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:Drivers/CMSIS/Include/core_cm4.h **** 
1005:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
ARM GAS  /tmp/cc85dWdm.s 			page 23


1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:Drivers/CMSIS/Include/core_cm4.h **** 
1009:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:Drivers/CMSIS/Include/core_cm4.h **** 
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:Drivers/CMSIS/Include/core_cm4.h **** 
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:Drivers/CMSIS/Include/core_cm4.h **** 
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:Drivers/CMSIS/Include/core_cm4.h **** 
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:Drivers/CMSIS/Include/core_cm4.h **** 
1033:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** 
1036:Drivers/CMSIS/Include/core_cm4.h **** /**
1037:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:Drivers/CMSIS/Include/core_cm4.h ****   @{
1041:Drivers/CMSIS/Include/core_cm4.h ****  */
1042:Drivers/CMSIS/Include/core_cm4.h **** 
1043:Drivers/CMSIS/Include/core_cm4.h **** /**
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:Drivers/CMSIS/Include/core_cm4.h ****  */
1046:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:Drivers/CMSIS/Include/core_cm4.h **** {
1048:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
ARM GAS  /tmp/cc85dWdm.s 			page 24


1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:Drivers/CMSIS/Include/core_cm4.h **** 
1074:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:Drivers/CMSIS/Include/core_cm4.h **** 
1082:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:Drivers/CMSIS/Include/core_cm4.h **** 
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:Drivers/CMSIS/Include/core_cm4.h **** 
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:Drivers/CMSIS/Include/core_cm4.h **** 
1102:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:Drivers/CMSIS/Include/core_cm4.h **** 
1106:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:Drivers/CMSIS/Include/core_cm4.h **** 
1110:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:Drivers/CMSIS/Include/core_cm4.h **** 
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:Drivers/CMSIS/Include/core_cm4.h **** 
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
ARM GAS  /tmp/cc85dWdm.s 			page 25


1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:Drivers/CMSIS/Include/core_cm4.h **** 
1132:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:Drivers/CMSIS/Include/core_cm4.h **** 
1135:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:Drivers/CMSIS/Include/core_cm4.h **** 
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:Drivers/CMSIS/Include/core_cm4.h **** 
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:Drivers/CMSIS/Include/core_cm4.h **** 
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:Drivers/CMSIS/Include/core_cm4.h **** 
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:Drivers/CMSIS/Include/core_cm4.h **** 
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:Drivers/CMSIS/Include/core_cm4.h **** 
1157:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:Drivers/CMSIS/Include/core_cm4.h **** 
1161:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:Drivers/CMSIS/Include/core_cm4.h **** 
1164:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:Drivers/CMSIS/Include/core_cm4.h **** 
1168:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 26


1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:Drivers/CMSIS/Include/core_cm4.h **** 
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:Drivers/CMSIS/Include/core_cm4.h **** 
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:Drivers/CMSIS/Include/core_cm4.h **** 
1187:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** 
1191:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:Drivers/CMSIS/Include/core_cm4.h **** 
1194:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** 
1197:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:Drivers/CMSIS/Include/core_cm4.h **** /**
1199:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:Drivers/CMSIS/Include/core_cm4.h ****   @{
1203:Drivers/CMSIS/Include/core_cm4.h ****  */
1204:Drivers/CMSIS/Include/core_cm4.h **** 
1205:Drivers/CMSIS/Include/core_cm4.h **** /**
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:Drivers/CMSIS/Include/core_cm4.h ****  */
1208:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1209:Drivers/CMSIS/Include/core_cm4.h **** {
1210:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1222:Drivers/CMSIS/Include/core_cm4.h **** 
1223:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:Drivers/CMSIS/Include/core_cm4.h **** 
1225:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1226:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:Drivers/CMSIS/Include/core_cm4.h **** 
1229:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:Drivers/CMSIS/Include/core_cm4.h **** 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 27


1235:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1236:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** 
1239:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:Drivers/CMSIS/Include/core_cm4.h **** 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:Drivers/CMSIS/Include/core_cm4.h **** 
1245:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** 
1249:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** 
1253:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:Drivers/CMSIS/Include/core_cm4.h **** 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:Drivers/CMSIS/Include/core_cm4.h **** 
1259:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** 
1263:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:Drivers/CMSIS/Include/core_cm4.h **** 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:Drivers/CMSIS/Include/core_cm4.h **** 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:Drivers/CMSIS/Include/core_cm4.h **** 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:Drivers/CMSIS/Include/core_cm4.h **** 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:Drivers/CMSIS/Include/core_cm4.h **** 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:Drivers/CMSIS/Include/core_cm4.h **** 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:Drivers/CMSIS/Include/core_cm4.h **** 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:Drivers/CMSIS/Include/core_cm4.h **** 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:Drivers/CMSIS/Include/core_cm4.h **** 
1290:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
ARM GAS  /tmp/cc85dWdm.s 			page 28


1292:Drivers/CMSIS/Include/core_cm4.h **** 
1293:Drivers/CMSIS/Include/core_cm4.h **** 
1294:Drivers/CMSIS/Include/core_cm4.h **** /**
1295:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:Drivers/CMSIS/Include/core_cm4.h ****   @{
1299:Drivers/CMSIS/Include/core_cm4.h ****  */
1300:Drivers/CMSIS/Include/core_cm4.h **** 
1301:Drivers/CMSIS/Include/core_cm4.h **** /**
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:Drivers/CMSIS/Include/core_cm4.h ****  */
1304:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1305:Drivers/CMSIS/Include/core_cm4.h **** {
1306:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1314:Drivers/CMSIS/Include/core_cm4.h **** 
1315:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:Drivers/CMSIS/Include/core_cm4.h **** 
1319:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:Drivers/CMSIS/Include/core_cm4.h **** 
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:Drivers/CMSIS/Include/core_cm4.h **** 
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:Drivers/CMSIS/Include/core_cm4.h **** 
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:Drivers/CMSIS/Include/core_cm4.h **** 
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:Drivers/CMSIS/Include/core_cm4.h **** 
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:Drivers/CMSIS/Include/core_cm4.h **** 
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:Drivers/CMSIS/Include/core_cm4.h **** 
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:Drivers/CMSIS/Include/core_cm4.h **** 
1343:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:Drivers/CMSIS/Include/core_cm4.h **** 
1347:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
ARM GAS  /tmp/cc85dWdm.s 			page 29


1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:Drivers/CMSIS/Include/core_cm4.h **** 
1351:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:Drivers/CMSIS/Include/core_cm4.h **** 
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:Drivers/CMSIS/Include/core_cm4.h **** 
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:Drivers/CMSIS/Include/core_cm4.h **** 
1360:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:Drivers/CMSIS/Include/core_cm4.h **** 
1364:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:Drivers/CMSIS/Include/core_cm4.h **** 
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:Drivers/CMSIS/Include/core_cm4.h **** 
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:Drivers/CMSIS/Include/core_cm4.h **** 
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:Drivers/CMSIS/Include/core_cm4.h **** 
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:Drivers/CMSIS/Include/core_cm4.h **** 
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:Drivers/CMSIS/Include/core_cm4.h **** 
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:Drivers/CMSIS/Include/core_cm4.h **** 
1385:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** 
1389:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:Drivers/CMSIS/Include/core_cm4.h **** 
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:Drivers/CMSIS/Include/core_cm4.h **** 
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:Drivers/CMSIS/Include/core_cm4.h **** 
1398:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 30


1406:Drivers/CMSIS/Include/core_cm4.h **** /**
1407:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:Drivers/CMSIS/Include/core_cm4.h ****   @{
1411:Drivers/CMSIS/Include/core_cm4.h ****  */
1412:Drivers/CMSIS/Include/core_cm4.h **** 
1413:Drivers/CMSIS/Include/core_cm4.h **** /**
1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:Drivers/CMSIS/Include/core_cm4.h ****  */
1416:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1417:Drivers/CMSIS/Include/core_cm4.h **** {
1418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1423:Drivers/CMSIS/Include/core_cm4.h **** 
1424:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:Drivers/CMSIS/Include/core_cm4.h **** 
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:Drivers/CMSIS/Include/core_cm4.h **** 
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:Drivers/CMSIS/Include/core_cm4.h **** 
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:Drivers/CMSIS/Include/core_cm4.h **** 
1461:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
ARM GAS  /tmp/cc85dWdm.s 			page 31


1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** 
1465:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:Drivers/CMSIS/Include/core_cm4.h **** 
1468:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** 
1472:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:Drivers/CMSIS/Include/core_cm4.h **** 
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:Drivers/CMSIS/Include/core_cm4.h **** 
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:Drivers/CMSIS/Include/core_cm4.h **** 
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:Drivers/CMSIS/Include/core_cm4.h **** 
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:Drivers/CMSIS/Include/core_cm4.h **** 
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:Drivers/CMSIS/Include/core_cm4.h **** 
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:Drivers/CMSIS/Include/core_cm4.h **** 
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:Drivers/CMSIS/Include/core_cm4.h **** 
1508:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** 
1511:Drivers/CMSIS/Include/core_cm4.h **** /**
1512:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:Drivers/CMSIS/Include/core_cm4.h ****   @{
1516:Drivers/CMSIS/Include/core_cm4.h ****  */
1517:Drivers/CMSIS/Include/core_cm4.h **** 
1518:Drivers/CMSIS/Include/core_cm4.h **** /**
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
ARM GAS  /tmp/cc85dWdm.s 			page 32


1520:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1523:Drivers/CMSIS/Include/core_cm4.h **** */
1524:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:Drivers/CMSIS/Include/core_cm4.h **** 
1526:Drivers/CMSIS/Include/core_cm4.h **** /**
1527:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:Drivers/CMSIS/Include/core_cm4.h **** */
1532:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:Drivers/CMSIS/Include/core_cm4.h **** 
1534:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:Drivers/CMSIS/Include/core_cm4.h **** 
1536:Drivers/CMSIS/Include/core_cm4.h **** 
1537:Drivers/CMSIS/Include/core_cm4.h **** /**
1538:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:Drivers/CMSIS/Include/core_cm4.h ****   @{
1542:Drivers/CMSIS/Include/core_cm4.h ****  */
1543:Drivers/CMSIS/Include/core_cm4.h **** 
1544:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:Drivers/CMSIS/Include/core_cm4.h **** 
1554:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:Drivers/CMSIS/Include/core_cm4.h **** 
1563:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:Drivers/CMSIS/Include/core_cm4.h **** #endif
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:Drivers/CMSIS/Include/core_cm4.h **** 
1571:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** 
1574:Drivers/CMSIS/Include/core_cm4.h **** 
1575:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1576:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
ARM GAS  /tmp/cc85dWdm.s 			page 33


1577:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1578:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1579:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1580:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1581:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1582:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1583:Drivers/CMSIS/Include/core_cm4.h **** /**
1584:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:Drivers/CMSIS/Include/core_cm4.h **** */
1586:Drivers/CMSIS/Include/core_cm4.h **** 
1587:Drivers/CMSIS/Include/core_cm4.h **** 
1588:Drivers/CMSIS/Include/core_cm4.h **** 
1589:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:Drivers/CMSIS/Include/core_cm4.h **** /**
1591:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:Drivers/CMSIS/Include/core_cm4.h ****   @{
1595:Drivers/CMSIS/Include/core_cm4.h ****  */
1596:Drivers/CMSIS/Include/core_cm4.h **** 
1597:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1601:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:Drivers/CMSIS/Include/core_cm4.h **** #else
1603:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:Drivers/CMSIS/Include/core_cm4.h **** 
1617:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1621:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:Drivers/CMSIS/Include/core_cm4.h **** #else
1623:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:Drivers/CMSIS/Include/core_cm4.h **** 
1627:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:Drivers/CMSIS/Include/core_cm4.h **** 
1629:Drivers/CMSIS/Include/core_cm4.h **** 
1630:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
ARM GAS  /tmp/cc85dWdm.s 			page 34


1634:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:Drivers/CMSIS/Include/core_cm4.h **** 
1638:Drivers/CMSIS/Include/core_cm4.h **** 
1639:Drivers/CMSIS/Include/core_cm4.h **** /**
1640:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1641:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1644:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:Drivers/CMSIS/Include/core_cm4.h ****  */
1648:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:Drivers/CMSIS/Include/core_cm4.h **** {
1650:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1651:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:Drivers/CMSIS/Include/core_cm4.h **** 
1653:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:Drivers/CMSIS/Include/core_cm4.h **** }
1660:Drivers/CMSIS/Include/core_cm4.h **** 
1661:Drivers/CMSIS/Include/core_cm4.h **** 
1662:Drivers/CMSIS/Include/core_cm4.h **** /**
1663:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1664:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:Drivers/CMSIS/Include/core_cm4.h ****  */
1667:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
  37              		.loc 2 1667 26 view .LVU2
  38              	.LBB507:
1668:Drivers/CMSIS/Include/core_cm4.h **** {
1669:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  39              		.loc 2 1669 3 view .LVU3
  40              		.loc 2 1669 26 is_stmt 0 view .LVU4
  41 0000 664B     		ldr	r3, .L14
  42 0002 DA68     		ldr	r2, [r3, #12]
  43              		.loc 2 1669 11 view .LVU5
  44 0004 C2F30222 		ubfx	r2, r2, #8, #3
  45              	.LVL0:
  46              		.loc 2 1669 11 view .LVU6
  47              	.LBE507:
  48              	.LBE506:
  49              	.LBB508:
  50              	.LBI508:
1670:Drivers/CMSIS/Include/core_cm4.h **** }
1671:Drivers/CMSIS/Include/core_cm4.h **** 
1672:Drivers/CMSIS/Include/core_cm4.h **** 
1673:Drivers/CMSIS/Include/core_cm4.h **** /**
1674:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1675:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
ARM GAS  /tmp/cc85dWdm.s 			page 35


1677:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1678:Drivers/CMSIS/Include/core_cm4.h ****  */
1679:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:Drivers/CMSIS/Include/core_cm4.h **** {
1681:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:Drivers/CMSIS/Include/core_cm4.h ****   {
1683:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1684:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1685:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1686:Drivers/CMSIS/Include/core_cm4.h ****   }
1687:Drivers/CMSIS/Include/core_cm4.h **** }
1688:Drivers/CMSIS/Include/core_cm4.h **** 
1689:Drivers/CMSIS/Include/core_cm4.h **** 
1690:Drivers/CMSIS/Include/core_cm4.h **** /**
1691:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1692:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1696:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1697:Drivers/CMSIS/Include/core_cm4.h ****  */
1698:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:Drivers/CMSIS/Include/core_cm4.h **** {
1700:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:Drivers/CMSIS/Include/core_cm4.h ****   {
1702:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:Drivers/CMSIS/Include/core_cm4.h ****   }
1704:Drivers/CMSIS/Include/core_cm4.h ****   else
1705:Drivers/CMSIS/Include/core_cm4.h ****   {
1706:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1707:Drivers/CMSIS/Include/core_cm4.h ****   }
1708:Drivers/CMSIS/Include/core_cm4.h **** }
1709:Drivers/CMSIS/Include/core_cm4.h **** 
1710:Drivers/CMSIS/Include/core_cm4.h **** 
1711:Drivers/CMSIS/Include/core_cm4.h **** /**
1712:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1713:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1716:Drivers/CMSIS/Include/core_cm4.h ****  */
1717:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:Drivers/CMSIS/Include/core_cm4.h **** {
1719:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:Drivers/CMSIS/Include/core_cm4.h ****   {
1721:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1723:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1724:Drivers/CMSIS/Include/core_cm4.h ****   }
1725:Drivers/CMSIS/Include/core_cm4.h **** }
1726:Drivers/CMSIS/Include/core_cm4.h **** 
1727:Drivers/CMSIS/Include/core_cm4.h **** 
1728:Drivers/CMSIS/Include/core_cm4.h **** /**
1729:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1730:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
ARM GAS  /tmp/cc85dWdm.s 			page 36


1734:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1735:Drivers/CMSIS/Include/core_cm4.h ****  */
1736:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:Drivers/CMSIS/Include/core_cm4.h **** {
1738:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:Drivers/CMSIS/Include/core_cm4.h ****   {
1740:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:Drivers/CMSIS/Include/core_cm4.h ****   }
1742:Drivers/CMSIS/Include/core_cm4.h ****   else
1743:Drivers/CMSIS/Include/core_cm4.h ****   {
1744:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1745:Drivers/CMSIS/Include/core_cm4.h ****   }
1746:Drivers/CMSIS/Include/core_cm4.h **** }
1747:Drivers/CMSIS/Include/core_cm4.h **** 
1748:Drivers/CMSIS/Include/core_cm4.h **** 
1749:Drivers/CMSIS/Include/core_cm4.h **** /**
1750:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1751:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1754:Drivers/CMSIS/Include/core_cm4.h ****  */
1755:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:Drivers/CMSIS/Include/core_cm4.h **** {
1757:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:Drivers/CMSIS/Include/core_cm4.h ****   {
1759:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:Drivers/CMSIS/Include/core_cm4.h ****   }
1761:Drivers/CMSIS/Include/core_cm4.h **** }
1762:Drivers/CMSIS/Include/core_cm4.h **** 
1763:Drivers/CMSIS/Include/core_cm4.h **** 
1764:Drivers/CMSIS/Include/core_cm4.h **** /**
1765:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1766:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1769:Drivers/CMSIS/Include/core_cm4.h ****  */
1770:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:Drivers/CMSIS/Include/core_cm4.h **** {
1772:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:Drivers/CMSIS/Include/core_cm4.h ****   {
1774:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:Drivers/CMSIS/Include/core_cm4.h ****   }
1776:Drivers/CMSIS/Include/core_cm4.h **** }
1777:Drivers/CMSIS/Include/core_cm4.h **** 
1778:Drivers/CMSIS/Include/core_cm4.h **** 
1779:Drivers/CMSIS/Include/core_cm4.h **** /**
1780:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1781:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1784:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1785:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1786:Drivers/CMSIS/Include/core_cm4.h ****  */
1787:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:Drivers/CMSIS/Include/core_cm4.h **** {
1789:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:Drivers/CMSIS/Include/core_cm4.h ****   {
ARM GAS  /tmp/cc85dWdm.s 			page 37


1791:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:Drivers/CMSIS/Include/core_cm4.h ****   }
1793:Drivers/CMSIS/Include/core_cm4.h ****   else
1794:Drivers/CMSIS/Include/core_cm4.h ****   {
1795:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1796:Drivers/CMSIS/Include/core_cm4.h ****   }
1797:Drivers/CMSIS/Include/core_cm4.h **** }
1798:Drivers/CMSIS/Include/core_cm4.h **** 
1799:Drivers/CMSIS/Include/core_cm4.h **** 
1800:Drivers/CMSIS/Include/core_cm4.h **** /**
1801:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1802:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1805:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1807:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:Drivers/CMSIS/Include/core_cm4.h ****  */
1809:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:Drivers/CMSIS/Include/core_cm4.h **** {
1811:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:Drivers/CMSIS/Include/core_cm4.h ****   {
1813:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1814:Drivers/CMSIS/Include/core_cm4.h ****   }
1815:Drivers/CMSIS/Include/core_cm4.h ****   else
1816:Drivers/CMSIS/Include/core_cm4.h ****   {
1817:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1818:Drivers/CMSIS/Include/core_cm4.h ****   }
1819:Drivers/CMSIS/Include/core_cm4.h **** }
1820:Drivers/CMSIS/Include/core_cm4.h **** 
1821:Drivers/CMSIS/Include/core_cm4.h **** 
1822:Drivers/CMSIS/Include/core_cm4.h **** /**
1823:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1824:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1827:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1829:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:Drivers/CMSIS/Include/core_cm4.h ****  */
1831:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:Drivers/CMSIS/Include/core_cm4.h **** {
1833:Drivers/CMSIS/Include/core_cm4.h **** 
1834:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:Drivers/CMSIS/Include/core_cm4.h ****   {
1836:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:Drivers/CMSIS/Include/core_cm4.h ****   }
1838:Drivers/CMSIS/Include/core_cm4.h ****   else
1839:Drivers/CMSIS/Include/core_cm4.h ****   {
1840:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:Drivers/CMSIS/Include/core_cm4.h ****   }
1842:Drivers/CMSIS/Include/core_cm4.h **** }
1843:Drivers/CMSIS/Include/core_cm4.h **** 
1844:Drivers/CMSIS/Include/core_cm4.h **** 
1845:Drivers/CMSIS/Include/core_cm4.h **** /**
1846:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1847:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
ARM GAS  /tmp/cc85dWdm.s 			page 38


1848:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1849:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1850:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:Drivers/CMSIS/Include/core_cm4.h ****  */
1856:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
  51              		.loc 2 1856 26 is_stmt 1 view .LVU7
  52              	.LBB509:
1857:Drivers/CMSIS/Include/core_cm4.h **** {
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
  53              		.loc 2 1858 3 view .LVU8
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
  54              		.loc 2 1859 3 view .LVU9
1860:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
  55              		.loc 2 1860 3 view .LVU10
1861:Drivers/CMSIS/Include/core_cm4.h **** 
1862:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
  56              		.loc 2 1862 3 view .LVU11
  57              		.loc 2 1862 31 is_stmt 0 view .LVU12
  58 0008 C2F10703 		rsb	r3, r2, #7
  59              		.loc 2 1862 23 view .LVU13
  60 000c 042B     		cmp	r3, #4
  61 000e 28BF     		it	cs
  62 0010 0423     		movcs	r3, #4
  63              	.LVL1:
1863:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
  64              		.loc 2 1863 3 is_stmt 1 view .LVU14
  65              		.loc 2 1863 44 is_stmt 0 view .LVU15
  66 0012 111D     		adds	r1, r2, #4
  67              		.loc 2 1863 109 view .LVU16
  68 0014 0629     		cmp	r1, #6
  69 0016 40F2B480 		bls	.L8
  70 001a D11E     		subs	r1, r2, #3
  71              	.L2:
  72              	.LVL2:
1864:Drivers/CMSIS/Include/core_cm4.h **** 
1865:Drivers/CMSIS/Include/core_cm4.h ****   return (
  73              		.loc 2 1865 3 is_stmt 1 view .LVU17
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
  74              		.loc 2 1866 30 is_stmt 0 view .LVU18
  75 001c 4FF0FF32 		mov	r2, #-1
  76              	.LVL3:
  77              		.loc 2 1866 30 view .LVU19
  78 0020 02FA03F3 		lsl	r3, r2, r3
  79              	.LVL4:
  80              		.loc 2 1866 30 view .LVU20
  81 0024 DB43     		mvns	r3, r3
  82 0026 03F00303 		and	r3, r3, #3
  83              		.loc 2 1866 82 view .LVU21
  84 002a 8B40     		lsls	r3, r3, r1
1867:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
  85              		.loc 2 1867 30 view .LVU22
  86 002c 8A40     		lsls	r2, r2, r1
  87 002e D243     		mvns	r2, r2
ARM GAS  /tmp/cc85dWdm.s 			page 39


  88 0030 02F00102 		and	r2, r2, #1
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
  89              		.loc 2 1866 102 view .LVU23
  90 0034 1343     		orrs	r3, r3, r2
  91              	.LVL5:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
  92              		.loc 2 1866 102 view .LVU24
  93              	.LBE509:
  94              	.LBE508:
  95              	.LBB511:
  96              	.LBI511:
1809:Drivers/CMSIS/Include/core_cm4.h **** {
  97              		.loc 2 1809 22 is_stmt 1 view .LVU25
  98              	.LBB512:
1811:Drivers/CMSIS/Include/core_cm4.h ****   {
  99              		.loc 2 1811 3 view .LVU26
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 100              		.loc 2 1813 5 view .LVU27
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 101              		.loc 2 1813 48 is_stmt 0 view .LVU28
 102 0036 1B01     		lsls	r3, r3, #4
 103              	.LVL6:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 104              		.loc 2 1813 48 view .LVU29
 105 0038 DBB2     		uxtb	r3, r3
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 106              		.loc 2 1813 46 view .LVU30
 107 003a 594A     		ldr	r2, .L14+4
 108 003c 82F82633 		strb	r3, [r2, #806]
 109              	.LVL7:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 110              		.loc 2 1813 46 view .LVU31
 111              	.LBE512:
 112              	.LBE511:
 214:Src/main.c    ****   NVIC_EnableIRQ(USART2_IRQn);
 113              		.loc 1 214 3 is_stmt 1 view .LVU32
 114              	.LBB513:
 115              	.LBI513:
1679:Drivers/CMSIS/Include/core_cm4.h **** {
 116              		.loc 2 1679 22 view .LVU33
 117              	.LBB514:
1681:Drivers/CMSIS/Include/core_cm4.h ****   {
 118              		.loc 2 1681 3 view .LVU34
1683:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 119              		.loc 2 1683 5 view .LVU35
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 120              		.loc 2 1684 5 view .LVU36
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 121              		.loc 2 1684 43 is_stmt 0 view .LVU37
 122 0040 4023     		movs	r3, #64
 123 0042 5360     		str	r3, [r2, #4]
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 124              		.loc 2 1685 5 is_stmt 1 view .LVU38
 125              	.LVL8:
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 126              		.loc 2 1685 5 is_stmt 0 view .LVU39
 127              	.LBE514:
ARM GAS  /tmp/cc85dWdm.s 			page 40


 128              	.LBE513:
 215:Src/main.c    ****   /* DMA1_Channel1_IRQn interrupt configuration */
 216:Src/main.c    ****   NVIC_SetPriority(DMA1_Channel1_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),3, 0));
 129              		.loc 1 216 3 is_stmt 1 view .LVU40
 130              	.LBB515:
 131              	.LBI515:
1667:Drivers/CMSIS/Include/core_cm4.h **** {
 132              		.loc 2 1667 26 view .LVU41
 133              	.LBB516:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 134              		.loc 2 1669 3 view .LVU42
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 135              		.loc 2 1669 26 is_stmt 0 view .LVU43
 136 0044 554B     		ldr	r3, .L14
 137 0046 DA68     		ldr	r2, [r3, #12]
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 138              		.loc 2 1669 11 view .LVU44
 139 0048 C2F30222 		ubfx	r2, r2, #8, #3
 140              	.LVL9:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 141              		.loc 2 1669 11 view .LVU45
 142              	.LBE516:
 143              	.LBE515:
 144              	.LBB517:
 145              	.LBI517:
1856:Drivers/CMSIS/Include/core_cm4.h **** {
 146              		.loc 2 1856 26 is_stmt 1 view .LVU46
 147              	.LBB518:
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 148              		.loc 2 1858 3 view .LVU47
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 149              		.loc 2 1859 3 view .LVU48
1860:Drivers/CMSIS/Include/core_cm4.h **** 
 150              		.loc 2 1860 3 view .LVU49
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 151              		.loc 2 1862 3 view .LVU50
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 152              		.loc 2 1862 31 is_stmt 0 view .LVU51
 153 004c C2F10703 		rsb	r3, r2, #7
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 154              		.loc 2 1862 23 view .LVU52
 155 0050 042B     		cmp	r3, #4
 156 0052 28BF     		it	cs
 157 0054 0423     		movcs	r3, #4
 158 0056 1946     		mov	r1, r3
 159              	.LVL10:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 160              		.loc 2 1863 3 is_stmt 1 view .LVU53
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 161              		.loc 2 1863 44 is_stmt 0 view .LVU54
 162 0058 131D     		adds	r3, r2, #4
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 163              		.loc 2 1863 109 view .LVU55
 164 005a 062B     		cmp	r3, #6
 165 005c 40F29380 		bls	.L9
 166 0060 033A     		subs	r2, r2, #3
 167              	.LVL11:
ARM GAS  /tmp/cc85dWdm.s 			page 41


 168              	.L3:
1865:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 169              		.loc 2 1865 3 is_stmt 1 view .LVU56
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 170              		.loc 2 1866 30 is_stmt 0 view .LVU57
 171 0062 4FF0FF33 		mov	r3, #-1
 172              	.LVL12:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 173              		.loc 2 1866 30 view .LVU58
 174 0066 8B40     		lsls	r3, r3, r1
 175 0068 DB43     		mvns	r3, r3
 176 006a 03F00303 		and	r3, r3, #3
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 177              		.loc 2 1866 82 view .LVU59
 178 006e 9340     		lsls	r3, r3, r2
 179              	.LVL13:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 180              		.loc 2 1866 82 view .LVU60
 181              	.LBE518:
 182              	.LBE517:
 183              	.LBB520:
 184              	.LBI520:
1809:Drivers/CMSIS/Include/core_cm4.h **** {
 185              		.loc 2 1809 22 is_stmt 1 view .LVU61
 186              	.LBB521:
1811:Drivers/CMSIS/Include/core_cm4.h ****   {
 187              		.loc 2 1811 3 view .LVU62
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 188              		.loc 2 1813 5 view .LVU63
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 189              		.loc 2 1813 48 is_stmt 0 view .LVU64
 190 0070 1B01     		lsls	r3, r3, #4
 191              	.LVL14:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 192              		.loc 2 1813 48 view .LVU65
 193 0072 DBB2     		uxtb	r3, r3
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 194              		.loc 2 1813 46 view .LVU66
 195 0074 4A4A     		ldr	r2, .L14+4
 196              	.LVL15:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 197              		.loc 2 1813 46 view .LVU67
 198 0076 82F80B33 		strb	r3, [r2, #779]
 199              	.LVL16:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 200              		.loc 2 1813 46 view .LVU68
 201              	.LBE521:
 202              	.LBE520:
 217:Src/main.c    ****   NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 203              		.loc 1 217 3 is_stmt 1 view .LVU69
 204              	.LBB522:
 205              	.LBI522:
1679:Drivers/CMSIS/Include/core_cm4.h **** {
 206              		.loc 2 1679 22 view .LVU70
 207              	.LBB523:
1681:Drivers/CMSIS/Include/core_cm4.h ****   {
 208              		.loc 2 1681 3 view .LVU71
ARM GAS  /tmp/cc85dWdm.s 			page 42


1683:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 209              		.loc 2 1683 5 view .LVU72
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 210              		.loc 2 1684 5 view .LVU73
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 211              		.loc 2 1684 43 is_stmt 0 view .LVU74
 212 007a 4FF40063 		mov	r3, #2048
 213 007e 1360     		str	r3, [r2]
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 214              		.loc 2 1685 5 is_stmt 1 view .LVU75
 215              	.LVL17:
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 216              		.loc 2 1685 5 is_stmt 0 view .LVU76
 217              	.LBE523:
 218              	.LBE522:
 218:Src/main.c    ****   /* TIM1_BRK_TIM15_IRQn interrupt configuration */
 219:Src/main.c    ****   NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),4, 1));
 219              		.loc 1 219 3 is_stmt 1 view .LVU77
 220              	.LBB524:
 221              	.LBI524:
1667:Drivers/CMSIS/Include/core_cm4.h **** {
 222              		.loc 2 1667 26 view .LVU78
 223              	.LBB525:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 224              		.loc 2 1669 3 view .LVU79
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 225              		.loc 2 1669 26 is_stmt 0 view .LVU80
 226 0080 464B     		ldr	r3, .L14
 227 0082 DA68     		ldr	r2, [r3, #12]
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 228              		.loc 2 1669 11 view .LVU81
 229 0084 C2F30222 		ubfx	r2, r2, #8, #3
 230              	.LVL18:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 231              		.loc 2 1669 11 view .LVU82
 232              	.LBE525:
 233              	.LBE524:
 234              	.LBB526:
 235              	.LBI526:
1856:Drivers/CMSIS/Include/core_cm4.h **** {
 236              		.loc 2 1856 26 is_stmt 1 view .LVU83
 237              	.LBB527:
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 238              		.loc 2 1858 3 view .LVU84
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 239              		.loc 2 1859 3 view .LVU85
1860:Drivers/CMSIS/Include/core_cm4.h **** 
 240              		.loc 2 1860 3 view .LVU86
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 241              		.loc 2 1862 3 view .LVU87
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 242              		.loc 2 1862 31 is_stmt 0 view .LVU88
 243 0088 C2F10703 		rsb	r3, r2, #7
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 244              		.loc 2 1862 23 view .LVU89
 245 008c 042B     		cmp	r3, #4
 246 008e 28BF     		it	cs
ARM GAS  /tmp/cc85dWdm.s 			page 43


 247 0090 0423     		movcs	r3, #4
 248              	.LVL19:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 249              		.loc 2 1863 3 is_stmt 1 view .LVU90
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 250              		.loc 2 1863 44 is_stmt 0 view .LVU91
 251 0092 111D     		adds	r1, r2, #4
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 252              		.loc 2 1863 109 view .LVU92
 253 0094 0629     		cmp	r1, #6
 254 0096 78D9     		bls	.L10
 255 0098 D11E     		subs	r1, r2, #3
 256              	.L4:
 257              	.LVL20:
1865:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 258              		.loc 2 1865 3 is_stmt 1 view .LVU93
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 259              		.loc 2 1866 30 is_stmt 0 view .LVU94
 260 009a 4FF0FF32 		mov	r2, #-1
 261              	.LVL21:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 262              		.loc 2 1866 30 view .LVU95
 263 009e 02FA03F3 		lsl	r3, r2, r3
 264              	.LVL22:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 265              		.loc 2 1866 30 view .LVU96
 266 00a2 DB43     		mvns	r3, r3
 267 00a4 03F00403 		and	r3, r3, #4
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 268              		.loc 2 1866 82 view .LVU97
 269 00a8 8B40     		lsls	r3, r3, r1
 270              		.loc 2 1867 30 view .LVU98
 271 00aa 8A40     		lsls	r2, r2, r1
 272 00ac D243     		mvns	r2, r2
 273 00ae 02F00102 		and	r2, r2, #1
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 274              		.loc 2 1866 102 view .LVU99
 275 00b2 1343     		orrs	r3, r3, r2
 276              	.LVL23:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 277              		.loc 2 1866 102 view .LVU100
 278              	.LBE527:
 279              	.LBE526:
 280              	.LBB529:
 281              	.LBI529:
1809:Drivers/CMSIS/Include/core_cm4.h **** {
 282              		.loc 2 1809 22 is_stmt 1 view .LVU101
 283              	.LBB530:
1811:Drivers/CMSIS/Include/core_cm4.h ****   {
 284              		.loc 2 1811 3 view .LVU102
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 285              		.loc 2 1813 5 view .LVU103
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 286              		.loc 2 1813 48 is_stmt 0 view .LVU104
 287 00b4 1B01     		lsls	r3, r3, #4
 288              	.LVL24:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
ARM GAS  /tmp/cc85dWdm.s 			page 44


 289              		.loc 2 1813 48 view .LVU105
 290 00b6 DBB2     		uxtb	r3, r3
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 291              		.loc 2 1813 46 view .LVU106
 292 00b8 394A     		ldr	r2, .L14+4
 293 00ba 82F81833 		strb	r3, [r2, #792]
 294              	.LVL25:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 295              		.loc 2 1813 46 view .LVU107
 296              	.LBE530:
 297              	.LBE529:
 220:Src/main.c    ****   NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 298              		.loc 1 220 3 is_stmt 1 view .LVU108
 299              	.LBB531:
 300              	.LBI531:
1679:Drivers/CMSIS/Include/core_cm4.h **** {
 301              		.loc 2 1679 22 view .LVU109
 302              	.LBB532:
1681:Drivers/CMSIS/Include/core_cm4.h ****   {
 303              		.loc 2 1681 3 view .LVU110
1683:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 304              		.loc 2 1683 5 view .LVU111
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 305              		.loc 2 1684 5 view .LVU112
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 306              		.loc 2 1684 43 is_stmt 0 view .LVU113
 307 00be 4FF08073 		mov	r3, #16777216
 308 00c2 1360     		str	r3, [r2]
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 309              		.loc 2 1685 5 is_stmt 1 view .LVU114
 310              	.LVL26:
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 311              		.loc 2 1685 5 is_stmt 0 view .LVU115
 312              	.LBE532:
 313              	.LBE531:
 221:Src/main.c    ****   /* TIM1_UP_TIM16_IRQn interrupt configuration */
 222:Src/main.c    ****   NVIC_SetPriority(TIM1_UP_TIM16_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
 314              		.loc 1 222 3 is_stmt 1 view .LVU116
 315              	.LBB533:
 316              	.LBI533:
1667:Drivers/CMSIS/Include/core_cm4.h **** {
 317              		.loc 2 1667 26 view .LVU117
 318              	.LBB534:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 319              		.loc 2 1669 3 view .LVU118
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 320              		.loc 2 1669 26 is_stmt 0 view .LVU119
 321 00c4 354B     		ldr	r3, .L14
 322 00c6 D968     		ldr	r1, [r3, #12]
 323              	.LVL27:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 324              		.loc 2 1669 26 view .LVU120
 325              	.LBE534:
 326              	.LBE533:
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 327              		.loc 2 1858 3 is_stmt 1 view .LVU121
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
ARM GAS  /tmp/cc85dWdm.s 			page 45


 328              		.loc 2 1859 3 view .LVU122
1860:Drivers/CMSIS/Include/core_cm4.h **** 
 329              		.loc 2 1860 3 view .LVU123
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 330              		.loc 2 1862 3 view .LVU124
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 331              		.loc 2 1863 3 view .LVU125
1865:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 332              		.loc 2 1865 3 view .LVU126
 333              	.LBB535:
 334              	.LBI535:
1809:Drivers/CMSIS/Include/core_cm4.h **** {
 335              		.loc 2 1809 22 view .LVU127
 336              	.LBB536:
1811:Drivers/CMSIS/Include/core_cm4.h ****   {
 337              		.loc 2 1811 3 view .LVU128
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 338              		.loc 2 1813 5 view .LVU129
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 339              		.loc 2 1813 46 is_stmt 0 view .LVU130
 340 00c8 0021     		movs	r1, #0
 341 00ca 82F81913 		strb	r1, [r2, #793]
 342              	.LVL28:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 343              		.loc 2 1813 46 view .LVU131
 344              	.LBE536:
 345              	.LBE535:
 223:Src/main.c    ****   NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 346              		.loc 1 223 3 is_stmt 1 view .LVU132
 347              	.LBB537:
 348              	.LBI537:
1679:Drivers/CMSIS/Include/core_cm4.h **** {
 349              		.loc 2 1679 22 view .LVU133
 350              	.LBB538:
1681:Drivers/CMSIS/Include/core_cm4.h ****   {
 351              		.loc 2 1681 3 view .LVU134
1683:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 352              		.loc 2 1683 5 view .LVU135
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 353              		.loc 2 1684 5 view .LVU136
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 354              		.loc 2 1684 43 is_stmt 0 view .LVU137
 355 00ce 4FF00071 		mov	r1, #33554432
 356 00d2 1160     		str	r1, [r2]
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 357              		.loc 2 1685 5 is_stmt 1 view .LVU138
 358              	.LVL29:
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 359              		.loc 2 1685 5 is_stmt 0 view .LVU139
 360              	.LBE538:
 361              	.LBE537:
 224:Src/main.c    ****   /* ADC1_2_IRQn interrupt configuration */
 225:Src/main.c    ****   NVIC_SetPriority(ADC1_2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),2, 0));
 362              		.loc 1 225 3 is_stmt 1 view .LVU140
 363              	.LBB539:
 364              	.LBI539:
1667:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 46


 365              		.loc 2 1667 26 view .LVU141
 366              	.LBB540:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 367              		.loc 2 1669 3 view .LVU142
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 368              		.loc 2 1669 26 is_stmt 0 view .LVU143
 369 00d4 DA68     		ldr	r2, [r3, #12]
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 370              		.loc 2 1669 11 view .LVU144
 371 00d6 C2F30222 		ubfx	r2, r2, #8, #3
 372              	.LVL30:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 373              		.loc 2 1669 11 view .LVU145
 374              	.LBE540:
 375              	.LBE539:
 376              	.LBB541:
 377              	.LBI541:
1856:Drivers/CMSIS/Include/core_cm4.h **** {
 378              		.loc 2 1856 26 is_stmt 1 view .LVU146
 379              	.LBB542:
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 380              		.loc 2 1858 3 view .LVU147
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 381              		.loc 2 1859 3 view .LVU148
1860:Drivers/CMSIS/Include/core_cm4.h **** 
 382              		.loc 2 1860 3 view .LVU149
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 383              		.loc 2 1862 3 view .LVU150
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 384              		.loc 2 1862 31 is_stmt 0 view .LVU151
 385 00da C2F10703 		rsb	r3, r2, #7
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 386              		.loc 2 1862 23 view .LVU152
 387 00de 042B     		cmp	r3, #4
 388 00e0 28BF     		it	cs
 389 00e2 0423     		movcs	r3, #4
 390 00e4 1946     		mov	r1, r3
 391              	.LVL31:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 392              		.loc 2 1863 3 is_stmt 1 view .LVU153
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 393              		.loc 2 1863 44 is_stmt 0 view .LVU154
 394 00e6 131D     		adds	r3, r2, #4
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 395              		.loc 2 1863 109 view .LVU155
 396 00e8 062B     		cmp	r3, #6
 397 00ea 50D9     		bls	.L11
 398 00ec 033A     		subs	r2, r2, #3
 399              	.LVL32:
 400              	.L5:
1865:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 401              		.loc 2 1865 3 is_stmt 1 view .LVU156
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 402              		.loc 2 1866 30 is_stmt 0 view .LVU157
 403 00ee 4FF0FF33 		mov	r3, #-1
 404              	.LVL33:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
ARM GAS  /tmp/cc85dWdm.s 			page 47


 405              		.loc 2 1866 30 view .LVU158
 406 00f2 8B40     		lsls	r3, r3, r1
 407 00f4 DB43     		mvns	r3, r3
 408 00f6 03F00203 		and	r3, r3, #2
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 409              		.loc 2 1866 82 view .LVU159
 410 00fa 9340     		lsls	r3, r3, r2
 411              	.LVL34:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 412              		.loc 2 1866 82 view .LVU160
 413              	.LBE542:
 414              	.LBE541:
 415              	.LBB544:
 416              	.LBI544:
1809:Drivers/CMSIS/Include/core_cm4.h **** {
 417              		.loc 2 1809 22 is_stmt 1 view .LVU161
 418              	.LBB545:
1811:Drivers/CMSIS/Include/core_cm4.h ****   {
 419              		.loc 2 1811 3 view .LVU162
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 420              		.loc 2 1813 5 view .LVU163
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 421              		.loc 2 1813 48 is_stmt 0 view .LVU164
 422 00fc 1B01     		lsls	r3, r3, #4
 423              	.LVL35:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 424              		.loc 2 1813 48 view .LVU165
 425 00fe DBB2     		uxtb	r3, r3
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 426              		.loc 2 1813 46 view .LVU166
 427 0100 274A     		ldr	r2, .L14+4
 428              	.LVL36:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 429              		.loc 2 1813 46 view .LVU167
 430 0102 82F81233 		strb	r3, [r2, #786]
 431              	.LVL37:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 432              		.loc 2 1813 46 view .LVU168
 433              	.LBE545:
 434              	.LBE544:
 226:Src/main.c    ****   NVIC_EnableIRQ(ADC1_2_IRQn);
 435              		.loc 1 226 3 is_stmt 1 view .LVU169
 436              	.LBB546:
 437              	.LBI546:
1679:Drivers/CMSIS/Include/core_cm4.h **** {
 438              		.loc 2 1679 22 view .LVU170
 439              	.LBB547:
1681:Drivers/CMSIS/Include/core_cm4.h ****   {
 440              		.loc 2 1681 3 view .LVU171
1683:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 441              		.loc 2 1683 5 view .LVU172
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 442              		.loc 2 1684 5 view .LVU173
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 443              		.loc 2 1684 43 is_stmt 0 view .LVU174
 444 0106 4FF48023 		mov	r3, #262144
 445 010a 1360     		str	r3, [r2]
ARM GAS  /tmp/cc85dWdm.s 			page 48


1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 446              		.loc 2 1685 5 is_stmt 1 view .LVU175
 447              	.LVL38:
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 448              		.loc 2 1685 5 is_stmt 0 view .LVU176
 449              	.LBE547:
 450              	.LBE546:
 227:Src/main.c    ****   /* TIM4_IRQn interrupt configuration */
 228:Src/main.c    ****   NVIC_SetPriority(TIM4_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),3, 0));
 451              		.loc 1 228 3 is_stmt 1 view .LVU177
 452              	.LBB548:
 453              	.LBI548:
1667:Drivers/CMSIS/Include/core_cm4.h **** {
 454              		.loc 2 1667 26 view .LVU178
 455              	.LBB549:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 456              		.loc 2 1669 3 view .LVU179
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 457              		.loc 2 1669 26 is_stmt 0 view .LVU180
 458 010c 234B     		ldr	r3, .L14
 459 010e DA68     		ldr	r2, [r3, #12]
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 460              		.loc 2 1669 11 view .LVU181
 461 0110 C2F30222 		ubfx	r2, r2, #8, #3
 462              	.LVL39:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 463              		.loc 2 1669 11 view .LVU182
 464              	.LBE549:
 465              	.LBE548:
 466              	.LBB550:
 467              	.LBI550:
1856:Drivers/CMSIS/Include/core_cm4.h **** {
 468              		.loc 2 1856 26 is_stmt 1 view .LVU183
 469              	.LBB551:
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 470              		.loc 2 1858 3 view .LVU184
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 471              		.loc 2 1859 3 view .LVU185
1860:Drivers/CMSIS/Include/core_cm4.h **** 
 472              		.loc 2 1860 3 view .LVU186
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 473              		.loc 2 1862 3 view .LVU187
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 474              		.loc 2 1862 31 is_stmt 0 view .LVU188
 475 0114 C2F10703 		rsb	r3, r2, #7
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 476              		.loc 2 1862 23 view .LVU189
 477 0118 042B     		cmp	r3, #4
 478 011a 28BF     		it	cs
 479 011c 0423     		movcs	r3, #4
 480 011e 1946     		mov	r1, r3
 481              	.LVL40:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 482              		.loc 2 1863 3 is_stmt 1 view .LVU190
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 483              		.loc 2 1863 44 is_stmt 0 view .LVU191
 484 0120 131D     		adds	r3, r2, #4
ARM GAS  /tmp/cc85dWdm.s 			page 49


1863:Drivers/CMSIS/Include/core_cm4.h **** 
 485              		.loc 2 1863 109 view .LVU192
 486 0122 062B     		cmp	r3, #6
 487 0124 35D9     		bls	.L12
 488 0126 033A     		subs	r2, r2, #3
 489              	.LVL41:
 490              	.L6:
1865:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 491              		.loc 2 1865 3 is_stmt 1 view .LVU193
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 492              		.loc 2 1866 30 is_stmt 0 view .LVU194
 493 0128 4FF0FF33 		mov	r3, #-1
 494              	.LVL42:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 495              		.loc 2 1866 30 view .LVU195
 496 012c 8B40     		lsls	r3, r3, r1
 497 012e DB43     		mvns	r3, r3
 498 0130 03F00303 		and	r3, r3, #3
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 499              		.loc 2 1866 82 view .LVU196
 500 0134 9340     		lsls	r3, r3, r2
 501              	.LVL43:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 502              		.loc 2 1866 82 view .LVU197
 503              	.LBE551:
 504              	.LBE550:
 505              	.LBB553:
 506              	.LBI553:
1809:Drivers/CMSIS/Include/core_cm4.h **** {
 507              		.loc 2 1809 22 is_stmt 1 view .LVU198
 508              	.LBB554:
1811:Drivers/CMSIS/Include/core_cm4.h ****   {
 509              		.loc 2 1811 3 view .LVU199
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 510              		.loc 2 1813 5 view .LVU200
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 511              		.loc 2 1813 48 is_stmt 0 view .LVU201
 512 0136 1B01     		lsls	r3, r3, #4
 513              	.LVL44:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 514              		.loc 2 1813 48 view .LVU202
 515 0138 DBB2     		uxtb	r3, r3
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 516              		.loc 2 1813 46 view .LVU203
 517 013a 194A     		ldr	r2, .L14+4
 518              	.LVL45:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 519              		.loc 2 1813 46 view .LVU204
 520 013c 82F81E33 		strb	r3, [r2, #798]
 521              	.LVL46:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 522              		.loc 2 1813 46 view .LVU205
 523              	.LBE554:
 524              	.LBE553:
 229:Src/main.c    ****   NVIC_EnableIRQ(TIM4_IRQn);
 525              		.loc 1 229 3 is_stmt 1 view .LVU206
 526              	.LBB555:
ARM GAS  /tmp/cc85dWdm.s 			page 50


 527              	.LBI555:
1679:Drivers/CMSIS/Include/core_cm4.h **** {
 528              		.loc 2 1679 22 view .LVU207
 529              	.LBB556:
1681:Drivers/CMSIS/Include/core_cm4.h ****   {
 530              		.loc 2 1681 3 view .LVU208
1683:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 531              		.loc 2 1683 5 view .LVU209
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 532              		.loc 2 1684 5 view .LVU210
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 533              		.loc 2 1684 43 is_stmt 0 view .LVU211
 534 0140 4FF08043 		mov	r3, #1073741824
 535 0144 1360     		str	r3, [r2]
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 536              		.loc 2 1685 5 is_stmt 1 view .LVU212
 537              	.LVL47:
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 538              		.loc 2 1685 5 is_stmt 0 view .LVU213
 539              	.LBE556:
 540              	.LBE555:
 230:Src/main.c    ****   /* EXTI15_10_IRQn interrupt configuration */
 231:Src/main.c    ****   NVIC_SetPriority(EXTI15_10_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),3, 0));
 541              		.loc 1 231 3 is_stmt 1 view .LVU214
 542              	.LBB557:
 543              	.LBI557:
1667:Drivers/CMSIS/Include/core_cm4.h **** {
 544              		.loc 2 1667 26 view .LVU215
 545              	.LBB558:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 546              		.loc 2 1669 3 view .LVU216
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 547              		.loc 2 1669 26 is_stmt 0 view .LVU217
 548 0146 154B     		ldr	r3, .L14
 549 0148 DA68     		ldr	r2, [r3, #12]
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 550              		.loc 2 1669 11 view .LVU218
 551 014a C2F30222 		ubfx	r2, r2, #8, #3
 552              	.LVL48:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 553              		.loc 2 1669 11 view .LVU219
 554              	.LBE558:
 555              	.LBE557:
 556              	.LBB559:
 557              	.LBI559:
1856:Drivers/CMSIS/Include/core_cm4.h **** {
 558              		.loc 2 1856 26 is_stmt 1 view .LVU220
 559              	.LBB560:
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 560              		.loc 2 1858 3 view .LVU221
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 561              		.loc 2 1859 3 view .LVU222
1860:Drivers/CMSIS/Include/core_cm4.h **** 
 562              		.loc 2 1860 3 view .LVU223
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 563              		.loc 2 1862 3 view .LVU224
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
ARM GAS  /tmp/cc85dWdm.s 			page 51


 564              		.loc 2 1862 31 is_stmt 0 view .LVU225
 565 014e C2F10703 		rsb	r3, r2, #7
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 566              		.loc 2 1862 23 view .LVU226
 567 0152 042B     		cmp	r3, #4
 568 0154 28BF     		it	cs
 569 0156 0423     		movcs	r3, #4
 570 0158 1946     		mov	r1, r3
 571              	.LVL49:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 572              		.loc 2 1863 3 is_stmt 1 view .LVU227
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 573              		.loc 2 1863 44 is_stmt 0 view .LVU228
 574 015a 131D     		adds	r3, r2, #4
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 575              		.loc 2 1863 109 view .LVU229
 576 015c 062B     		cmp	r3, #6
 577 015e 1AD9     		bls	.L13
 578 0160 033A     		subs	r2, r2, #3
 579              	.LVL50:
 580              	.L7:
1865:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 581              		.loc 2 1865 3 is_stmt 1 view .LVU230
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 582              		.loc 2 1866 30 is_stmt 0 view .LVU231
 583 0162 4FF0FF33 		mov	r3, #-1
 584              	.LVL51:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 585              		.loc 2 1866 30 view .LVU232
 586 0166 8B40     		lsls	r3, r3, r1
 587 0168 DB43     		mvns	r3, r3
 588 016a 03F00303 		and	r3, r3, #3
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 589              		.loc 2 1866 82 view .LVU233
 590 016e 9340     		lsls	r3, r3, r2
 591              	.LVL52:
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 592              		.loc 2 1866 82 view .LVU234
 593              	.LBE560:
 594              	.LBE559:
 595              	.LBB562:
 596              	.LBI562:
1809:Drivers/CMSIS/Include/core_cm4.h **** {
 597              		.loc 2 1809 22 is_stmt 1 view .LVU235
 598              	.LBB563:
1811:Drivers/CMSIS/Include/core_cm4.h ****   {
 599              		.loc 2 1811 3 view .LVU236
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 600              		.loc 2 1813 5 view .LVU237
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 601              		.loc 2 1813 48 is_stmt 0 view .LVU238
 602 0170 1B01     		lsls	r3, r3, #4
 603              	.LVL53:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 604              		.loc 2 1813 48 view .LVU239
 605 0172 DBB2     		uxtb	r3, r3
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
ARM GAS  /tmp/cc85dWdm.s 			page 52


 606              		.loc 2 1813 46 view .LVU240
 607 0174 0A4A     		ldr	r2, .L14+4
 608              	.LVL54:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 609              		.loc 2 1813 46 view .LVU241
 610 0176 82F82833 		strb	r3, [r2, #808]
 611              	.LVL55:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 612              		.loc 2 1813 46 view .LVU242
 613              	.LBE563:
 614              	.LBE562:
 232:Src/main.c    ****   NVIC_EnableIRQ(EXTI15_10_IRQn);
 615              		.loc 1 232 3 is_stmt 1 view .LVU243
 616              	.LBB564:
 617              	.LBI564:
1679:Drivers/CMSIS/Include/core_cm4.h **** {
 618              		.loc 2 1679 22 view .LVU244
 619              	.LBB565:
1681:Drivers/CMSIS/Include/core_cm4.h ****   {
 620              		.loc 2 1681 3 view .LVU245
1683:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 621              		.loc 2 1683 5 view .LVU246
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 622              		.loc 2 1684 5 view .LVU247
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 623              		.loc 2 1684 43 is_stmt 0 view .LVU248
 624 017a 4FF48073 		mov	r3, #256
 625 017e 5360     		str	r3, [r2, #4]
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 626              		.loc 2 1685 5 is_stmt 1 view .LVU249
 627              	.LVL56:
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 628              		.loc 2 1685 5 is_stmt 0 view .LVU250
 629              	.LBE565:
 630              	.LBE564:
 233:Src/main.c    **** }
 631              		.loc 1 233 1 view .LVU251
 632 0180 7047     		bx	lr
 633              	.LVL57:
 634              	.L8:
 635              	.LBB566:
 636              	.LBB510:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 637              		.loc 2 1863 109 view .LVU252
 638 0182 0021     		movs	r1, #0
 639 0184 4AE7     		b	.L2
 640              	.LVL58:
 641              	.L9:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 642              		.loc 2 1863 109 view .LVU253
 643              	.LBE510:
 644              	.LBE566:
 645              	.LBB567:
 646              	.LBB519:
 647 0186 0022     		movs	r2, #0
 648              	.LVL59:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 53


 649              		.loc 2 1863 109 view .LVU254
 650 0188 6BE7     		b	.L3
 651              	.LVL60:
 652              	.L10:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 653              		.loc 2 1863 109 view .LVU255
 654              	.LBE519:
 655              	.LBE567:
 656              	.LBB568:
 657              	.LBB528:
 658 018a 0021     		movs	r1, #0
 659 018c 85E7     		b	.L4
 660              	.LVL61:
 661              	.L11:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 662              		.loc 2 1863 109 view .LVU256
 663              	.LBE528:
 664              	.LBE568:
 665              	.LBB569:
 666              	.LBB543:
 667 018e 0022     		movs	r2, #0
 668              	.LVL62:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 669              		.loc 2 1863 109 view .LVU257
 670 0190 ADE7     		b	.L5
 671              	.LVL63:
 672              	.L12:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 673              		.loc 2 1863 109 view .LVU258
 674              	.LBE543:
 675              	.LBE569:
 676              	.LBB570:
 677              	.LBB552:
 678 0192 0022     		movs	r2, #0
 679              	.LVL64:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 680              		.loc 2 1863 109 view .LVU259
 681 0194 C8E7     		b	.L6
 682              	.LVL65:
 683              	.L13:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 684              		.loc 2 1863 109 view .LVU260
 685              	.LBE552:
 686              	.LBE570:
 687              	.LBB571:
 688              	.LBB561:
 689 0196 0022     		movs	r2, #0
 690              	.LVL66:
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 691              		.loc 2 1863 109 view .LVU261
 692 0198 E3E7     		b	.L7
 693              	.L15:
 694 019a 00BF     		.align	2
 695              	.L14:
 696 019c 00ED00E0 		.word	-536810240
 697 01a0 00E100E0 		.word	-536813312
 698              	.LBE561:
ARM GAS  /tmp/cc85dWdm.s 			page 54


 699              	.LBE571:
 700              		.cfi_endproc
 701              	.LFE1624:
 703              		.section	.text.MX_CORDIC_Init,"ax",%progbits
 704              		.align	1
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv4-sp-d16
 710              	MX_CORDIC_Init:
 711              	.LFB1630:
 234:Src/main.c    **** 
 235:Src/main.c    **** /**
 236:Src/main.c    ****   * @brief ADC1 Initialization Function
 237:Src/main.c    ****   * @param None
 238:Src/main.c    ****   * @retval None
 239:Src/main.c    ****   */
 240:Src/main.c    **** static void MX_ADC1_Init(void)
 241:Src/main.c    **** {
 242:Src/main.c    **** 
 243:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 246:Src/main.c    **** 
 247:Src/main.c    ****   LL_ADC_InitTypeDef ADC_InitStruct = {0};
 248:Src/main.c    ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 249:Src/main.c    ****   LL_ADC_CommonInitTypeDef ADC_CommonInitStruct = {0};
 250:Src/main.c    ****   LL_ADC_INJ_InitTypeDef ADC_INJ_InitStruct = {0};
 251:Src/main.c    **** 
 252:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 253:Src/main.c    **** 
 254:Src/main.c    ****   LL_RCC_SetADCClockSource(LL_RCC_ADC12_CLKSOURCE_PLL);
 255:Src/main.c    **** 
 256:Src/main.c    ****   /* Peripheral clock enable */
 257:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_ADC12);
 258:Src/main.c    **** 
 259:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 260:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
 261:Src/main.c    ****   /**ADC1 GPIO Configuration
 262:Src/main.c    ****   PA0   ------> ADC1_IN1
 263:Src/main.c    ****   PA2   ------> ADC1_IN3
 264:Src/main.c    ****   PB1   ------> ADC1_IN12
 265:Src/main.c    ****   PB14   ------> ADC1_IN5
 266:Src/main.c    ****   */
 267:Src/main.c    ****   GPIO_InitStruct.Pin = M1_BUS_VOLTAGE_Pin;
 268:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 269:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 270:Src/main.c    ****   LL_GPIO_Init(M1_BUS_VOLTAGE_GPIO_Port, &GPIO_InitStruct);
 271:Src/main.c    **** 
 272:Src/main.c    ****   GPIO_InitStruct.Pin = M1_OPAMP1_OUT_Pin;
 273:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 274:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 275:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP1_OUT_GPIO_Port, &GPIO_InitStruct);
 276:Src/main.c    **** 
 277:Src/main.c    ****   GPIO_InitStruct.Pin = M1_OPAMP3_OUT_Pin;
 278:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 279:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
ARM GAS  /tmp/cc85dWdm.s 			page 55


 280:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP3_OUT_GPIO_Port, &GPIO_InitStruct);
 281:Src/main.c    **** 
 282:Src/main.c    ****   GPIO_InitStruct.Pin = M1_TEMPERATURE_Pin;
 283:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 284:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 285:Src/main.c    ****   LL_GPIO_Init(M1_TEMPERATURE_GPIO_Port, &GPIO_InitStruct);
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 290:Src/main.c    **** 
 291:Src/main.c    ****   /** Common config
 292:Src/main.c    ****   */
 293:Src/main.c    ****   ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 294:Src/main.c    ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_LEFT;
 295:Src/main.c    ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 296:Src/main.c    ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 297:Src/main.c    ****   ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
 298:Src/main.c    ****   ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS;
 299:Src/main.c    ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 300:Src/main.c    ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 301:Src/main.c    ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 302:Src/main.c    ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 303:Src/main.c    ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 304:Src/main.c    ****   LL_ADC_SetGainCompensation(ADC1, 0);
 305:Src/main.c    ****   LL_ADC_SetOverSamplingScope(ADC1, LL_ADC_OVS_DISABLE);
 306:Src/main.c    ****   ADC_CommonInitStruct.CommonClock = LL_ADC_CLOCK_ASYNC_DIV1;
 307:Src/main.c    ****   ADC_CommonInitStruct.Multimode = LL_ADC_MULTI_INDEPENDENT;
 308:Src/main.c    ****   LL_ADC_CommonInit(__LL_ADC_COMMON_INSTANCE(ADC1), &ADC_CommonInitStruct);
 309:Src/main.c    ****   ADC_INJ_InitStruct.TriggerSource = LL_ADC_INJ_TRIG_EXT_TIM1_CH4;
 310:Src/main.c    ****   ADC_INJ_InitStruct.SequencerLength = LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS;
 311:Src/main.c    ****   ADC_INJ_InitStruct.SequencerDiscont = LL_ADC_INJ_SEQ_DISCONT_DISABLE;
 312:Src/main.c    ****   ADC_INJ_InitStruct.TrigAuto = LL_ADC_INJ_TRIG_INDEPENDENT;
 313:Src/main.c    ****   LL_ADC_INJ_Init(ADC1, &ADC_INJ_InitStruct);
 314:Src/main.c    ****   LL_ADC_INJ_SetQueueMode(ADC1, LL_ADC_INJ_QUEUE_DISABLE);
 315:Src/main.c    ****   LL_ADC_INJ_SetTriggerEdge(ADC1, LL_ADC_INJ_TRIG_EXT_RISING);
 316:Src/main.c    **** 
 317:Src/main.c    ****   /* Disable ADC deep power down (enabled by default after reset state) */
 318:Src/main.c    ****   LL_ADC_DisableDeepPowerDown(ADC1);
 319:Src/main.c    ****   /* Enable ADC internal voltage regulator */
 320:Src/main.c    ****   LL_ADC_EnableInternalRegulator(ADC1);
 321:Src/main.c    ****   /* Delay for ADC internal voltage regulator stabilization. */
 322:Src/main.c    ****   /* Compute number of CPU cycles to wait for, from delay in us. */
 323:Src/main.c    ****   /* Note: Variable divided by 2 to compensate partially */
 324:Src/main.c    ****   /* CPU processing cycles (depends on compilation optimization). */
 325:Src/main.c    ****   /* Note: If system core clock frequency is below 200kHz, wait time */
 326:Src/main.c    ****   /* is only a few CPU processing cycles. */
 327:Src/main.c    ****   uint32_t wait_loop_index;
 328:Src/main.c    ****   wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US * (SystemCoreClock / (100000 * 2))) / 10)
 329:Src/main.c    ****   while(wait_loop_index != 0)
 330:Src/main.c    ****   {
 331:Src/main.c    ****     wait_loop_index--;
 332:Src/main.c    ****   }
 333:Src/main.c    **** 
 334:Src/main.c    ****   /** Configure Injected Channel
 335:Src/main.c    ****   */
 336:Src/main.c    ****   LL_ADC_INJ_SetSequencerRanks(ADC1, LL_ADC_INJ_RANK_1, LL_ADC_CHANNEL_3);
ARM GAS  /tmp/cc85dWdm.s 			page 56


 337:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_3, LL_ADC_SAMPLINGTIME_6CYCLES_5);
 338:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC1, LL_ADC_CHANNEL_3, LL_ADC_SINGLE_ENDED);
 339:Src/main.c    **** 
 340:Src/main.c    ****   /** Configure Injected Channel
 341:Src/main.c    ****   */
 342:Src/main.c    ****   LL_ADC_INJ_SetSequencerRanks(ADC1, LL_ADC_INJ_RANK_2, LL_ADC_CHANNEL_12);
 343:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_12, LL_ADC_SAMPLINGTIME_6CYCLES_5);
 344:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC1, LL_ADC_CHANNEL_12, LL_ADC_SINGLE_ENDED);
 345:Src/main.c    **** 
 346:Src/main.c    ****   /** Configure Regular Channel
 347:Src/main.c    ****   */
 348:Src/main.c    ****   LL_ADC_REG_SetSequencerRanks(ADC1, LL_ADC_REG_RANK_1, LL_ADC_CHANNEL_1);
 349:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_1, LL_ADC_SAMPLINGTIME_47CYCLES_5);
 350:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC1, LL_ADC_CHANNEL_1, LL_ADC_SINGLE_ENDED);
 351:Src/main.c    **** 
 352:Src/main.c    ****   /** Configure Regular Channel
 353:Src/main.c    ****   */
 354:Src/main.c    ****   LL_ADC_REG_SetSequencerRanks(ADC1, LL_ADC_REG_RANK_2, LL_ADC_CHANNEL_5);
 355:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_5, LL_ADC_SAMPLINGTIME_47CYCLES_5);
 356:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC1, LL_ADC_CHANNEL_5, LL_ADC_SINGLE_ENDED);
 357:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 358:Src/main.c    **** 
 359:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 360:Src/main.c    **** 
 361:Src/main.c    **** }
 362:Src/main.c    **** 
 363:Src/main.c    **** /**
 364:Src/main.c    ****   * @brief ADC2 Initialization Function
 365:Src/main.c    ****   * @param None
 366:Src/main.c    ****   * @retval None
 367:Src/main.c    ****   */
 368:Src/main.c    **** static void MX_ADC2_Init(void)
 369:Src/main.c    **** {
 370:Src/main.c    **** 
 371:Src/main.c    ****   /* USER CODE BEGIN ADC2_Init 0 */
 372:Src/main.c    **** 
 373:Src/main.c    ****   /* USER CODE END ADC2_Init 0 */
 374:Src/main.c    **** 
 375:Src/main.c    ****   LL_ADC_InitTypeDef ADC_InitStruct = {0};
 376:Src/main.c    ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 377:Src/main.c    ****   LL_ADC_INJ_InitTypeDef ADC_INJ_InitStruct = {0};
 378:Src/main.c    **** 
 379:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 380:Src/main.c    **** 
 381:Src/main.c    ****   LL_RCC_SetADCClockSource(LL_RCC_ADC12_CLKSOURCE_PLL);
 382:Src/main.c    **** 
 383:Src/main.c    ****   /* Peripheral clock enable */
 384:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_ADC12);
 385:Src/main.c    **** 
 386:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 387:Src/main.c    ****   /**ADC2 GPIO Configuration
 388:Src/main.c    ****   PA6   ------> ADC2_IN3
 389:Src/main.c    ****   */
 390:Src/main.c    ****   GPIO_InitStruct.Pin = M1_OPAMP2_OUT_Pin;
 391:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 392:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 393:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP2_OUT_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/cc85dWdm.s 			page 57


 394:Src/main.c    **** 
 395:Src/main.c    ****   /* USER CODE BEGIN ADC2_Init 1 */
 396:Src/main.c    **** 
 397:Src/main.c    ****   /* USER CODE END ADC2_Init 1 */
 398:Src/main.c    **** 
 399:Src/main.c    ****   /** Common config
 400:Src/main.c    ****   */
 401:Src/main.c    ****   ADC_InitStruct.Resolution = LL_ADC_RESOLUTION_12B;
 402:Src/main.c    ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_LEFT;
 403:Src/main.c    ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 404:Src/main.c    ****   LL_ADC_Init(ADC2, &ADC_InitStruct);
 405:Src/main.c    ****   ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_DISABLE;
 406:Src/main.c    ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 407:Src/main.c    ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 408:Src/main.c    ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 409:Src/main.c    ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 410:Src/main.c    ****   LL_ADC_REG_Init(ADC2, &ADC_REG_InitStruct);
 411:Src/main.c    ****   LL_ADC_SetGainCompensation(ADC2, 0);
 412:Src/main.c    ****   LL_ADC_SetOverSamplingScope(ADC2, LL_ADC_OVS_DISABLE);
 413:Src/main.c    ****   ADC_INJ_InitStruct.TriggerSource = LL_ADC_INJ_TRIG_EXT_TIM1_CH4;
 414:Src/main.c    ****   ADC_INJ_InitStruct.SequencerLength = LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS;
 415:Src/main.c    ****   ADC_INJ_InitStruct.SequencerDiscont = LL_ADC_INJ_SEQ_DISCONT_DISABLE;
 416:Src/main.c    ****   ADC_INJ_InitStruct.TrigAuto = LL_ADC_INJ_TRIG_INDEPENDENT;
 417:Src/main.c    ****   LL_ADC_INJ_Init(ADC2, &ADC_INJ_InitStruct);
 418:Src/main.c    ****   LL_ADC_INJ_SetQueueMode(ADC2, LL_ADC_INJ_QUEUE_DISABLE);
 419:Src/main.c    ****   LL_ADC_INJ_SetTriggerEdge(ADC2, LL_ADC_INJ_TRIG_EXT_RISING);
 420:Src/main.c    **** 
 421:Src/main.c    ****   /* Disable ADC deep power down (enabled by default after reset state) */
 422:Src/main.c    ****   LL_ADC_DisableDeepPowerDown(ADC2);
 423:Src/main.c    ****   /* Enable ADC internal voltage regulator */
 424:Src/main.c    ****   LL_ADC_EnableInternalRegulator(ADC2);
 425:Src/main.c    ****   /* Delay for ADC internal voltage regulator stabilization. */
 426:Src/main.c    ****   /* Compute number of CPU cycles to wait for, from delay in us. */
 427:Src/main.c    ****   /* Note: Variable divided by 2 to compensate partially */
 428:Src/main.c    ****   /* CPU processing cycles (depends on compilation optimization). */
 429:Src/main.c    ****   /* Note: If system core clock frequency is below 200kHz, wait time */
 430:Src/main.c    ****   /* is only a few CPU processing cycles. */
 431:Src/main.c    ****   uint32_t wait_loop_index;
 432:Src/main.c    ****   wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US * (SystemCoreClock / (100000 * 2))) / 10)
 433:Src/main.c    ****   while(wait_loop_index != 0)
 434:Src/main.c    ****   {
 435:Src/main.c    ****     wait_loop_index--;
 436:Src/main.c    ****   }
 437:Src/main.c    **** 
 438:Src/main.c    ****   /** Configure Injected Channel
 439:Src/main.c    ****   */
 440:Src/main.c    ****   LL_ADC_INJ_SetSequencerRanks(ADC2, LL_ADC_INJ_RANK_1, LL_ADC_CHANNEL_3);
 441:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC2, LL_ADC_CHANNEL_3, LL_ADC_SAMPLINGTIME_6CYCLES_5);
 442:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC2, LL_ADC_CHANNEL_3, LL_ADC_SINGLE_ENDED);
 443:Src/main.c    **** 
 444:Src/main.c    ****   /** Configure Injected Channel
 445:Src/main.c    ****   */
 446:Src/main.c    ****   LL_ADC_INJ_SetSequencerRanks(ADC2, LL_ADC_INJ_RANK_2, LL_ADC_CHANNEL_VOPAMP3_ADC2);
 447:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC2, LL_ADC_CHANNEL_VOPAMP3_ADC2, LL_ADC_SAMPLINGTIME_6CYCLES_5);
 448:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC2, LL_ADC_CHANNEL_VOPAMP3_ADC2, LL_ADC_SINGLE_ENDED);
 449:Src/main.c    ****   /* USER CODE BEGIN ADC2_Init 2 */
 450:Src/main.c    **** 
ARM GAS  /tmp/cc85dWdm.s 			page 58


 451:Src/main.c    ****   /* USER CODE END ADC2_Init 2 */
 452:Src/main.c    **** 
 453:Src/main.c    **** }
 454:Src/main.c    **** 
 455:Src/main.c    **** /**
 456:Src/main.c    ****   * @brief COMP1 Initialization Function
 457:Src/main.c    ****   * @param None
 458:Src/main.c    ****   * @retval None
 459:Src/main.c    ****   */
 460:Src/main.c    **** static void MX_COMP1_Init(void)
 461:Src/main.c    **** {
 462:Src/main.c    **** 
 463:Src/main.c    ****   /* USER CODE BEGIN COMP1_Init 0 */
 464:Src/main.c    **** 
 465:Src/main.c    ****   /* USER CODE END COMP1_Init 0 */
 466:Src/main.c    **** 
 467:Src/main.c    ****   LL_COMP_InitTypeDef COMP_InitStruct = {0};
 468:Src/main.c    **** 
 469:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 470:Src/main.c    **** 
 471:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 472:Src/main.c    ****   /**COMP1 GPIO Configuration
 473:Src/main.c    ****   PA1   ------> COMP1_INP
 474:Src/main.c    ****   */
 475:Src/main.c    ****   GPIO_InitStruct.Pin = M1_CURR_SHUNT_U_Pin;
 476:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 477:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 478:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_U_GPIO_Port, &GPIO_InitStruct);
 479:Src/main.c    **** 
 480:Src/main.c    ****   /* USER CODE BEGIN COMP1_Init 1 */
 481:Src/main.c    **** 
 482:Src/main.c    ****   /* USER CODE END COMP1_Init 1 */
 483:Src/main.c    ****   COMP_InitStruct.InputPlus = LL_COMP_INPUT_PLUS_IO1;
 484:Src/main.c    ****   COMP_InitStruct.InputMinus = LL_COMP_INPUT_MINUS_DAC3_CH1;
 485:Src/main.c    ****   COMP_InitStruct.InputHysteresis = LL_COMP_HYSTERESIS_NONE;
 486:Src/main.c    ****   COMP_InitStruct.OutputPolarity = LL_COMP_OUTPUTPOL_NONINVERTED;
 487:Src/main.c    ****   COMP_InitStruct.OutputBlankingSource = LL_COMP_BLANKINGSRC_NONE;
 488:Src/main.c    ****   LL_COMP_Init(COMP1, &COMP_InitStruct);
 489:Src/main.c    **** 
 490:Src/main.c    ****   /* Wait loop initialization and execution */
 491:Src/main.c    ****   /* Note: Variable divided by 2 to compensate partially CPU processing cycles */
 492:Src/main.c    ****   __IO uint32_t wait_loop_index = 0;
 493:Src/main.c    ****   wait_loop_index = (LL_COMP_DELAY_VOLTAGE_SCALER_STAB_US * (SystemCoreClock / (1000000 * 2)));
 494:Src/main.c    ****   while(wait_loop_index != 0)
 495:Src/main.c    ****   {
 496:Src/main.c    ****     wait_loop_index--;
 497:Src/main.c    ****   }
 498:Src/main.c    ****   LL_EXTI_DisableEvent_0_31(LL_EXTI_LINE_21);
 499:Src/main.c    ****   LL_EXTI_DisableIT_0_31(LL_EXTI_LINE_21);
 500:Src/main.c    ****   /* USER CODE BEGIN COMP1_Init 2 */
 501:Src/main.c    **** 
 502:Src/main.c    ****   /* USER CODE END COMP1_Init 2 */
 503:Src/main.c    **** 
 504:Src/main.c    **** }
 505:Src/main.c    **** 
 506:Src/main.c    **** /**
 507:Src/main.c    ****   * @brief COMP2 Initialization Function
ARM GAS  /tmp/cc85dWdm.s 			page 59


 508:Src/main.c    ****   * @param None
 509:Src/main.c    ****   * @retval None
 510:Src/main.c    ****   */
 511:Src/main.c    **** static void MX_COMP2_Init(void)
 512:Src/main.c    **** {
 513:Src/main.c    **** 
 514:Src/main.c    ****   /* USER CODE BEGIN COMP2_Init 0 */
 515:Src/main.c    **** 
 516:Src/main.c    ****   /* USER CODE END COMP2_Init 0 */
 517:Src/main.c    **** 
 518:Src/main.c    ****   LL_COMP_InitTypeDef COMP_InitStruct = {0};
 519:Src/main.c    **** 
 520:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 521:Src/main.c    **** 
 522:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 523:Src/main.c    ****   /**COMP2 GPIO Configuration
 524:Src/main.c    ****   PA7   ------> COMP2_INP
 525:Src/main.c    ****   */
 526:Src/main.c    ****   GPIO_InitStruct.Pin = M1_CURR_SHUNT_V_Pin;
 527:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 528:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 529:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_V_GPIO_Port, &GPIO_InitStruct);
 530:Src/main.c    **** 
 531:Src/main.c    ****   /* USER CODE BEGIN COMP2_Init 1 */
 532:Src/main.c    **** 
 533:Src/main.c    ****   /* USER CODE END COMP2_Init 1 */
 534:Src/main.c    ****   COMP_InitStruct.InputPlus = LL_COMP_INPUT_PLUS_IO1;
 535:Src/main.c    ****   COMP_InitStruct.InputMinus = LL_COMP_INPUT_MINUS_DAC3_CH2;
 536:Src/main.c    ****   COMP_InitStruct.InputHysteresis = LL_COMP_HYSTERESIS_NONE;
 537:Src/main.c    ****   COMP_InitStruct.OutputPolarity = LL_COMP_OUTPUTPOL_NONINVERTED;
 538:Src/main.c    ****   COMP_InitStruct.OutputBlankingSource = LL_COMP_BLANKINGSRC_NONE;
 539:Src/main.c    ****   LL_COMP_Init(COMP2, &COMP_InitStruct);
 540:Src/main.c    **** 
 541:Src/main.c    ****   /* Wait loop initialization and execution */
 542:Src/main.c    ****   /* Note: Variable divided by 2 to compensate partially CPU processing cycles */
 543:Src/main.c    ****   __IO uint32_t wait_loop_index = 0;
 544:Src/main.c    ****   wait_loop_index = (LL_COMP_DELAY_VOLTAGE_SCALER_STAB_US * (SystemCoreClock / (1000000 * 2)));
 545:Src/main.c    ****   while(wait_loop_index != 0)
 546:Src/main.c    ****   {
 547:Src/main.c    ****     wait_loop_index--;
 548:Src/main.c    ****   }
 549:Src/main.c    ****   LL_EXTI_DisableEvent_0_31(LL_EXTI_LINE_22);
 550:Src/main.c    ****   LL_EXTI_DisableIT_0_31(LL_EXTI_LINE_22);
 551:Src/main.c    ****   /* USER CODE BEGIN COMP2_Init 2 */
 552:Src/main.c    **** 
 553:Src/main.c    ****   /* USER CODE END COMP2_Init 2 */
 554:Src/main.c    **** 
 555:Src/main.c    **** }
 556:Src/main.c    **** 
 557:Src/main.c    **** /**
 558:Src/main.c    ****   * @brief COMP4 Initialization Function
 559:Src/main.c    ****   * @param None
 560:Src/main.c    ****   * @retval None
 561:Src/main.c    ****   */
 562:Src/main.c    **** static void MX_COMP4_Init(void)
 563:Src/main.c    **** {
 564:Src/main.c    **** 
ARM GAS  /tmp/cc85dWdm.s 			page 60


 565:Src/main.c    ****   /* USER CODE BEGIN COMP4_Init 0 */
 566:Src/main.c    **** 
 567:Src/main.c    ****   /* USER CODE END COMP4_Init 0 */
 568:Src/main.c    **** 
 569:Src/main.c    ****   LL_COMP_InitTypeDef COMP_InitStruct = {0};
 570:Src/main.c    **** 
 571:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 572:Src/main.c    **** 
 573:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
 574:Src/main.c    ****   /**COMP4 GPIO Configuration
 575:Src/main.c    ****   PB0   ------> COMP4_INP
 576:Src/main.c    ****   */
 577:Src/main.c    ****   GPIO_InitStruct.Pin = M1_CURR_SHUNT_W_Pin;
 578:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 579:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 580:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_W_GPIO_Port, &GPIO_InitStruct);
 581:Src/main.c    **** 
 582:Src/main.c    ****   /* USER CODE BEGIN COMP4_Init 1 */
 583:Src/main.c    **** 
 584:Src/main.c    ****   /* USER CODE END COMP4_Init 1 */
 585:Src/main.c    ****   COMP_InitStruct.InputPlus = LL_COMP_INPUT_PLUS_IO1;
 586:Src/main.c    ****   COMP_InitStruct.InputMinus = LL_COMP_INPUT_MINUS_DAC3_CH2;
 587:Src/main.c    ****   COMP_InitStruct.InputHysteresis = LL_COMP_HYSTERESIS_NONE;
 588:Src/main.c    ****   COMP_InitStruct.OutputPolarity = LL_COMP_OUTPUTPOL_NONINVERTED;
 589:Src/main.c    ****   COMP_InitStruct.OutputBlankingSource = LL_COMP_BLANKINGSRC_NONE;
 590:Src/main.c    ****   LL_COMP_Init(COMP4, &COMP_InitStruct);
 591:Src/main.c    **** 
 592:Src/main.c    ****   /* Wait loop initialization and execution */
 593:Src/main.c    ****   /* Note: Variable divided by 2 to compensate partially CPU processing cycles */
 594:Src/main.c    ****   __IO uint32_t wait_loop_index = 0;
 595:Src/main.c    ****   wait_loop_index = (LL_COMP_DELAY_VOLTAGE_SCALER_STAB_US * (SystemCoreClock / (1000000 * 2)));
 596:Src/main.c    ****   while(wait_loop_index != 0)
 597:Src/main.c    ****   {
 598:Src/main.c    ****     wait_loop_index--;
 599:Src/main.c    ****   }
 600:Src/main.c    ****   LL_EXTI_DisableEvent_0_31(LL_EXTI_LINE_30);
 601:Src/main.c    ****   LL_EXTI_DisableIT_0_31(LL_EXTI_LINE_30);
 602:Src/main.c    ****   /* USER CODE BEGIN COMP4_Init 2 */
 603:Src/main.c    **** 
 604:Src/main.c    ****   /* USER CODE END COMP4_Init 2 */
 605:Src/main.c    **** 
 606:Src/main.c    **** }
 607:Src/main.c    **** 
 608:Src/main.c    **** /**
 609:Src/main.c    ****   * @brief CORDIC Initialization Function
 610:Src/main.c    ****   * @param None
 611:Src/main.c    ****   * @retval None
 612:Src/main.c    ****   */
 613:Src/main.c    **** static void MX_CORDIC_Init(void)
 614:Src/main.c    **** {
 712              		.loc 1 614 1 is_stmt 1 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 8
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 82B0     		sub	sp, sp, #8
 718              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc85dWdm.s 			page 61


 615:Src/main.c    **** 
 616:Src/main.c    ****   /* USER CODE BEGIN CORDIC_Init 0 */
 617:Src/main.c    **** 
 618:Src/main.c    ****   /* USER CODE END CORDIC_Init 0 */
 619:Src/main.c    **** 
 620:Src/main.c    ****   /* Peripheral clock enable */
 621:Src/main.c    ****   LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_CORDIC);
 719              		.loc 1 621 3 view .LVU263
 720              	.LVL67:
 721              	.LBB572:
 722              	.LBI572:
 723              		.file 3 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @file    stm32g4xx_ll_bus.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****     [..]
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****     [..]
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @attention
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * Copyright (c) 2019 STMicroelectronics.
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * All rights reserved.
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * This software is licensed under terms that can be found in the LICENSE file in
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * the root directory of this software component.
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   ******************************************************************************
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #ifndef STM32G4xx_LL_BUS_H
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define STM32G4xx_LL_BUS_H
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #ifdef __cplusplus
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** extern "C" {
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #include "stm32g4xx.h"
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 62


  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @addtogroup STM32G4xx_LL_Driver
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(RCC)
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHB1ENR_DMA1EN
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHB1ENR_DMA2EN
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMAMUX1        RCC_AHB1ENR_DMAMUX1EN
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CORDIC         RCC_AHB1ENR_CORDICEN
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FMAC           RCC_AHB1ENR_FMACEN
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHB1ENR_FLASHEN
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM1          RCC_AHB1SMENR_SRAM1SMEN
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHB1ENR_CRCEN
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOA          RCC_AHB2ENR_GPIOAEN
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOB          RCC_AHB2ENR_GPIOBEN
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOC          RCC_AHB2ENR_GPIOCEN
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOD          RCC_AHB2ENR_GPIODEN
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOE          RCC_AHB2ENR_GPIOEEN
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOF          RCC_AHB2ENR_GPIOFEN
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOG          RCC_AHB2ENR_GPIOGEN
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_CCM            RCC_AHB2SMENR_CCMSMEN
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_SRAM2          RCC_AHB2SMENR_SRAM2SMEN
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ADC12          RCC_AHB2ENR_ADC12EN
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(ADC345_COMMON)
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ADC345         RCC_AHB2ENR_ADC345EN
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* ADC345_COMMON */
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_DAC1           RCC_AHB2ENR_DAC1EN
ARM GAS  /tmp/cc85dWdm.s 			page 63


 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(DAC2)
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_DAC2           RCC_AHB2ENR_DAC2EN
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* DAC2 */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_DAC3           RCC_AHB2ENR_DAC3EN
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(DAC4)
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_DAC4           RCC_AHB2ENR_DAC4EN
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* DAC4 */
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(AES)
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_AES            RCC_AHB2ENR_AESEN
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* AES */
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_RNG            RCC_AHB2ENR_RNGEN
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            0xFFFFFFFFU
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(FMC_Bank1_R)
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FMC            RCC_AHB3ENR_FMCEN
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* FMC_Bank1_R */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(QUADSPI)
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_QSPI           RCC_AHB3ENR_QSPIEN
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* QUADSPI */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR1_TIM2EN
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR1_TIM3EN
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM4           RCC_APB1ENR1_TIM4EN
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(TIM5)
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM5           RCC_APB1ENR1_TIM5EN
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* TIM5 */
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR1_TIM6EN
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR1_TIM7EN
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR1_CRSEN
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR1_RTCAPBEN
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR1_WWDGEN
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR1_SPI2EN
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI3           RCC_APB1ENR1_SPI3EN
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR1_USART2EN
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR1_USART3EN
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(UART4)
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART4          RCC_APB1ENR1_UART4EN
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* UART4 */
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(UART5)
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART5          RCC_APB1ENR1_UART5EN
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* UART5 */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR1_I2C1EN
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR1_I2C2EN
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR1_USBEN
ARM GAS  /tmp/cc85dWdm.s 			page 64


 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(FDCAN1)
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_FDCAN          RCC_APB1ENR1_FDCANEN
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* FDCAN1 */
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR1_PWREN
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR1_I2C3EN
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR1_LPTIM1EN
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            0xFFFFFFFFU
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPUART1        RCC_APB1ENR2_LPUART1EN
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(I2C4)
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_I2C4           RCC_APB1ENR2_I2C4EN
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* I2C4 */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_UCPD1         RCC_APB1ENR2_UCPD1EN
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM8           RCC_APB2ENR_TIM8EN
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(SPI4)
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI4           RCC_APB2ENR_SPI4EN
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* SPI4 */
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(TIM20)
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM20          RCC_APB2ENR_TIM20EN
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* TIM20 */
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI1           RCC_APB2ENR_SAI1EN
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #if defined(HRTIM1)
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_HRTIM1         RCC_APB2ENR_HRTIM1EN
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** #endif /* HRTIM1 */
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
ARM GAS  /tmp/cc85dWdm.s 			page 65


 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_EnableClock\n
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_EnableClock\n
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      DMAMMUXEN     LL_AHB1_GRP1_EnableClock\n
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      CORDICEN      LL_AHB1_GRP1_EnableClock\n
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      FMACEN        LL_AHB1_GRP1_EnableClock\n
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_EnableClock\n
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_EnableClock
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CORDIC
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FMAC
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 724              		.loc 3 243 22 view .LVU264
 725              	.LBB573:
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 726              		.loc 3 245 3 view .LVU265
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 727              		.loc 3 246 3 view .LVU266
 728 0002 064B     		ldr	r3, .L18
 729 0004 9A6C     		ldr	r2, [r3, #72]
 730 0006 42F00802 		orr	r2, r2, #8
 731 000a 9A64     		str	r2, [r3, #72]
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 732              		.loc 3 248 3 view .LVU267
 733              		.loc 3 248 12 is_stmt 0 view .LVU268
 734 000c 9B6C     		ldr	r3, [r3, #72]
 735 000e 03F00803 		and	r3, r3, #8
 736              		.loc 3 248 10 view .LVU269
 737 0012 0193     		str	r3, [sp, #4]
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 738              		.loc 3 249 3 is_stmt 1 view .LVU270
 739 0014 019B     		ldr	r3, [sp, #4]
 740              	.LVL68:
 741              		.loc 3 249 3 is_stmt 0 view .LVU271
 742              	.LBE573:
 743              	.LBE572:
 622:Src/main.c    **** 
 623:Src/main.c    ****   /* USER CODE BEGIN CORDIC_Init 1 */
 624:Src/main.c    **** 
 625:Src/main.c    ****   /* USER CODE END CORDIC_Init 1 */
ARM GAS  /tmp/cc85dWdm.s 			page 66


 626:Src/main.c    **** 
 627:Src/main.c    ****   /* nothing else to be configured */
 628:Src/main.c    **** 
 629:Src/main.c    ****   /* USER CODE BEGIN CORDIC_Init 2 */
 630:Src/main.c    **** 
 631:Src/main.c    ****   /* USER CODE END CORDIC_Init 2 */
 632:Src/main.c    **** 
 633:Src/main.c    **** }
 744              		.loc 1 633 1 view .LVU272
 745 0016 02B0     		add	sp, sp, #8
 746              		.cfi_def_cfa_offset 0
 747              		@ sp needed
 748 0018 7047     		bx	lr
 749              	.L19:
 750 001a 00BF     		.align	2
 751              	.L18:
 752 001c 00100240 		.word	1073876992
 753              		.cfi_endproc
 754              	.LFE1630:
 756              		.section	.text.MX_DMA_Init,"ax",%progbits
 757              		.align	1
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv4-sp-d16
 763              	MX_DMA_Init:
 764              	.LFB1638:
 634:Src/main.c    **** 
 635:Src/main.c    **** /**
 636:Src/main.c    ****   * @brief DAC3 Initialization Function
 637:Src/main.c    ****   * @param None
 638:Src/main.c    ****   * @retval None
 639:Src/main.c    ****   */
 640:Src/main.c    **** static void MX_DAC3_Init(void)
 641:Src/main.c    **** {
 642:Src/main.c    **** 
 643:Src/main.c    ****   /* USER CODE BEGIN DAC3_Init 0 */
 644:Src/main.c    **** 
 645:Src/main.c    ****   /* USER CODE END DAC3_Init 0 */
 646:Src/main.c    **** 
 647:Src/main.c    ****   LL_DAC_InitTypeDef DAC_InitStruct = {0};
 648:Src/main.c    **** 
 649:Src/main.c    ****   /* Peripheral clock enable */
 650:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_DAC3);
 651:Src/main.c    **** 
 652:Src/main.c    ****   /* USER CODE BEGIN DAC3_Init 1 */
 653:Src/main.c    **** 
 654:Src/main.c    ****   /* USER CODE END DAC3_Init 1 */
 655:Src/main.c    **** 
 656:Src/main.c    ****   /** DAC channel OUT1 config
 657:Src/main.c    ****   */
 658:Src/main.c    ****   LL_DAC_SetSignedFormat(DAC3, LL_DAC_CHANNEL_1, LL_DAC_SIGNED_FORMAT_DISABLE);
 659:Src/main.c    ****   DAC_InitStruct.TriggerSource = LL_DAC_TRIG_SOFTWARE;
 660:Src/main.c    ****   DAC_InitStruct.TriggerSource2 = LL_DAC_TRIG_SOFTWARE;
 661:Src/main.c    ****   DAC_InitStruct.WaveAutoGeneration = LL_DAC_WAVE_AUTO_GENERATION_NONE;
 662:Src/main.c    ****   DAC_InitStruct.OutputBuffer = LL_DAC_OUTPUT_BUFFER_DISABLE;
 663:Src/main.c    ****   DAC_InitStruct.OutputConnection = LL_DAC_OUTPUT_CONNECT_INTERNAL;
ARM GAS  /tmp/cc85dWdm.s 			page 67


 664:Src/main.c    ****   DAC_InitStruct.OutputMode = LL_DAC_OUTPUT_MODE_NORMAL;
 665:Src/main.c    ****   LL_DAC_Init(DAC3, LL_DAC_CHANNEL_1, &DAC_InitStruct);
 666:Src/main.c    ****   LL_DAC_DisableTrigger(DAC3, LL_DAC_CHANNEL_1);
 667:Src/main.c    ****   LL_DAC_DisableDMADoubleDataMode(DAC3, LL_DAC_CHANNEL_1);
 668:Src/main.c    **** 
 669:Src/main.c    ****   /** DAC channel OUT2 config
 670:Src/main.c    ****   */
 671:Src/main.c    ****   LL_DAC_SetSignedFormat(DAC3, LL_DAC_CHANNEL_2, LL_DAC_SIGNED_FORMAT_DISABLE);
 672:Src/main.c    ****   LL_DAC_Init(DAC3, LL_DAC_CHANNEL_2, &DAC_InitStruct);
 673:Src/main.c    ****   LL_DAC_DisableTrigger(DAC3, LL_DAC_CHANNEL_2);
 674:Src/main.c    ****   LL_DAC_DisableDMADoubleDataMode(DAC3, LL_DAC_CHANNEL_2);
 675:Src/main.c    ****   /* USER CODE BEGIN DAC3_Init 2 */
 676:Src/main.c    **** 
 677:Src/main.c    ****   /* USER CODE END DAC3_Init 2 */
 678:Src/main.c    **** 
 679:Src/main.c    **** }
 680:Src/main.c    **** 
 681:Src/main.c    **** /**
 682:Src/main.c    ****   * @brief OPAMP1 Initialization Function
 683:Src/main.c    ****   * @param None
 684:Src/main.c    ****   * @retval None
 685:Src/main.c    ****   */
 686:Src/main.c    **** static void MX_OPAMP1_Init(void)
 687:Src/main.c    **** {
 688:Src/main.c    **** 
 689:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 0 */
 690:Src/main.c    **** 
 691:Src/main.c    ****   /* USER CODE END OPAMP1_Init 0 */
 692:Src/main.c    **** 
 693:Src/main.c    ****   LL_OPAMP_InitTypeDef OPAMP_InitStruct = {0};
 694:Src/main.c    **** 
 695:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 696:Src/main.c    **** 
 697:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 698:Src/main.c    ****   /**OPAMP1 GPIO Configuration
 699:Src/main.c    ****   PA1   ------> OPAMP1_VINP
 700:Src/main.c    ****   PA2   ------> OPAMP1_VOUT
 701:Src/main.c    ****   PA3   ------> OPAMP1_VINM0
 702:Src/main.c    ****   */
 703:Src/main.c    ****   GPIO_InitStruct.Pin = M1_CURR_SHUNT_U_Pin;
 704:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 705:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 706:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_U_GPIO_Port, &GPIO_InitStruct);
 707:Src/main.c    **** 
 708:Src/main.c    ****   GPIO_InitStruct.Pin = M1_OPAMP1_OUT_Pin;
 709:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 710:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 711:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP1_OUT_GPIO_Port, &GPIO_InitStruct);
 712:Src/main.c    **** 
 713:Src/main.c    ****   GPIO_InitStruct.Pin = M1_OPAMP1_INT_GAIN_Pin;
 714:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 715:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 716:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP1_INT_GAIN_GPIO_Port, &GPIO_InitStruct);
 717:Src/main.c    **** 
 718:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 1 */
 719:Src/main.c    **** 
 720:Src/main.c    ****   /* USER CODE END OPAMP1_Init 1 */
ARM GAS  /tmp/cc85dWdm.s 			page 68


 721:Src/main.c    ****   OPAMP_InitStruct.PowerMode = LL_OPAMP_POWERMODE_NORMALSPEED;
 722:Src/main.c    ****   OPAMP_InitStruct.FunctionalMode = LL_OPAMP_MODE_PGA_IO0_BIAS;
 723:Src/main.c    ****   OPAMP_InitStruct.InputNonInverting = LL_OPAMP_INPUT_NONINVERT_IO0;
 724:Src/main.c    ****   LL_OPAMP_Init(OPAMP1, &OPAMP_InitStruct);
 725:Src/main.c    ****   LL_OPAMP_SetInputsMuxMode(OPAMP1, LL_OPAMP_INPUT_MUX_DISABLE);
 726:Src/main.c    ****   LL_OPAMP_SetInternalOutput(OPAMP1, LL_OPAMP_INTERNAL_OUPUT_DISABLED);
 727:Src/main.c    ****   LL_OPAMP_SetPGAGain(OPAMP1, LL_OPAMP_PGA_GAIN_16_OR_MINUS_15);
 728:Src/main.c    ****   LL_OPAMP_SetTrimmingMode(OPAMP1, LL_OPAMP_TRIMMING_FACTORY);
 729:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 2 */
 730:Src/main.c    **** 
 731:Src/main.c    ****   /* USER CODE END OPAMP1_Init 2 */
 732:Src/main.c    **** 
 733:Src/main.c    **** }
 734:Src/main.c    **** 
 735:Src/main.c    **** /**
 736:Src/main.c    ****   * @brief OPAMP2 Initialization Function
 737:Src/main.c    ****   * @param None
 738:Src/main.c    ****   * @retval None
 739:Src/main.c    ****   */
 740:Src/main.c    **** static void MX_OPAMP2_Init(void)
 741:Src/main.c    **** {
 742:Src/main.c    **** 
 743:Src/main.c    ****   /* USER CODE BEGIN OPAMP2_Init 0 */
 744:Src/main.c    **** 
 745:Src/main.c    ****   /* USER CODE END OPAMP2_Init 0 */
 746:Src/main.c    **** 
 747:Src/main.c    ****   LL_OPAMP_InitTypeDef OPAMP_InitStruct = {0};
 748:Src/main.c    **** 
 749:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 750:Src/main.c    **** 
 751:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 752:Src/main.c    ****   /**OPAMP2 GPIO Configuration
 753:Src/main.c    ****   PA5   ------> OPAMP2_VINM0
 754:Src/main.c    ****   PA6   ------> OPAMP2_VOUT
 755:Src/main.c    ****   PA7   ------> OPAMP2_VINP
 756:Src/main.c    ****   */
 757:Src/main.c    ****   GPIO_InitStruct.Pin = M1_OPAMP2_INT_GAIN_Pin;
 758:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 759:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 760:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP2_INT_GAIN_GPIO_Port, &GPIO_InitStruct);
 761:Src/main.c    **** 
 762:Src/main.c    ****   GPIO_InitStruct.Pin = M1_OPAMP2_OUT_Pin;
 763:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 764:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 765:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP2_OUT_GPIO_Port, &GPIO_InitStruct);
 766:Src/main.c    **** 
 767:Src/main.c    ****   GPIO_InitStruct.Pin = M1_CURR_SHUNT_V_Pin;
 768:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 769:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 770:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_V_GPIO_Port, &GPIO_InitStruct);
 771:Src/main.c    **** 
 772:Src/main.c    ****   /* USER CODE BEGIN OPAMP2_Init 1 */
 773:Src/main.c    **** 
 774:Src/main.c    ****   /* USER CODE END OPAMP2_Init 1 */
 775:Src/main.c    ****   OPAMP_InitStruct.PowerMode = LL_OPAMP_POWERMODE_NORMALSPEED;
 776:Src/main.c    ****   OPAMP_InitStruct.FunctionalMode = LL_OPAMP_MODE_PGA_IO0_BIAS;
 777:Src/main.c    ****   OPAMP_InitStruct.InputNonInverting = LL_OPAMP_INPUT_NONINVERT_IO0;
ARM GAS  /tmp/cc85dWdm.s 			page 69


 778:Src/main.c    ****   LL_OPAMP_Init(OPAMP2, &OPAMP_InitStruct);
 779:Src/main.c    ****   LL_OPAMP_SetInputsMuxMode(OPAMP2, LL_OPAMP_INPUT_MUX_DISABLE);
 780:Src/main.c    ****   LL_OPAMP_SetInternalOutput(OPAMP2, LL_OPAMP_INTERNAL_OUPUT_DISABLED);
 781:Src/main.c    ****   LL_OPAMP_SetPGAGain(OPAMP2, LL_OPAMP_PGA_GAIN_16_OR_MINUS_15);
 782:Src/main.c    ****   LL_OPAMP_SetTrimmingMode(OPAMP2, LL_OPAMP_TRIMMING_FACTORY);
 783:Src/main.c    ****   /* USER CODE BEGIN OPAMP2_Init 2 */
 784:Src/main.c    **** 
 785:Src/main.c    ****   /* USER CODE END OPAMP2_Init 2 */
 786:Src/main.c    **** 
 787:Src/main.c    **** }
 788:Src/main.c    **** 
 789:Src/main.c    **** /**
 790:Src/main.c    ****   * @brief OPAMP3 Initialization Function
 791:Src/main.c    ****   * @param None
 792:Src/main.c    ****   * @retval None
 793:Src/main.c    ****   */
 794:Src/main.c    **** static void MX_OPAMP3_Init(void)
 795:Src/main.c    **** {
 796:Src/main.c    **** 
 797:Src/main.c    ****   /* USER CODE BEGIN OPAMP3_Init 0 */
 798:Src/main.c    **** 
 799:Src/main.c    ****   /* USER CODE END OPAMP3_Init 0 */
 800:Src/main.c    **** 
 801:Src/main.c    ****   LL_OPAMP_InitTypeDef OPAMP_InitStruct = {0};
 802:Src/main.c    **** 
 803:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 804:Src/main.c    **** 
 805:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
 806:Src/main.c    ****   /**OPAMP3 GPIO Configuration
 807:Src/main.c    ****   PB0   ------> OPAMP3_VINP
 808:Src/main.c    ****   PB1   ------> OPAMP3_VOUT
 809:Src/main.c    ****   PB2   ------> OPAMP3_VINM0
 810:Src/main.c    ****   */
 811:Src/main.c    ****   GPIO_InitStruct.Pin = M1_CURR_SHUNT_W_Pin;
 812:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 813:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 814:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_W_GPIO_Port, &GPIO_InitStruct);
 815:Src/main.c    **** 
 816:Src/main.c    ****   GPIO_InitStruct.Pin = M1_OPAMP3_OUT_Pin;
 817:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 818:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 819:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP3_OUT_GPIO_Port, &GPIO_InitStruct);
 820:Src/main.c    **** 
 821:Src/main.c    ****   GPIO_InitStruct.Pin = M1_OPAMP3_INT_GAIN_Pin;
 822:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 823:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 824:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP3_INT_GAIN_GPIO_Port, &GPIO_InitStruct);
 825:Src/main.c    **** 
 826:Src/main.c    ****   /* USER CODE BEGIN OPAMP3_Init 1 */
 827:Src/main.c    **** 
 828:Src/main.c    ****   /* USER CODE END OPAMP3_Init 1 */
 829:Src/main.c    ****   OPAMP_InitStruct.PowerMode = LL_OPAMP_POWERMODE_NORMALSPEED;
 830:Src/main.c    ****   OPAMP_InitStruct.FunctionalMode = LL_OPAMP_MODE_PGA_IO0_BIAS;
 831:Src/main.c    ****   OPAMP_InitStruct.InputNonInverting = LL_OPAMP_INPUT_NONINVERT_IO0;
 832:Src/main.c    ****   LL_OPAMP_Init(OPAMP3, &OPAMP_InitStruct);
 833:Src/main.c    ****   LL_OPAMP_SetInputsMuxMode(OPAMP3, LL_OPAMP_INPUT_MUX_DISABLE);
 834:Src/main.c    ****   LL_OPAMP_SetInternalOutput(OPAMP3, LL_OPAMP_INTERNAL_OUPUT_ENABLED);
ARM GAS  /tmp/cc85dWdm.s 			page 70


 835:Src/main.c    ****   LL_OPAMP_SetPGAGain(OPAMP3, LL_OPAMP_PGA_GAIN_16_OR_MINUS_15);
 836:Src/main.c    ****   LL_OPAMP_SetTrimmingMode(OPAMP3, LL_OPAMP_TRIMMING_FACTORY);
 837:Src/main.c    ****   /* USER CODE BEGIN OPAMP3_Init 2 */
 838:Src/main.c    **** 
 839:Src/main.c    ****   /* USER CODE END OPAMP3_Init 2 */
 840:Src/main.c    **** 
 841:Src/main.c    **** }
 842:Src/main.c    **** 
 843:Src/main.c    **** /**
 844:Src/main.c    ****   * @brief TIM1 Initialization Function
 845:Src/main.c    ****   * @param None
 846:Src/main.c    ****   * @retval None
 847:Src/main.c    ****   */
 848:Src/main.c    **** static void MX_TIM1_Init(void)
 849:Src/main.c    **** {
 850:Src/main.c    **** 
 851:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 852:Src/main.c    **** 
 853:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 854:Src/main.c    **** 
 855:Src/main.c    ****   LL_TIM_InitTypeDef TIM_InitStruct = {0};
 856:Src/main.c    ****   LL_TIM_OC_InitTypeDef TIM_OC_InitStruct = {0};
 857:Src/main.c    ****   LL_TIM_BDTR_InitTypeDef TIM_BDTRInitStruct = {0};
 858:Src/main.c    **** 
 859:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 860:Src/main.c    **** 
 861:Src/main.c    ****   /* Peripheral clock enable */
 862:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_TIM1);
 863:Src/main.c    **** 
 864:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 865:Src/main.c    **** 
 866:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 867:Src/main.c    ****   TIM_InitStruct.Prescaler = ((TIM_CLOCK_DIVIDER) - 1);
 868:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_CENTER_DOWN;
 869:Src/main.c    ****   TIM_InitStruct.Autoreload = ((PWM_PERIOD_CYCLES) / 2);
 870:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV2;
 871:Src/main.c    ****   TIM_InitStruct.RepetitionCounter = (REP_COUNTER);
 872:Src/main.c    ****   LL_TIM_Init(TIM1, &TIM_InitStruct);
 873:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM1);
 874:Src/main.c    ****   LL_TIM_OC_EnablePreload(TIM1, LL_TIM_CHANNEL_CH1);
 875:Src/main.c    ****   TIM_OC_InitStruct.OCMode = LL_TIM_OCMODE_PWM1;
 876:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 877:Src/main.c    ****   TIM_OC_InitStruct.OCNState = LL_TIM_OCSTATE_DISABLE;
 878:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = ((PWM_PERIOD_CYCLES) / 4);
 879:Src/main.c    ****   TIM_OC_InitStruct.OCPolarity = LL_TIM_OCPOLARITY_HIGH;
 880:Src/main.c    ****   TIM_OC_InitStruct.OCNPolarity = LL_TIM_OCPOLARITY_HIGH;
 881:Src/main.c    ****   TIM_OC_InitStruct.OCIdleState = LL_TIM_OCIDLESTATE_LOW;
 882:Src/main.c    ****   TIM_OC_InitStruct.OCNIdleState = LL_TIM_OCIDLESTATE_LOW;
 883:Src/main.c    ****   LL_TIM_OC_Init(TIM1, LL_TIM_CHANNEL_CH1, &TIM_OC_InitStruct);
 884:Src/main.c    ****   LL_TIM_OC_DisableFast(TIM1, LL_TIM_CHANNEL_CH1);
 885:Src/main.c    ****   LL_TIM_OC_EnablePreload(TIM1, LL_TIM_CHANNEL_CH2);
 886:Src/main.c    ****   LL_TIM_OC_Init(TIM1, LL_TIM_CHANNEL_CH2, &TIM_OC_InitStruct);
 887:Src/main.c    ****   LL_TIM_OC_DisableFast(TIM1, LL_TIM_CHANNEL_CH2);
 888:Src/main.c    ****   LL_TIM_OC_EnablePreload(TIM1, LL_TIM_CHANNEL_CH3);
 889:Src/main.c    ****   LL_TIM_OC_Init(TIM1, LL_TIM_CHANNEL_CH3, &TIM_OC_InitStruct);
 890:Src/main.c    ****   LL_TIM_OC_DisableFast(TIM1, LL_TIM_CHANNEL_CH3);
 891:Src/main.c    ****   LL_TIM_OC_EnablePreload(TIM1, LL_TIM_CHANNEL_CH4);
ARM GAS  /tmp/cc85dWdm.s 			page 71


 892:Src/main.c    ****   TIM_OC_InitStruct.OCMode = LL_TIM_OCMODE_PWM2;
 893:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = (((PWM_PERIOD_CYCLES) / 2) - (HTMIN));
 894:Src/main.c    ****   LL_TIM_OC_Init(TIM1, LL_TIM_CHANNEL_CH4, &TIM_OC_InitStruct);
 895:Src/main.c    ****   LL_TIM_OC_DisableFast(TIM1, LL_TIM_CHANNEL_CH4);
 896:Src/main.c    ****   LL_TIM_SetTriggerInput(TIM1, LL_TIM_TS_ITR1);
 897:Src/main.c    ****   LL_TIM_SetSlaveMode(TIM1, LL_TIM_SLAVEMODE_TRIGGER);
 898:Src/main.c    ****   LL_TIM_DisableIT_TRIG(TIM1);
 899:Src/main.c    ****   LL_TIM_DisableDMAReq_TRIG(TIM1);
 900:Src/main.c    ****   LL_TIM_SetTriggerOutput(TIM1, LL_TIM_TRGO_OC4REF);
 901:Src/main.c    ****   LL_TIM_SetTriggerOutput2(TIM1, LL_TIM_TRGO2_RESET);
 902:Src/main.c    ****   LL_TIM_DisableMasterSlaveMode(TIM1);
 903:Src/main.c    ****   LL_TIM_SetBreakInputSourcePolarity(TIM1, LL_TIM_BREAK_INPUT_BKIN2, LL_TIM_BKIN_SOURCE_BKCOMP1, LL
 904:Src/main.c    ****   LL_TIM_SetBreakInputSourcePolarity(TIM1, LL_TIM_BREAK_INPUT_BKIN2, LL_TIM_BKIN_SOURCE_BKCOMP2, LL
 905:Src/main.c    ****   LL_TIM_SetBreakInputSourcePolarity(TIM1, LL_TIM_BREAK_INPUT_BKIN2, LL_TIM_BKIN_SOURCE_BKCOMP4, LL
 906:Src/main.c    ****   TIM_BDTRInitStruct.OSSRState = LL_TIM_OSSR_ENABLE;
 907:Src/main.c    ****   TIM_BDTRInitStruct.OSSIState = LL_TIM_OSSI_ENABLE;
 908:Src/main.c    ****   TIM_BDTRInitStruct.LockLevel = LL_TIM_LOCKLEVEL_1;
 909:Src/main.c    ****   TIM_BDTRInitStruct.DeadTime = ((DEAD_TIME_COUNTS) / 2);
 910:Src/main.c    ****   TIM_BDTRInitStruct.BreakState = LL_TIM_BREAK_DISABLE;
 911:Src/main.c    ****   TIM_BDTRInitStruct.BreakPolarity = LL_TIM_BREAK_POLARITY_HIGH;
 912:Src/main.c    ****   TIM_BDTRInitStruct.BreakFilter = LL_TIM_BREAK_FILTER_FDIV1;
 913:Src/main.c    ****   TIM_BDTRInitStruct.BreakAFMode = LL_TIM_BREAK_AFMODE_INPUT;
 914:Src/main.c    ****   TIM_BDTRInitStruct.Break2State = LL_TIM_BREAK2_ENABLE;
 915:Src/main.c    ****   TIM_BDTRInitStruct.Break2Polarity = LL_TIM_BREAK2_POLARITY_HIGH;
 916:Src/main.c    ****   TIM_BDTRInitStruct.Break2Filter = LL_TIM_BREAK2_FILTER_FDIV1_N8;
 917:Src/main.c    ****   TIM_BDTRInitStruct.Break2AFMode = LL_TIM_BREAK_AFMODE_INPUT;
 918:Src/main.c    ****   TIM_BDTRInitStruct.AutomaticOutput = LL_TIM_AUTOMATICOUTPUT_DISABLE;
 919:Src/main.c    ****   LL_TIM_BDTR_Init(TIM1, &TIM_BDTRInitStruct);
 920:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 921:Src/main.c    **** 
 922:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 923:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOC);
 924:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
 925:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 926:Src/main.c    ****   /**TIM1 GPIO Configuration
 927:Src/main.c    ****   PC13   ------> TIM1_CH1N
 928:Src/main.c    ****   PB15   ------> TIM1_CH3N
 929:Src/main.c    ****   PA8   ------> TIM1_CH1
 930:Src/main.c    ****   PA9   ------> TIM1_CH2
 931:Src/main.c    ****   PA10   ------> TIM1_CH3
 932:Src/main.c    ****   PA12   ------> TIM1_CH2N
 933:Src/main.c    ****   */
 934:Src/main.c    ****   GPIO_InitStruct.Pin = M1_PWM_UL_Pin;
 935:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 936:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 937:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 938:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 939:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 940:Src/main.c    ****   LL_GPIO_Init(M1_PWM_UL_GPIO_Port, &GPIO_InitStruct);
 941:Src/main.c    **** 
 942:Src/main.c    ****   GPIO_InitStruct.Pin = M1_PWM_WL_Pin;
 943:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 944:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 945:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 946:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 947:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 948:Src/main.c    ****   LL_GPIO_Init(M1_PWM_WL_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/cc85dWdm.s 			page 72


 949:Src/main.c    **** 
 950:Src/main.c    ****   GPIO_InitStruct.Pin = M1_PWM_UH_Pin;
 951:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 952:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 953:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 954:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 955:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 956:Src/main.c    ****   LL_GPIO_Init(M1_PWM_UH_GPIO_Port, &GPIO_InitStruct);
 957:Src/main.c    **** 
 958:Src/main.c    ****   GPIO_InitStruct.Pin = M1_PWM_VH_Pin;
 959:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 960:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 961:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 962:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 963:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 964:Src/main.c    ****   LL_GPIO_Init(M1_PWM_VH_GPIO_Port, &GPIO_InitStruct);
 965:Src/main.c    **** 
 966:Src/main.c    ****   GPIO_InitStruct.Pin = M1_PWM_WH_Pin;
 967:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 968:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 969:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 970:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 971:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 972:Src/main.c    ****   LL_GPIO_Init(M1_PWM_WH_GPIO_Port, &GPIO_InitStruct);
 973:Src/main.c    **** 
 974:Src/main.c    ****   GPIO_InitStruct.Pin = M1_PWM_VL_Pin;
 975:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 976:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 977:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 978:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 979:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 980:Src/main.c    ****   LL_GPIO_Init(M1_PWM_VL_GPIO_Port, &GPIO_InitStruct);
 981:Src/main.c    **** 
 982:Src/main.c    **** }
 983:Src/main.c    **** 
 984:Src/main.c    **** /**
 985:Src/main.c    ****   * @brief TIM4 Initialization Function
 986:Src/main.c    ****   * @param None
 987:Src/main.c    ****   * @retval None
 988:Src/main.c    ****   */
 989:Src/main.c    **** static void MX_TIM4_Init(void)
 990:Src/main.c    **** {
 991:Src/main.c    **** 
 992:Src/main.c    ****   /* USER CODE BEGIN TIM4_Init 0 */
 993:Src/main.c    **** 
 994:Src/main.c    ****   /* USER CODE END TIM4_Init 0 */
 995:Src/main.c    **** 
 996:Src/main.c    ****   LL_TIM_InitTypeDef TIM_InitStruct = {0};
 997:Src/main.c    **** 
 998:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 999:Src/main.c    **** 
1000:Src/main.c    ****   /* Peripheral clock enable */
1001:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM4);
1002:Src/main.c    **** 
1003:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
1004:Src/main.c    ****   /**TIM4 GPIO Configuration
1005:Src/main.c    ****   PB6   ------> TIM4_CH1
ARM GAS  /tmp/cc85dWdm.s 			page 73


1006:Src/main.c    ****   PB7   ------> TIM4_CH2
1007:Src/main.c    ****   */
1008:Src/main.c    ****   GPIO_InitStruct.Pin = M1_ENCODER_A_Pin;
1009:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
1010:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
1011:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
1012:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
1013:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_2;
1014:Src/main.c    ****   LL_GPIO_Init(M1_ENCODER_A_GPIO_Port, &GPIO_InitStruct);
1015:Src/main.c    **** 
1016:Src/main.c    ****   GPIO_InitStruct.Pin = M1_ENCODER_B_Pin;
1017:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
1018:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
1019:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
1020:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
1021:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_2;
1022:Src/main.c    ****   LL_GPIO_Init(M1_ENCODER_B_GPIO_Port, &GPIO_InitStruct);
1023:Src/main.c    **** 
1024:Src/main.c    ****   /* USER CODE BEGIN TIM4_Init 1 */
1025:Src/main.c    **** 
1026:Src/main.c    ****   /* USER CODE END TIM4_Init 1 */
1027:Src/main.c    ****   TIM_InitStruct.Prescaler = 0;
1028:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
1029:Src/main.c    ****   TIM_InitStruct.Autoreload = M1_PULSE_NBR;
1030:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
1031:Src/main.c    ****   LL_TIM_Init(TIM4, &TIM_InitStruct);
1032:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM4);
1033:Src/main.c    ****   LL_TIM_SetEncoderMode(TIM4, LL_TIM_ENCODERMODE_X4_TI12);
1034:Src/main.c    ****   LL_TIM_IC_SetActiveInput(TIM4, LL_TIM_CHANNEL_CH1, LL_TIM_ACTIVEINPUT_DIRECTTI);
1035:Src/main.c    ****   LL_TIM_IC_SetPrescaler(TIM4, LL_TIM_CHANNEL_CH1, LL_TIM_ICPSC_DIV1);
1036:Src/main.c    ****   LL_TIM_IC_SetFilter(TIM4, LL_TIM_CHANNEL_CH1, M1_ENC_IC_FILTER);
1037:Src/main.c    ****   LL_TIM_IC_SetPolarity(TIM4, LL_TIM_CHANNEL_CH1, LL_TIM_IC_POLARITY_RISING);
1038:Src/main.c    ****   LL_TIM_IC_SetActiveInput(TIM4, LL_TIM_CHANNEL_CH2, LL_TIM_ACTIVEINPUT_DIRECTTI);
1039:Src/main.c    ****   LL_TIM_IC_SetPrescaler(TIM4, LL_TIM_CHANNEL_CH2, LL_TIM_ICPSC_DIV1);
1040:Src/main.c    ****   LL_TIM_IC_SetFilter(TIM4, LL_TIM_CHANNEL_CH2, M1_ENC_IC_FILTER);
1041:Src/main.c    ****   LL_TIM_IC_SetPolarity(TIM4, LL_TIM_CHANNEL_CH2, LL_TIM_IC_POLARITY_RISING);
1042:Src/main.c    ****   LL_TIM_SetTriggerOutput(TIM4, LL_TIM_TRGO_RESET);
1043:Src/main.c    ****   LL_TIM_DisableMasterSlaveMode(TIM4);
1044:Src/main.c    ****   /* USER CODE BEGIN TIM4_Init 2 */
1045:Src/main.c    **** 
1046:Src/main.c    ****   /* USER CODE END TIM4_Init 2 */
1047:Src/main.c    **** 
1048:Src/main.c    **** }
1049:Src/main.c    **** 
1050:Src/main.c    **** /**
1051:Src/main.c    ****   * @brief USART2 Initialization Function
1052:Src/main.c    ****   * @param None
1053:Src/main.c    ****   * @retval None
1054:Src/main.c    ****   */
1055:Src/main.c    **** static void MX_USART2_UART_Init(void)
1056:Src/main.c    **** {
1057:Src/main.c    **** 
1058:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
1059:Src/main.c    **** 
1060:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
1061:Src/main.c    **** 
1062:Src/main.c    ****   LL_USART_InitTypeDef USART_InitStruct = {0};
ARM GAS  /tmp/cc85dWdm.s 			page 74


1063:Src/main.c    **** 
1064:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
1065:Src/main.c    **** 
1066:Src/main.c    ****   LL_RCC_SetUSARTClockSource(LL_RCC_USART2_CLKSOURCE_PCLK1);
1067:Src/main.c    **** 
1068:Src/main.c    ****   /* Peripheral clock enable */
1069:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_USART2);
1070:Src/main.c    **** 
1071:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
1072:Src/main.c    ****   /**USART2 GPIO Configuration
1073:Src/main.c    ****   PB3   ------> USART2_TX
1074:Src/main.c    ****   PB4   ------> USART2_RX
1075:Src/main.c    ****   */
1076:Src/main.c    ****   GPIO_InitStruct.Pin = UART_TX_Pin;
1077:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
1078:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
1079:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
1080:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
1081:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
1082:Src/main.c    ****   LL_GPIO_Init(UART_TX_GPIO_Port, &GPIO_InitStruct);
1083:Src/main.c    **** 
1084:Src/main.c    ****   GPIO_InitStruct.Pin = UART_RX_Pin;
1085:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
1086:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
1087:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
1088:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
1089:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
1090:Src/main.c    ****   LL_GPIO_Init(UART_RX_GPIO_Port, &GPIO_InitStruct);
1091:Src/main.c    **** 
1092:Src/main.c    ****   /* USART2 DMA Init */
1093:Src/main.c    **** 
1094:Src/main.c    ****   /* USART2_RX Init */
1095:Src/main.c    ****   LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_1, LL_DMAMUX_REQ_USART2_RX);
1096:Src/main.c    **** 
1097:Src/main.c    ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_1, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1098:Src/main.c    **** 
1099:Src/main.c    ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PRIORITY_LOW);
1100:Src/main.c    **** 
1101:Src/main.c    ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MODE_NORMAL);
1102:Src/main.c    **** 
1103:Src/main.c    ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PERIPH_NOINCREMENT);
1104:Src/main.c    **** 
1105:Src/main.c    ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MEMORY_INCREMENT);
1106:Src/main.c    **** 
1107:Src/main.c    ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_1, LL_DMA_PDATAALIGN_BYTE);
1108:Src/main.c    **** 
1109:Src/main.c    ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_1, LL_DMA_MDATAALIGN_BYTE);
1110:Src/main.c    **** 
1111:Src/main.c    ****   /* USART2_TX Init */
1112:Src/main.c    ****   LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_2, LL_DMAMUX_REQ_USART2_TX);
1113:Src/main.c    **** 
1114:Src/main.c    ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_2, LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
1115:Src/main.c    **** 
1116:Src/main.c    ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PRIORITY_LOW);
1117:Src/main.c    **** 
1118:Src/main.c    ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MODE_NORMAL);
1119:Src/main.c    **** 
ARM GAS  /tmp/cc85dWdm.s 			page 75


1120:Src/main.c    ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PERIPH_NOINCREMENT);
1121:Src/main.c    **** 
1122:Src/main.c    ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MEMORY_INCREMENT);
1123:Src/main.c    **** 
1124:Src/main.c    ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PDATAALIGN_BYTE);
1125:Src/main.c    **** 
1126:Src/main.c    ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MDATAALIGN_BYTE);
1127:Src/main.c    **** 
1128:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
1129:Src/main.c    **** 
1130:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
1131:Src/main.c    ****   USART_InitStruct.PrescalerValue = LL_USART_PRESCALER_DIV1;
1132:Src/main.c    ****   USART_InitStruct.BaudRate = 1843200;
1133:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
1134:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
1135:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
1136:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
1137:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
1138:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
1139:Src/main.c    ****   LL_USART_Init(USART2, &USART_InitStruct);
1140:Src/main.c    ****   LL_USART_SetTXFIFOThreshold(USART2, LL_USART_FIFOTHRESHOLD_1_8);
1141:Src/main.c    ****   LL_USART_SetRXFIFOThreshold(USART2, LL_USART_FIFOTHRESHOLD_1_8);
1142:Src/main.c    ****   LL_USART_DisableFIFO(USART2);
1143:Src/main.c    ****   LL_USART_ConfigAsyncMode(USART2);
1144:Src/main.c    **** 
1145:Src/main.c    ****   /* USER CODE BEGIN WKUPType USART2 */
1146:Src/main.c    **** 
1147:Src/main.c    ****   /* USER CODE END WKUPType USART2 */
1148:Src/main.c    **** 
1149:Src/main.c    ****   LL_USART_Enable(USART2);
1150:Src/main.c    **** 
1151:Src/main.c    ****   /* Polling USART2 initialisation */
1152:Src/main.c    ****   while((!(LL_USART_IsActiveFlag_TEACK(USART2))) || (!(LL_USART_IsActiveFlag_REACK(USART2))))
1153:Src/main.c    ****   {
1154:Src/main.c    ****   }
1155:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
1156:Src/main.c    **** 
1157:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
1158:Src/main.c    **** 
1159:Src/main.c    **** }
1160:Src/main.c    **** 
1161:Src/main.c    **** /**
1162:Src/main.c    ****   * Enable DMA controller clock
1163:Src/main.c    ****   */
1164:Src/main.c    **** static void MX_DMA_Init(void)
1165:Src/main.c    **** {
 765              		.loc 1 1165 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 8
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770 0000 82B0     		sub	sp, sp, #8
 771              		.cfi_def_cfa_offset 8
1166:Src/main.c    **** 
1167:Src/main.c    ****   /* Init with LL driver */
1168:Src/main.c    ****   /* DMA controller clock enable */
1169:Src/main.c    ****   LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_DMAMUX1);
ARM GAS  /tmp/cc85dWdm.s 			page 76


 772              		.loc 1 1169 3 view .LVU274
 773              	.LVL69:
 774              	.LBB574:
 775              	.LBI574:
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 776              		.loc 3 243 22 view .LVU275
 777              	.LBB575:
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 778              		.loc 3 245 3 view .LVU276
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 779              		.loc 3 246 3 view .LVU277
 780 0002 0A4B     		ldr	r3, .L22
 781 0004 9A6C     		ldr	r2, [r3, #72]
 782 0006 42F00402 		orr	r2, r2, #4
 783 000a 9A64     		str	r2, [r3, #72]
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 784              		.loc 3 248 3 view .LVU278
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 785              		.loc 3 248 12 is_stmt 0 view .LVU279
 786 000c 9A6C     		ldr	r2, [r3, #72]
 787 000e 02F00402 		and	r2, r2, #4
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 788              		.loc 3 248 10 view .LVU280
 789 0012 0192     		str	r2, [sp, #4]
 790              		.loc 3 249 3 is_stmt 1 view .LVU281
 791 0014 019A     		ldr	r2, [sp, #4]
 792              	.LVL70:
 793              		.loc 3 249 3 is_stmt 0 view .LVU282
 794              	.LBE575:
 795              	.LBE574:
1170:Src/main.c    ****   LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_DMA1);
 796              		.loc 1 1170 3 is_stmt 1 view .LVU283
 797              	.LBB576:
 798              	.LBI576:
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 799              		.loc 3 243 22 view .LVU284
 800              	.LBB577:
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 801              		.loc 3 245 3 view .LVU285
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 802              		.loc 3 246 3 view .LVU286
 803 0016 9A6C     		ldr	r2, [r3, #72]
 804 0018 42F00102 		orr	r2, r2, #1
 805 001c 9A64     		str	r2, [r3, #72]
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 806              		.loc 3 248 3 view .LVU287
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 807              		.loc 3 248 12 is_stmt 0 view .LVU288
 808 001e 9B6C     		ldr	r3, [r3, #72]
 809 0020 03F00103 		and	r3, r3, #1
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 810              		.loc 3 248 10 view .LVU289
 811 0024 0093     		str	r3, [sp]
 812              		.loc 3 249 3 is_stmt 1 view .LVU290
 813 0026 009B     		ldr	r3, [sp]
 814              	.LVL71:
 815              		.loc 3 249 3 is_stmt 0 view .LVU291
ARM GAS  /tmp/cc85dWdm.s 			page 77


 816              	.LBE577:
 817              	.LBE576:
1171:Src/main.c    **** 
1172:Src/main.c    **** }
 818              		.loc 1 1172 1 view .LVU292
 819 0028 02B0     		add	sp, sp, #8
 820              		.cfi_def_cfa_offset 0
 821              		@ sp needed
 822 002a 7047     		bx	lr
 823              	.L23:
 824              		.align	2
 825              	.L22:
 826 002c 00100240 		.word	1073876992
 827              		.cfi_endproc
 828              	.LFE1638:
 830              		.section	.text.MX_GPIO_Init,"ax",%progbits
 831              		.align	1
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 835              		.fpu fpv4-sp-d16
 837              	MX_GPIO_Init:
 838              	.LFB1639:
1173:Src/main.c    **** 
1174:Src/main.c    **** /**
1175:Src/main.c    ****   * @brief GPIO Initialization Function
1176:Src/main.c    ****   * @param None
1177:Src/main.c    ****   * @retval None
1178:Src/main.c    ****   */
1179:Src/main.c    **** static void MX_GPIO_Init(void)
1180:Src/main.c    **** {
 839              		.loc 1 1180 1 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 32
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843 0000 70B5     		push	{r4, r5, r6, lr}
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 4, -16
 846              		.cfi_offset 5, -12
 847              		.cfi_offset 6, -8
 848              		.cfi_offset 14, -4
 849 0002 88B0     		sub	sp, sp, #32
 850              		.cfi_def_cfa_offset 48
1181:Src/main.c    ****   LL_EXTI_InitTypeDef EXTI_InitStruct = {0};
 851              		.loc 1 1181 3 view .LVU294
 852              		.loc 1 1181 23 is_stmt 0 view .LVU295
 853 0004 0023     		movs	r3, #0
 854 0006 0693     		str	r3, [sp, #24]
 855 0008 0793     		str	r3, [sp, #28]
1182:Src/main.c    **** 
1183:Src/main.c    ****   /* GPIO Ports Clock Enable */
1184:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOC);
 856              		.loc 1 1184 3 is_stmt 1 view .LVU296
 857              	.LVL72:
 858              	.LBB578:
 859              	.LBI578:
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 78


 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      DMAMUXEN      LL_AHB1_GRP1_IsEnabledClock\n
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      CORDICEN      LL_AHB1_GRP1_IsEnabledClock\n
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      FMACEN        LL_AHB1_GRP1_IsEnabledClock\n
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_IsEnabledClock\n
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_IsEnabledClock
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CORDIC
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FMAC
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1ENR, Periphs) == Periphs) ? 1UL : 0UL);
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_DisableClock\n
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_DisableClock\n
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      DMAMUXEN      LL_AHB1_GRP1_DisableClock\n
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      CORDICEN      LL_AHB1_GRP1_DisableClock\n
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      FMACEN        LL_AHB1_GRP1_DisableClock\n
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_DisableClock\n
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_DisableClock
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CORDIC
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FMAC
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     DMAMUXRST     LL_AHB1_GRP1_ForceReset\n
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     CORDICRST     LL_AHB1_GRP1_ForceReset\n
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     FMACRST       LL_AHB1_GRP1_ForceReset\n
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     FLASHRST      LL_AHB1_GRP1_ForceReset\n
ARM GAS  /tmp/cc85dWdm.s 			page 79


 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CORDIC
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FMAC
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     DMAMUXRST     LL_AHB1_GRP1_ReleaseReset\n
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     CORDICRST     LL_AHB1_GRP1_ReleaseReset\n
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     FMACRST       LL_AHB1_GRP1_ReleaseReset\n
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     FLASHRST      LL_AHB1_GRP1_ReleaseReset\n
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CORDIC
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FMAC
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable AHB1 peripheral clocks in Sleep and Stop modes
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    DMAMUXSMEN    LL_AHB1_GRP1_EnableClockStopSleep\n
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    CORDICSMEN    LL_AHB1_GRP1_EnableClockStopSleep\n
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    FMACSMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    FLASHSMEN     LL_AHB1_GRP1_EnableClockStopSleep\n
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_EnableClockStopSleep
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CORDIC
ARM GAS  /tmp/cc85dWdm.s 			page 80


 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FMAC
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM1
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB1SMENR, Periphs);
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1SMENR, Periphs);
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Disable AHB1 peripheral clocks in Sleep and Stop modes
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    DMAMUXSMEN    LL_AHB1_GRP1_DisableClockStopSleep\n
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    CORDICSMEN    LL_AHB1_GRP1_DisableClockStopSleep\n
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    FMACSMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    FLASHSMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_DisableClockStopSleep
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CORDIC
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FMAC
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM1
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1SMENR, Periphs);
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB2 AHB2
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock.
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_EnableClock\n
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_EnableClock\n
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_EnableClock\n
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIODEN       LL_AHB2_GRP1_EnableClock\n
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOEEN       LL_AHB2_GRP1_EnableClock\n
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOFEN       LL_AHB2_GRP1_EnableClock\n
ARM GAS  /tmp/cc85dWdm.s 			page 81


 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOGEN       LL_AHB2_GRP1_EnableClock\n
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      ADC12EN       LL_AHB2_GRP1_EnableClock\n
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      ADC345EN      LL_AHB2_GRP1_EnableClock\n
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC1EN        LL_AHB2_GRP1_EnableClock\n
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC2EN        LL_AHB2_GRP1_EnableClock\n
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC3EN        LL_AHB2_GRP1_EnableClock\n
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC4EN        LL_AHB2_GRP1_EnableClock\n
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      AESEN         LL_AHB2_GRP1_EnableClock\n
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      RNGEN         LL_AHB2_GRP1_EnableClock
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC12
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC345 (*)
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC1
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC2 (*)
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC3
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC4 (*)
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
 860              		.loc 3 451 22 view .LVU297
 861              	.LBB579:
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 862              		.loc 3 453 3 view .LVU298
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 863              		.loc 3 454 3 view .LVU299
 864 000a 03F18043 		add	r3, r3, #1073741824
 865 000e 03F50433 		add	r3, r3, #135168
 866 0012 DA6C     		ldr	r2, [r3, #76]
 867 0014 42F00402 		orr	r2, r2, #4
 868 0018 DA64     		str	r2, [r3, #76]
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 869              		.loc 3 456 3 view .LVU300
 870              		.loc 3 456 12 is_stmt 0 view .LVU301
 871 001a DA6C     		ldr	r2, [r3, #76]
 872 001c 02F00402 		and	r2, r2, #4
 873              		.loc 3 456 10 view .LVU302
 874 0020 0492     		str	r2, [sp, #16]
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 875              		.loc 3 457 3 is_stmt 1 view .LVU303
 876 0022 049A     		ldr	r2, [sp, #16]
 877              	.LVL73:
 878              		.loc 3 457 3 is_stmt 0 view .LVU304
 879              	.LBE579:
 880              	.LBE578:
ARM GAS  /tmp/cc85dWdm.s 			page 82


1185:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOF);
 881              		.loc 1 1185 3 is_stmt 1 view .LVU305
 882              	.LBB580:
 883              	.LBI580:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 884              		.loc 3 451 22 view .LVU306
 885              	.LBB581:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 886              		.loc 3 453 3 view .LVU307
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 887              		.loc 3 454 3 view .LVU308
 888 0024 DA6C     		ldr	r2, [r3, #76]
 889 0026 42F02002 		orr	r2, r2, #32
 890 002a DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 891              		.loc 3 456 3 view .LVU309
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 892              		.loc 3 456 12 is_stmt 0 view .LVU310
 893 002c DA6C     		ldr	r2, [r3, #76]
 894 002e 02F02002 		and	r2, r2, #32
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 895              		.loc 3 456 10 view .LVU311
 896 0032 0392     		str	r2, [sp, #12]
 897              		.loc 3 457 3 is_stmt 1 view .LVU312
 898 0034 039A     		ldr	r2, [sp, #12]
 899              	.LVL74:
 900              		.loc 3 457 3 is_stmt 0 view .LVU313
 901              	.LBE581:
 902              	.LBE580:
1186:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 903              		.loc 1 1186 3 is_stmt 1 view .LVU314
 904              	.LBB582:
 905              	.LBI582:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 906              		.loc 3 451 22 view .LVU315
 907              	.LBB583:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 908              		.loc 3 453 3 view .LVU316
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 909              		.loc 3 454 3 view .LVU317
 910 0036 DA6C     		ldr	r2, [r3, #76]
 911 0038 42F00102 		orr	r2, r2, #1
 912 003c DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 913              		.loc 3 456 3 view .LVU318
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 914              		.loc 3 456 12 is_stmt 0 view .LVU319
 915 003e DA6C     		ldr	r2, [r3, #76]
 916 0040 02F00102 		and	r2, r2, #1
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 917              		.loc 3 456 10 view .LVU320
 918 0044 0292     		str	r2, [sp, #8]
 919              		.loc 3 457 3 is_stmt 1 view .LVU321
 920 0046 029A     		ldr	r2, [sp, #8]
 921              	.LVL75:
 922              		.loc 3 457 3 is_stmt 0 view .LVU322
 923              	.LBE583:
ARM GAS  /tmp/cc85dWdm.s 			page 83


 924              	.LBE582:
1187:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
 925              		.loc 1 1187 3 is_stmt 1 view .LVU323
 926              	.LBB584:
 927              	.LBI584:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 928              		.loc 3 451 22 view .LVU324
 929              	.LBB585:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 930              		.loc 3 453 3 view .LVU325
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 931              		.loc 3 454 3 view .LVU326
 932 0048 DA6C     		ldr	r2, [r3, #76]
 933 004a 42F00202 		orr	r2, r2, #2
 934 004e DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 935              		.loc 3 456 3 view .LVU327
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 936              		.loc 3 456 12 is_stmt 0 view .LVU328
 937 0050 DB6C     		ldr	r3, [r3, #76]
 938 0052 03F00203 		and	r3, r3, #2
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 939              		.loc 3 456 10 view .LVU329
 940 0056 0193     		str	r3, [sp, #4]
 941              		.loc 3 457 3 is_stmt 1 view .LVU330
 942 0058 019B     		ldr	r3, [sp, #4]
 943              	.LVL76:
 944              		.loc 3 457 3 is_stmt 0 view .LVU331
 945              	.LBE585:
 946              	.LBE584:
1188:Src/main.c    **** 
1189:Src/main.c    ****   /**/
1190:Src/main.c    ****   LL_SYSCFG_SetEXTISource(LL_SYSCFG_EXTI_PORTC, LL_SYSCFG_EXTI_LINE10);
 947              		.loc 1 1190 3 is_stmt 1 view .LVU332
 948              	.LBB586:
 949              	.LBI586:
 950              		.file 4 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @file    stm32g4xx_ll_system.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief   Header file of SYSTEM LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   @verbatim
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ==============================================================================
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                      ##### How to use this driver #####
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ==============================================================================
ARM GAS  /tmp/cc85dWdm.s 			page 84


  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****     [..]
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****     The LL SYSTEM driver contains a set of generic APIs that can be
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****     used by user:
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****       (+) Some of the FLASH features need to be handled in the SYSTEM file.
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****       (+) Access to DBGCMU registers
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****       (+) Access to SYSCFG registers
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****       (+) Access to VREFBUF registers
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   @endverbatim
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   ******************************************************************************
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #ifndef __STM32G4xx_LL_SYSTEM_H
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define __STM32G4xx_LL_SYSTEM_H
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #ifdef __cplusplus
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** extern "C" {
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Includes ------------------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #include "stm32g4xx.h"
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @addtogroup STM32G4xx_LL_Driver
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined (FLASH) || defined (SYSCFG) || defined (DBGMCU) || defined (VREFBUF)
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL SYSTEM
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Private types -------------------------------------------------------------*/
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Private variables ---------------------------------------------------------*/
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Private constants ---------------------------------------------------------*/
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_Private_Constants SYSTEM Private Constants
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Defines used for position in the register */
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define DBGMCU_REVID_POSITION         (uint32_t)POSITION_VAL(DBGMCU_IDCODE_REV_ID)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief Power-down in Run mode Flash key
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define FLASH_PDKEY1                  0x04152637U /*!< Flash power down key1 */
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define FLASH_PDKEY2                  0xFAFBFCFDU /*!< Flash power down key2: used with FLASH_PDKEY
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                        to unlock the RUN_PD bit in FLASH_ACR */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Private macros ------------------------------------------------------------*/
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 85


  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Exported types ------------------------------------------------------------*/
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Exported constants --------------------------------------------------------*/
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Constants SYSTEM Exported Constants
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_REMAP SYSCFG REMAP
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_REMAP_FLASH              0x00000000U                                           /*
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_REMAP_SYSTEMFLASH        SYSCFG_MEMRMP_MEM_MODE_0                              /*
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_REMAP_SRAM               (SYSCFG_MEMRMP_MEM_MODE_1 | SYSCFG_MEMRMP_MEM_MODE_0) /*
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(FMC_Bank1_R)
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_REMAP_FMC                SYSCFG_MEMRMP_MEM_MODE_1                              /*
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* FMC_Bank1_R */
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_REMAP_QUADSPI            (SYSCFG_MEMRMP_MEM_MODE_2 | SYSCFG_MEMRMP_MEM_MODE_1) /*
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(SYSCFG_MEMRMP_FB_MODE)
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_BANKMODE SYSCFG BANK MODE
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_BANKMODE_BANK1           0x00000000U               /*!< Flash Bank1 mapped at 0x0
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                       and Flash Bank2 mapped at 0x0
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_BANKMODE_BANK2           SYSCFG_MEMRMP_FB_MODE     /*!< Flash Bank2 mapped at 0x0
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                       and Flash Bank1 mapped at 0x0
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* SYSCFG_MEMRMP_FB_MODE */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_I2C_FASTMODEPLUS SYSCFG I2C FASTMODEPLUS
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB6     SYSCFG_CFGR1_I2C_PB6_FMP  /*!< Enable Fast Mode Plus on 
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB7     SYSCFG_CFGR1_I2C_PB7_FMP  /*!< Enable Fast Mode Plus on 
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_PB8_FMP)
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB8     SYSCFG_CFGR1_I2C_PB8_FMP  /*!< Enable Fast Mode Plus on 
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* SYSCFG_CFGR1_I2C_PB8_FMP */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_PB9_FMP)
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB9     SYSCFG_CFGR1_I2C_PB9_FMP  /*!< Enable Fast Mode Plus on 
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* SYSCFG_CFGR1_I2C_PB9_FMP */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C1    SYSCFG_CFGR1_I2C1_FMP     /*!< Enable Fast Mode Plus on 
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(I2C2)
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C2    SYSCFG_CFGR1_I2C2_FMP     /*!< Enable Fast Mode Plus on 
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* I2C2 */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C3    SYSCFG_CFGR1_I2C3_FMP     /*!< Enable Fast Mode Plus on 
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(I2C4)
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C4    SYSCFG_CFGR1_I2C4_FMP     /*!< Enable Fast Mode Plus on 
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* I2C4 */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_PORT SYSCFG EXTI PORT
ARM GAS  /tmp/cc85dWdm.s 			page 86


 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTA               0U                        /*!< EXTI PORT A              
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTB               1U                        /*!< EXTI PORT B              
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTC               2U                        /*!< EXTI PORT C              
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTD               3U                        /*!< EXTI PORT D              
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTE               4U                        /*!< EXTI PORT E              
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTF               5U                        /*!< EXTI PORT F              
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTG               6U                        /*!< EXTI PORT G              
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_LINE SYSCFG EXTI LINE
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE0               (uint32_t)((0x000FU << 16U) | 0U)  /* !< EXTI_POSITION_0
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE1               (uint32_t)((0x00F0U << 16U) | 0U)  /* !< EXTI_POSITION_4
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE2               (uint32_t)((0x0F00U << 16U) | 0U)  /* !< EXTI_POSITION_8
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE3               (uint32_t)((0xF000U << 16U) | 0U)  /* !< EXTI_POSITION_1
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE4               (uint32_t)((0x000FU << 16U) | 1U)  /* !< EXTI_POSITION_0
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE5               (uint32_t)((0x00F0U << 16U) | 1U)  /* !< EXTI_POSITION_4
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE6               (uint32_t)((0x0F00U << 16U) | 1U)  /* !< EXTI_POSITION_8
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE7               (uint32_t)((0xF000U << 16U) | 1U)  /* !< EXTI_POSITION_1
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE8               (uint32_t)((0x000FU << 16U) | 2U)  /* !< EXTI_POSITION_0
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE9               (uint32_t)((0x00F0U << 16U) | 2U)  /* !< EXTI_POSITION_4
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE10              (uint32_t)((0x0F00U << 16U) | 2U)  /* !< EXTI_POSITION_8
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE11              (uint32_t)((0xF000U << 16U) | 2U)  /* !< EXTI_POSITION_1
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE12              (uint32_t)((0x000FU << 16U) | 3U)  /* !< EXTI_POSITION_0
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE13              (uint32_t)((0x00F0U << 16U) | 3U)  /* !< EXTI_POSITION_4
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE14              (uint32_t)((0x0F00U << 16U) | 3U)  /* !< EXTI_POSITION_8
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE15              (uint32_t)((0xF000U << 16U) | 3U)  /* !< EXTI_POSITION_1
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TIMBREAK SYSCFG TIMER BREAK
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_ECC             SYSCFG_CFGR2_ECCL  /*!< Enables and locks the ECC error 
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                    with Break Input of TIM1/8/15/16
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_PVD             SYSCFG_CFGR2_PVDL  /*!< Enables and locks the PVD connec
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                    with TIM1/8/15/16/17 Break Input
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                    and also the PVDE and PLS bits o
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_SRAM_PARITY     SYSCFG_CFGR2_SPL   /*!< Enables and locks the SRAM_PARIT
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                    with Break Input of TIM1/8/15/16
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_LOCKUP          SYSCFG_CFGR2_CLL   /*!< Enables and locks the LOCKUP out
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****                                                                    with Break Input of TIM1/15/16/1
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_CCMSRAMWRP SYSCFG CCMSRAM WRP
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE0         SYSCFG_SWPR_PAGE0  /*!< CCMSRAM Write protection page 0 
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE1         SYSCFG_SWPR_PAGE1  /*!< CCMSRAM Write protection page 1 
ARM GAS  /tmp/cc85dWdm.s 			page 87


 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE2         SYSCFG_SWPR_PAGE2  /*!< CCMSRAM Write protection page 2 
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE3         SYSCFG_SWPR_PAGE3  /*!< CCMSRAM Write protection page 3 
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE4         SYSCFG_SWPR_PAGE4  /*!< CCMSRAM Write protection page 4 
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE5         SYSCFG_SWPR_PAGE5  /*!< CCMSRAM Write protection page 5 
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE6         SYSCFG_SWPR_PAGE6  /*!< CCMSRAM Write protection page 6 
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE7         SYSCFG_SWPR_PAGE7  /*!< CCMSRAM Write protection page 7 
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE8         SYSCFG_SWPR_PAGE8  /*!< CCMSRAM Write protection page 8 
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE9         SYSCFG_SWPR_PAGE9  /*!< CCMSRAM Write protection page 9 
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(SYSCFG_SWPR_PAGE10)
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE10        SYSCFG_SWPR_PAGE10 /*!< CCMSRAM Write protection page 10
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE11        SYSCFG_SWPR_PAGE11 /*!< CCMSRAM Write protection page 11
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE12        SYSCFG_SWPR_PAGE12 /*!< CCMSRAM Write protection page 12
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE13        SYSCFG_SWPR_PAGE13 /*!< CCMSRAM Write protection page 13
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE14        SYSCFG_SWPR_PAGE14 /*!< CCMSRAM Write protection page 14
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE15        SYSCFG_SWPR_PAGE15 /*!< CCMSRAM Write protection page 15
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE16        SYSCFG_SWPR_PAGE16 /*!< CCMSRAM Write protection page 16
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE17        SYSCFG_SWPR_PAGE17 /*!< CCMSRAM Write protection page 17
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE18        SYSCFG_SWPR_PAGE18 /*!< CCMSRAM Write protection page 18
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE19        SYSCFG_SWPR_PAGE19 /*!< CCMSRAM Write protection page 19
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE20        SYSCFG_SWPR_PAGE20 /*!< CCMSRAM Write protection page 20
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE21        SYSCFG_SWPR_PAGE21 /*!< CCMSRAM Write protection page 21
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE22        SYSCFG_SWPR_PAGE22 /*!< CCMSRAM Write protection page 22
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE23        SYSCFG_SWPR_PAGE23 /*!< CCMSRAM Write protection page 23
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE24        SYSCFG_SWPR_PAGE24 /*!< CCMSRAM Write protection page 24
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE25        SYSCFG_SWPR_PAGE25 /*!< CCMSRAM Write protection page 25
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE26        SYSCFG_SWPR_PAGE26 /*!< CCMSRAM Write protection page 26
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE27        SYSCFG_SWPR_PAGE27 /*!< CCMSRAM Write protection page 27
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE28        SYSCFG_SWPR_PAGE28 /*!< CCMSRAM Write protection page 28
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE29        SYSCFG_SWPR_PAGE29 /*!< CCMSRAM Write protection page 29
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE30        SYSCFG_SWPR_PAGE30 /*!< CCMSRAM Write protection page 30
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_SYSCFG_CCMSRAMWRP_PAGE31        SYSCFG_SWPR_PAGE31 /*!< CCMSRAM Write protection page 31
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* SYSCFG_SWPR_PAGE10 */
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TRACE DBGMCU TRACE Pin Assignment
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_TRACE_NONE               0x00000000U                                     /*!< TRA
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_TRACE_ASYNCH             DBGMCU_CR_TRACE_IOEN                            /*!< TRA
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE1        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_0) /*!< TRA
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE2        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_1) /*!< TRA
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE4        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE)   /*!< TRA
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP1_STOP_IP DBGMCU APB1 GRP1 STOP IP
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM2_STOP      DBGMCU_APB1FZR1_DBG_TIM2_STOP   /*!< The counter clock o
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM3)
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM3_STOP      DBGMCU_APB1FZR1_DBG_TIM3_STOP   /*!< The counter clock o
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM3 */
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM4)
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM4_STOP      DBGMCU_APB1FZR1_DBG_TIM4_STOP   /*!< The counter clock o
ARM GAS  /tmp/cc85dWdm.s 			page 88


 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM4 */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM5)
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM5_STOP      DBGMCU_APB1FZR1_DBG_TIM5_STOP   /*!< The counter clock o
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM5 */
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM6_STOP      DBGMCU_APB1FZR1_DBG_TIM6_STOP   /*!< The counter clock o
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM7)
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM7_STOP      DBGMCU_APB1FZR1_DBG_TIM7_STOP   /*!< The counter clock o
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM7 */
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_RTC_STOP       DBGMCU_APB1FZR1_DBG_RTC_STOP    /*!< The clock of the RT
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_WWDG_STOP      DBGMCU_APB1FZR1_DBG_WWDG_STOP   /*!< The window watchdog
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_IWDG_STOP      DBGMCU_APB1FZR1_DBG_IWDG_STOP   /*!< The independent wat
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C1_STOP      DBGMCU_APB1FZR1_DBG_I2C1_STOP   /*!< The I2C1 SMBus time
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(I2C2)
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C2_STOP      DBGMCU_APB1FZR1_DBG_I2C2_STOP   /*!< The I2C2 SMBus time
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* I2C2 */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C3_STOP      DBGMCU_APB1FZR1_DBG_I2C3_STOP   /*!< The I2C3 SMBus time
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_LPTIM1_STOP    DBGMCU_APB1FZR1_DBG_LPTIM1_STOP /*!< The counter clock o
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP2_STOP_IP DBGMCU APB1 GRP2 STOP IP
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(I2C4)
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP2_I2C4_STOP      DBGMCU_APB1FZR2_DBG_I2C4_STOP   /*!< The I2C4 SMBus time
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* I2C4 */
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB2_GRP1_STOP_IP DBGMCU APB2 GRP1 STOP IP
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM1_STOP      DBGMCU_APB2FZ_DBG_TIM1_STOP     /*!< The counter clock o
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM8)
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM8_STOP      DBGMCU_APB2FZ_DBG_TIM8_STOP     /*!< The counter clock o
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM8 */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM15_STOP     DBGMCU_APB2FZ_DBG_TIM15_STOP    /*!< The counter clock o
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM16_STOP     DBGMCU_APB2FZ_DBG_TIM16_STOP    /*!< The counter clock o
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM17)
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM17_STOP     DBGMCU_APB2FZ_DBG_TIM17_STOP    /*!< The counter clock o
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM17 */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(TIM20)
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM20_STOP     DBGMCU_APB2FZ_DBG_TIM20_STOP    /*!< The counter clock o
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* TIM20 */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(HRTIM1)
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_HRTIM1_STOP     DBGMCU_APB2FZ_DBG_HRTIM1_STOP    /*!< The counter clock
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* HRTIM1 */
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(VREFBUF)
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_VOLTAGE VREFBUF VOLTAGE
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 89


 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_VREFBUF_VOLTAGE_SCALE0          ((uint32_t)0x00000000) /*!< Voltage reference scale 0 (V
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_VREFBUF_VOLTAGE_SCALE1          VREFBUF_CSR_VRS_0      /*!< Voltage reference scale 1 (V
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_VREFBUF_VOLTAGE_SCALE2          VREFBUF_CSR_VRS_1      /*!< Voltage reference scale 2 (V
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* VREFBUF */
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_LATENCY FLASH LATENCY
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_0                 FLASH_ACR_LATENCY_0WS   /*!< FLASH Zero wait state */
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_1                 FLASH_ACR_LATENCY_1WS   /*!< FLASH One wait state */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_2                 FLASH_ACR_LATENCY_2WS   /*!< FLASH Two wait states */
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_3                 FLASH_ACR_LATENCY_3WS   /*!< FLASH Three wait states */
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_4                 FLASH_ACR_LATENCY_4WS   /*!< FLASH Four wait states */
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(FLASH_ACR_LATENCY_5WS)
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_5                 FLASH_ACR_LATENCY_5WS   /*!< FLASH five wait state */
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_6                 FLASH_ACR_LATENCY_6WS   /*!< FLASH six wait state */
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_7                 FLASH_ACR_LATENCY_7WS   /*!< FLASH seven wait states */
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_8                 FLASH_ACR_LATENCY_8WS   /*!< FLASH eight wait states */
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_9                 FLASH_ACR_LATENCY_9WS   /*!< FLASH nine wait states */
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_10                FLASH_ACR_LATENCY_10WS  /*!< FLASH ten wait states */
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_11                FLASH_ACR_LATENCY_11WS  /*!< FLASH eleven wait states */
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_12                FLASH_ACR_LATENCY_12WS  /*!< FLASH twelve wait states */
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_13                FLASH_ACR_LATENCY_13WS  /*!< FLASH thirteen wait states 
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_14                FLASH_ACR_LATENCY_14WS  /*!< FLASH fourteen wait states 
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #define LL_FLASH_LATENCY_15                FLASH_ACR_LATENCY_15WS  /*!< FLASH fifteen wait states *
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* FLASH_ACR_LATENCY_5WS */
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Exported macro ------------------------------------------------------------*/
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /* Exported functions --------------------------------------------------------*/
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Functions SYSTEM Exported Functions
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_SYSCFG SYSCFG
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Set memory mapping at address 0x00000000
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP MEM_MODE      LL_SYSCFG_SetRemapMemory
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Memory This parameter can be one of the following values:
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FMC (*)
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_QUADSPI (*)
ARM GAS  /tmp/cc85dWdm.s 			page 90


 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapMemory(uint32_t Memory)
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(SYSCFG->MEMRMP, SYSCFG_MEMRMP_MEM_MODE, Memory);
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get memory mapping at address 0x00000000
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP MEM_MODE      LL_SYSCFG_GetRemapMemory
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FMC (*)
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_QUADSPI (*)
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetRemapMemory(void)
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_MEM_MODE));
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(SYSCFG_MEMRMP_FB_MODE)
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Select Flash bank mode (Bank flashed at 0x08000000)
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP FB_MODE       LL_SYSCFG_SetFlashBankMode
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Bank This parameter can be one of the following values:
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK1
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK2
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetFlashBankMode(uint32_t Bank)
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(SYSCFG->MEMRMP, SYSCFG_MEMRMP_FB_MODE, Bank);
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get Flash bank mode (Bank flashed at 0x08000000)
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_MEMRMP FB_MODE       LL_SYSCFG_GetFlashBankMode
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK1
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK2
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetFlashBankMode(void)
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_FB_MODE));
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* SYSCFG_MEMRMP_FB_MODE */
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable I/O analog switch voltage booster.
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note   When voltage booster is enabled, I/O analog switches are supplied
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         by a dedicated voltage booster, from VDD power domain. This is
ARM GAS  /tmp/cc85dWdm.s 			page 91


 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         the recommended configuration with low VDDA voltage operation.
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note   The I/O analog switch voltage booster is relevant for peripherals
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         using I/O in analog input: ADC, COMP, OPAMP.
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         However, COMP and OPAMP inputs have a high impedance and
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         voltage booster do not impact performance significantly.
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         Therefore, the voltage booster is mainly intended for
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         usage with ADC.
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 BOOSTEN       LL_SYSCFG_EnableAnalogBooster
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableAnalogBooster(void)
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable I/O analog switch voltage booster.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note   When voltage booster is enabled, I/O analog switches are supplied
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         by a dedicated voltage booster, from VDD power domain. This is
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         the recommended configuration with low VDDA voltage operation.
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note   The I/O analog switch voltage booster is relevant for peripherals
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         using I/O in analog input: ADC, COMP, OPAMP.
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         However, COMP and OPAMP inputs have a high impedance and
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         voltage booster do not impact performance significantly.
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         Therefore, the voltage booster is mainly intended for
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         usage with ADC.
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 BOOSTEN       LL_SYSCFG_DisableAnalogBooster
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableAnalogBooster(void)
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOSTEN);
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable the I2C fast mode plus driving capability.
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 I2C_PBx_FMP   LL_SYSCFG_EnableFastModePlus\n
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR1 I2Cx_FMP      LL_SYSCFG_EnableFastModePlus
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8 (*)
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9 (*)
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C3
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C4 (*)
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableFastModePlus(uint32_t ConfigFastModePlus)
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, ConfigFastModePlus);
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 92


 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable the I2C fast mode plus driving capability.
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 I2C_PBx_FMP   LL_SYSCFG_DisableFastModePlus\n
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR1 I2Cx_FMP      LL_SYSCFG_DisableFastModePlus
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8 (*)
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9 (*)
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C3
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C4 (*)
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableFastModePlus(uint32_t ConfigFastModePlus)
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, ConfigFastModePlus);
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Invalid operation Interrupt
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_0      LL_SYSCFG_EnableIT_FPU_IOC
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_IOC(void)
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_0);
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Divide-by-zero Interrupt
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_1      LL_SYSCFG_EnableIT_FPU_DZC
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_DZC(void)
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_1);
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Underflow Interrupt
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_2      LL_SYSCFG_EnableIT_FPU_UFC
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_UFC(void)
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_2);
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Overflow Interrupt
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_3      LL_SYSCFG_EnableIT_FPU_OFC
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_OFC(void)
ARM GAS  /tmp/cc85dWdm.s 			page 93


 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_3);
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Input denormal Interrupt
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_4      LL_SYSCFG_EnableIT_FPU_IDC
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_IDC(void)
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_4);
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Floating Point Unit Inexact Interrupt
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_5      LL_SYSCFG_EnableIT_FPU_IXC
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableIT_FPU_IXC(void)
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_5);
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Invalid operation Interrupt
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_0      LL_SYSCFG_DisableIT_FPU_IOC
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_IOC(void)
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_0);
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Divide-by-zero Interrupt
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_1      LL_SYSCFG_DisableIT_FPU_DZC
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_DZC(void)
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_1);
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Underflow Interrupt
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_2      LL_SYSCFG_DisableIT_FPU_UFC
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_UFC(void)
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_2);
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Overflow Interrupt
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_3      LL_SYSCFG_DisableIT_FPU_OFC
ARM GAS  /tmp/cc85dWdm.s 			page 94


 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_OFC(void)
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_3);
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Input denormal Interrupt
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_4      LL_SYSCFG_DisableIT_FPU_IDC
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_IDC(void)
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_4);
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Floating Point Unit Inexact Interrupt
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_5      LL_SYSCFG_DisableIT_FPU_IXC
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableIT_FPU_IXC(void)
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_5);
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Invalid operation Interrupt source is enabled or disabled.
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_0      LL_SYSCFG_IsEnabledIT_FPU_IOC
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_IOC(void)
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_0) == (SYSCFG_CFGR1_FPU_IE_0)) ? 1UL : 0UL);
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Divide-by-zero Interrupt source is enabled or disabled.
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_1      LL_SYSCFG_IsEnabledIT_FPU_DZC
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_DZC(void)
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_1) == (SYSCFG_CFGR1_FPU_IE_1)) ? 1UL : 0UL);
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Underflow Interrupt source is enabled or disabled.
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_2      LL_SYSCFG_IsEnabledIT_FPU_UFC
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_UFC(void)
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_2) == (SYSCFG_CFGR1_FPU_IE_2)) ? 1UL : 0UL);
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 95


 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Overflow Interrupt source is enabled or disabled.
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_3      LL_SYSCFG_IsEnabledIT_FPU_OFC
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_OFC(void)
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_3) == (SYSCFG_CFGR1_FPU_IE_3)) ? 1UL : 0UL);
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Input denormal Interrupt source is enabled or disabled.
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_4      LL_SYSCFG_IsEnabledIT_FPU_IDC
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_IDC(void)
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_4) == (SYSCFG_CFGR1_FPU_IE_4)) ? 1UL : 0UL);
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Floating Point Unit Inexact Interrupt source is enabled or disabled.
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 FPU_IE_5      LL_SYSCFG_IsEnabledIT_FPU_IXC
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledIT_FPU_IXC(void)
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_FPU_IE_5) == (SYSCFG_CFGR1_FPU_IE_5)) ? 1UL : 0UL);
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Configure source input for the EXTI external interrupt.
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTIx         LL_SYSCFG_SetEXTISource\n
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTIx         LL_SYSCFG_SetEXTISource\n
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTIx         LL_SYSCFG_SetEXTISource\n
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTIx         LL_SYSCFG_SetEXTISource
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Port This parameter can be one of the following values:
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTF
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTG
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
ARM GAS  /tmp/cc85dWdm.s 			page 96


 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetEXTISource(uint32_t Port, uint32_t Line)
 951              		.loc 4 713 22 view .LVU333
 952              	.LBB587:
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(SYSCFG->EXTICR[Line & 0x3U], (Line >> 16U), Port << (POSITION_VAL((Line >> 16U)) & 0x1
 953              		.loc 4 715 3 view .LVU334
 954 005a 574B     		ldr	r3, .L38
 955 005c 1A69     		ldr	r2, [r3, #16]
 956 005e 22F47062 		bic	r2, r2, #3840
 957              	.LVL77:
 958              	.LBB588:
 959              	.LBI588:
 960              		.file 5 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  /tmp/cc85dWdm.s 			page 97


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc85dWdm.s 			page 98


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 99


 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  /tmp/cc85dWdm.s 			page 100


 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc85dWdm.s 			page 101


 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 102


 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 103


 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
ARM GAS  /tmp/cc85dWdm.s 			page 104


 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 105


 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 106


 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
ARM GAS  /tmp/cc85dWdm.s 			page 107


 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
ARM GAS  /tmp/cc85dWdm.s 			page 108


 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
ARM GAS  /tmp/cc85dWdm.s 			page 109


 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  /tmp/cc85dWdm.s 			page 110


 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 111


 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
ARM GAS  /tmp/cc85dWdm.s 			page 112


 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 113


 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/cc85dWdm.s 			page 114


1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 961              		.loc 5 1048 31 view .LVU335
 962              	.LBB589:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 963              		.loc 5 1050 3 view .LVU336
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 964              		.loc 5 1055 4 view .LVU337
 965 0062 4FF47063 		mov	r3, #3840
 966              		.syntax unified
 967              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc85dWdm.s 			page 115


 968 0066 93FAA3F3 		rbit r3, r3
 969              	@ 0 "" 2
 970              	.LVL78:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 971              		.loc 5 1068 3 view .LVU338
 972              		.loc 5 1068 3 is_stmt 0 view .LVU339
 973              		.thumb
 974              		.syntax unified
 975              	.LBE589:
 976              	.LBE588:
 977              	.LBB590:
 978              	.LBI590:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 979              		.loc 5 1078 30 is_stmt 1 view .LVU340
 980              	.LBB591:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 981              		.loc 5 1089 3 view .LVU341
 982              		.loc 5 1089 6 is_stmt 0 view .LVU342
 983 006a 002B     		cmp	r3, #0
 984 006c 00F09880 		beq	.L31
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 985              		.loc 5 1093 3 is_stmt 1 view .LVU343
 986              		.loc 5 1093 10 is_stmt 0 view .LVU344
ARM GAS  /tmp/cc85dWdm.s 			page 116


 987 0070 B3FA83F3 		clz	r3, r3
 988              	.LVL79:
 989              	.L25:
 990              		.loc 5 1093 10 view .LVU345
 991              	.LBE591:
 992              	.LBE590:
 993              		.loc 4 715 3 view .LVU346
 994 0074 03F01F03 		and	r3, r3, #31
 995 0078 0221     		movs	r1, #2
 996 007a 01FA03F3 		lsl	r3, r1, r3
 997 007e 1343     		orrs	r3, r3, r2
 998 0080 4D4A     		ldr	r2, .L38
 999 0082 1361     		str	r3, [r2, #16]
 1000              	.LVL80:
 1001              		.loc 4 715 3 view .LVU347
 1002              	.LBE587:
 1003              	.LBE586:
1191:Src/main.c    **** 
1192:Src/main.c    ****   /**/
1193:Src/main.c    ****   LL_SYSCFG_SetEXTISource(LL_SYSCFG_EXTI_PORTB, LL_SYSCFG_EXTI_LINE8);
 1004              		.loc 1 1193 3 is_stmt 1 view .LVU348
 1005              	.LBB595:
 1006              	.LBI595:
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 1007              		.loc 4 713 22 view .LVU349
 1008              	.LBB596:
 1009              		.loc 4 715 3 view .LVU350
 1010 0084 1269     		ldr	r2, [r2, #16]
 1011 0086 22F00F02 		bic	r2, r2, #15
 1012              	.LVL81:
 1013              	.LBB597:
 1014              	.LBI597:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1015              		.loc 5 1048 31 view .LVU351
 1016              	.LBB598:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1017              		.loc 5 1050 3 view .LVU352
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1018              		.loc 5 1055 4 view .LVU353
 1019 008a 0F23     		movs	r3, #15
 1020              		.syntax unified
 1021              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1022 008c 93FAA3F3 		rbit r3, r3
 1023              	@ 0 "" 2
 1024              	.LVL82:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1025              		.loc 5 1068 3 view .LVU354
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1026              		.loc 5 1068 3 is_stmt 0 view .LVU355
 1027              		.thumb
 1028              		.syntax unified
 1029              	.LBE598:
 1030              	.LBE597:
 1031              	.LBB599:
 1032              	.LBI599:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1033              		.loc 5 1078 30 is_stmt 1 view .LVU356
ARM GAS  /tmp/cc85dWdm.s 			page 117


 1034              	.LBB600:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1035              		.loc 5 1089 3 view .LVU357
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1036              		.loc 5 1089 6 is_stmt 0 view .LVU358
 1037 0090 002B     		cmp	r3, #0
 1038 0092 00F08780 		beq	.L32
 1039              		.loc 5 1093 3 is_stmt 1 view .LVU359
 1040              		.loc 5 1093 10 is_stmt 0 view .LVU360
 1041 0096 B3FA83F3 		clz	r3, r3
 1042              	.LVL83:
 1043              	.L26:
 1044              		.loc 5 1093 10 view .LVU361
 1045              	.LBE600:
 1046              	.LBE599:
 1047              		.loc 4 715 3 view .LVU362
 1048 009a 03F01F03 		and	r3, r3, #31
 1049 009e 0125     		movs	r5, #1
 1050 00a0 05FA03F3 		lsl	r3, r5, r3
 1051 00a4 1343     		orrs	r3, r3, r2
 1052 00a6 444A     		ldr	r2, .L38
 1053 00a8 1361     		str	r3, [r2, #16]
 1054              	.LVL84:
 1055              		.loc 4 715 3 view .LVU363
 1056              	.LBE596:
 1057              	.LBE595:
1194:Src/main.c    **** 
1195:Src/main.c    ****   /**/
1196:Src/main.c    ****   EXTI_InitStruct.Line_0_31 = LL_EXTI_LINE_10;
 1058              		.loc 1 1196 3 is_stmt 1 view .LVU364
 1059              		.loc 1 1196 29 is_stmt 0 view .LVU365
 1060 00aa 4FF48064 		mov	r4, #1024
 1061 00ae 0594     		str	r4, [sp, #20]
1197:Src/main.c    ****   EXTI_InitStruct.LineCommand = ENABLE;
 1062              		.loc 1 1197 3 is_stmt 1 view .LVU366
 1063              		.loc 1 1197 31 is_stmt 0 view .LVU367
 1064 00b0 8DF81C50 		strb	r5, [sp, #28]
1198:Src/main.c    ****   EXTI_InitStruct.Mode = LL_EXTI_MODE_IT;
 1065              		.loc 1 1198 3 is_stmt 1 view .LVU368
 1066              		.loc 1 1198 24 is_stmt 0 view .LVU369
 1067 00b4 0026     		movs	r6, #0
 1068 00b6 8DF81D60 		strb	r6, [sp, #29]
1199:Src/main.c    ****   EXTI_InitStruct.Trigger = LL_EXTI_TRIGGER_FALLING;
 1069              		.loc 1 1199 3 is_stmt 1 view .LVU370
 1070              		.loc 1 1199 27 is_stmt 0 view .LVU371
 1071 00ba 0223     		movs	r3, #2
 1072 00bc 8DF81E30 		strb	r3, [sp, #30]
1200:Src/main.c    ****   LL_EXTI_Init(&EXTI_InitStruct);
 1073              		.loc 1 1200 3 is_stmt 1 view .LVU372
 1074 00c0 05A8     		add	r0, sp, #20
 1075 00c2 FFF7FEFF 		bl	LL_EXTI_Init
 1076              	.LVL85:
1201:Src/main.c    **** 
1202:Src/main.c    ****   /**/
1203:Src/main.c    ****   EXTI_InitStruct.Line_0_31 = LL_EXTI_LINE_8;
 1077              		.loc 1 1203 3 view .LVU373
 1078              		.loc 1 1203 29 is_stmt 0 view .LVU374
ARM GAS  /tmp/cc85dWdm.s 			page 118


 1079 00c6 4FF48073 		mov	r3, #256
 1080 00ca 0593     		str	r3, [sp, #20]
1204:Src/main.c    ****   EXTI_InitStruct.LineCommand = ENABLE;
 1081              		.loc 1 1204 3 is_stmt 1 view .LVU375
 1082              		.loc 1 1204 31 is_stmt 0 view .LVU376
 1083 00cc 8DF81C50 		strb	r5, [sp, #28]
1205:Src/main.c    ****   EXTI_InitStruct.Mode = LL_EXTI_MODE_IT;
 1084              		.loc 1 1205 3 is_stmt 1 view .LVU377
 1085              		.loc 1 1205 24 is_stmt 0 view .LVU378
 1086 00d0 8DF81D60 		strb	r6, [sp, #29]
1206:Src/main.c    ****   EXTI_InitStruct.Trigger = LL_EXTI_TRIGGER_RISING;
 1087              		.loc 1 1206 3 is_stmt 1 view .LVU379
 1088              		.loc 1 1206 27 is_stmt 0 view .LVU380
 1089 00d4 8DF81E50 		strb	r5, [sp, #30]
1207:Src/main.c    ****   LL_EXTI_Init(&EXTI_InitStruct);
 1090              		.loc 1 1207 3 is_stmt 1 view .LVU381
 1091 00d8 05A8     		add	r0, sp, #20
 1092 00da FFF7FEFF 		bl	LL_EXTI_Init
 1093              	.LVL86:
1208:Src/main.c    **** 
1209:Src/main.c    ****   /**/
1210:Src/main.c    ****   LL_GPIO_SetPinPull(Start_Stop_GPIO_Port, Start_Stop_Pin, LL_GPIO_PULL_NO);
 1094              		.loc 1 1210 3 view .LVU382
 1095              	.LBB604:
 1096              	.LBI604:
 1097              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @file    stm32g4xx_ll_gpio.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifndef STM32G4xx_LL_GPIO_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define STM32G4xx_LL_GPIO_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
ARM GAS  /tmp/cc85dWdm.s 			page 119


  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** typedef struct
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 120


  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
ARM GAS  /tmp/cc85dWdm.s 			page 121


 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
ARM GAS  /tmp/cc85dWdm.s 			page 122


 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Register value
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
ARM GAS  /tmp/cc85dWdm.s 			page 123


 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
ARM GAS  /tmp/cc85dWdm.s 			page 124


 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
ARM GAS  /tmp/cc85dWdm.s 			page 125


 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 126


 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
ARM GAS  /tmp/cc85dWdm.s 			page 127


 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 1098              		.loc 6 496 22 view .LVU383
 1099              	.LBB605:
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 1100              		.loc 6 498 3 view .LVU384
 1101 00de 374B     		ldr	r3, .L38+4
 1102 00e0 DB68     		ldr	r3, [r3, #12]
 1103              	.LVL87:
 1104              	.LBB606:
 1105              	.LBI606:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1106              		.loc 5 1048 31 view .LVU385
 1107              	.LBB607:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1108              		.loc 5 1050 3 view .LVU386
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1109              		.loc 5 1055 4 view .LVU387
 1110              		.syntax unified
 1111              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1112 00e2 94FAA4F4 		rbit r4, r4
 1113              	@ 0 "" 2
 1114              	.LVL88:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1115              		.loc 5 1068 3 view .LVU388
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1116              		.loc 5 1068 3 is_stmt 0 view .LVU389
 1117              		.thumb
 1118              		.syntax unified
 1119              	.LBE607:
 1120              	.LBE606:
 1121              	.LBB608:
 1122              	.LBI608:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1123              		.loc 5 1078 30 is_stmt 1 view .LVU390
 1124              	.LBB609:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1125              		.loc 5 1089 3 view .LVU391
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1126              		.loc 5 1089 6 is_stmt 0 view .LVU392
 1127 00e6 002C     		cmp	r4, #0
 1128 00e8 5ED0     		beq	.L33
 1129              		.loc 5 1093 3 is_stmt 1 view .LVU393
 1130              		.loc 5 1093 10 is_stmt 0 view .LVU394
 1131 00ea B4FA84F4 		clz	r4, r4
 1132              	.LVL89:
 1133              	.L27:
 1134              		.loc 5 1093 10 view .LVU395
 1135              	.LBE609:
ARM GAS  /tmp/cc85dWdm.s 			page 128


 1136              	.LBE608:
 1137              		.loc 6 498 3 view .LVU396
 1138 00ee 6400     		lsls	r4, r4, #1
 1139 00f0 0322     		movs	r2, #3
 1140 00f2 02FA04F4 		lsl	r4, r2, r4
 1141 00f6 23EA0404 		bic	r4, r3, r4
 1142              	.LVL90:
 1143              	.LBB611:
 1144              	.LBI611:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1145              		.loc 5 1048 31 is_stmt 1 view .LVU397
 1146              	.LBB612:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1147              		.loc 5 1050 3 view .LVU398
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1148              		.loc 5 1055 4 view .LVU399
 1149 00fa 4FF48063 		mov	r3, #1024
 1150              		.syntax unified
 1151              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1152 00fe 93FAA3F3 		rbit r3, r3
 1153              	@ 0 "" 2
 1154              	.LVL91:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1155              		.loc 5 1068 3 view .LVU400
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1156              		.loc 5 1068 3 is_stmt 0 view .LVU401
 1157              		.thumb
 1158              		.syntax unified
 1159              	.LBE612:
 1160              	.LBE611:
 1161              	.LBE605:
 1162              	.LBE604:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1163              		.loc 5 1089 3 is_stmt 1 view .LVU402
 1164              	.LBB616:
 1165              	.LBB614:
 1166              		.loc 6 498 3 is_stmt 0 view .LVU403
 1167 0102 2E4B     		ldr	r3, .L38+4
 1168 0104 DC60     		str	r4, [r3, #12]
 1169              	.LVL92:
 1170              		.loc 6 498 3 view .LVU404
 1171              	.LBE614:
 1172              	.LBE616:
1211:Src/main.c    **** 
1212:Src/main.c    ****   /**/
1213:Src/main.c    ****   LL_GPIO_SetPinPull(M1_ENCODER_I_GPIO_Port, M1_ENCODER_I_Pin, LL_GPIO_PULL_NO);
 1173              		.loc 1 1213 3 is_stmt 1 view .LVU405
 1174              	.LBB617:
 1175              	.LBI617:
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1176              		.loc 6 496 22 view .LVU406
 1177              	.LBB618:
 1178              		.loc 6 498 3 view .LVU407
 1179 0106 A3F58063 		sub	r3, r3, #1024
 1180 010a DA68     		ldr	r2, [r3, #12]
 1181              	.LVL93:
 1182              	.LBB619:
ARM GAS  /tmp/cc85dWdm.s 			page 129


 1183              	.LBI619:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1184              		.loc 5 1048 31 view .LVU408
 1185              	.LBB620:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1186              		.loc 5 1050 3 view .LVU409
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1187              		.loc 5 1055 4 view .LVU410
 1188 010c 4FF48073 		mov	r3, #256
 1189              		.syntax unified
 1190              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1191 0110 93FAA3F3 		rbit r3, r3
 1192              	@ 0 "" 2
 1193              	.LVL94:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1194              		.loc 5 1068 3 view .LVU411
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1195              		.loc 5 1068 3 is_stmt 0 view .LVU412
 1196              		.thumb
 1197              		.syntax unified
 1198              	.LBE620:
 1199              	.LBE619:
 1200              	.LBB621:
 1201              	.LBI621:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1202              		.loc 5 1078 30 is_stmt 1 view .LVU413
 1203              	.LBB622:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1204              		.loc 5 1089 3 view .LVU414
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1205              		.loc 5 1089 6 is_stmt 0 view .LVU415
 1206 0114 002B     		cmp	r3, #0
 1207 0116 49D0     		beq	.L34
 1208              		.loc 5 1093 3 is_stmt 1 view .LVU416
 1209              		.loc 5 1093 10 is_stmt 0 view .LVU417
 1210 0118 B3FA83F3 		clz	r3, r3
 1211              	.LVL95:
 1212              	.L28:
 1213              		.loc 5 1093 10 view .LVU418
 1214              	.LBE622:
 1215              	.LBE621:
 1216              		.loc 6 498 3 view .LVU419
 1217 011c 5B00     		lsls	r3, r3, #1
 1218 011e 0321     		movs	r1, #3
 1219 0120 01FA03F3 		lsl	r3, r1, r3
 1220 0124 22EA0303 		bic	r3, r2, r3
 1221              	.LVL96:
 1222              	.LBB624:
 1223              	.LBI624:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1224              		.loc 5 1048 31 is_stmt 1 view .LVU420
 1225              	.LBB625:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1226              		.loc 5 1050 3 view .LVU421
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1227              		.loc 5 1055 4 view .LVU422
 1228 0128 4FF48072 		mov	r2, #256
ARM GAS  /tmp/cc85dWdm.s 			page 130


 1229              		.syntax unified
 1230              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1231 012c 92FAA2F2 		rbit r2, r2
 1232              	@ 0 "" 2
 1233              	.LVL97:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1234              		.loc 5 1068 3 view .LVU423
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1235              		.loc 5 1068 3 is_stmt 0 view .LVU424
 1236              		.thumb
 1237              		.syntax unified
 1238              	.LBE625:
 1239              	.LBE624:
 1240              	.LBE618:
 1241              	.LBE617:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1242              		.loc 5 1089 3 is_stmt 1 view .LVU425
 1243              	.LBB629:
 1244              	.LBB627:
 1245              		.loc 6 498 3 is_stmt 0 view .LVU426
 1246 0130 234A     		ldr	r2, .L38+8
 1247 0132 D360     		str	r3, [r2, #12]
 1248              	.LVL98:
 1249              		.loc 6 498 3 view .LVU427
 1250              	.LBE627:
 1251              	.LBE629:
1214:Src/main.c    **** 
1215:Src/main.c    ****   /**/
1216:Src/main.c    ****   LL_GPIO_SetPinMode(Start_Stop_GPIO_Port, Start_Stop_Pin, LL_GPIO_MODE_INPUT);
 1252              		.loc 1 1216 3 is_stmt 1 view .LVU428
 1253              	.LBB630:
 1254              	.LBI630:
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1255              		.loc 6 285 22 view .LVU429
 1256              	.LBB631:
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 1257              		.loc 6 287 3 view .LVU430
 1258 0134 214B     		ldr	r3, .L38+4
 1259 0136 1A68     		ldr	r2, [r3]
 1260              	.LVL99:
 1261              	.LBB632:
 1262              	.LBI632:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1263              		.loc 5 1048 31 view .LVU431
 1264              	.LBB633:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1265              		.loc 5 1050 3 view .LVU432
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1266              		.loc 5 1055 4 view .LVU433
 1267 0138 4FF48063 		mov	r3, #1024
 1268              		.syntax unified
 1269              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1270 013c 93FAA3F3 		rbit r3, r3
 1271              	@ 0 "" 2
 1272              	.LVL100:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1273              		.loc 5 1068 3 view .LVU434
ARM GAS  /tmp/cc85dWdm.s 			page 131


1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1274              		.loc 5 1068 3 is_stmt 0 view .LVU435
 1275              		.thumb
 1276              		.syntax unified
 1277              	.LBE633:
 1278              	.LBE632:
 1279              	.LBB634:
 1280              	.LBI634:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1281              		.loc 5 1078 30 is_stmt 1 view .LVU436
 1282              	.LBB635:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1283              		.loc 5 1089 3 view .LVU437
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1284              		.loc 5 1089 6 is_stmt 0 view .LVU438
 1285 0140 002B     		cmp	r3, #0
 1286 0142 35D0     		beq	.L35
 1287              		.loc 5 1093 3 is_stmt 1 view .LVU439
 1288              		.loc 5 1093 10 is_stmt 0 view .LVU440
 1289 0144 B3FA83F3 		clz	r3, r3
 1290              	.LVL101:
 1291              	.L29:
 1292              		.loc 5 1093 10 view .LVU441
 1293              	.LBE635:
 1294              	.LBE634:
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 1295              		.loc 6 287 3 view .LVU442
 1296 0148 5B00     		lsls	r3, r3, #1
 1297 014a 0321     		movs	r1, #3
 1298 014c 01FA03F3 		lsl	r3, r1, r3
 1299 0150 22EA0303 		bic	r3, r2, r3
 1300              	.LVL102:
 1301              	.LBB637:
 1302              	.LBI637:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1303              		.loc 5 1048 31 is_stmt 1 view .LVU443
 1304              	.LBB638:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1305              		.loc 5 1050 3 view .LVU444
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1306              		.loc 5 1055 4 view .LVU445
 1307 0154 4FF48062 		mov	r2, #1024
 1308              		.syntax unified
 1309              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1310 0158 92FAA2F2 		rbit r2, r2
 1311              	@ 0 "" 2
 1312              	.LVL103:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1313              		.loc 5 1068 3 view .LVU446
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1314              		.loc 5 1068 3 is_stmt 0 view .LVU447
 1315              		.thumb
 1316              		.syntax unified
 1317              	.LBE638:
 1318              	.LBE637:
 1319              	.LBE631:
 1320              	.LBE630:
ARM GAS  /tmp/cc85dWdm.s 			page 132


1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1321              		.loc 5 1089 3 is_stmt 1 view .LVU448
 1322              	.LBB642:
 1323              	.LBB640:
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 1324              		.loc 6 287 3 is_stmt 0 view .LVU449
 1325 015c 174A     		ldr	r2, .L38+4
 1326 015e 1360     		str	r3, [r2]
 1327              	.LVL104:
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 1328              		.loc 6 287 3 view .LVU450
 1329              	.LBE640:
 1330              	.LBE642:
1217:Src/main.c    **** 
1218:Src/main.c    ****   /**/
1219:Src/main.c    ****   LL_GPIO_SetPinMode(M1_ENCODER_I_GPIO_Port, M1_ENCODER_I_Pin, LL_GPIO_MODE_INPUT);
 1331              		.loc 1 1219 3 is_stmt 1 view .LVU451
 1332              	.LBB643:
 1333              	.LBI643:
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 1334              		.loc 6 285 22 view .LVU452
 1335              	.LBB644:
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 1336              		.loc 6 287 3 view .LVU453
 1337 0160 174B     		ldr	r3, .L38+8
 1338 0162 1A68     		ldr	r2, [r3]
 1339              	.LVL105:
 1340              	.LBB645:
 1341              	.LBI645:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1342              		.loc 5 1048 31 view .LVU454
 1343              	.LBB646:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1344              		.loc 5 1050 3 view .LVU455
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1345              		.loc 5 1055 4 view .LVU456
 1346 0164 4FF48073 		mov	r3, #256
 1347              		.syntax unified
 1348              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1349 0168 93FAA3F3 		rbit r3, r3
 1350              	@ 0 "" 2
 1351              	.LVL106:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1352              		.loc 5 1068 3 view .LVU457
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1353              		.loc 5 1068 3 is_stmt 0 view .LVU458
 1354              		.thumb
 1355              		.syntax unified
 1356              	.LBE646:
 1357              	.LBE645:
 1358              	.LBB647:
 1359              	.LBI647:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1360              		.loc 5 1078 30 is_stmt 1 view .LVU459
 1361              	.LBB648:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1362              		.loc 5 1089 3 view .LVU460
ARM GAS  /tmp/cc85dWdm.s 			page 133


1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1363              		.loc 5 1089 6 is_stmt 0 view .LVU461
 1364 016c 13B3     		cbz	r3, .L36
 1365              		.loc 5 1093 3 is_stmt 1 view .LVU462
 1366              		.loc 5 1093 10 is_stmt 0 view .LVU463
 1367 016e B3FA83F3 		clz	r3, r3
 1368              	.LVL107:
 1369              	.L30:
 1370              		.loc 5 1093 10 view .LVU464
 1371              	.LBE648:
 1372              	.LBE647:
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 1373              		.loc 6 287 3 view .LVU465
 1374 0172 5B00     		lsls	r3, r3, #1
 1375 0174 0321     		movs	r1, #3
 1376 0176 01FA03F3 		lsl	r3, r1, r3
 1377 017a 22EA0303 		bic	r3, r2, r3
 1378              	.LVL108:
 1379              	.LBB650:
 1380              	.LBI650:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1381              		.loc 5 1048 31 is_stmt 1 view .LVU466
 1382              	.LBB651:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1383              		.loc 5 1050 3 view .LVU467
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1384              		.loc 5 1055 4 view .LVU468
 1385 017e 4FF48072 		mov	r2, #256
 1386              		.syntax unified
 1387              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1388 0182 92FAA2F2 		rbit r2, r2
 1389              	@ 0 "" 2
 1390              	.LVL109:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1391              		.loc 5 1068 3 view .LVU469
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1392              		.loc 5 1068 3 is_stmt 0 view .LVU470
 1393              		.thumb
 1394              		.syntax unified
 1395              	.LBE651:
 1396              	.LBE650:
 1397              	.LBE644:
 1398              	.LBE643:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 1399              		.loc 5 1089 3 is_stmt 1 view .LVU471
 1400              	.LBB655:
 1401              	.LBB653:
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 1402              		.loc 6 287 3 is_stmt 0 view .LVU472
 1403 0186 0E4A     		ldr	r2, .L38+8
 1404 0188 1360     		str	r3, [r2]
 1405              	.LVL110:
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 1406              		.loc 6 287 3 view .LVU473
 1407              	.LBE653:
 1408              	.LBE655:
1220:Src/main.c    **** 
ARM GAS  /tmp/cc85dWdm.s 			page 134


1221:Src/main.c    ****   /* EXTI interrupt init*/
1222:Src/main.c    ****   NVIC_SetPriority(EXTI9_5_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),0, 0));
 1409              		.loc 1 1222 3 is_stmt 1 view .LVU474
 1410              	.LBB656:
 1411              	.LBI656:
1667:Drivers/CMSIS/Include/core_cm4.h **** {
 1412              		.loc 2 1667 26 view .LVU475
 1413              	.LBB657:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 1414              		.loc 2 1669 3 view .LVU476
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 1415              		.loc 2 1669 26 is_stmt 0 view .LVU477
 1416 018a 0E4B     		ldr	r3, .L38+12
 1417 018c DB68     		ldr	r3, [r3, #12]
 1418              	.LVL111:
1669:Drivers/CMSIS/Include/core_cm4.h **** }
 1419              		.loc 2 1669 26 view .LVU478
 1420              	.LBE657:
 1421              	.LBE656:
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 1422              		.loc 2 1858 3 is_stmt 1 view .LVU479
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 1423              		.loc 2 1859 3 view .LVU480
1860:Drivers/CMSIS/Include/core_cm4.h **** 
 1424              		.loc 2 1860 3 view .LVU481
1862:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 1425              		.loc 2 1862 3 view .LVU482
1863:Drivers/CMSIS/Include/core_cm4.h **** 
 1426              		.loc 2 1863 3 view .LVU483
1865:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 1427              		.loc 2 1865 3 view .LVU484
 1428              	.LBB658:
 1429              	.LBI658:
1809:Drivers/CMSIS/Include/core_cm4.h **** {
 1430              		.loc 2 1809 22 view .LVU485
 1431              	.LBB659:
1811:Drivers/CMSIS/Include/core_cm4.h ****   {
 1432              		.loc 2 1811 3 view .LVU486
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 1433              		.loc 2 1813 5 view .LVU487
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 1434              		.loc 2 1813 46 is_stmt 0 view .LVU488
 1435 018e 0E4B     		ldr	r3, .L38+16
 1436 0190 0022     		movs	r2, #0
 1437 0192 83F81723 		strb	r2, [r3, #791]
 1438              	.LVL112:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 1439              		.loc 2 1813 46 view .LVU489
 1440              	.LBE659:
 1441              	.LBE658:
1223:Src/main.c    ****   NVIC_EnableIRQ(EXTI9_5_IRQn);
 1442              		.loc 1 1223 3 is_stmt 1 view .LVU490
 1443              	.LBB660:
 1444              	.LBI660:
1679:Drivers/CMSIS/Include/core_cm4.h **** {
 1445              		.loc 2 1679 22 view .LVU491
 1446              	.LBB661:
ARM GAS  /tmp/cc85dWdm.s 			page 135


1681:Drivers/CMSIS/Include/core_cm4.h ****   {
 1447              		.loc 2 1681 3 view .LVU492
1683:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 1448              		.loc 2 1683 5 view .LVU493
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 1449              		.loc 2 1684 5 view .LVU494
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 1450              		.loc 2 1684 43 is_stmt 0 view .LVU495
 1451 0196 4FF40002 		mov	r2, #8388608
 1452 019a 1A60     		str	r2, [r3]
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 1453              		.loc 2 1685 5 is_stmt 1 view .LVU496
 1454              	.LVL113:
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 1455              		.loc 2 1685 5 is_stmt 0 view .LVU497
 1456              	.LBE661:
 1457              	.LBE660:
1224:Src/main.c    **** 
1225:Src/main.c    **** }
 1458              		.loc 1 1225 1 view .LVU498
 1459 019c 08B0     		add	sp, sp, #32
 1460              		.cfi_remember_state
 1461              		.cfi_def_cfa_offset 16
 1462              		@ sp needed
 1463 019e 70BD     		pop	{r4, r5, r6, pc}
 1464              	.LVL114:
 1465              	.L31:
 1466              		.cfi_restore_state
 1467              	.LBB662:
 1468              	.LBB594:
 1469              	.LBB593:
 1470              	.LBB592:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1471              		.loc 5 1091 12 view .LVU499
 1472 01a0 2023     		movs	r3, #32
 1473              	.LVL115:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1474              		.loc 5 1091 12 view .LVU500
 1475 01a2 67E7     		b	.L25
 1476              	.LVL116:
 1477              	.L32:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1478              		.loc 5 1091 12 view .LVU501
 1479              	.LBE592:
 1480              	.LBE593:
 1481              	.LBE594:
 1482              	.LBE662:
 1483              	.LBB663:
 1484              	.LBB603:
 1485              	.LBB602:
 1486              	.LBB601:
 1487 01a4 2023     		movs	r3, #32
 1488              	.LVL117:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1489              		.loc 5 1091 12 view .LVU502
 1490 01a6 78E7     		b	.L26
 1491              	.LVL118:
ARM GAS  /tmp/cc85dWdm.s 			page 136


 1492              	.L33:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1493              		.loc 5 1091 12 view .LVU503
 1494              	.LBE601:
 1495              	.LBE602:
 1496              	.LBE603:
 1497              	.LBE663:
 1498              	.LBB664:
 1499              	.LBB615:
 1500              	.LBB613:
 1501              	.LBB610:
 1502 01a8 2024     		movs	r4, #32
 1503              	.LVL119:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1504              		.loc 5 1091 12 view .LVU504
 1505 01aa A0E7     		b	.L27
 1506              	.LVL120:
 1507              	.L34:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1508              		.loc 5 1091 12 view .LVU505
 1509              	.LBE610:
 1510              	.LBE613:
 1511              	.LBE615:
 1512              	.LBE664:
 1513              	.LBB665:
 1514              	.LBB628:
 1515              	.LBB626:
 1516              	.LBB623:
 1517 01ac 2023     		movs	r3, #32
 1518              	.LVL121:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1519              		.loc 5 1091 12 view .LVU506
 1520 01ae B5E7     		b	.L28
 1521              	.LVL122:
 1522              	.L35:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1523              		.loc 5 1091 12 view .LVU507
 1524              	.LBE623:
 1525              	.LBE626:
 1526              	.LBE628:
 1527              	.LBE665:
 1528              	.LBB666:
 1529              	.LBB641:
 1530              	.LBB639:
 1531              	.LBB636:
 1532 01b0 2023     		movs	r3, #32
 1533              	.LVL123:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1534              		.loc 5 1091 12 view .LVU508
 1535 01b2 C9E7     		b	.L29
 1536              	.LVL124:
 1537              	.L36:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1538              		.loc 5 1091 12 view .LVU509
 1539              	.LBE636:
 1540              	.LBE639:
 1541              	.LBE641:
ARM GAS  /tmp/cc85dWdm.s 			page 137


 1542              	.LBE666:
 1543              	.LBB667:
 1544              	.LBB654:
 1545              	.LBB652:
 1546              	.LBB649:
 1547 01b4 2023     		movs	r3, #32
 1548              	.LVL125:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1549              		.loc 5 1091 12 view .LVU510
 1550 01b6 DCE7     		b	.L30
 1551              	.L39:
 1552              		.align	2
 1553              	.L38:
 1554 01b8 00000140 		.word	1073807360
 1555 01bc 00080048 		.word	1207961600
 1556 01c0 00040048 		.word	1207960576
 1557 01c4 00ED00E0 		.word	-536810240
 1558 01c8 00E100E0 		.word	-536813312
 1559              	.LBE649:
 1560              	.LBE652:
 1561              	.LBE654:
 1562              	.LBE667:
 1563              		.cfi_endproc
 1564              	.LFE1639:
 1566              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1567              		.align	1
 1568              		.syntax unified
 1569              		.thumb
 1570              		.thumb_func
 1571              		.fpu fpv4-sp-d16
 1573              	MX_ADC1_Init:
 1574              	.LFB1625:
 241:Src/main.c    **** 
 1575              		.loc 1 241 1 is_stmt 1 view -0
 1576              		.cfi_startproc
 1577              		@ args = 0, pretend = 0, frame = 104
 1578              		@ frame_needed = 0, uses_anonymous_args = 0
 1579 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1580              		.cfi_def_cfa_offset 20
 1581              		.cfi_offset 4, -20
 1582              		.cfi_offset 5, -16
 1583              		.cfi_offset 6, -12
 1584              		.cfi_offset 7, -8
 1585              		.cfi_offset 14, -4
 1586 0002 9BB0     		sub	sp, sp, #108
 1587              		.cfi_def_cfa_offset 128
 247:Src/main.c    ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 1588              		.loc 1 247 3 view .LVU512
 247:Src/main.c    ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 1589              		.loc 1 247 22 is_stmt 0 view .LVU513
 1590 0004 0024     		movs	r4, #0
 1591 0006 1794     		str	r4, [sp, #92]
 1592 0008 1894     		str	r4, [sp, #96]
 1593 000a 1994     		str	r4, [sp, #100]
 248:Src/main.c    ****   LL_ADC_CommonInitTypeDef ADC_CommonInitStruct = {0};
 1594              		.loc 1 248 3 is_stmt 1 view .LVU514
 248:Src/main.c    ****   LL_ADC_CommonInitTypeDef ADC_CommonInitStruct = {0};
ARM GAS  /tmp/cc85dWdm.s 			page 138


 1595              		.loc 1 248 26 is_stmt 0 view .LVU515
 1596 000c 1194     		str	r4, [sp, #68]
 1597 000e 1294     		str	r4, [sp, #72]
 1598 0010 1394     		str	r4, [sp, #76]
 1599 0012 1494     		str	r4, [sp, #80]
 1600 0014 1594     		str	r4, [sp, #84]
 1601 0016 1694     		str	r4, [sp, #88]
 249:Src/main.c    ****   LL_ADC_INJ_InitTypeDef ADC_INJ_InitStruct = {0};
 1602              		.loc 1 249 3 is_stmt 1 view .LVU516
 249:Src/main.c    ****   LL_ADC_INJ_InitTypeDef ADC_INJ_InitStruct = {0};
 1603              		.loc 1 249 28 is_stmt 0 view .LVU517
 1604 0018 0D94     		str	r4, [sp, #52]
 1605 001a 0E94     		str	r4, [sp, #56]
 1606 001c 0F94     		str	r4, [sp, #60]
 1607 001e 1094     		str	r4, [sp, #64]
 250:Src/main.c    **** 
 1608              		.loc 1 250 3 is_stmt 1 view .LVU518
 250:Src/main.c    **** 
 1609              		.loc 1 250 26 is_stmt 0 view .LVU519
 1610 0020 0994     		str	r4, [sp, #36]
 1611 0022 0A94     		str	r4, [sp, #40]
 1612 0024 0B94     		str	r4, [sp, #44]
 1613 0026 0C94     		str	r4, [sp, #48]
 252:Src/main.c    **** 
 1614              		.loc 1 252 3 is_stmt 1 view .LVU520
 252:Src/main.c    **** 
 1615              		.loc 1 252 23 is_stmt 0 view .LVU521
 1616 0028 0594     		str	r4, [sp, #20]
 1617 002a 0694     		str	r4, [sp, #24]
 1618 002c 0794     		str	r4, [sp, #28]
 1619 002e 0894     		str	r4, [sp, #32]
 254:Src/main.c    **** 
 1620              		.loc 1 254 3 is_stmt 1 view .LVU522
 1621              	.LVL126:
 1622              	.LBB668:
 1623              	.LBI668:
 1624              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @file    stm32g4xx_ll_rcc.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief   Header file of RCC LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * This software is licensed under terms that can be found in the LICENSE file in
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   ******************************************************************************
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #ifndef STM32G4xx_LL_RCC_H
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define STM32G4xx_LL_RCC_H
ARM GAS  /tmp/cc85dWdm.s 			page 139


  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #ifdef __cplusplus
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** extern "C" {
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Includes ------------------------------------------------------------------*/
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #include "stm32g4xx.h"
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @addtogroup STM32G4xx_LL_Driver
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL RCC
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Private types -------------------------------------------------------------*/
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Private variables ---------------------------------------------------------*/
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Variables RCC Private Variables
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Private constants ---------------------------------------------------------*/
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Constants RCC Private Constants
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Defines used to perform offsets*/
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Offset used to access to RCC_CCIPR and RCC_CCIPR2 registers */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define RCC_OFFSET_CCIPR        0U
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define RCC_OFFSET_CCIPR2       0x14U
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Private macros ------------------------------------------------------------*/
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Macros RCC Private Macros
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /*USE_FULL_LL_DRIVER*/
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Exported types ------------------------------------------------------------*/
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Types RCC Exported Types
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup LL_ES_CLOCK_FREQ Clocks Frequency Structure
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
ARM GAS  /tmp/cc85dWdm.s 			page 140


  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  RCC Clocks Frequency Structure
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** typedef struct
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   uint32_t SYSCLK_Frequency;        /*!< SYSCLK clock frequency */
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   uint32_t HCLK_Frequency;          /*!< HCLK clock frequency */
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   uint32_t PCLK1_Frequency;         /*!< PCLK1 clock frequency */
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   uint32_t PCLK2_Frequency;         /*!< PCLK2 clock frequency */
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** } LL_RCC_ClocksTypeDef;
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Exported constants --------------------------------------------------------*/
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Constants RCC Exported Constants
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OSC_VALUES Oscillator Values adaptation
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief    Defines used to adapt values of different oscillators
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note     These values could be modified in the user environment according to
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *           HW set-up.
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if !defined  (HSE_VALUE)
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define HSE_VALUE    8000000U   /*!< Value of the HSE oscillator in Hz */
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* HSE_VALUE */
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if !defined  (HSI_VALUE)
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define HSI_VALUE    16000000U  /*!< Value of the HSI oscillator in Hz */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* HSI_VALUE */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if !defined  (LSE_VALUE)
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LSE_VALUE    32768U     /*!< Value of the LSE oscillator in Hz */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* LSE_VALUE */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if !defined  (LSI_VALUE)
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LSI_VALUE    32000U     /*!< Value of the LSI oscillator in Hz */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* LSI_VALUE */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if !defined  (HSI48_VALUE)
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define HSI48_VALUE  48000000U  /*!< Value of the HSI48 oscillator in Hz */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* HSI48_VALUE */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if !defined  (EXTERNAL_CLOCK_VALUE)
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define EXTERNAL_CLOCK_VALUE    48000U     /*!< Value of the I2S_CKIN, I2S and SAI1 external clock 
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* EXTERNAL_CLOCK_VALUE */
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 141


 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CLEAR_FLAG Clear Flags Defines
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_WriteReg function
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CICR_LSIRDYC                RCC_CICR_LSIRDYC     /*!< LSI Ready Interrupt Clear */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CICR_LSERDYC                RCC_CICR_LSERDYC     /*!< LSE Ready Interrupt Clear */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CICR_HSIRDYC                RCC_CICR_HSIRDYC     /*!< HSI Ready Interrupt Clear */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CICR_HSERDYC                RCC_CICR_HSERDYC     /*!< HSE Ready Interrupt Clear */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CICR_PLLRDYC                RCC_CICR_PLLRDYC     /*!< PLL Ready Interrupt Clear */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CICR_HSI48RDYC              RCC_CICR_HSI48RDYC   /*!< HSI48 Ready Interrupt Clear */
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CICR_LSECSSC                RCC_CICR_LSECSSC     /*!< LSE Clock Security System Inte
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CICR_CSSC                   RCC_CICR_CSSC        /*!< Clock Security System Interrup
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_GET_FLAG Get Flags Defines
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_ReadReg function
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIFR_LSIRDYF                RCC_CIFR_LSIRDYF     /*!< LSI Ready Interrupt flag */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIFR_LSERDYF                RCC_CIFR_LSERDYF     /*!< LSE Ready Interrupt flag */
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIFR_HSIRDYF                RCC_CIFR_HSIRDYF     /*!< HSI Ready Interrupt flag */
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIFR_HSERDYF                RCC_CIFR_HSERDYF     /*!< HSE Ready Interrupt flag */
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIFR_PLLRDYF                RCC_CIFR_PLLRDYF     /*!< PLL Ready Interrupt flag */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIFR_HSI48RDYF              RCC_CIFR_HSI48RDYF   /*!< HSI48 Ready Interrupt flag */
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIFR_LSECSSF                RCC_CIFR_LSECSSF     /*!< LSE Clock Security System Inte
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIFR_CSSF                   RCC_CIFR_CSSF        /*!< Clock Security System Interrup
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CSR_LPWRRSTF                RCC_CSR_LPWRRSTF   /*!< Low-Power reset flag */
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CSR_OBLRSTF                 RCC_CSR_OBLRSTF    /*!< OBL reset flag */
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CSR_PINRSTF                 RCC_CSR_PINRSTF    /*!< PIN reset flag */
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CSR_SFTRSTF                 RCC_CSR_SFTRSTF    /*!< Software Reset flag */
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CSR_IWDGRSTF                RCC_CSR_IWDGRSTF   /*!< Independent Watchdog reset flag 
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CSR_WWDGRSTF                RCC_CSR_WWDGRSTF   /*!< Window watchdog reset flag */
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CSR_BORRSTF                 RCC_CSR_BORRSTF    /*!< BOR reset flag */
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_IT IT Defines
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief    IT defines which can be used with LL_RCC_ReadReg and  LL_RCC_WriteReg functions
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIER_LSIRDYIE               RCC_CIER_LSIRDYIE      /*!< LSI Ready Interrupt Enable *
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIER_LSERDYIE               RCC_CIER_LSERDYIE      /*!< LSE Ready Interrupt Enable *
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIER_HSIRDYIE               RCC_CIER_HSIRDYIE      /*!< HSI Ready Interrupt Enable *
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIER_HSERDYIE               RCC_CIER_HSERDYIE      /*!< HSE Ready Interrupt Enable *
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIER_PLLRDYIE               RCC_CIER_PLLRDYIE      /*!< PLL Ready Interrupt Enable *
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIER_HSI48RDYIE             RCC_CIER_HSI48RDYIE    /*!< HSI48 Ready Interrupt Enable
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_CIER_LSECSSIE               RCC_CIER_LSECSSIE      /*!< LSE CSS Interrupt Enable */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 142


 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LSEDRIVE  LSE oscillator drive capability
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_LOW                0x00000000U             /*!< Xtal mode lower driving cap
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMLOW          RCC_BDCR_LSEDRV_0       /*!< Xtal mode medium low drivin
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMHIGH         RCC_BDCR_LSEDRV_1       /*!< Xtal mode medium high drivi
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_HIGH               RCC_BDCR_LSEDRV         /*!< Xtal mode higher driving ca
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LSCO_CLKSOURCE  LSCO Selection
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LSCO_CLKSOURCE_LSI          0x00000000U                 /*!< LSI selection for low s
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LSCO_CLKSOURCE_LSE          RCC_BDCR_LSCOSEL            /*!< LSE selection for low s
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE  System clock switch
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI           RCC_CFGR_SW_HSI    /*!< HSI selection as system clock */
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSE           RCC_CFGR_SW_HSE    /*!< HSE selection as system clock */
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_PLL           RCC_CFGR_SW_PLL    /*!< PLL selection as system clock */
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE_STATUS  System clock switch status
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI    RCC_CFGR_SWS_HSI   /*!< HSI used as system clock */
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSE    RCC_CFGR_SWS_HSE   /*!< HSE used as system clock */
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_PLL    RCC_CFGR_SWS_PLL   /*!< PLL used as system clock */
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYSCLK_DIV  AHB prescaler
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_1                RCC_CFGR_HPRE_DIV1   /*!< SYSCLK not divided */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_2                RCC_CFGR_HPRE_DIV2   /*!< SYSCLK divided by 2 */
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_4                RCC_CFGR_HPRE_DIV4   /*!< SYSCLK divided by 4 */
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_8                RCC_CFGR_HPRE_DIV8   /*!< SYSCLK divided by 8 */
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_16               RCC_CFGR_HPRE_DIV16  /*!< SYSCLK divided by 16 */
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_64               RCC_CFGR_HPRE_DIV64  /*!< SYSCLK divided by 64 */
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_128              RCC_CFGR_HPRE_DIV128 /*!< SYSCLK divided by 128 */
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_256              RCC_CFGR_HPRE_DIV256 /*!< SYSCLK divided by 256 */
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_512              RCC_CFGR_HPRE_DIV512 /*!< SYSCLK divided by 512 */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 143


 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB1_DIV  APB low-speed prescaler (APB1)
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_1                  RCC_CFGR_PPRE1_DIV1  /*!< HCLK not divided */
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_2                  RCC_CFGR_PPRE1_DIV2  /*!< HCLK divided by 2 */
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_4                  RCC_CFGR_PPRE1_DIV4  /*!< HCLK divided by 4 */
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_8                  RCC_CFGR_PPRE1_DIV8  /*!< HCLK divided by 8 */
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_16                 RCC_CFGR_PPRE1_DIV16 /*!< HCLK divided by 16 */
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB2_DIV  APB high-speed prescaler (APB2)
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_1                  RCC_CFGR_PPRE2_DIV1  /*!< HCLK not divided */
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_2                  RCC_CFGR_PPRE2_DIV2  /*!< HCLK divided by 2 */
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_4                  RCC_CFGR_PPRE2_DIV4  /*!< HCLK divided by 4 */
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_8                  RCC_CFGR_PPRE2_DIV8  /*!< HCLK divided by 8 */
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_16                 RCC_CFGR_PPRE2_DIV16 /*!< HCLK divided by 16 */
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1SOURCE  MCO1 SOURCE selection
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_NOCLOCK          0x00000000U                            /*!< MCO output d
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_SYSCLK           RCC_CFGR_MCOSEL_0                      /*!< SYSCLK selec
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI              (RCC_CFGR_MCOSEL_0| RCC_CFGR_MCOSEL_1) /*!< HSI16 select
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSE              RCC_CFGR_MCOSEL_2                      /*!< HSE selectio
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK           (RCC_CFGR_MCOSEL_0|RCC_CFGR_MCOSEL_2)  /*!< Main PLL sel
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSI              (RCC_CFGR_MCOSEL_1|RCC_CFGR_MCOSEL_2)  /*!< LSI selectio
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSE              (RCC_CFGR_MCOSEL_0|RCC_CFGR_MCOSEL_1|RCC_CFGR_MCOSEL_2) 
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI48            RCC_CFGR_MCOSEL_3                      /*!< HSI48 select
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1_DIV  MCO1 prescaler
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_1                  RCC_CFGR_MCOPRE_DIV1       /*!< MCO not divided */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_2                  RCC_CFGR_MCOPRE_DIV2       /*!< MCO divided by 2 */
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_4                  RCC_CFGR_MCOPRE_DIV4       /*!< MCO divided by 4 */
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_8                  RCC_CFGR_MCOPRE_DIV8       /*!< MCO divided by 8 */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_16                 RCC_CFGR_MCOPRE_DIV16      /*!< MCO divided by 16 */
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PERIPH_FREQUENCY Peripheral clock frequency
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NO         0x00000000U                 /*!< No clock enabled for th
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NA         0xFFFFFFFFU                 /*!< Frequency cannot be pro
ARM GAS  /tmp/cc85dWdm.s 			page 144


 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USARTx_CLKSOURCE  Peripheral USART clock source selection
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_PCLK2      (RCC_CCIPR_USART1SEL << 16U)                           /
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_SYSCLK     ((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USART1SEL_0) /
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_HSI        ((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USART1SEL_1) /
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_LSE        ((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USART1SEL)   /
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_PCLK1      (RCC_CCIPR_USART2SEL << 16U)                           /
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_SYSCLK     ((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USART2SEL_0) /
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_HSI        ((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USART2SEL_1) /
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_LSE        ((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USART2SEL)   /
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_PCLK1      (RCC_CCIPR_USART3SEL << 16U)                           /
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_SYSCLK     ((RCC_CCIPR_USART3SEL << 16U) | RCC_CCIPR_USART3SEL_0) /
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_HSI        ((RCC_CCIPR_USART3SEL << 16U) | RCC_CCIPR_USART3SEL_1) /
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_LSE        ((RCC_CCIPR_USART3SEL << 16U) | RCC_CCIPR_USART3SEL)   /
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_UARTx_CLKSOURCE  Peripheral UART clock source selection
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(RCC_CCIPR_UART4SEL)
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_PCLK1       (RCC_CCIPR_UART4SEL << 16U)                           /*
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_SYSCLK      ((RCC_CCIPR_UART4SEL << 16U) | RCC_CCIPR_UART4SEL_0)  /*
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_HSI         ((RCC_CCIPR_UART4SEL << 16U) | RCC_CCIPR_UART4SEL_1)  /*
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_LSE         ((RCC_CCIPR_UART4SEL << 16U) | RCC_CCIPR_UART4SEL)    /*
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* RCC_CCIPR_UART4SEL */
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(RCC_CCIPR_UART5SEL)
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_PCLK1       (RCC_CCIPR_UART5SEL << 16U)                           /*
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_SYSCLK      ((RCC_CCIPR_UART5SEL << 16U) | RCC_CCIPR_UART5SEL_0)  /*
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_HSI         ((RCC_CCIPR_UART5SEL << 16U) | RCC_CCIPR_UART5SEL_1)  /*
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_LSE         ((RCC_CCIPR_UART5SEL << 16U) | RCC_CCIPR_UART5SEL)    /*
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* RCC_CCIPR_UART5SEL */
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPUART1_CLKSOURCE  Peripheral LPUART clock source selection
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_PCLK1     0x00000000U                     /*!< PCLK1 clock used as
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_SYSCLK    RCC_CCIPR_LPUART1SEL_0          /*!< SYSCLK clock used a
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_HSI       RCC_CCIPR_LPUART1SEL_1          /*!< HSI clock used as L
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_LSE       RCC_CCIPR_LPUART1SEL            /*!< LSE clock used as L
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2Cx_CLKSOURCE  Peripheral I2C clock source selection
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 145


 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_PCLK1        ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C1SEL_Pos << 1
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_SYSCLK       ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C1SEL_Pos << 1
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_HSI          ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C1SEL_Pos << 1
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE_PCLK1        ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C2SEL_Pos << 1
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE_SYSCLK       ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C2SEL_Pos << 1
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE_HSI          ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C2SEL_Pos << 1
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_PCLK1        ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C3SEL_Pos << 1
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_SYSCLK       ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C3SEL_Pos << 1
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_HSI          ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C3SEL_Pos << 1
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_I2C4SEL)
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE_PCLK1        ((RCC_OFFSET_CCIPR2 << 24U) | (RCC_CCIPR2_I2C4SEL_Pos <<
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE_SYSCLK       ((RCC_OFFSET_CCIPR2 << 24U) | (RCC_CCIPR2_I2C4SEL_Pos <<
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE_HSI          ((RCC_OFFSET_CCIPR2 << 24U) | (RCC_CCIPR2_I2C4SEL_Pos <<
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_I2C4SEL */
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPTIM1_CLKSOURCE  Peripheral LPTIM clock source selection
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_PCLK1      0x00000000U                                            /
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_LSI        RCC_CCIPR_LPTIM1SEL_0                                  /
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_HSI        RCC_CCIPR_LPTIM1SEL_1                                  /
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_LSE        RCC_CCIPR_LPTIM1SEL                                    /
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SAI1_CLKSOURCE  Peripheral SAI clock source selection
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_SYSCLK       0x00000000U                                           /*
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PLL          RCC_CCIPR_SAI1SEL_0                                   /*
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PIN          RCC_CCIPR_SAI1SEL_1                                   /*
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_HSI          (RCC_CCIPR_SAI1SEL_0 | RCC_CCIPR_SAI1SEL_1)           /*
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2S_CLKSOURCE  Peripheral I2S clock source selection
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2S_CLKSOURCE_SYSCLK       0x00000000U                                          /*!<
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2S_CLKSOURCE_PLL          RCC_CCIPR_I2S23SEL_0                                 /*!<
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2S_CLKSOURCE_PIN          RCC_CCIPR_I2S23SEL_1                                 /*!<
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2S_CLKSOURCE_HSI          (RCC_CCIPR_I2S23SEL_0 | RCC_CCIPR_I2S23SEL_1)        /*!<
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(FDCAN1)
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_FDCAN_CLKSOURCE  Peripheral FDCAN clock source selection
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_FDCAN_CLKSOURCE_HSE        0x00000000U             /*!< HSE clock used as FDCAN cloc
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_FDCAN_CLKSOURCE_PLL        RCC_CCIPR_FDCANSEL_0    /*!< PLL clock used as FDCAN cloc
ARM GAS  /tmp/cc85dWdm.s 			page 146


 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_FDCAN_CLKSOURCE_PCLK1      RCC_CCIPR_FDCANSEL_1    /*!< PCLK1 clock used as FDCAN cl
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* FDCAN1 */
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RNG_CLKSOURCE  Peripheral RNG clock source selection
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_HSI48        0x00000000U             /*!< HSI48 clock used as RNG cloc
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_PLL          RCC_CCIPR_CLK48SEL_1    /*!< PLL clock used as RNG clock 
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB_CLKSOURCE  Peripheral USB clock source selection
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_HSI48        0x00000000U             /*!< HSI48 clock used as USB cloc
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL          RCC_CCIPR_CLK48SEL_1    /*!< PLL clock used as USB clock 
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_ADC_CLKSOURCE  Peripheral ADC clock source selection
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_ADC12_CLKSOURCE_NONE        ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_ADC12SEL_Pos << 
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_ADC12_CLKSOURCE_PLL         ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_ADC12SEL_Pos << 
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_ADC12_CLKSOURCE_SYSCLK      ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_ADC12SEL_Pos << 
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(RCC_CCIPR_ADC345SEL)
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_ADC345_CLKSOURCE_NONE       ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_ADC345SEL_Pos <<
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_ADC345_CLKSOURCE_PLL        ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_ADC345SEL_Pos <<
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_ADC345_CLKSOURCE_SYSCLK     ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_ADC345SEL_Pos <<
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* RCC_CCIPR_ADC345SEL */
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_QUADSPI  Peripheral QUADSPI get clock source
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_QUADSPI_CLKSOURCE_SYSCLK    0x00000000U              /*!< SYSCLK used as QuadSPI clo
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_QUADSPI_CLKSOURCE_HSI       RCC_CCIPR2_QSPISEL_0     /*!< HSI used as QuadSPI clock 
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_QUADSPI_CLKSOURCE_PLL       RCC_CCIPR2_QSPISEL_1     /*!< PLL used as QuadSPI clock 
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USARTx Peripheral USART get clock source
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE            RCC_CCIPR_USART1SEL /*!< USART1 Clock source selection *
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE            RCC_CCIPR_USART2SEL /*!< USART2 Clock source selection *
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE            RCC_CCIPR_USART3SEL /*!< USART3 Clock source selection *
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 147


 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_UARTx Peripheral UART get clock source
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(RCC_CCIPR_UART4SEL)
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE             RCC_CCIPR_UART4SEL /*!< UART4 Clock source selection */
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* RCC_CCIPR_UART4SEL */
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(RCC_CCIPR_UART5SEL)
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE             RCC_CCIPR_UART5SEL /*!< UART5 Clock source selection */
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* RCC_CCIPR_UART5SEL */
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPUART1 Peripheral LPUART get clock source
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE           RCC_CCIPR_LPUART1SEL /*!< LPUART1 Clock source selection
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1 Peripheral I2C get clock source
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE              ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C1SEL_Pos << 1
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE              ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C2SEL_Pos << 1
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE              ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C3SEL_Pos << 1
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_I2C4SEL)
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE              ((RCC_OFFSET_CCIPR2 << 24U) | (RCC_CCIPR2_I2C4SEL_Pos <<
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_I2C4SEL */
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPTIM1 Peripheral LPTIM get clock source
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE            RCC_CCIPR_LPTIM1SEL /*!< LPTIM1 Clock source selection *
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SAI1  Peripheral SAI get clock source
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE              RCC_CCIPR_SAI1SEL /*!< SAI1 Clock source selection */
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2S  Peripheral I2S get clock source
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_I2S_CLKSOURCE              RCC_CCIPR_I2S23SEL /*!< I2S Clock source selection */
ARM GAS  /tmp/cc85dWdm.s 			page 148


 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(FDCAN1)
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_FDCAN  Peripheral FDCAN get clock source
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_FDCAN_CLKSOURCE             RCC_CCIPR_FDCANSEL /*!< FDCAN Clock source selection */
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* FDCAN1 */
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RNG  Peripheral RNG get clock source
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE               RCC_CCIPR_CLK48SEL /*!< RNG Clock source selection */
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB  Peripheral USB get clock source
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE               RCC_CCIPR_CLK48SEL /*!< USB Clock source selection */
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_ADC  Peripheral ADC get clock source
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_ADC12_CLKSOURCE             ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_ADC12SEL_Pos << 
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(RCC_CCIPR_ADC345SEL_Pos)
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_ADC345_CLKSOURCE            ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_ADC345SEL_Pos <<
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* RCC_CCIPR_ADC345SEL_Pos */
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_QUADSPI  Peripheral QUADSPI get clock source
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_QUADSPI_CLKSOURCE           RCC_CCIPR2_QSPISEL    /*!< QuadSPI Clock source selectio
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_CLKSOURCE  RTC clock source selection
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_NONE          0x00000000U                   /*!< No clock used as RTC 
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSE           RCC_BDCR_RTCSEL_0       /*!< LSE oscillator clock used a
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSI           RCC_BDCR_RTCSEL_1       /*!< LSI oscillator clock used a
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_HSE_DIV32     RCC_BDCR_RTCSEL         /*!< HSE oscillator clock divide
ARM GAS  /tmp/cc85dWdm.s 			page 149


 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSOURCE  PLL entry clock source
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_NONE              0x00000000U             /*!< No clock */
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI               RCC_PLLCFGR_PLLSRC_HSI  /*!< HSI16 clock selected as PLL
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE               RCC_PLLCFGR_PLLSRC_HSE  /*!< HSE clock selected as PLL e
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLM_DIV  PLL division factor
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_1                  0x00000000U                                             
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_2                  RCC_PLLCFGR_PLLM_0                                      
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_3                  RCC_PLLCFGR_PLLM_1                                      
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_4                  (RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_PLLM_0)               
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_5                  RCC_PLLCFGR_PLLM_2                                      
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_6                  (RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_PLLM_0)               
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_7                  (RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_PLLM_1)               
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_8                  (RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_P
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_9                  RCC_PLLCFGR_PLLM_3                                      
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_10                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_0)               
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_11                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_1)               
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_12                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_P
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_13                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2)               
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_14                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_15                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_16                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLR_DIV  PLL division factor (PLLR)
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_2                  0x00000000U            /*!< Main PLL division factor for
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_4                  (RCC_PLLCFGR_PLLR_0)   /*!< Main PLL division factor for
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_6                  (RCC_PLLCFGR_PLLR_1)   /*!< Main PLL division factor for
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_8                  (RCC_PLLCFGR_PLLR)     /*!< Main PLL division factor for
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLP_DIV  PLL division factor (PLLP)
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_2                  (RCC_PLLCFGR_PLLPDIV_1)                                 
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_3                  (RCC_PLLCFGR_PLLPDIV_1|RCC_PLLCFGR_PLLPDIV_0)           
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_4                  (RCC_PLLCFGR_PLLPDIV_2)                                 
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_5                  (RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR_PLLPDIV_0)           
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_6                  (RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR_PLLPDIV_1)           
ARM GAS  /tmp/cc85dWdm.s 			page 150


 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_7                  (RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR_PLLPDIV_1|RCC_PLLCFGR
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_8                  (RCC_PLLCFGR_PLLPDIV_3)                                 
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_9                  (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_0)           
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_10                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_1)           
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_11                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_1|RCC_PLLCFGR
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_12                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_2)           
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_13                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_14                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_15                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_16                 (RCC_PLLCFGR_PLLPDIV_4)                                 
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_17                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_0)           
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_18                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_1)           
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_19                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_1|RCC_PLLCFGR
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_20                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_2)           
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_21                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_22                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_23                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_24                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3)           
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_25                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_26                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_27                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_28                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_29                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_30                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_31                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLQ_DIV  PLL division factor (PLLQ)
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_2                  0x00000000U             /*!< Main PLL division factor fo
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_4                  (RCC_PLLCFGR_PLLQ_0)    /*!< Main PLL division factor fo
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_6                  (RCC_PLLCFGR_PLLQ_1)    /*!< Main PLL division factor fo
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_8                  (RCC_PLLCFGR_PLLQ)      /*!< Main PLL division factor fo
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Exported macro ------------------------------------------------------------*/
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Macros RCC Exported Macros
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_WRITE_READ Common Write and read registers Macros
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Write a value in RCC register
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __REG__ Register to be written
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __VALUE__ Value to be written in the register
ARM GAS  /tmp/cc85dWdm.s 			page 151


 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_WriteReg(__REG__, __VALUE__) WRITE_REG(RCC->__REG__, __VALUE__)
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Read a value in RCC register
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __REG__ Register to be read
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Register value
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define LL_RCC_ReadReg(__REG__) READ_REG(RCC->__REG__)
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_CALC_FREQ Calculate frequencies
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency on system domain
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *             @ref LL_RCC_PLL_GetN (), @ref LL_RCC_PLL_GetR ());
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __PLLN__ Between Min_Data = 8 and Max_Data = 127
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __PLLR__ This parameter can be one of the following values:
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_2
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_4
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_6
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_8
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLM__, __PLLN__, __PLLR__) ((__INPUTFREQ__) * (
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****                    ((((__PLLR__) >> RCC_PLLCFGR_PLLR_Pos) + 1U) * 2U))
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency used on ADC domain
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_ADC_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *             @ref LL_RCC_PLL_GetN (), @ref LL_RCC_PLL_GetP ());
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
ARM GAS  /tmp/cc85dWdm.s 			page 152


 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __PLLN__ Between Min_Data = 8 and Max_Data = 127
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __PLLP__ This parameter can be one of the following values:
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_2
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_3
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_4
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_5
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_6
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_7
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_8
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_9
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_10
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_11
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_12
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_13
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_14
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_15
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_16
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_17
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_18
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_19
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_20
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_21
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_22
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_23
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_24
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_25
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_26
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_27
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_28
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_29
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_30
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_31
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_ADC_FREQ(__INPUTFREQ__, __PLLM__, __PLLN__, __PLLP__) ((__INPUTFREQ__)
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****                    ((__PLLP__) >> RCC_PLLCFGR_PLLPDIV_Pos))
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency used on 48M domain
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_48M_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
ARM GAS  /tmp/cc85dWdm.s 			page 153


 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *             @ref LL_RCC_PLL_GetN (), @ref LL_RCC_PLL_GetQ ());
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI)
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __PLLN__ Between Min_Data = 8 and Max_Data = 127
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __PLLQ__ This parameter can be one of the following values:
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_2
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_4
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_6
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_8
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_48M_FREQ(__INPUTFREQ__, __PLLM__, __PLLN__, __PLLQ__) ((__INPUTFREQ__)
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****                    ((((__PLLQ__) >> RCC_PLLCFGR_PLLQ_Pos) + 1U) << 1U))
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the HCLK frequency
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __SYSCLKFREQ__ SYSCLK frequency (based on HSE/HSI/PLLCLK)
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __AHBPRESCALER__ This parameter can be one of the following values:
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval HCLK clock frequency (in Hz)
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define __LL_RCC_CALC_HCLK_FREQ(__SYSCLKFREQ__,__AHBPRESCALER__) ((__SYSCLKFREQ__) >> (AHBPrescTabl
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK1 frequency (ABP1)
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __APB1PRESCALER__ This parameter can be one of the following values:
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval PCLK1 clock frequency (in Hz)
ARM GAS  /tmp/cc85dWdm.s 			page 154


 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK1_FREQ(__HCLKFREQ__, __APB1PRESCALER__) ((__HCLKFREQ__) >> (APBPrescTable
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK2 frequency (ABP2)
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  __APB2PRESCALER__ This parameter can be one of the following values:
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval PCLK2 clock frequency (in Hz)
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK2_FREQ(__HCLKFREQ__, __APB2PRESCALER__) ((__HCLKFREQ__) >> (APBPrescTable
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /* Exported functions --------------------------------------------------------*/
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Functions RCC Exported Functions
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSE HSE
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable the Clock Security System.
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           CSSON         LL_RCC_HSE_EnableCSS
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableCSS(void)
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable HSE external oscillator (HSE Bypass)
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_EnableBypass
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableBypass(void)
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEBYP);
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable HSE external oscillator (HSE Bypass)
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_DisableBypass
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
ARM GAS  /tmp/cc85dWdm.s 			page 155


 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableBypass(void)
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable HSE crystal oscillator (HSE ON)
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Enable(void)
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEON);
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable HSE crystal oscillator (HSE ON)
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Disable(void)
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Check if HSE oscillator Ready
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY)) ? 1UL : 0UL);
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI HSI
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable HSI even in stop mode
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note HSI oscillator is forced ON even in Stop mode
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           HSIKERON      LL_RCC_HSI_EnableInStopMode
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_EnableInStopMode(void)
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSIKERON);
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable HSI in stop mode
ARM GAS  /tmp/cc85dWdm.s 			page 156


 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           HSIKERON      LL_RCC_HSI_DisableInStopMode
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_DisableInStopMode(void)
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSIKERON);
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable HSI oscillator
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Enable
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Enable(void)
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSION);
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable HSI oscillator
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Disable
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Disable(void)
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION);
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Check if HSI clock is ready
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY)) ? 1UL : 0UL);
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get HSI Calibration value
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note When HSITRIM is written, HSICAL is updated with the sum of
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       HSITRIM and the factory trim value
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll ICSCR        HSICAL        LL_RCC_HSI_GetCalibration
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibration(void)
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_HSICAL) >> RCC_ICSCR_HSICAL_Pos);
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Set HSI Calibration trimming
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSICAL
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSICAL value,
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       should trim the HSI to 16 MHz +/- 1 %
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll ICSCR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Value Between Min_Data = 0 and Max_Data = 127
ARM GAS  /tmp/cc85dWdm.s 			page 157


1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_HSITRIM, Value << RCC_ICSCR_HSITRIM_Pos);
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get HSI Calibration trimming
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll ICSCR        HSITRIM       LL_RCC_HSI_GetCalibTrimming
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Between Min_Data = 0 and Max_Data = 127
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibTrimming(void)
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_ICSCR_HSITRIM_Pos);
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI48 HSI48
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable HSI48
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48ON       LL_RCC_HSI48_Enable
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Enable(void)
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON);
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable HSI48
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48ON       LL_RCC_HSI48_Disable
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Disable(void)
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON);
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Check if HSI48 oscillator Ready
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48RDY      LL_RCC_HSI48_IsReady
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_IsReady(void)
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == (RCC_CRRCR_HSI48RDY)) ? 1UL : 0UL);
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get HSI48 Calibration value
ARM GAS  /tmp/cc85dWdm.s 			page 158


1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48CAL      LL_RCC_HSI48_GetCalibration
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1FF
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_GetCalibration(void)
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48CAL) >> RCC_CRRCR_HSI48CAL_Pos);
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSE LSE
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable  Low Speed External (LSE) crystal.
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Enable
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Enable(void)
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable  Low Speed External (LSE) crystal.
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Disable
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Disable(void)
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable external clock source (LSE bypass).
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_EnableBypass
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable external clock source (LSE bypass).
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_DisableBypass
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 159


1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Set LSE oscillator drive capability
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note The oscillator is in Xtal mode when it is not in bypass mode.
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEDRV        LL_RCC_LSE_SetDriveCapability
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  LSEDrive This parameter can be one of the following values:
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_SetDriveCapability(uint32_t LSEDrive)
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_LSEDRV, LSEDrive);
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get LSE oscillator drive capability
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEDRV        LL_RCC_LSE_GetDriveCapability
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_GetDriveCapability(void)
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_LSEDRV));
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable Clock security system on LSE.
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSECSSON      LL_RCC_LSE_EnableCSS
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableCSS(void)
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSECSSON);
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable Clock security system on LSE.
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note Clock security system can be disabled only after a LSE
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       failure detection. In that case it MUST be disabled by software.
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSECSSON      LL_RCC_LSE_DisableCSS
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableCSS(void)
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSECSSON);
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Check if LSE oscillator Ready
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSERDY        LL_RCC_LSE_IsReady
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
ARM GAS  /tmp/cc85dWdm.s 			page 160


1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return ((READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == (RCC_BDCR_LSERDY)) ? 1UL : 0UL);
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Check if CSS on LSE failure Detection
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSECSSD       LL_RCC_LSE_IsCSSDetected
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsCSSDetected(void)
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return ((READ_BIT(RCC->BDCR, RCC_BDCR_LSECSSD) == (RCC_BDCR_LSECSSD)) ? 1UL : 0UL);
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSI LSI
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable LSI Oscillator
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Enable
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Enable(void)
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSION);
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable LSI Oscillator
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Disable
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Disable(void)
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Check if LSI is Ready
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CSR          LSIRDY        LL_RCC_LSI_IsReady
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == (RCC_CSR_LSIRDY)) ? 1UL : 0UL);
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSCO LSCO
ARM GAS  /tmp/cc85dWdm.s 			page 161


1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable Low speed clock
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSCOEN        LL_RCC_LSCO_Enable
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSCO_Enable(void)
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSCOEN);
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable Low speed clock
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSCOEN        LL_RCC_LSCO_Disable
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSCO_Disable(void)
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSCOEN);
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure Low speed clock selection
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSCOSEL       LL_RCC_LSCO_SetSource
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSCO_CLKSOURCE_LSI
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSCO_CLKSOURCE_LSE
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSCO_SetSource(uint32_t Source)
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_LSCOSEL, Source);
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get Low speed clock selection
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         LSCOSEL       LL_RCC_LSCO_GetSource
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSCO_CLKSOURCE_LSI
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSCO_CLKSOURCE_LSE
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSCO_GetSource(void)
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_LSCOSEL));
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_System System
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 162


1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure the system clock source
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CFGR         SW            LL_RCC_SetSysClkSource
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get the system clock source
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CFGR         SWS           LL_RCC_GetSysClkSource
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Set AHB prescaler
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_SetAHBPrescaler
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Set APB1 prescaler
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_SetAPB1Prescaler
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 163


1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Set APB2 prescaler
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_SetAPB2Prescaler
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get AHB prescaler
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_GetAHBPrescaler
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get APB1 prescaler
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_GetAPB1Prescaler
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1));
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get APB2 prescaler
ARM GAS  /tmp/cc85dWdm.s 			page 164


1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_GetAPB2Prescaler
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB2Prescaler(void)
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2));
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MCO MCO
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure MCOx
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CFGR         MCOSEL        LL_RCC_ConfigMCO\n
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         CFGR         MCOPRE        LL_RCC_ConfigMCO
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  MCOxSource This parameter can be one of the following values:
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_NOCLOCK
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_SYSCLK
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSE
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI48
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSI
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSE
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  MCOxPrescaler This parameter can be one of the following values:
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_1
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_2
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_4
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_8
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_16
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ConfigMCO(uint32_t MCOxSource, uint32_t MCOxPrescaler)
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE, MCOxSource | MCOxPrescaler);
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_Peripheral_Clock_Source Peripheral Clock Source
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 165


1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure USARTx clock source
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        USARTxSEL     LL_RCC_SetUSARTClockSource
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  USARTxSource This parameter can be one of the following values:
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK2
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_PCLK1
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_SYSCLK
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_HSI
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_LSE
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSARTClockSource(uint32_t USARTxSource)
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, (USARTxSource >> 16U), (USARTxSource & 0x0000FFFFU));
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(UART4)
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure UARTx clock source
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        UARTxSEL      LL_RCC_SetUARTClockSource
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  UARTxSource This parameter can be one of the following values:
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_PCLK1 (*)
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_SYSCLK (*)
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_HSI (*)
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_LSE (*)
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_PCLK1 (*)
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_SYSCLK (*)
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_HSI (*)
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_LSE (*)
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUARTClockSource(uint32_t UARTxSource)
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, (UARTxSource >> 16U), (UARTxSource & 0x0000FFFFU));
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* UART4 */
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure LPUART1x clock source
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        LPUART1SEL    LL_RCC_SetLPUARTClockSource
1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  LPUARTxSource This parameter can be one of the following values:
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_PCLK1
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_SYSCLK
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_HSI
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_LSE
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetLPUARTClockSource(uint32_t LPUARTxSource)
ARM GAS  /tmp/cc85dWdm.s 			page 166


1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_LPUART1SEL, LPUARTxSource);
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure I2Cx clock source
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        I2CxSEL       LL_RCC_SetI2CClockSource
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  I2CxSource This parameter can be one of the following values:
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_PCLK1
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_SYSCLK
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_HSI
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_PCLK1
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_SYSCLK
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_HSI
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_PCLK1
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_SYSCLK
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_HSI
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_PCLK1 (*)
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_SYSCLK (*)
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_HSI (*)
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetI2CClockSource(uint32_t I2CxSource)
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   __IO uint32_t *reg = (__IO uint32_t *)(uint32_t)(RCC_BASE + 0x88U + (I2CxSource >> 24U));
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(*reg, 3UL << ((I2CxSource & 0x001F0000U) >> 16U), ((I2CxSource & 0x000000FFU) << ((I2C
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure LPTIMx clock source
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        LPTIM1SEL     LL_RCC_SetLPTIMClockSource
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  LPTIMxSource This parameter can be one of the following values:
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_PCLK1
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSI
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_HSI
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSE
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetLPTIMClockSource(uint32_t LPTIMxSource)
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_LPTIM1SEL, LPTIMxSource);
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure SAIx clock source
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        SAI1SEL       LL_RCC_SetSAIClockSource
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  SAIxSource This parameter can be one of the following values:
1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_SYSCLK
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PLL
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PIN
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_HSI
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 167


1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSAIClockSource(uint32_t SAIxSource)
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_SAI1SEL, SAIxSource);
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure I2S clock source
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        I2S23SEL      LL_RCC_SetI2SClockSource
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  I2SxSource This parameter can be one of the following values:
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S_CLKSOURCE_SYSCLK
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S_CLKSOURCE_PLL
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S_CLKSOURCE_PIN
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S_CLKSOURCE_HSI
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetI2SClockSource(uint32_t I2SxSource)
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_I2S23SEL, I2SxSource);
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(FDCAN1)
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure FDCAN clock source
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        FDCANSEL      LL_RCC_SetFDCANClockSource
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  FDCANxSource This parameter can be one of the following values:
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_FDCAN_CLKSOURCE_HSE
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_FDCAN_CLKSOURCE_PLL
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_FDCAN_CLKSOURCE_PCLK1
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetFDCANClockSource(uint32_t FDCANxSource)
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_FDCANSEL, FDCANxSource);
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* FDCAN1 */
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure RNG clock source
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        CLK48SEL      LL_RCC_SetRNGClockSource
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  RNGxSource This parameter can be one of the following values:
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_HSI48
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_PLL
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRNGClockSource(uint32_t RNGxSource)
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_CLK48SEL, RNGxSource);
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure USB clock source
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        CLK48SEL      LL_RCC_SetUSBClockSource
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  USBxSource This parameter can be one of the following values:
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_HSI48
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 168


1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSBClockSource(uint32_t USBxSource)
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, RCC_CCIPR_CLK48SEL, USBxSource);
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure ADC clock source
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        ADC12SEL         LL_RCC_SetADCClockSource\n
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         CCIPR        ADC345SEL        LL_RCC_SetADCClockSource
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  ADCxSource This parameter can be one of the following values:
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC12_CLKSOURCE_NONE
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC12_CLKSOURCE_PLL
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC12_CLKSOURCE_SYSCLK
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC345_CLKSOURCE_NONE   (*)
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC345_CLKSOURCE_PLL    (*)
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC345_CLKSOURCE_SYSCLK (*)
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetADCClockSource(uint32_t ADCxSource)
 1625              		.loc 7 1694 22 view .LVU523
 1626              	.LBB669:
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, 3U << ((ADCxSource & 0x001F0000U) >> 16U), ((ADCxSource & 0x000000FFU) << 
 1627              		.loc 7 1696 3 view .LVU524
 1628 0030 7D4B     		ldr	r3, .L45
 1629 0032 D3F88820 		ldr	r2, [r3, #136]
 1630 0036 22F04052 		bic	r2, r2, #805306368
 1631 003a 42F08052 		orr	r2, r2, #268435456
 1632 003e C3F88820 		str	r2, [r3, #136]
 1633              	.LVL127:
 1634              		.loc 7 1696 3 is_stmt 0 view .LVU525
 1635              	.LBE669:
 1636              	.LBE668:
 257:Src/main.c    **** 
 1637              		.loc 1 257 3 is_stmt 1 view .LVU526
 1638              	.LBB670:
 1639              	.LBI670:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 1640              		.loc 3 451 22 view .LVU527
 1641              	.LBB671:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 1642              		.loc 3 453 3 view .LVU528
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1643              		.loc 3 454 3 view .LVU529
 1644 0042 DA6C     		ldr	r2, [r3, #76]
 1645 0044 42F40052 		orr	r2, r2, #8192
 1646 0048 DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 1647              		.loc 3 456 3 view .LVU530
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 1648              		.loc 3 456 12 is_stmt 0 view .LVU531
 1649 004a DA6C     		ldr	r2, [r3, #76]
 1650 004c 02F40052 		and	r2, r2, #8192
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 1651              		.loc 3 456 10 view .LVU532
ARM GAS  /tmp/cc85dWdm.s 			page 169


 1652 0050 0292     		str	r2, [sp, #8]
 1653              		.loc 3 457 3 is_stmt 1 view .LVU533
 1654 0052 029A     		ldr	r2, [sp, #8]
 1655              	.LVL128:
 1656              		.loc 3 457 3 is_stmt 0 view .LVU534
 1657              	.LBE671:
 1658              	.LBE670:
 259:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
 1659              		.loc 1 259 3 is_stmt 1 view .LVU535
 1660              	.LBB672:
 1661              	.LBI672:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 1662              		.loc 3 451 22 view .LVU536
 1663              	.LBB673:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 1664              		.loc 3 453 3 view .LVU537
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1665              		.loc 3 454 3 view .LVU538
 1666 0054 DA6C     		ldr	r2, [r3, #76]
 1667 0056 42F00102 		orr	r2, r2, #1
 1668 005a DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 1669              		.loc 3 456 3 view .LVU539
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 1670              		.loc 3 456 12 is_stmt 0 view .LVU540
 1671 005c DA6C     		ldr	r2, [r3, #76]
 1672 005e 02F00102 		and	r2, r2, #1
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 1673              		.loc 3 456 10 view .LVU541
 1674 0062 0192     		str	r2, [sp, #4]
 1675              		.loc 3 457 3 is_stmt 1 view .LVU542
 1676 0064 019A     		ldr	r2, [sp, #4]
 1677              	.LVL129:
 1678              		.loc 3 457 3 is_stmt 0 view .LVU543
 1679              	.LBE673:
 1680              	.LBE672:
 260:Src/main.c    ****   /**ADC1 GPIO Configuration
 1681              		.loc 1 260 3 is_stmt 1 view .LVU544
 1682              	.LBB674:
 1683              	.LBI674:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 1684              		.loc 3 451 22 view .LVU545
 1685              	.LBB675:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 1686              		.loc 3 453 3 view .LVU546
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1687              		.loc 3 454 3 view .LVU547
 1688 0066 DA6C     		ldr	r2, [r3, #76]
 1689 0068 42F00202 		orr	r2, r2, #2
 1690 006c DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 1691              		.loc 3 456 3 view .LVU548
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 1692              		.loc 3 456 12 is_stmt 0 view .LVU549
 1693 006e DB6C     		ldr	r3, [r3, #76]
 1694 0070 03F00203 		and	r3, r3, #2
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
ARM GAS  /tmp/cc85dWdm.s 			page 170


 1695              		.loc 3 456 10 view .LVU550
 1696 0074 0093     		str	r3, [sp]
 1697              		.loc 3 457 3 is_stmt 1 view .LVU551
 1698 0076 009B     		ldr	r3, [sp]
 1699              	.LVL130:
 1700              		.loc 3 457 3 is_stmt 0 view .LVU552
 1701              	.LBE675:
 1702              	.LBE674:
 267:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 1703              		.loc 1 267 3 is_stmt 1 view .LVU553
 267:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 1704              		.loc 1 267 23 is_stmt 0 view .LVU554
 1705 0078 0126     		movs	r6, #1
 1706 007a 0396     		str	r6, [sp, #12]
 268:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1707              		.loc 1 268 3 is_stmt 1 view .LVU555
 268:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1708              		.loc 1 268 24 is_stmt 0 view .LVU556
 1709 007c 0325     		movs	r5, #3
 1710 007e 0495     		str	r5, [sp, #16]
 269:Src/main.c    ****   LL_GPIO_Init(M1_BUS_VOLTAGE_GPIO_Port, &GPIO_InitStruct);
 1711              		.loc 1 269 3 is_stmt 1 view .LVU557
 269:Src/main.c    ****   LL_GPIO_Init(M1_BUS_VOLTAGE_GPIO_Port, &GPIO_InitStruct);
 1712              		.loc 1 269 24 is_stmt 0 view .LVU558
 1713 0080 0794     		str	r4, [sp, #28]
 270:Src/main.c    **** 
 1714              		.loc 1 270 3 is_stmt 1 view .LVU559
 1715 0082 03A9     		add	r1, sp, #12
 1716 0084 4FF09040 		mov	r0, #1207959552
 1717 0088 FFF7FEFF 		bl	LL_GPIO_Init
 1718              	.LVL131:
 272:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 1719              		.loc 1 272 3 view .LVU560
 272:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 1720              		.loc 1 272 23 is_stmt 0 view .LVU561
 1721 008c 0423     		movs	r3, #4
 1722 008e 0393     		str	r3, [sp, #12]
 273:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1723              		.loc 1 273 3 is_stmt 1 view .LVU562
 273:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1724              		.loc 1 273 24 is_stmt 0 view .LVU563
 1725 0090 0495     		str	r5, [sp, #16]
 274:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP1_OUT_GPIO_Port, &GPIO_InitStruct);
 1726              		.loc 1 274 3 is_stmt 1 view .LVU564
 274:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP1_OUT_GPIO_Port, &GPIO_InitStruct);
 1727              		.loc 1 274 24 is_stmt 0 view .LVU565
 1728 0092 0794     		str	r4, [sp, #28]
 275:Src/main.c    **** 
 1729              		.loc 1 275 3 is_stmt 1 view .LVU566
 1730 0094 03A9     		add	r1, sp, #12
 1731 0096 4FF09040 		mov	r0, #1207959552
 1732 009a FFF7FEFF 		bl	LL_GPIO_Init
 1733              	.LVL132:
 277:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 1734              		.loc 1 277 3 view .LVU567
 277:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 1735              		.loc 1 277 23 is_stmt 0 view .LVU568
ARM GAS  /tmp/cc85dWdm.s 			page 171


 1736 009e 0223     		movs	r3, #2
 1737 00a0 0393     		str	r3, [sp, #12]
 278:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1738              		.loc 1 278 3 is_stmt 1 view .LVU569
 278:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1739              		.loc 1 278 24 is_stmt 0 view .LVU570
 1740 00a2 0495     		str	r5, [sp, #16]
 279:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP3_OUT_GPIO_Port, &GPIO_InitStruct);
 1741              		.loc 1 279 3 is_stmt 1 view .LVU571
 279:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP3_OUT_GPIO_Port, &GPIO_InitStruct);
 1742              		.loc 1 279 24 is_stmt 0 view .LVU572
 1743 00a4 0794     		str	r4, [sp, #28]
 280:Src/main.c    **** 
 1744              		.loc 1 280 3 is_stmt 1 view .LVU573
 1745 00a6 614F     		ldr	r7, .L45+4
 1746 00a8 03A9     		add	r1, sp, #12
 1747 00aa 3846     		mov	r0, r7
 1748 00ac FFF7FEFF 		bl	LL_GPIO_Init
 1749              	.LVL133:
 282:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 1750              		.loc 1 282 3 view .LVU574
 282:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 1751              		.loc 1 282 23 is_stmt 0 view .LVU575
 1752 00b0 4FF48043 		mov	r3, #16384
 1753 00b4 0393     		str	r3, [sp, #12]
 283:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1754              		.loc 1 283 3 is_stmt 1 view .LVU576
 283:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1755              		.loc 1 283 24 is_stmt 0 view .LVU577
 1756 00b6 0495     		str	r5, [sp, #16]
 284:Src/main.c    ****   LL_GPIO_Init(M1_TEMPERATURE_GPIO_Port, &GPIO_InitStruct);
 1757              		.loc 1 284 3 is_stmt 1 view .LVU578
 284:Src/main.c    ****   LL_GPIO_Init(M1_TEMPERATURE_GPIO_Port, &GPIO_InitStruct);
 1758              		.loc 1 284 24 is_stmt 0 view .LVU579
 1759 00b8 0794     		str	r4, [sp, #28]
 285:Src/main.c    **** 
 1760              		.loc 1 285 3 is_stmt 1 view .LVU580
 1761 00ba 03A9     		add	r1, sp, #12
 1762 00bc 3846     		mov	r0, r7
 1763 00be FFF7FEFF 		bl	LL_GPIO_Init
 1764              	.LVL134:
 293:Src/main.c    ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_LEFT;
 1765              		.loc 1 293 3 view .LVU581
 293:Src/main.c    ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_LEFT;
 1766              		.loc 1 293 29 is_stmt 0 view .LVU582
 1767 00c2 1794     		str	r4, [sp, #92]
 294:Src/main.c    ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 1768              		.loc 1 294 3 is_stmt 1 view .LVU583
 294:Src/main.c    ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 1769              		.loc 1 294 32 is_stmt 0 view .LVU584
 1770 00c4 4FF40043 		mov	r3, #32768
 1771 00c8 1893     		str	r3, [sp, #96]
 295:Src/main.c    ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 1772              		.loc 1 295 3 is_stmt 1 view .LVU585
 295:Src/main.c    ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 1773              		.loc 1 295 31 is_stmt 0 view .LVU586
 1774 00ca 1994     		str	r4, [sp, #100]
ARM GAS  /tmp/cc85dWdm.s 			page 172


 296:Src/main.c    ****   ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
 1775              		.loc 1 296 3 is_stmt 1 view .LVU587
 1776 00cc 17A9     		add	r1, sp, #92
 1777 00ce 4FF0A040 		mov	r0, #1342177280
 1778 00d2 FFF7FEFF 		bl	LL_ADC_Init
 1779              	.LVL135:
 297:Src/main.c    ****   ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS;
 1780              		.loc 1 297 3 view .LVU588
 297:Src/main.c    ****   ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS;
 1781              		.loc 1 297 36 is_stmt 0 view .LVU589
 1782 00d6 1194     		str	r4, [sp, #68]
 298:Src/main.c    ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 1783              		.loc 1 298 3 is_stmt 1 view .LVU590
 298:Src/main.c    ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 1784              		.loc 1 298 38 is_stmt 0 view .LVU591
 1785 00d8 1296     		str	r6, [sp, #72]
 299:Src/main.c    ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 1786              		.loc 1 299 3 is_stmt 1 view .LVU592
 299:Src/main.c    ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 1787              		.loc 1 299 39 is_stmt 0 view .LVU593
 1788 00da 1394     		str	r4, [sp, #76]
 300:Src/main.c    ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 1789              		.loc 1 300 3 is_stmt 1 view .LVU594
 300:Src/main.c    ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 1790              		.loc 1 300 37 is_stmt 0 view .LVU595
 1791 00dc 1494     		str	r4, [sp, #80]
 301:Src/main.c    ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 1792              		.loc 1 301 3 is_stmt 1 view .LVU596
 301:Src/main.c    ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 1793              		.loc 1 301 34 is_stmt 0 view .LVU597
 1794 00de 1594     		str	r4, [sp, #84]
 302:Src/main.c    ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 1795              		.loc 1 302 3 is_stmt 1 view .LVU598
 302:Src/main.c    ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 1796              		.loc 1 302 30 is_stmt 0 view .LVU599
 1797 00e0 1694     		str	r4, [sp, #88]
 303:Src/main.c    ****   LL_ADC_SetGainCompensation(ADC1, 0);
 1798              		.loc 1 303 3 is_stmt 1 view .LVU600
 1799 00e2 11A9     		add	r1, sp, #68
 1800 00e4 4FF0A040 		mov	r0, #1342177280
 1801 00e8 FFF7FEFF 		bl	LL_ADC_REG_Init
 1802              	.LVL136:
 304:Src/main.c    ****   LL_ADC_SetOverSamplingScope(ADC1, LL_ADC_OVS_DISABLE);
 1803              		.loc 1 304 3 view .LVU601
 1804              	.LBB676:
 1805              	.LBI676:
 1806              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @file    stm32g4xx_ll_adc.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * All rights reserved.
ARM GAS  /tmp/cc85dWdm.s 			page 173


  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #ifndef STM32G4xx_LL_ADC_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define STM32G4xx_LL_ADC_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3) || defined (ADC4) || defined (ADC5)
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ1_Pos)
ARM GAS  /tmp/cc85dWdm.s 			page 174


  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ2_Pos)
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ3_Pos)
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (ADC_SQR1_SQ4_Pos)
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ5_Pos)
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ6_Pos)
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ7_Pos)
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ8_Pos)
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (ADC_SQR2_SQ9_Pos)
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS (ADC_SQR3_SQ10_Pos)
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS (ADC_SQR3_SQ11_Pos)
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (ADC_SQR3_SQ12_Pos)
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (ADC_SQR3_SQ13_Pos)
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (ADC_SQR3_SQ14_Pos)
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS (ADC_SQR4_SQ15_Pos)
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS (ADC_SQR4_SQ16_Pos)
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - data register offset                                                     */
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - regular trigger source                                                   */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
ARM GAS  /tmp/cc85dWdm.s 			page 175


 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (ADC_CFGR_EXTSEL_Pos)
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (ADC_CFGR_EXTEN_Pos)
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - injected trigger source                                                  */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  (ADC_JSQR_JEXTSEL_Pos)
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   (ADC_JSQR_JEXTEN_Pos)
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (ADC_CFGR_AWD1CH_Pos)
ARM GAS  /tmp/cc85dWdm.s 			page 176


 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
ARM GAS  /tmp/cc85dWdm.s 			page 177


 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* channels literals definition.                                              */
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*   selection on groups.                                                     */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
ARM GAS  /tmp/cc85dWdm.s 			page 178


 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC registers bits positions */
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (ADC_TR1_HT1_Pos)
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC registers bits groups */
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* ADC internal channels related definitions */
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3000UL)                     /* Analog voltage reference
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Temperature sensor */
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
ARM GAS  /tmp/cc85dWdm.s 			page 179


 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is applied.
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Pointer to register address
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and multimode
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         disabled.
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 180


 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
ARM GAS  /tmp/cc85dWdm.s 			page 181


 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions with prefix "REG").
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              data preserved or overwritten.
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 182


 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is conditioned to ADC state:
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance must be disabled.
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         refer to description of each function for setting
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         conditioned to ADC state.
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** typedef struct
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
ARM GAS  /tmp/cc85dWdm.s 			page 183


 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
ARM GAS  /tmp/cc85dWdm.s 			page 184


 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* DMA transfer.                                                              */
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_VSENSESEL)    /*!< ADC measurement path to inte
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATSEL)      /*!< ADC measurement path to inte
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc85dWdm.s 			page 185


 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)       /*!< ADC offset is negative (among 
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC_OFR1_OFFSETPOS) /*!< ADC offset is positive (among 
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 186


 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)          /*!< ADC offset saturation is di
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC_OFR1_SATEN)        /*!< ADC offset saturation is en
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR_ADC1     (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR_ADC5     (LL_ADC_CHANNEL_4  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP1             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP2             (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP3_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP3_ADC3        (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP4             (LL_ADC_CHANNEL_5  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP5             (LL_ADC_CHANNEL_3  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VOPAMP6             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 187


 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger internal: SW start.
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH1       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH1       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM7_TRGO      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_CH1       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
ARM GAS  /tmp/cc85dWdm.s 			page 188


 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_TRGO     (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_TRGO2    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH1      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH2      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM20_CH3      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG1     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG2     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG3     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG4     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG5     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG6     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EX
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG7     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG8     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG9     (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG10    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE2     (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM_OUT      (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group regular conversion trigger from external perip
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 189


 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)       /*!< ADC conversions sam
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC_CFGR2_BULB)     /*!< ADC conversions sam
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                 Note: First convers
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC_CFGR2_SMPTRIG)  /*!< ADC conversions sam
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                  Trigger rising edg
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                  Trigger falling ed
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 190


 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
ARM GAS  /tmp/cc85dWdm.s 			page 191


1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger internal: SW start
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH3       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM7_TRGO      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
ARM GAS  /tmp/cc85dWdm.s 			page 192


1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH2       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM16_CH1      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2    (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, TIM20 is not available on al
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_CH2      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger available only on ADC3/4/5 instances. On this ST
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM20_CH4      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Trigger available only on ADC1/2 instances. On this STM3
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10    (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, HRTIM is not available on al
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE3     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
ARM GAS  /tmp/cc85dWdm.s 			page 193


1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            Note: On this STM32 series, this trigger is available on
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM_OUT      (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXT
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                            ADC group injected conversion trigger from external peri
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
ARM GAS  /tmp/cc85dWdm.s 			page 194


1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /tmp/cc85dWdm.s 			page 195


1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
ARM GAS  /tmp/cc85dWdm.s 			page 196


1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR_ADC1 & ADC_CHANNEL_ID_M
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR_ADC5 & ADC_CHANNEL_ID_M
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_REG          ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK)   
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_INJ          ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) | 
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP1_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP1       & ADC_CHANNEL_ID_MASK) | 
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_REG          ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK)   
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_INJ          ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) | 
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP2_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP2       & ADC_CHANNEL_ID_MASK) | 
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK)   
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) | 
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ ((LL_ADC_CHANNEL_VOPAMP3_ADC2  & ADC_CHANNEL_ID_MASK) | 
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK)   
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) | 
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ ((LL_ADC_CHANNEL_VOPAMP3_ADC3  & ADC_CHANNEL_ID_MASK) | 
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_REG          ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK)   
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_INJ          ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) | 
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP4_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP4       & ADC_CHANNEL_ID_MASK) | 
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_REG          ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK)   
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_INJ          ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) | 
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP5_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP5       & ADC_CHANNEL_ID_MASK) | 
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_REG          ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK)   
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_INJ          ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) | 
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VOPAMP6_REG_INJ      ((LL_ADC_CHANNEL_VOPAMP6       & ADC_CHANNEL_ID_MASK) | 
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                                          
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (                                        ADC_TR1_AWDFILT
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (                    ADC_TR1_AWDFILT_1                  
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (                    ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC_TR1_AWDFILT_2                                      
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC_TR1_AWDFILT_2 |                     ADC_TR1_AWDFILT
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1                  
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC_TR1_AWDFILT_2 | ADC_TR1_AWDFILT_1 | ADC_TR1_AWDFILT
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 197


1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
ARM GAS  /tmp/cc85dWdm.s 			page 198


1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
ARM GAS  /tmp/cc85dWdm.s 			page 199


1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not timeout values.
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         above each literal definition.
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       not timeout values.                                                  */
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       STM32 series:                                                        */
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         cycles                                                             */
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         configuration.                                                     */
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: us                                                                   */
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)  /*!< Delay required between ADC end of cali
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc85dWdm.s 			page 200


1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Read a value in ADC register
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Register value
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Example:
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will return decimal number "4".
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number is returned, either defined with number
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
ARM GAS  /tmp/cc85dWdm.s 			page 201


1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                       \
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                       \
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                       \
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                       \
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                       \
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from number in decimal format.
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Example:
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
ARM GAS  /tmp/cc85dWdm.s 			page 202


1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                               
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                               
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (                                                                                               
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                                               
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
ARM GAS  /tmp/cc85dWdm.s 			page 203


1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC internal channel:
1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned from ADC registers,
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         parameters definitions of driver.
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
ARM GAS  /tmp/cc85dWdm.s 			page 204


1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a value defined from parameter definition of
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC registers.
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
ARM GAS  /tmp/cc85dWdm.s 			page 205


1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or a value from functions where a channel number is
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned from ADC registers,
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         parameters definitions of driver.
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
ARM GAS  /tmp/cc85dWdm.s 			page 206


1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(STM32G474xx) || defined(STM32G484xx) || defined(STM32G473xx) || defined(STM32G483xx)
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC4)                                               \
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP6)         ||                    \
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC5)                                               \
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP5)         ||                    \
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC5) ||                    \
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP4)         ||                    \
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32G471xx)
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
ARM GAS  /tmp/cc85dWdm.s 			page 207


1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32GBK1CB) || defined(STM32G431xx) || defined(STM32G441xx)
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #elif defined(STM32G491xx) || defined(STM32G4A1xx)
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC1)                                               \
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP1)         ||                    \
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR_ADC1) ||                    \
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)            ||                    \
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC2)                                               \
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP2)         ||                    \
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC2)                          \
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ||                                                                          \
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
ARM GAS  /tmp/cc85dWdm.s 			page 208


2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     &&(                                                                        \
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP3_ADC3)    ||                    \
2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VOPAMP6)         ||                    \
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                           \
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example:
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
ARM GAS  /tmp/cc85dWdm.s 			page 209


2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
ARM GAS  /tmp/cc85dWdm.s 			page 210


2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG  (0)(1)
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ  (0)(1)
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ (1)
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG  (0)(5)
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ  (0)(5)
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ (5)
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(6)
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(6)
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (6)
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG          (0)(1)
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_INJ          (0)(1)
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG_INJ         (1)
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG          (0)(2)
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_INJ          (0)(2)
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG_INJ         (2)
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     (0)(2)
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     (0)(2)
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ    (2)
2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     (0)(3)
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     (0)(3)
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ    (3)
2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG          (0)(5)
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_INJ          (0)(5)
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG_INJ         (5)
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG          (0)(5)
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_INJ          (0)(5)
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG_INJ         (5)
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG          (0)(4)
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_INJ          (0)(4)
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG_INJ         (4)
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.\n
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
ARM GAS  /tmp/cc85dWdm.s 			page 211


2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    :                                                                                               
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         different of 12 bits.
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            (< ADCx param >,
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            );
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         different of 12 bits.
2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *            );
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 212


2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
2247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
2253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential ended to 0x2A:
2255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC1,
2257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC common instance).
2288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
ARM GAS  /tmp/cc85dWdm.s 			page 213


2291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         any other ADC instance).
2293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC5)
2297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )?                                                                         \
2300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (ADC1)                                                                     \
2301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     :                                                                          \
2302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ( ( ((__ADCx__) == ADC4)                                                   \
2303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )?                                                                       \
2304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (ADC3)                                                                   \
2305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (__ADCx__)                                                               \
2307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )                                                                          \
2308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     )?                                                                         \
2313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (ADC1)                                                                     \
2314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     :                                                                          \
2315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (__ADCx__)                                                                 \
2316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC5 */
2318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC common register instance
2329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC345_COMMON)
2331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
2333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
2335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (                                                                        \
2338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (ADC345_COMMON)                                                         \
2339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)  (ADC12_COMMON)
2343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC345_COMMON */
2344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC common instance are disabled.
2347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
ARM GAS  /tmp/cc85dWdm.s 			page 214


2348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are disabled.
2358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled.
2360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC345_COMMON)
2362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC4) &&  defined(ADC5)
2363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (                                                                        \
2371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC3) |                                               \
2372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC4) |                                               \
2373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC5)  )                                              \
2374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     ? (                                                                        \
2380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       )                                                                        \
2383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       :                                                                        \
2384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       (LL_ADC_IsEnabled(ADC3))                                                 \
2385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   )
2386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC4 && ADC5 */
2387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
2390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif
2391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (refer to reference manual).
2398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 215


2405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a resolution to another resolution.
2411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((__DATA__)                                                                 \
2430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                       (unit: digital value).
2443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       __ADC_DATA__,\
2452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         reference VrefInt.
2461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
ARM GAS  /tmp/cc85dWdm.s 			page 216


2462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         connected to pin Vref+.
2465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calculation formula:
2496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
ARM GAS  /tmp/cc85dWdm.s 			page 217


2519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor.
2521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                            \
2538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   (__ADC_RESOLUTION__),          \
2540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   LL_ADC_RESOLUTION_12B)         \
2541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                  * (__VREFANALOG_VOLTAGE__))                                     \
2542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                 / TEMPSENSOR_CAL_VREFANALOG)                                     \
2543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  ) + TEMPSENSOR_CAL1_TEMP                                                        \
2547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (refer to device datasheet).
2554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calculation formula:
2555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   (unit: digital value)
2559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  datasheet typical values.
2566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
ARM GAS  /tmp/cc85dWdm.s 			page 218


2576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       On STM32G4, refer to device datasheet parameter "Avg_Slop
2580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                       On STM32G4, refer to device datasheet parameter "V30" (co
2582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               * 1000UL)                                                     \
2602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     -                                                                       \
2603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****               * 1000UL)                                                     \
2605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****    )                                                                        \
2606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** )
2609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
ARM GAS  /tmp/cc85dWdm.s 			page 219


2633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example:
2641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
2658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval ADC register address
2660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t data_reg_addr;
2665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
2668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     /* Retrieve address of register DR */
2669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
2671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
2673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
2676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return data_reg_addr;
2678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #else
2680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(Register);
2684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Retrieve address of register DR */
2686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 220


2690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         must be respected.
2703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
2704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
ARM GAS  /tmp/cc85dWdm.s 			page 221


2747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalCh\n
2786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalCh
2787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSEL, PathInternal)
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
ARM GAS  /tmp/cc85dWdm.s 			page 222


2804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Add paths to the current configuration.
2805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
2819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalChAdd\n
2821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalChAdd
2822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Remove paths to the current configuration.
2840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_SetCommonPathInternalChRem\n
2845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_SetCommonPathInternalChRem
2846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 223


2861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
2864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VSENSESEL      LL_ADC_GetCommonPathInternalCh\n
2868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      VBATSEL        LL_ADC_GetCommonPathInternalCh
2869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSE
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
2884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
2888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without having to perform a new calibration using
2895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
2899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         requires their calibration).
2902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on group regular.
2911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
ARM GAS  /tmp/cc85dWdm.s 			page 224


2918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         single-ended and differential modes
2936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
2951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
2952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
2953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC resolution.
2957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
2961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
2963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
2971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
ARM GAS  /tmp/cc85dWdm.s 			page 225


2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
2983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
2989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
2991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
2993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
2994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
2995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
3003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
3005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
3010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
3012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
3016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
3019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
3025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
ARM GAS  /tmp/cc85dWdm.s 			page 226


3032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           in order to reduce power consumption.
3035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           has been retrieved by user software.
3039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           other conversion.
3041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           applications.
3045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           How to use this low power mode:
3046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC conversion start.
3057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
3069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
3076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
ARM GAS  /tmp/cc85dWdm.s 			page 227


3089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           in order to reduce power consumption.
3091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           has been retrieved by user software.
3095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           other conversion.
3097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           applications.
3101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           How to use this low power mode:
3102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC conversion start.
3113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
3125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
3132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or group injected)
3142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           converted data).
3144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
ARM GAS  /tmp/cc85dWdm.s 			page 228


3146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are set to 0.
3147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
3156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
3178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
3179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
3180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
3181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
3182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
3196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
3197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
3198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
3199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
3200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
3201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
3202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
ARM GAS  /tmp/cc85dWdm.s 			page 229


3203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
3204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
3206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
3208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
3210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
3211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
3212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
3213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
3214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
3215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
3216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
3217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or group injected)
3234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
3242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
3244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
3246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
ARM GAS  /tmp/cc85dWdm.s 			page 230


3260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
3261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
3262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
3263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
3278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
3279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
3280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
3281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
3282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
3283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
3284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
3285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
3286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
3287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
3288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
3290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
3291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
3292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
3293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
3294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
3295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
3296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
3297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
3298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
3299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
3300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         converted data).
3314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         are set to 0.
ARM GAS  /tmp/cc85dWdm.s 			page 231


3317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         force offset state disable or enable
3339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetState);
3369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset state disabled or enabled.
ARM GAS  /tmp/cc85dWdm.s 			page 232


3374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         choose offset sign.
3398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
3403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
3404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
3405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
3406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
3413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
3418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_OFFSETPOS,
3423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetSign);
3424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset sign if positive or negative.
3429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
3430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
ARM GAS  /tmp/cc85dWdm.s 			page 233


3431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
3432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
3433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety)
3444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSETPOS);
3448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         choose offset saturation mode.
3453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
3458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
3459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
3460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
3461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
3468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
3473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_OFR1_SATEN,
3478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              OffsetSaturation);
3479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
3484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
3485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
3486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
3487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
ARM GAS  /tmp/cc85dWdm.s 			page 234


3488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_SATEN);
3503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC gain compensation.
3507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the gain compensation coefficient
3508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         that is applied to raw converted data using the formula:
3509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           DATA = DATA(raw) * (gain compensation coef) / 4096
3510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function enables the gain compensation if given
3511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coefficient is above 0, otherwise it disables it.
3512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Gain compensation when enabled is applied to all channels.
3513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll GCOMP    GCOMPCOEFF     LL_ADC_SetGainCompensation\n
3518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    GCOMP          LL_ADC_SetGainCompensation
3519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  GainCompensation This parameter can be:
3521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         0           Gain compensation will be disabled and value set to 0
3522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 -> 16393  Gain compensation will be enabled with specified value
3523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetGainCompensation(ADC_TypeDef *ADCx, uint32_t GainCompensation)
 1807              		.loc 8 3525 22 view .LVU602
 1808              	.LBB677:
3526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->GCOMP, ADC_GCOMP_GCOMPCOEFF, GainCompensation);
 1809              		.loc 8 3527 3 view .LVU603
 1810 00ec 4FF0A045 		mov	r5, #1342177280
 1811 00f0 D5F8C030 		ldr	r3, [r5, #192]
 1812 00f4 23F47F53 		bic	r3, r3, #16320
 1813 00f8 23F03F03 		bic	r3, r3, #63
 1814 00fc C5F8C030 		str	r3, [r5, #192]
3528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_GCOMP, ((GainCompensation == 0UL) ? 0UL : 1UL) << ADC_CFGR2_GCO
 1815              		.loc 8 3528 3 view .LVU604
 1816 0100 2B69     		ldr	r3, [r5, #16]
 1817 0102 23F48033 		bic	r3, r3, #65536
 1818 0106 2B61     		str	r3, [r5, #16]
 1819              	.LVL137:
 1820              		.loc 8 3528 3 is_stmt 0 view .LVU605
 1821              	.LBE677:
 1822              	.LBE676:
ARM GAS  /tmp/cc85dWdm.s 			page 235


 305:Src/main.c    ****   ADC_CommonInitStruct.CommonClock = LL_ADC_CLOCK_ASYNC_DIV1;
 1823              		.loc 1 305 3 is_stmt 1 view .LVU606
 1824              	.LBB678:
 1825              	.LBI678:
3529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the ADC gain compensation value
3533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll GCOMP    GCOMPCOEFF     LL_ADC_GetGainCompensation\n
3534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    GCOMP          LL_ADC_GetGainCompensation
3535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be:
3537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         0           Gain compensation is disabled
3538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 -> 16393  Gain compensation is enabled with returned value
3539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetGainCompensation(ADC_TypeDef *ADCx)
3541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR2, ADC_CFGR2_GCOMP) == ADC_CFGR2_GCOMP) ? READ_BIT(ADCx->GCOMP, ADC_G
3543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
3553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc85dWdm.s 			page 236


3582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
3586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
3592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1        (1)
3612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2        (1)
3613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH1        (2)
3616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2        (1)
3617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3        (2)
3618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1        (2)
3620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4        (1)
3621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH1        (2)
3623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4        (1)
3624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO
3626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1        (2)
3629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO
3631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO2
3632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH1
3633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH2       (1)
3634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH3       (1)
3635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG2      (2)
3637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG4      (2)
ARM GAS  /tmp/cc85dWdm.s 			page 237


3639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG5
3640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG6
3641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG7
3642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG8
3643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG9
3644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG10
3645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11     (1)
3646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE2      (2)
3647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM_OUT
3648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
3650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
3652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (equivalent to
3667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1        (1)
3679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2        (1)
3680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH1        (2)
3683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2        (1)
3684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3        (2)
3685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1        (2)
3687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4        (1)
3688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH1        (2)
3690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4        (1)
3691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM7_TRGO
3693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1        (2)
ARM GAS  /tmp/cc85dWdm.s 			page 238


3696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO
3698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_TRGO2
3699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH1
3700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH2       (1)
3701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM20_CH3       (1)
3702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG2      (2)
3704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG4      (2)
3706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG5
3707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG6
3708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG7
3709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG8
3710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG9
3711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG10
3712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11     (1)
3713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE2      (2)
3714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM_OUT
3715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
3716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
3717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
3718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
3719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((TriggerSource
3731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****          );
3734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or external.
3739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 239


3753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
3789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
3790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This mode applies to regular group only.
3791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Set sampling mode is applied to all conversion of regular group.
3792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
3797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
3798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
3800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
3806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, SamplingMode);
3808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 240


3810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the ADC sampling mode
3812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_GetSamplingMode\n
3813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_GetSamplingMode
3814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSamplingMode(ADC_TypeDef *ADCx)
3821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG));
3823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are configurable.
3832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function performs configuration of:
3833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are defined by channel number.
3842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function performs configuration of:
3843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             highest channel number).
3850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
ARM GAS  /tmp/cc85dWdm.s 			page 241


3867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are configurable.
3891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function retrieves:
3892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are defined by channel number.
3901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This function retrieves:
3902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             highest channel number).
3909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
ARM GAS  /tmp/cc85dWdm.s 			page 242


3924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
3942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
3948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
3950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
3964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
3974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
3977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
ARM GAS  /tmp/cc85dWdm.s 			page 243


3981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
3988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
3990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
3992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
3993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
3994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         scan sequence rank.
3996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function performs configuration of:
3997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
ARM GAS  /tmp/cc85dWdm.s 			page 244


4038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
ARM GAS  /tmp/cc85dWdm.s 			page 245


4095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         scan sequence rank.
4107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
4121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
4123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
ARM GAS  /tmp/cc85dWdm.s 			page 246


4152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
4201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
4207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
ARM GAS  /tmp/cc85dWdm.s 			page 247


4209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
4212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           conversions launched successively automatically.
4220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           conversions launched successively automatically.
4244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
4251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode:
4260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
4263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
ARM GAS  /tmp/cc85dWdm.s 			page 248


4266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
4267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
4270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode:
4300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
4303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
4307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
4310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
ARM GAS  /tmp/cc85dWdm.s 			page 249


4323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
4326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         data preserved or overwritten.
4333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         other devices without this feature have a behavior
4335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         equivalent to data overwritten.
4336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
4343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         data preserved or overwritten.
4358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
4365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
4371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
4375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
ARM GAS  /tmp/cc85dWdm.s 			page 250


4380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
4381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
4436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
ARM GAS  /tmp/cc85dWdm.s 			page 251


4437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
4440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external interrupt line).
4451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (equivalent to
4455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
ARM GAS  /tmp/cc85dWdm.s 			page 252


4494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
4502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
4504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
4505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
4506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
4508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
4514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((TriggerSource
4518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****          );
4521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             or external
4526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
4535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
ARM GAS  /tmp/cc85dWdm.s 			page 253


4551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function performs configuration of:
4577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function retrieves:
4603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
ARM GAS  /tmp/cc85dWdm.s 			page 254


4608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
4625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         number of ranks.
4643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence rank.
4657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
4664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
ARM GAS  /tmp/cc85dWdm.s 			page 255


4665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cc85dWdm.s 			page 256


4722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sequence rank.
4737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
4747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
4749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
4763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
4764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
4765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
4766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
4767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /tmp/cc85dWdm.s 			page 257


4779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
4781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
4782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
4783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
4784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
4785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
4786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
4787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
4788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
4789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
4790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
4791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
4792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
4793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
4794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
4795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
4796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
4797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
4798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
4799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
4800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
4801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
4802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
4803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
4812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent or from ADC group regular.
4817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC group injected.
4823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent trigger.
4826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         from ADC group regular.
4831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /tmp/cc85dWdm.s 			page 258


4836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         independent or from ADC group regular.
4852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - group injected trigger
4867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer length
4868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer ranks
4869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If contexts queue is disabled:
4870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           and is active perpetually.
4872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If contexts queue is enabled:
4873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           into the queue).
4884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/cc85dWdm.s 			page 259


4893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
4895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
4903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
4919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
4921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
4923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
4924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
4925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         contexts queue.
4927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - group injected trigger
4929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer length
4930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - sequencer ranks
4931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         cannot be used):
4935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         enabled separately.
4944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some fast channels are available: fast analog inputs
4946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
4949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
ARM GAS  /tmp/cc85dWdm.s 			page 260


4950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
4959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH3         (2)
4964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1         (1)
4967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1         (1)
4969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3         (1)
4970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4         (1)
4971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3         (2)
4973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH4         (2)
4974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM7_TRGO
4976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2         (2)
4979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM16_CH1        (1)
4982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO
4983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_TRGO2
4984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH2        (2)
4985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM20_CH4        (1)
4986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG1       (2)
4987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG3       (2)
4989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG5
4991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG6
4992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG7
4993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG8
4994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG9
4995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG10
4996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE3       (2)
4997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15      (1)
4998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM_OUT
4999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4 series, parameter not available on all ADC instances: ADC1, ADC2.\n
5001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4 series, parameter not available on all ADC instances: ADC3, ADC4, ADC5.
5002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             On this STM32 series, all ADCx are not available on all devices. Refer to device da
5003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
ARM GAS  /tmp/cc85dWdm.s 			page 261


5007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
ARM GAS  /tmp/cc85dWdm.s 			page 262


5064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
ARM GAS  /tmp/cc85dWdm.s 			page 263


5121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
ARM GAS  /tmp/cc85dWdm.s 			page 264


5178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_JSQR_JL,
5209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SequencerNbRanks
5216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             );
5217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
5221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
5225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         converted:
5234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
ARM GAS  /tmp/cc85dWdm.s 			page 265


5235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         setting).
5237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TS_temp, ...).
5239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is required.
5248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet.
5249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /tmp/cc85dWdm.s 			page 266


5292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
ARM GAS  /tmp/cc85dWdm.s 			page 267


5349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1                 (8)
5377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2                 (8)
5378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3                 (8)
5379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4                 (8)
5380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5                 (8)
5381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT           (7)
5395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC1   (1)
5396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR_ADC5   (5)
5397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT              (6)
5398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP1           (1)
5399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP2           (2)
5400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC2      (2)
5401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP3_ADC3      (3)
5402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP4           (5)
5403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP5           (5)
5404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VOPAMP6           (4)
5405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
ARM GAS  /tmp/cc85dWdm.s 			page 268


5406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock 
5415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 A
5416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
5431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                    );
5438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
5443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC group regular or injected.
5445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         available in differential mode.
5451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not available in differential mode.
5453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some channels are internally fixed to single-ended inputs
5456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configuration:
5457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC1: Channels 12, 15, 16, 17 and 18
5458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC2: Channels 15, 17 and 18
5459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC3: Channels 12, 16, 17 and 18            (1)
5460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC4: Channels 16, 17 and 18                (1)
5461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC5: Channels 2, 3, 4, 16, 17 and 18       (1)
5462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) ADC3/4/5 are not available on all devices, refer to device datasheet
ARM GAS  /tmp/cc85dWdm.s 			page 269


5463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
5464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected.
5471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Bits for single or differential mode selection for each channel are set  */
5498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* to 1 only when the differential mode is selected, and to 0 when the      */
5499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* single mode is selected.                                                 */
5500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (SingleDiff == LL_ADC_DIFFERENTIAL_ENDED)
5502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
5503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     SET_BIT(ADCx->DIFSEL,
5504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
5505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
5506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   else
5507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     CLEAR_BIT(ADCx->DIFSEL,
5509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
5510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
5511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC channel.
5516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
ARM GAS  /tmp/cc85dWdm.s 			page 270


5520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         available in differential mode.
5524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         not available in differential mode.
5526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On STM32G4, some channels are internally fixed to single-ended inputs
5529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         configuration:
5530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC1: Channels 12, 15, 16, 17 and 18
5531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC2: Channels 15, 17 and 18
5532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC3: Channels 12, 16, 17 and 18            (1)
5533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC4: Channels 16, 17 and 18                (1)
5534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC5: Channels 2, 3, 4, 16, 17 and 18       (1)
5535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) ADC3/4/5 are not available on all devices, refer to device datasheet
5536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             for more details.
5537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
5561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
5567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
5571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
ARM GAS  /tmp/cc85dWdm.s 			page 271


5577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is enabled.
5579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
ARM GAS  /tmp/cc85dWdm.s 			page 272


5634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)
5681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)
5682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ
5683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG  (0)(1)
5684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_INJ  (0)(1)
5685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC1_REG_INJ (1)
5686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG  (0)(5)
5687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_INJ  (0)(5)
5688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_ADC5_REG_INJ (5)
5689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(6)
5690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(6)
ARM GAS  /tmp/cc85dWdm.s 			page 273


5691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (6)
5692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG          (0)(1)
5693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_INJ          (0)(1)
5694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP1_REG_INJ         (1)
5695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG          (0)(2)
5696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_INJ          (0)(2)
5697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP2_REG_INJ         (2)
5698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG     (0)(2)
5699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_INJ     (0)(2)
5700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC2_REG_INJ    (2)
5701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG     (0)(3)
5702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_INJ     (0)(3)
5703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP3_ADC3_REG_INJ    (3)
5704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG          (0)(5)
5705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_INJ          (0)(5)
5706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP4_REG_INJ         (5)
5707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG          (0)(5)
5708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_INJ          (0)(5)
5709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP5_REG_INJ         (5)
5710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG          (0)(4)
5711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_INJ          (0)(4)
5712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VOPAMP6_REG_INJ         (4)
5713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.\n
5715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On STM32G4, parameter available only on ADC instance: ADC1.\n
5716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) On STM32G4, parameter available only on ADC instance: ADC2.\n
5717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) On STM32G4, parameter available only on ADC instance: ADC3.\n
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (4) On STM32G4, parameter available only on ADC instance: ADC4.\n
5719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (5) On STM32G4, parameter available only on ADC instance: ADC5.\n
5720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (6) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC5.\n
5721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (7) On STM32G4, parameter available only on ADC instances: ADC1, ADC3, ADC4, ADC5.\n
5722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *          -  On this STM32 series, all ADCx are not available on all devices. Refer to device da
5723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
5733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
5735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
ARM GAS  /tmp/cc85dWdm.s 			page 274


5748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           as parameter for another function.
5749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           process the returned value with the helper macro
5751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           one channel.
5754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
5777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
5779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             by bitfield.
5796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
ARM GAS  /tmp/cc85dWdm.s 			page 275


5805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
5859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (0) On STM32G4, parameter available only on analog watchdog number: AWD1.
5860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
ARM GAS  /tmp/cc85dWdm.s 			page 276


5862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC
5865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & ADC_AWD_CR_ALL_CHANNEL_MASK);
5867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* or a single channel.                                                     */
5872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
5874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     {
5876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  )
5882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       else
5886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     }
5893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     else
5894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     {
5895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       else
5903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       {
5904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                 );
5910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****       }
5911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****     }
5912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   }
5913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
ARM GAS  /tmp/cc85dWdm.s 			page 277


5919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         high and low.
5920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
5921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
5937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
5940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
5951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
5957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
5964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
5965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
5974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
ARM GAS  /tmp/cc85dWdm.s 			page 278


5976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
5978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
5979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
5980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
5981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         high or low.
5983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         instance:
5990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             ADC resolution configured).
5995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             be selected. For example:
6000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             groups regular and injected).
6003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *             the 2 LSB are ignored.
6009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
6014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
6016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
6017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
6018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
6023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cc85dWdm.s 			page 279


6033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
6036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(*preg,
6046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDThresholdsHighLow,
6047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         concatenated.
6054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
6055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
6056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         using helper macro:
6057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
6058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
6076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
6079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
6082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
6087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 280


6090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
6091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
6096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog (AWD1)
6097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
6098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
6102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
6113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(AWDy);
6116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->TR1, ADC_TR1_AWDFILT, FilteringConfig);
6117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
6121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, this feature is only available on first
6122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         analog watchdog (AWD1)
6123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
6124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be:
6128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy)
6138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
6140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   (void)(AWDy);
6141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR1, ADC_TR1_AWDFILT));
6142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 281


6147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (oversampler buffer reset).
6161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
 1826              		.loc 8 6177 22 view .LVU607
 1827              	.LBB679:
6178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
 1828              		.loc 8 6179 3 view .LVU608
 1829 0108 2B69     		ldr	r3, [r5, #16]
 1830 010a 23F48063 		bic	r3, r3, #1024
 1831 010e 23F00303 		bic	r3, r3, #3
 1832 0112 2B61     		str	r3, [r5, #16]
 1833              	.LVL138:
 1834              		.loc 8 6179 3 is_stmt 0 view .LVU609
 1835              	.LBE679:
 1836              	.LBE678:
 306:Src/main.c    ****   ADC_CommonInitStruct.Multimode = LL_ADC_MULTI_INDEPENDENT;
 1837              		.loc 1 306 3 is_stmt 1 view .LVU610
 306:Src/main.c    ****   ADC_CommonInitStruct.Multimode = LL_ADC_MULTI_INDEPENDENT;
 1838              		.loc 1 306 36 is_stmt 0 view .LVU611
 1839 0114 0D94     		str	r4, [sp, #52]
 307:Src/main.c    ****   LL_ADC_CommonInit(__LL_ADC_COMMON_INSTANCE(ADC1), &ADC_CommonInitStruct);
 1840              		.loc 1 307 3 is_stmt 1 view .LVU612
 307:Src/main.c    ****   LL_ADC_CommonInit(__LL_ADC_COMMON_INSTANCE(ADC1), &ADC_CommonInitStruct);
 1841              		.loc 1 307 34 is_stmt 0 view .LVU613
 1842 0116 0E94     		str	r4, [sp, #56]
 308:Src/main.c    ****   ADC_INJ_InitStruct.TriggerSource = LL_ADC_INJ_TRIG_EXT_TIM1_CH4;
 1843              		.loc 1 308 3 is_stmt 1 view .LVU614
 1844 0118 0DA9     		add	r1, sp, #52
ARM GAS  /tmp/cc85dWdm.s 			page 282


 1845 011a 4548     		ldr	r0, .L45+8
 1846 011c FFF7FEFF 		bl	LL_ADC_CommonInit
 1847              	.LVL139:
 309:Src/main.c    ****   ADC_INJ_InitStruct.SequencerLength = LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS;
 1848              		.loc 1 309 3 view .LVU615
 309:Src/main.c    ****   ADC_INJ_InitStruct.SequencerLength = LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS;
 1849              		.loc 1 309 36 is_stmt 0 view .LVU616
 1850 0120 8423     		movs	r3, #132
 1851 0122 0993     		str	r3, [sp, #36]
 310:Src/main.c    ****   ADC_INJ_InitStruct.SequencerDiscont = LL_ADC_INJ_SEQ_DISCONT_DISABLE;
 1852              		.loc 1 310 3 is_stmt 1 view .LVU617
 310:Src/main.c    ****   ADC_INJ_InitStruct.SequencerDiscont = LL_ADC_INJ_SEQ_DISCONT_DISABLE;
 1853              		.loc 1 310 38 is_stmt 0 view .LVU618
 1854 0124 0A96     		str	r6, [sp, #40]
 311:Src/main.c    ****   ADC_INJ_InitStruct.TrigAuto = LL_ADC_INJ_TRIG_INDEPENDENT;
 1855              		.loc 1 311 3 is_stmt 1 view .LVU619
 311:Src/main.c    ****   ADC_INJ_InitStruct.TrigAuto = LL_ADC_INJ_TRIG_INDEPENDENT;
 1856              		.loc 1 311 39 is_stmt 0 view .LVU620
 1857 0126 0B94     		str	r4, [sp, #44]
 312:Src/main.c    ****   LL_ADC_INJ_Init(ADC1, &ADC_INJ_InitStruct);
 1858              		.loc 1 312 3 is_stmt 1 view .LVU621
 312:Src/main.c    ****   LL_ADC_INJ_Init(ADC1, &ADC_INJ_InitStruct);
 1859              		.loc 1 312 31 is_stmt 0 view .LVU622
 1860 0128 0C94     		str	r4, [sp, #48]
 313:Src/main.c    ****   LL_ADC_INJ_SetQueueMode(ADC1, LL_ADC_INJ_QUEUE_DISABLE);
 1861              		.loc 1 313 3 is_stmt 1 view .LVU623
 1862 012a 09A9     		add	r1, sp, #36
 1863 012c 2846     		mov	r0, r5
 1864 012e FFF7FEFF 		bl	LL_ADC_INJ_Init
 1865              	.LVL140:
 314:Src/main.c    ****   LL_ADC_INJ_SetTriggerEdge(ADC1, LL_ADC_INJ_TRIG_EXT_RISING);
 1866              		.loc 1 314 3 view .LVU624
 1867              	.LBB680:
 1868              	.LBI680:
4904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1869              		.loc 8 4904 22 view .LVU625
 1870              	.LBB681:
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1871              		.loc 8 4906 3 view .LVU626
 1872 0132 EB68     		ldr	r3, [r5, #12]
 1873 0134 23F00043 		bic	r3, r3, #-2147483648
 1874 0138 23F40013 		bic	r3, r3, #2097152
 1875 013c 43F00043 		orr	r3, r3, #-2147483648
 1876 0140 EB60     		str	r3, [r5, #12]
 1877              	.LVL141:
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1878              		.loc 8 4906 3 is_stmt 0 view .LVU627
 1879              	.LBE681:
 1880              	.LBE680:
 315:Src/main.c    **** 
 1881              		.loc 1 315 3 is_stmt 1 view .LVU628
 1882              	.LBB682:
 1883              	.LBI682:
4554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1884              		.loc 8 4554 22 view .LVU629
 1885              	.LBB683:
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 283


 1886              		.loc 8 4556 3 view .LVU630
 1887 0142 EB6C     		ldr	r3, [r5, #76]
 1888 0144 23F4C073 		bic	r3, r3, #384
 1889 0148 43F08003 		orr	r3, r3, #128
 1890 014c EB64     		str	r3, [r5, #76]
 1891              	.LVL142:
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 1892              		.loc 8 4556 3 is_stmt 0 view .LVU631
 1893              	.LBE683:
 1894              	.LBE682:
 318:Src/main.c    ****   /* Enable ADC internal voltage regulator */
 1895              		.loc 1 318 3 is_stmt 1 view .LVU632
 1896              	.LBB684:
 1897              	.LBI684:
6180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (oversampler buffer reset).
6191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
6203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on the selected ADC group.
6210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are done from 1 trigger)
6213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           needs a trigger)
6215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on group regular.
6219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
ARM GAS  /tmp/cc85dWdm.s 			page 284


6223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on the selected ADC group.
6237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           are done from 1 trigger)
6240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           needs a trigger)
6242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
6249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC oversampling
6255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ratio
6258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - shift
6259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         on either groups regular or injected.
6263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
ARM GAS  /tmp/cc85dWdm.s 			page 285


6280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
6290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
6308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
6329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
6335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 286


6337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
6348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro
6353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to reference manual.
6379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
6393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 287


6394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
6395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or transfer by DMA.
6400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         DMA transfer settings.
6403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
6409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
6413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
6416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
6432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
6433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
6446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         or transfer by DMA.
ARM GAS  /tmp/cc85dWdm.s 			page 288


6451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         DMA transfer settings.
6454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions) is reached.
6460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           ADC conversions).
6464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         mode non-circular:
6467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
6479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
6480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
6490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
6492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
ARM GAS  /tmp/cc85dWdm.s 			page 289


6508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *
6553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
6558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cc85dWdm.s 			page 290


6565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @{
6568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
 1898              		.loc 8 6606 22 view .LVU633
 1899              	.LBB685:
6607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
 1900              		.loc 8 6611 3 view .LVU634
 1901 014e AB68     		ldr	r3, [r5, #8]
 1902 0150 23F02043 		bic	r3, r3, #-1610612736
 1903 0154 23F03F03 		bic	r3, r3, #63
 1904 0158 AB60     		str	r3, [r5, #8]
 1905              	.LVL143:
 1906              		.loc 8 6611 3 is_stmt 0 view .LVU635
 1907              	.LBE685:
ARM GAS  /tmp/cc85dWdm.s 			page 291


 1908              	.LBE684:
 320:Src/main.c    ****   /* Delay for ADC internal voltage regulator stabilization. */
 1909              		.loc 1 320 3 is_stmt 1 view .LVU636
 1910              	.LBB686:
 1911              	.LBI686:
6612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
6621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
6623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
6624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
6625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** /**
6626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC state:
6634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @param  ADCx ADC instance
6637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   * @retval None
6638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   */
6639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
 1912              		.loc 8 6639 22 view .LVU637
 1913              	.LBB687:
6640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
6641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1914              		.loc 8 6644 3 view .LVU638
 1915 015a AB68     		ldr	r3, [r5, #8]
 1916 015c 23F01043 		bic	r3, r3, #-1879048192
 1917 0160 23F03F03 		bic	r3, r3, #63
 1918 0164 43F08053 		orr	r3, r3, #268435456
 1919 0168 AB60     		str	r3, [r5, #8]
 1920              	.LVL144:
 1921              		.loc 8 6644 3 is_stmt 0 view .LVU639
 1922              	.LBE687:
 1923              	.LBE686:
 327:Src/main.c    ****   wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US * (SystemCoreClock / (100000 * 2))) / 10)
 1924              		.loc 1 327 3 is_stmt 1 view .LVU640
 328:Src/main.c    ****   while(wait_loop_index != 0)
 1925              		.loc 1 328 3 view .LVU641
 328:Src/main.c    ****   while(wait_loop_index != 0)
 1926              		.loc 1 328 78 is_stmt 0 view .LVU642
 1927 016a 324B     		ldr	r3, .L45+12
ARM GAS  /tmp/cc85dWdm.s 			page 292


 1928 016c 1A68     		ldr	r2, [r3]
 1929 016e 9209     		lsrs	r2, r2, #6
 1930 0170 314B     		ldr	r3, .L45+16
 1931 0172 A3FB0232 		umull	r3, r2, r3, r2
 1932 0176 9209     		lsrs	r2, r2, #6
 328:Src/main.c    ****   while(wait_loop_index != 0)
 1933              		.loc 1 328 59 view .LVU643
 1934 0178 02EB8202 		add	r2, r2, r2, lsl #2
 1935 017c 9300     		lsls	r3, r2, #2
 328:Src/main.c    ****   while(wait_loop_index != 0)
 1936              		.loc 1 328 19 view .LVU644
 1937 017e 2F4A     		ldr	r2, .L45+20
 1938 0180 A2FB0323 		umull	r2, r3, r2, r3
 1939 0184 DB08     		lsrs	r3, r3, #3
 1940              	.LVL145:
 329:Src/main.c    ****   {
 1941              		.loc 1 329 3 is_stmt 1 view .LVU645
 1942              	.L41:
 329:Src/main.c    ****   {
 1943              		.loc 1 329 8 view .LVU646
 1944 0186 0BB1     		cbz	r3, .L44
 331:Src/main.c    ****   }
 1945              		.loc 1 331 5 view .LVU647
 331:Src/main.c    ****   }
 1946              		.loc 1 331 20 is_stmt 0 view .LVU648
 1947 0188 013B     		subs	r3, r3, #1
 1948              	.LVL146:
 331:Src/main.c    ****   }
 1949              		.loc 1 331 20 view .LVU649
 1950 018a FCE7     		b	.L41
 1951              	.L44:
 336:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_3, LL_ADC_SAMPLINGTIME_6CYCLES_5);
 1952              		.loc 1 336 3 is_stmt 1 view .LVU650
 1953              	.LVL147:
 1954              	.LBB688:
 1955              	.LBI688:
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1956              		.loc 8 4723 22 view .LVU651
 1957              	.LBB689:
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
 1958              		.loc 8 4729 3 view .LVU652
 1959 018c 4FF0A043 		mov	r3, #1342177280
 1960              	.LVL148:
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
 1961              		.loc 8 4729 3 is_stmt 0 view .LVU653
 1962 0190 DA6C     		ldr	r2, [r3, #76]
 1963 0192 22F47852 		bic	r2, r2, #15872
 1964 0196 42F4C062 		orr	r2, r2, #1536
 1965 019a DA64     		str	r2, [r3, #76]
 1966              	.LVL149:
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
 1967              		.loc 8 4729 3 view .LVU654
 1968              	.LBE689:
 1969              	.LBE688:
 337:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC1, LL_ADC_CHANNEL_3, LL_ADC_SINGLE_ENDED);
 1970              		.loc 1 337 3 is_stmt 1 view .LVU655
 1971              	.LBB690:
ARM GAS  /tmp/cc85dWdm.s 			page 293


 1972              	.LBI690:
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1973              		.loc 8 5330 22 view .LVU656
 1974              	.LBB691:
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 1975              		.loc 8 5336 3 view .LVU657
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 1976              		.loc 8 5336 25 is_stmt 0 view .LVU658
 1977 019c 2849     		ldr	r1, .L45+24
 1978              	.LVL150:
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 1979              		.loc 8 5338 3 is_stmt 1 view .LVU659
 1980 019e 5A69     		ldr	r2, [r3, #20]
 1981 01a0 22F46062 		bic	r2, r2, #3584
 1982 01a4 42F40072 		orr	r2, r2, #512
 1983 01a8 5A61     		str	r2, [r3, #20]
 1984              	.LVL151:
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 1985              		.loc 8 5338 3 is_stmt 0 view .LVU660
 1986              	.LBE691:
 1987              	.LBE690:
 338:Src/main.c    **** 
 1988              		.loc 1 338 3 is_stmt 1 view .LVU661
 1989              	.LBB692:
 1990              	.LBI692:
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 1991              		.loc 8 5495 22 view .LVU662
 1992              	.LBB693:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
 1993              		.loc 8 5501 3 view .LVU663
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 1994              		.loc 8 5508 5 view .LVU664
 1995 01aa D3F8B020 		ldr	r2, [r3, #176]
 1996 01ae 22F00802 		bic	r2, r2, #8
 1997 01b2 C3F8B020 		str	r2, [r3, #176]
 1998              	.LVL152:
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 1999              		.loc 8 5508 5 is_stmt 0 view .LVU665
 2000              	.LBE693:
 2001              	.LBE692:
 342:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_12, LL_ADC_SAMPLINGTIME_6CYCLES_5);
 2002              		.loc 1 342 3 is_stmt 1 view .LVU666
 2003              	.LBB694:
 2004              	.LBI694:
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2005              		.loc 8 4723 22 view .LVU667
 2006              	.LBB695:
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
 2007              		.loc 8 4729 3 view .LVU668
 2008 01b6 DA6C     		ldr	r2, [r3, #76]
 2009 01b8 22F47822 		bic	r2, r2, #1015808
 2010 01bc 42F4C022 		orr	r2, r2, #393216
 2011 01c0 DA64     		str	r2, [r3, #76]
 2012              	.LVL153:
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
 2013              		.loc 8 4729 3 is_stmt 0 view .LVU669
 2014              	.LBE695:
ARM GAS  /tmp/cc85dWdm.s 			page 294


 2015              	.LBE694:
 343:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC1, LL_ADC_CHANNEL_12, LL_ADC_SINGLE_ENDED);
 2016              		.loc 1 343 3 is_stmt 1 view .LVU670
 2017              	.LBB696:
 2018              	.LBI696:
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2019              		.loc 8 5330 22 view .LVU671
 2020              	.LBB697:
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2021              		.loc 8 5336 3 view .LVU672
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2022              		.loc 8 5338 3 view .LVU673
 2023 01c2 4A68     		ldr	r2, [r1, #4]
 2024 01c4 22F4E072 		bic	r2, r2, #448
 2025 01c8 42F04002 		orr	r2, r2, #64
 2026 01cc 4A60     		str	r2, [r1, #4]
 2027              	.LVL154:
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2028              		.loc 8 5338 3 is_stmt 0 view .LVU674
 2029              	.LBE697:
 2030              	.LBE696:
 344:Src/main.c    **** 
 2031              		.loc 1 344 3 is_stmt 1 view .LVU675
 2032              	.LBB698:
 2033              	.LBI698:
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2034              		.loc 8 5495 22 view .LVU676
 2035              	.LBB699:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
 2036              		.loc 8 5501 3 view .LVU677
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 2037              		.loc 8 5508 5 view .LVU678
 2038 01ce D3F8B020 		ldr	r2, [r3, #176]
 2039 01d2 22F48052 		bic	r2, r2, #4096
 2040 01d6 C3F8B020 		str	r2, [r3, #176]
 2041              	.LVL155:
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 2042              		.loc 8 5508 5 is_stmt 0 view .LVU679
 2043              	.LBE699:
 2044              	.LBE698:
 348:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_1, LL_ADC_SAMPLINGTIME_47CYCLES_5);
 2045              		.loc 1 348 3 is_stmt 1 view .LVU680
 2046              	.LBB700:
 2047              	.LBI700:
4091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2048              		.loc 8 4091 22 view .LVU681
 2049              	.LBB701:
4097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2050              		.loc 8 4097 3 view .LVU682
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2051              		.loc 8 4099 3 view .LVU683
 2052 01da 1A6B     		ldr	r2, [r3, #48]
 2053 01dc 22F4F862 		bic	r2, r2, #1984
 2054 01e0 42F04002 		orr	r2, r2, #64
 2055 01e4 1A63     		str	r2, [r3, #48]
 2056              	.LVL156:
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
ARM GAS  /tmp/cc85dWdm.s 			page 295


 2057              		.loc 8 4099 3 is_stmt 0 view .LVU684
 2058              	.LBE701:
 2059              	.LBE700:
 349:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC1, LL_ADC_CHANNEL_1, LL_ADC_SINGLE_ENDED);
 2060              		.loc 1 349 3 is_stmt 1 view .LVU685
 2061              	.LBB702:
 2062              	.LBI702:
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2063              		.loc 8 5330 22 view .LVU686
 2064              	.LBB703:
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2065              		.loc 8 5336 3 view .LVU687
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2066              		.loc 8 5338 3 view .LVU688
 2067 01e6 5A69     		ldr	r2, [r3, #20]
 2068 01e8 22F03802 		bic	r2, r2, #56
 2069 01ec 42F02002 		orr	r2, r2, #32
 2070 01f0 5A61     		str	r2, [r3, #20]
 2071              	.LVL157:
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2072              		.loc 8 5338 3 is_stmt 0 view .LVU689
 2073              	.LBE703:
 2074              	.LBE702:
 350:Src/main.c    **** 
 2075              		.loc 1 350 3 is_stmt 1 view .LVU690
 2076              	.LBB704:
 2077              	.LBI704:
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2078              		.loc 8 5495 22 view .LVU691
 2079              	.LBB705:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
 2080              		.loc 8 5501 3 view .LVU692
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 2081              		.loc 8 5508 5 view .LVU693
 2082 01f2 D3F8B020 		ldr	r2, [r3, #176]
 2083 01f6 22F00202 		bic	r2, r2, #2
 2084 01fa C3F8B020 		str	r2, [r3, #176]
 2085              	.LVL158:
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 2086              		.loc 8 5508 5 is_stmt 0 view .LVU694
 2087              	.LBE705:
 2088              	.LBE704:
 354:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_5, LL_ADC_SAMPLINGTIME_47CYCLES_5);
 2089              		.loc 1 354 3 is_stmt 1 view .LVU695
 2090              	.LBB706:
 2091              	.LBI706:
4091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2092              		.loc 8 4091 22 view .LVU696
 2093              	.LBB707:
4097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2094              		.loc 8 4097 3 view .LVU697
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2095              		.loc 8 4099 3 view .LVU698
 2096 01fe 1A6B     		ldr	r2, [r3, #48]
 2097 0200 22F4F832 		bic	r2, r2, #126976
 2098 0204 42F4A042 		orr	r2, r2, #20480
 2099 0208 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/cc85dWdm.s 			page 296


 2100              	.LVL159:
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2101              		.loc 8 4099 3 is_stmt 0 view .LVU699
 2102              	.LBE707:
 2103              	.LBE706:
 355:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC1, LL_ADC_CHANNEL_5, LL_ADC_SINGLE_ENDED);
 2104              		.loc 1 355 3 is_stmt 1 view .LVU700
 2105              	.LBB708:
 2106              	.LBI708:
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2107              		.loc 8 5330 22 view .LVU701
 2108              	.LBB709:
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2109              		.loc 8 5336 3 view .LVU702
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2110              		.loc 8 5338 3 view .LVU703
 2111 020a 5A69     		ldr	r2, [r3, #20]
 2112 020c 22F46032 		bic	r2, r2, #229376
 2113 0210 42F40032 		orr	r2, r2, #131072
 2114 0214 5A61     		str	r2, [r3, #20]
 2115              	.LVL160:
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2116              		.loc 8 5338 3 is_stmt 0 view .LVU704
 2117              	.LBE709:
 2118              	.LBE708:
 356:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 2119              		.loc 1 356 3 is_stmt 1 view .LVU705
 2120              	.LBB710:
 2121              	.LBI710:
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2122              		.loc 8 5495 22 view .LVU706
 2123              	.LBB711:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
 2124              		.loc 8 5501 3 view .LVU707
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 2125              		.loc 8 5508 5 view .LVU708
 2126 0216 D3F8B020 		ldr	r2, [r3, #176]
 2127 021a 22F02002 		bic	r2, r2, #32
 2128 021e C3F8B020 		str	r2, [r3, #176]
 2129              	.LVL161:
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 2130              		.loc 8 5508 5 is_stmt 0 view .LVU709
 2131              	.LBE711:
 2132              	.LBE710:
 361:Src/main.c    **** 
 2133              		.loc 1 361 1 view .LVU710
 2134 0222 1BB0     		add	sp, sp, #108
 2135              		.cfi_def_cfa_offset 20
 2136              		@ sp needed
 2137 0224 F0BD     		pop	{r4, r5, r6, r7, pc}
 2138              	.L46:
 2139 0226 00BF     		.align	2
 2140              	.L45:
 2141 0228 00100240 		.word	1073876992
 2142 022c 00040048 		.word	1207960576
 2143 0230 00030050 		.word	1342178048
 2144 0234 00000000 		.word	SystemCoreClock
ARM GAS  /tmp/cc85dWdm.s 			page 297


 2145 0238 632D3E05 		.word	87960931
 2146 023c CDCCCCCC 		.word	-858993459
 2147 0240 14000050 		.word	1342177300
 2148              		.cfi_endproc
 2149              	.LFE1625:
 2151              		.section	.text.MX_ADC2_Init,"ax",%progbits
 2152              		.align	1
 2153              		.syntax unified
 2154              		.thumb
 2155              		.thumb_func
 2156              		.fpu fpv4-sp-d16
 2158              	MX_ADC2_Init:
 2159              	.LFB1626:
 369:Src/main.c    **** 
 2160              		.loc 1 369 1 is_stmt 1 view -0
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 88
 2163              		@ frame_needed = 0, uses_anonymous_args = 0
 2164 0000 30B5     		push	{r4, r5, lr}
 2165              		.cfi_def_cfa_offset 12
 2166              		.cfi_offset 4, -12
 2167              		.cfi_offset 5, -8
 2168              		.cfi_offset 14, -4
 2169 0002 97B0     		sub	sp, sp, #92
 2170              		.cfi_def_cfa_offset 104
 375:Src/main.c    ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 2171              		.loc 1 375 3 view .LVU712
 375:Src/main.c    ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 2172              		.loc 1 375 22 is_stmt 0 view .LVU713
 2173 0004 0024     		movs	r4, #0
 2174 0006 1394     		str	r4, [sp, #76]
 2175 0008 1494     		str	r4, [sp, #80]
 2176 000a 1594     		str	r4, [sp, #84]
 376:Src/main.c    ****   LL_ADC_INJ_InitTypeDef ADC_INJ_InitStruct = {0};
 2177              		.loc 1 376 3 is_stmt 1 view .LVU714
 376:Src/main.c    ****   LL_ADC_INJ_InitTypeDef ADC_INJ_InitStruct = {0};
 2178              		.loc 1 376 26 is_stmt 0 view .LVU715
 2179 000c 0D94     		str	r4, [sp, #52]
 2180 000e 0E94     		str	r4, [sp, #56]
 2181 0010 0F94     		str	r4, [sp, #60]
 2182 0012 1094     		str	r4, [sp, #64]
 2183 0014 1194     		str	r4, [sp, #68]
 2184 0016 1294     		str	r4, [sp, #72]
 377:Src/main.c    **** 
 2185              		.loc 1 377 3 is_stmt 1 view .LVU716
 377:Src/main.c    **** 
 2186              		.loc 1 377 26 is_stmt 0 view .LVU717
 2187 0018 0994     		str	r4, [sp, #36]
 2188 001a 0A94     		str	r4, [sp, #40]
 2189 001c 0B94     		str	r4, [sp, #44]
 2190 001e 0C94     		str	r4, [sp, #48]
 379:Src/main.c    **** 
 2191              		.loc 1 379 3 is_stmt 1 view .LVU718
 379:Src/main.c    **** 
 2192              		.loc 1 379 23 is_stmt 0 view .LVU719
 2193 0020 0594     		str	r4, [sp, #20]
 2194 0022 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/cc85dWdm.s 			page 298


 2195 0024 0794     		str	r4, [sp, #28]
 2196 0026 0894     		str	r4, [sp, #32]
 381:Src/main.c    **** 
 2197              		.loc 1 381 3 is_stmt 1 view .LVU720
 2198              	.LVL162:
 2199              	.LBB712:
 2200              	.LBI712:
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 2201              		.loc 7 1694 22 view .LVU721
 2202              	.LBB713:
 2203              		.loc 7 1696 3 view .LVU722
 2204 0028 544B     		ldr	r3, .L52
 2205 002a D3F88820 		ldr	r2, [r3, #136]
 2206 002e 22F04052 		bic	r2, r2, #805306368
 2207 0032 42F08052 		orr	r2, r2, #268435456
 2208 0036 C3F88820 		str	r2, [r3, #136]
 2209              	.LVL163:
 2210              		.loc 7 1696 3 is_stmt 0 view .LVU723
 2211              	.LBE713:
 2212              	.LBE712:
 384:Src/main.c    **** 
 2213              		.loc 1 384 3 is_stmt 1 view .LVU724
 2214              	.LBB714:
 2215              	.LBI714:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 2216              		.loc 3 451 22 view .LVU725
 2217              	.LBB715:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 2218              		.loc 3 453 3 view .LVU726
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 2219              		.loc 3 454 3 view .LVU727
 2220 003a DA6C     		ldr	r2, [r3, #76]
 2221 003c 42F40052 		orr	r2, r2, #8192
 2222 0040 DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2223              		.loc 3 456 3 view .LVU728
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2224              		.loc 3 456 12 is_stmt 0 view .LVU729
 2225 0042 DA6C     		ldr	r2, [r3, #76]
 2226 0044 02F40052 		and	r2, r2, #8192
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2227              		.loc 3 456 10 view .LVU730
 2228 0048 0292     		str	r2, [sp, #8]
 2229              		.loc 3 457 3 is_stmt 1 view .LVU731
 2230 004a 029A     		ldr	r2, [sp, #8]
 2231              	.LVL164:
 2232              		.loc 3 457 3 is_stmt 0 view .LVU732
 2233              	.LBE715:
 2234              	.LBE714:
 386:Src/main.c    ****   /**ADC2 GPIO Configuration
 2235              		.loc 1 386 3 is_stmt 1 view .LVU733
 2236              	.LBB716:
 2237              	.LBI716:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 2238              		.loc 3 451 22 view .LVU734
 2239              	.LBB717:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
ARM GAS  /tmp/cc85dWdm.s 			page 299


 2240              		.loc 3 453 3 view .LVU735
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 2241              		.loc 3 454 3 view .LVU736
 2242 004c DA6C     		ldr	r2, [r3, #76]
 2243 004e 42F00102 		orr	r2, r2, #1
 2244 0052 DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2245              		.loc 3 456 3 view .LVU737
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2246              		.loc 3 456 12 is_stmt 0 view .LVU738
 2247 0054 DB6C     		ldr	r3, [r3, #76]
 2248 0056 03F00103 		and	r3, r3, #1
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2249              		.loc 3 456 10 view .LVU739
 2250 005a 0193     		str	r3, [sp, #4]
 2251              		.loc 3 457 3 is_stmt 1 view .LVU740
 2252 005c 019B     		ldr	r3, [sp, #4]
 2253              	.LVL165:
 2254              		.loc 3 457 3 is_stmt 0 view .LVU741
 2255              	.LBE717:
 2256              	.LBE716:
 390:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 2257              		.loc 1 390 3 is_stmt 1 view .LVU742
 390:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 2258              		.loc 1 390 23 is_stmt 0 view .LVU743
 2259 005e 4023     		movs	r3, #64
 2260 0060 0393     		str	r3, [sp, #12]
 391:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 2261              		.loc 1 391 3 is_stmt 1 view .LVU744
 391:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 2262              		.loc 1 391 24 is_stmt 0 view .LVU745
 2263 0062 0323     		movs	r3, #3
 2264 0064 0493     		str	r3, [sp, #16]
 392:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP2_OUT_GPIO_Port, &GPIO_InitStruct);
 2265              		.loc 1 392 3 is_stmt 1 view .LVU746
 392:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP2_OUT_GPIO_Port, &GPIO_InitStruct);
 2266              		.loc 1 392 24 is_stmt 0 view .LVU747
 2267 0066 0794     		str	r4, [sp, #28]
 393:Src/main.c    **** 
 2268              		.loc 1 393 3 is_stmt 1 view .LVU748
 2269 0068 03A9     		add	r1, sp, #12
 2270 006a 4FF09040 		mov	r0, #1207959552
 2271 006e FFF7FEFF 		bl	LL_GPIO_Init
 2272              	.LVL166:
 401:Src/main.c    ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_LEFT;
 2273              		.loc 1 401 3 view .LVU749
 401:Src/main.c    ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_LEFT;
 2274              		.loc 1 401 29 is_stmt 0 view .LVU750
 2275 0072 1394     		str	r4, [sp, #76]
 402:Src/main.c    ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 2276              		.loc 1 402 3 is_stmt 1 view .LVU751
 402:Src/main.c    ****   ADC_InitStruct.LowPowerMode = LL_ADC_LP_MODE_NONE;
 2277              		.loc 1 402 32 is_stmt 0 view .LVU752
 2278 0074 4FF40043 		mov	r3, #32768
 2279 0078 1493     		str	r3, [sp, #80]
 403:Src/main.c    ****   LL_ADC_Init(ADC2, &ADC_InitStruct);
 2280              		.loc 1 403 3 is_stmt 1 view .LVU753
ARM GAS  /tmp/cc85dWdm.s 			page 300


 403:Src/main.c    ****   LL_ADC_Init(ADC2, &ADC_InitStruct);
 2281              		.loc 1 403 31 is_stmt 0 view .LVU754
 2282 007a 1594     		str	r4, [sp, #84]
 404:Src/main.c    ****   ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_DISABLE;
 2283              		.loc 1 404 3 is_stmt 1 view .LVU755
 2284 007c 404D     		ldr	r5, .L52+4
 2285 007e 13A9     		add	r1, sp, #76
 2286 0080 2846     		mov	r0, r5
 2287 0082 FFF7FEFF 		bl	LL_ADC_Init
 2288              	.LVL167:
 405:Src/main.c    ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 2289              		.loc 1 405 3 view .LVU756
 405:Src/main.c    ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 2290              		.loc 1 405 38 is_stmt 0 view .LVU757
 2291 0086 0E94     		str	r4, [sp, #56]
 406:Src/main.c    ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 2292              		.loc 1 406 3 is_stmt 1 view .LVU758
 406:Src/main.c    ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 2293              		.loc 1 406 39 is_stmt 0 view .LVU759
 2294 0088 0F94     		str	r4, [sp, #60]
 407:Src/main.c    ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 2295              		.loc 1 407 3 is_stmt 1 view .LVU760
 407:Src/main.c    ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 2296              		.loc 1 407 37 is_stmt 0 view .LVU761
 2297 008a 1094     		str	r4, [sp, #64]
 408:Src/main.c    ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 2298              		.loc 1 408 3 is_stmt 1 view .LVU762
 408:Src/main.c    ****   ADC_REG_InitStruct.Overrun = LL_ADC_REG_OVR_DATA_PRESERVED;
 2299              		.loc 1 408 34 is_stmt 0 view .LVU763
 2300 008c 1194     		str	r4, [sp, #68]
 409:Src/main.c    ****   LL_ADC_REG_Init(ADC2, &ADC_REG_InitStruct);
 2301              		.loc 1 409 3 is_stmt 1 view .LVU764
 409:Src/main.c    ****   LL_ADC_REG_Init(ADC2, &ADC_REG_InitStruct);
 2302              		.loc 1 409 30 is_stmt 0 view .LVU765
 2303 008e 1294     		str	r4, [sp, #72]
 410:Src/main.c    ****   LL_ADC_SetGainCompensation(ADC2, 0);
 2304              		.loc 1 410 3 is_stmt 1 view .LVU766
 2305 0090 0DA9     		add	r1, sp, #52
 2306 0092 2846     		mov	r0, r5
 2307 0094 FFF7FEFF 		bl	LL_ADC_REG_Init
 2308              	.LVL168:
 411:Src/main.c    ****   LL_ADC_SetOverSamplingScope(ADC2, LL_ADC_OVS_DISABLE);
 2309              		.loc 1 411 3 view .LVU767
 2310              	.LBB718:
 2311              	.LBI718:
3525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2312              		.loc 8 3525 22 view .LVU768
 2313              	.LBB719:
3527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_GCOMP, ((GainCompensation == 0UL) ? 0UL : 1UL) << ADC_CFGR2_GCO
 2314              		.loc 8 3527 3 view .LVU769
 2315 0098 D5F8C030 		ldr	r3, [r5, #192]
 2316 009c 23F47F53 		bic	r3, r3, #16320
 2317 00a0 23F03F03 		bic	r3, r3, #63
 2318 00a4 C5F8C030 		str	r3, [r5, #192]
3528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2319              		.loc 8 3528 3 view .LVU770
 2320 00a8 2B69     		ldr	r3, [r5, #16]
ARM GAS  /tmp/cc85dWdm.s 			page 301


 2321 00aa 23F48033 		bic	r3, r3, #65536
 2322 00ae 2B61     		str	r3, [r5, #16]
 2323              	.LVL169:
3528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2324              		.loc 8 3528 3 is_stmt 0 view .LVU771
 2325              	.LBE719:
 2326              	.LBE718:
 412:Src/main.c    ****   ADC_INJ_InitStruct.TriggerSource = LL_ADC_INJ_TRIG_EXT_TIM1_CH4;
 2327              		.loc 1 412 3 is_stmt 1 view .LVU772
 2328              	.LBB720:
 2329              	.LBI720:
6177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2330              		.loc 8 6177 22 view .LVU773
 2331              	.LBB721:
6179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2332              		.loc 8 6179 3 view .LVU774
 2333 00b0 2B69     		ldr	r3, [r5, #16]
 2334 00b2 23F48063 		bic	r3, r3, #1024
 2335 00b6 23F00303 		bic	r3, r3, #3
 2336 00ba 2B61     		str	r3, [r5, #16]
 2337              	.LVL170:
6179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2338              		.loc 8 6179 3 is_stmt 0 view .LVU775
 2339              	.LBE721:
 2340              	.LBE720:
 413:Src/main.c    ****   ADC_INJ_InitStruct.SequencerLength = LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS;
 2341              		.loc 1 413 3 is_stmt 1 view .LVU776
 413:Src/main.c    ****   ADC_INJ_InitStruct.SequencerLength = LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS;
 2342              		.loc 1 413 36 is_stmt 0 view .LVU777
 2343 00bc 8423     		movs	r3, #132
 2344 00be 0993     		str	r3, [sp, #36]
 414:Src/main.c    ****   ADC_INJ_InitStruct.SequencerDiscont = LL_ADC_INJ_SEQ_DISCONT_DISABLE;
 2345              		.loc 1 414 3 is_stmt 1 view .LVU778
 414:Src/main.c    ****   ADC_INJ_InitStruct.SequencerDiscont = LL_ADC_INJ_SEQ_DISCONT_DISABLE;
 2346              		.loc 1 414 38 is_stmt 0 view .LVU779
 2347 00c0 0123     		movs	r3, #1
 2348 00c2 0A93     		str	r3, [sp, #40]
 415:Src/main.c    ****   ADC_INJ_InitStruct.TrigAuto = LL_ADC_INJ_TRIG_INDEPENDENT;
 2349              		.loc 1 415 3 is_stmt 1 view .LVU780
 415:Src/main.c    ****   ADC_INJ_InitStruct.TrigAuto = LL_ADC_INJ_TRIG_INDEPENDENT;
 2350              		.loc 1 415 39 is_stmt 0 view .LVU781
 2351 00c4 0B94     		str	r4, [sp, #44]
 416:Src/main.c    ****   LL_ADC_INJ_Init(ADC2, &ADC_INJ_InitStruct);
 2352              		.loc 1 416 3 is_stmt 1 view .LVU782
 416:Src/main.c    ****   LL_ADC_INJ_Init(ADC2, &ADC_INJ_InitStruct);
 2353              		.loc 1 416 31 is_stmt 0 view .LVU783
 2354 00c6 0C94     		str	r4, [sp, #48]
 417:Src/main.c    ****   LL_ADC_INJ_SetQueueMode(ADC2, LL_ADC_INJ_QUEUE_DISABLE);
 2355              		.loc 1 417 3 is_stmt 1 view .LVU784
 2356 00c8 09A9     		add	r1, sp, #36
 2357 00ca 2846     		mov	r0, r5
 2358 00cc FFF7FEFF 		bl	LL_ADC_INJ_Init
 2359              	.LVL171:
 418:Src/main.c    ****   LL_ADC_INJ_SetTriggerEdge(ADC2, LL_ADC_INJ_TRIG_EXT_RISING);
 2360              		.loc 1 418 3 view .LVU785
 2361              	.LBB722:
 2362              	.LBI722:
ARM GAS  /tmp/cc85dWdm.s 			page 302


4904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2363              		.loc 8 4904 22 view .LVU786
 2364              	.LBB723:
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2365              		.loc 8 4906 3 view .LVU787
 2366 00d0 EB68     		ldr	r3, [r5, #12]
 2367 00d2 23F00043 		bic	r3, r3, #-2147483648
 2368 00d6 23F40013 		bic	r3, r3, #2097152
 2369 00da 43F00043 		orr	r3, r3, #-2147483648
 2370 00de EB60     		str	r3, [r5, #12]
 2371              	.LVL172:
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2372              		.loc 8 4906 3 is_stmt 0 view .LVU788
 2373              	.LBE723:
 2374              	.LBE722:
 419:Src/main.c    **** 
 2375              		.loc 1 419 3 is_stmt 1 view .LVU789
 2376              	.LBB724:
 2377              	.LBI724:
4554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2378              		.loc 8 4554 22 view .LVU790
 2379              	.LBB725:
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2380              		.loc 8 4556 3 view .LVU791
 2381 00e0 EB6C     		ldr	r3, [r5, #76]
 2382 00e2 23F4C073 		bic	r3, r3, #384
 2383 00e6 43F08003 		orr	r3, r3, #128
 2384 00ea EB64     		str	r3, [r5, #76]
 2385              	.LVL173:
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2386              		.loc 8 4556 3 is_stmt 0 view .LVU792
 2387              	.LBE725:
 2388              	.LBE724:
 422:Src/main.c    ****   /* Enable ADC internal voltage regulator */
 2389              		.loc 1 422 3 is_stmt 1 view .LVU793
 2390              	.LBB726:
 2391              	.LBI726:
6606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2392              		.loc 8 6606 22 view .LVU794
 2393              	.LBB727:
6611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2394              		.loc 8 6611 3 view .LVU795
 2395 00ec AB68     		ldr	r3, [r5, #8]
 2396 00ee 23F02043 		bic	r3, r3, #-1610612736
 2397 00f2 23F03F03 		bic	r3, r3, #63
 2398 00f6 AB60     		str	r3, [r5, #8]
 2399              	.LVL174:
6611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** }
 2400              		.loc 8 6611 3 is_stmt 0 view .LVU796
 2401              	.LBE727:
 2402              	.LBE726:
 424:Src/main.c    ****   /* Delay for ADC internal voltage regulator stabilization. */
 2403              		.loc 1 424 3 is_stmt 1 view .LVU797
 2404              	.LBB728:
 2405              	.LBI728:
6639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2406              		.loc 8 6639 22 view .LVU798
ARM GAS  /tmp/cc85dWdm.s 			page 303


 2407              	.LBB729:
 2408              		.loc 8 6644 3 view .LVU799
 2409 00f8 AB68     		ldr	r3, [r5, #8]
 2410 00fa 23F01043 		bic	r3, r3, #-1879048192
 2411 00fe 23F03F03 		bic	r3, r3, #63
 2412 0102 43F08053 		orr	r3, r3, #268435456
 2413 0106 AB60     		str	r3, [r5, #8]
 2414              	.LVL175:
 2415              		.loc 8 6644 3 is_stmt 0 view .LVU800
 2416              	.LBE729:
 2417              	.LBE728:
 431:Src/main.c    ****   wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US * (SystemCoreClock / (100000 * 2))) / 10)
 2418              		.loc 1 431 3 is_stmt 1 view .LVU801
 432:Src/main.c    ****   while(wait_loop_index != 0)
 2419              		.loc 1 432 3 view .LVU802
 432:Src/main.c    ****   while(wait_loop_index != 0)
 2420              		.loc 1 432 78 is_stmt 0 view .LVU803
 2421 0108 1E4B     		ldr	r3, .L52+8
 2422 010a 1A68     		ldr	r2, [r3]
 2423 010c 9209     		lsrs	r2, r2, #6
 2424 010e 1E4B     		ldr	r3, .L52+12
 2425 0110 A3FB0232 		umull	r3, r2, r3, r2
 2426 0114 9209     		lsrs	r2, r2, #6
 432:Src/main.c    ****   while(wait_loop_index != 0)
 2427              		.loc 1 432 59 view .LVU804
 2428 0116 02EB8202 		add	r2, r2, r2, lsl #2
 2429 011a 9300     		lsls	r3, r2, #2
 432:Src/main.c    ****   while(wait_loop_index != 0)
 2430              		.loc 1 432 19 view .LVU805
 2431 011c 1B4A     		ldr	r2, .L52+16
 2432 011e A2FB0323 		umull	r2, r3, r2, r3
 2433 0122 DB08     		lsrs	r3, r3, #3
 2434              	.LVL176:
 433:Src/main.c    ****   {
 2435              		.loc 1 433 3 is_stmt 1 view .LVU806
 2436              	.L48:
 433:Src/main.c    ****   {
 2437              		.loc 1 433 8 view .LVU807
 2438 0124 0BB1     		cbz	r3, .L51
 435:Src/main.c    ****   }
 2439              		.loc 1 435 5 view .LVU808
 435:Src/main.c    ****   }
 2440              		.loc 1 435 20 is_stmt 0 view .LVU809
 2441 0126 013B     		subs	r3, r3, #1
 2442              	.LVL177:
 435:Src/main.c    ****   }
 2443              		.loc 1 435 20 view .LVU810
 2444 0128 FCE7     		b	.L48
 2445              	.L51:
 440:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC2, LL_ADC_CHANNEL_3, LL_ADC_SAMPLINGTIME_6CYCLES_5);
 2446              		.loc 1 440 3 is_stmt 1 view .LVU811
 2447              	.LVL178:
 2448              	.LBB730:
 2449              	.LBI730:
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2450              		.loc 8 4723 22 view .LVU812
 2451              	.LBB731:
ARM GAS  /tmp/cc85dWdm.s 			page 304


4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
 2452              		.loc 8 4729 3 view .LVU813
 2453 012a 154B     		ldr	r3, .L52+4
 2454              	.LVL179:
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
 2455              		.loc 8 4729 3 is_stmt 0 view .LVU814
 2456 012c DA6C     		ldr	r2, [r3, #76]
 2457 012e 22F47852 		bic	r2, r2, #15872
 2458 0132 42F4C062 		orr	r2, r2, #1536
 2459 0136 DA64     		str	r2, [r3, #76]
 2460              	.LVL180:
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
 2461              		.loc 8 4729 3 view .LVU815
 2462              	.LBE731:
 2463              	.LBE730:
 441:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC2, LL_ADC_CHANNEL_3, LL_ADC_SINGLE_ENDED);
 2464              		.loc 1 441 3 is_stmt 1 view .LVU816
 2465              	.LBB732:
 2466              	.LBI732:
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2467              		.loc 8 5330 22 view .LVU817
 2468              	.LBB733:
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2469              		.loc 8 5336 3 view .LVU818
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2470              		.loc 8 5336 25 is_stmt 0 view .LVU819
 2471 0138 1549     		ldr	r1, .L52+20
 2472              	.LVL181:
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2473              		.loc 8 5338 3 is_stmt 1 view .LVU820
 2474 013a 5A69     		ldr	r2, [r3, #20]
 2475 013c 22F46062 		bic	r2, r2, #3584
 2476 0140 42F40072 		orr	r2, r2, #512
 2477 0144 5A61     		str	r2, [r3, #20]
 2478              	.LVL182:
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2479              		.loc 8 5338 3 is_stmt 0 view .LVU821
 2480              	.LBE733:
 2481              	.LBE732:
 442:Src/main.c    **** 
 2482              		.loc 1 442 3 is_stmt 1 view .LVU822
 2483              	.LBB734:
 2484              	.LBI734:
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2485              		.loc 8 5495 22 view .LVU823
 2486              	.LBB735:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
 2487              		.loc 8 5501 3 view .LVU824
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 2488              		.loc 8 5508 5 view .LVU825
 2489 0146 D3F8B020 		ldr	r2, [r3, #176]
 2490 014a 22F00802 		bic	r2, r2, #8
 2491 014e C3F8B020 		str	r2, [r3, #176]
 2492              	.LVL183:
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 2493              		.loc 8 5508 5 is_stmt 0 view .LVU826
 2494              	.LBE735:
ARM GAS  /tmp/cc85dWdm.s 			page 305


 2495              	.LBE734:
 446:Src/main.c    ****   LL_ADC_SetChannelSamplingTime(ADC2, LL_ADC_CHANNEL_VOPAMP3_ADC2, LL_ADC_SAMPLINGTIME_6CYCLES_5);
 2496              		.loc 1 446 3 is_stmt 1 view .LVU827
 2497              	.LBB736:
 2498              	.LBI736:
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2499              		.loc 8 4723 22 view .LVU828
 2500              	.LBB737:
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
 2501              		.loc 8 4729 3 view .LVU829
 2502 0152 DA6C     		ldr	r2, [r3, #76]
 2503 0154 22F47822 		bic	r2, r2, #1015808
 2504 0158 42F41022 		orr	r2, r2, #589824
 2505 015c DA64     		str	r2, [r3, #76]
 2506              	.LVL184:
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
 2507              		.loc 8 4729 3 is_stmt 0 view .LVU830
 2508              	.LBE737:
 2509              	.LBE736:
 447:Src/main.c    ****   LL_ADC_SetChannelSingleDiff(ADC2, LL_ADC_CHANNEL_VOPAMP3_ADC2, LL_ADC_SINGLE_ENDED);
 2510              		.loc 1 447 3 is_stmt 1 view .LVU831
 2511              	.LBB738:
 2512              	.LBI738:
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2513              		.loc 8 5330 22 view .LVU832
 2514              	.LBB739:
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** 
 2515              		.loc 8 5336 3 view .LVU833
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2516              		.loc 8 5338 3 view .LVU834
 2517 015e 4A68     		ldr	r2, [r1, #4]
 2518 0160 22F0E062 		bic	r2, r2, #117440512
 2519 0164 42F08072 		orr	r2, r2, #16777216
 2520 0168 4A60     		str	r2, [r1, #4]
 2521              	.LVL185:
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2522              		.loc 8 5338 3 is_stmt 0 view .LVU835
 2523              	.LBE739:
 2524              	.LBE738:
 448:Src/main.c    ****   /* USER CODE BEGIN ADC2_Init 2 */
 2525              		.loc 1 448 3 is_stmt 1 view .LVU836
 2526              	.LBB740:
 2527              	.LBI740:
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h **** {
 2528              		.loc 8 5495 22 view .LVU837
 2529              	.LBB741:
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****   {
 2530              		.loc 8 5501 3 view .LVU838
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 2531              		.loc 8 5508 5 view .LVU839
 2532 016a D3F8B020 		ldr	r2, [r3, #176]
 2533 016e 22F48022 		bic	r2, r2, #262144
 2534 0172 C3F8B020 		str	r2, [r3, #176]
 2535              	.LVL186:
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_adc.h ****             Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
 2536              		.loc 8 5508 5 is_stmt 0 view .LVU840
 2537              	.LBE741:
ARM GAS  /tmp/cc85dWdm.s 			page 306


 2538              	.LBE740:
 453:Src/main.c    **** 
 2539              		.loc 1 453 1 view .LVU841
 2540 0176 17B0     		add	sp, sp, #92
 2541              		.cfi_def_cfa_offset 12
 2542              		@ sp needed
 2543 0178 30BD     		pop	{r4, r5, pc}
 2544              	.L53:
 2545 017a 00BF     		.align	2
 2546              	.L52:
 2547 017c 00100240 		.word	1073876992
 2548 0180 00010050 		.word	1342177536
 2549 0184 00000000 		.word	SystemCoreClock
 2550 0188 632D3E05 		.word	87960931
 2551 018c CDCCCCCC 		.word	-858993459
 2552 0190 14010050 		.word	1342177556
 2553              		.cfi_endproc
 2554              	.LFE1626:
 2556              		.section	.text.MX_COMP1_Init,"ax",%progbits
 2557              		.align	1
 2558              		.syntax unified
 2559              		.thumb
 2560              		.thumb_func
 2561              		.fpu fpv4-sp-d16
 2563              	MX_COMP1_Init:
 2564              	.LFB1627:
 461:Src/main.c    **** 
 2565              		.loc 1 461 1 is_stmt 1 view -0
 2566              		.cfi_startproc
 2567              		@ args = 0, pretend = 0, frame = 56
 2568              		@ frame_needed = 0, uses_anonymous_args = 0
 2569 0000 10B5     		push	{r4, lr}
 2570              		.cfi_def_cfa_offset 8
 2571              		.cfi_offset 4, -8
 2572              		.cfi_offset 14, -4
 2573 0002 8EB0     		sub	sp, sp, #56
 2574              		.cfi_def_cfa_offset 64
 467:Src/main.c    **** 
 2575              		.loc 1 467 3 view .LVU843
 467:Src/main.c    **** 
 2576              		.loc 1 467 23 is_stmt 0 view .LVU844
 2577 0004 0024     		movs	r4, #0
 2578 0006 0994     		str	r4, [sp, #36]
 2579 0008 0A94     		str	r4, [sp, #40]
 2580 000a 0B94     		str	r4, [sp, #44]
 2581 000c 0C94     		str	r4, [sp, #48]
 2582 000e 0D94     		str	r4, [sp, #52]
 469:Src/main.c    **** 
 2583              		.loc 1 469 3 is_stmt 1 view .LVU845
 469:Src/main.c    **** 
 2584              		.loc 1 469 23 is_stmt 0 view .LVU846
 2585 0010 0594     		str	r4, [sp, #20]
 2586 0012 0694     		str	r4, [sp, #24]
 2587 0014 0794     		str	r4, [sp, #28]
 2588 0016 0894     		str	r4, [sp, #32]
 471:Src/main.c    ****   /**COMP1 GPIO Configuration
 2589              		.loc 1 471 3 is_stmt 1 view .LVU847
ARM GAS  /tmp/cc85dWdm.s 			page 307


 2590              	.LVL187:
 2591              	.LBB742:
 2592              	.LBI742:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 2593              		.loc 3 451 22 view .LVU848
 2594              	.LBB743:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 2595              		.loc 3 453 3 view .LVU849
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 2596              		.loc 3 454 3 view .LVU850
 2597 0018 1E4B     		ldr	r3, .L59
 2598 001a DA6C     		ldr	r2, [r3, #76]
 2599 001c 42F00102 		orr	r2, r2, #1
 2600 0020 DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2601              		.loc 3 456 3 view .LVU851
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2602              		.loc 3 456 12 is_stmt 0 view .LVU852
 2603 0022 DB6C     		ldr	r3, [r3, #76]
 2604 0024 03F00103 		and	r3, r3, #1
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2605              		.loc 3 456 10 view .LVU853
 2606 0028 0193     		str	r3, [sp, #4]
 2607              		.loc 3 457 3 is_stmt 1 view .LVU854
 2608 002a 019B     		ldr	r3, [sp, #4]
 2609              	.LVL188:
 2610              		.loc 3 457 3 is_stmt 0 view .LVU855
 2611              	.LBE743:
 2612              	.LBE742:
 475:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 2613              		.loc 1 475 3 is_stmt 1 view .LVU856
 475:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 2614              		.loc 1 475 23 is_stmt 0 view .LVU857
 2615 002c 0223     		movs	r3, #2
 2616 002e 0393     		str	r3, [sp, #12]
 476:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 2617              		.loc 1 476 3 is_stmt 1 view .LVU858
 476:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 2618              		.loc 1 476 24 is_stmt 0 view .LVU859
 2619 0030 0323     		movs	r3, #3
 2620 0032 0493     		str	r3, [sp, #16]
 477:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_U_GPIO_Port, &GPIO_InitStruct);
 2621              		.loc 1 477 3 is_stmt 1 view .LVU860
 477:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_U_GPIO_Port, &GPIO_InitStruct);
 2622              		.loc 1 477 24 is_stmt 0 view .LVU861
 2623 0034 0794     		str	r4, [sp, #28]
 478:Src/main.c    **** 
 2624              		.loc 1 478 3 is_stmt 1 view .LVU862
 2625 0036 03A9     		add	r1, sp, #12
 2626 0038 4FF09040 		mov	r0, #1207959552
 2627 003c FFF7FEFF 		bl	LL_GPIO_Init
 2628              	.LVL189:
 483:Src/main.c    ****   COMP_InitStruct.InputMinus = LL_COMP_INPUT_MINUS_DAC3_CH1;
 2629              		.loc 1 483 3 view .LVU863
 483:Src/main.c    ****   COMP_InitStruct.InputMinus = LL_COMP_INPUT_MINUS_DAC3_CH1;
 2630              		.loc 1 483 29 is_stmt 0 view .LVU864
 2631 0040 0994     		str	r4, [sp, #36]
ARM GAS  /tmp/cc85dWdm.s 			page 308


 484:Src/main.c    ****   COMP_InitStruct.InputHysteresis = LL_COMP_HYSTERESIS_NONE;
 2632              		.loc 1 484 3 is_stmt 1 view .LVU865
 484:Src/main.c    ****   COMP_InitStruct.InputHysteresis = LL_COMP_HYSTERESIS_NONE;
 2633              		.loc 1 484 30 is_stmt 0 view .LVU866
 2634 0042 4023     		movs	r3, #64
 2635 0044 0A93     		str	r3, [sp, #40]
 485:Src/main.c    ****   COMP_InitStruct.OutputPolarity = LL_COMP_OUTPUTPOL_NONINVERTED;
 2636              		.loc 1 485 3 is_stmt 1 view .LVU867
 485:Src/main.c    ****   COMP_InitStruct.OutputPolarity = LL_COMP_OUTPUTPOL_NONINVERTED;
 2637              		.loc 1 485 35 is_stmt 0 view .LVU868
 2638 0046 0B94     		str	r4, [sp, #44]
 486:Src/main.c    ****   COMP_InitStruct.OutputBlankingSource = LL_COMP_BLANKINGSRC_NONE;
 2639              		.loc 1 486 3 is_stmt 1 view .LVU869
 486:Src/main.c    ****   COMP_InitStruct.OutputBlankingSource = LL_COMP_BLANKINGSRC_NONE;
 2640              		.loc 1 486 34 is_stmt 0 view .LVU870
 2641 0048 0C94     		str	r4, [sp, #48]
 487:Src/main.c    ****   LL_COMP_Init(COMP1, &COMP_InitStruct);
 2642              		.loc 1 487 3 is_stmt 1 view .LVU871
 487:Src/main.c    ****   LL_COMP_Init(COMP1, &COMP_InitStruct);
 2643              		.loc 1 487 40 is_stmt 0 view .LVU872
 2644 004a 0D94     		str	r4, [sp, #52]
 488:Src/main.c    **** 
 2645              		.loc 1 488 3 is_stmt 1 view .LVU873
 2646 004c 09A9     		add	r1, sp, #36
 2647 004e 1248     		ldr	r0, .L59+4
 2648 0050 FFF7FEFF 		bl	LL_COMP_Init
 2649              	.LVL190:
 492:Src/main.c    ****   wait_loop_index = (LL_COMP_DELAY_VOLTAGE_SCALER_STAB_US * (SystemCoreClock / (1000000 * 2)));
 2650              		.loc 1 492 3 view .LVU874
 492:Src/main.c    ****   wait_loop_index = (LL_COMP_DELAY_VOLTAGE_SCALER_STAB_US * (SystemCoreClock / (1000000 * 2)));
 2651              		.loc 1 492 17 is_stmt 0 view .LVU875
 2652 0054 0294     		str	r4, [sp, #8]
 493:Src/main.c    ****   while(wait_loop_index != 0)
 2653              		.loc 1 493 3 is_stmt 1 view .LVU876
 493:Src/main.c    ****   while(wait_loop_index != 0)
 2654              		.loc 1 493 78 is_stmt 0 view .LVU877
 2655 0056 114B     		ldr	r3, .L59+8
 2656 0058 1B68     		ldr	r3, [r3]
 2657 005a 114A     		ldr	r2, .L59+12
 2658 005c A2FB0323 		umull	r2, r3, r2, r3
 2659 0060 DB0C     		lsrs	r3, r3, #19
 493:Src/main.c    ****   while(wait_loop_index != 0)
 2660              		.loc 1 493 59 view .LVU878
 2661 0062 C822     		movs	r2, #200
 2662 0064 02FB03F3 		mul	r3, r2, r3
 493:Src/main.c    ****   while(wait_loop_index != 0)
 2663              		.loc 1 493 19 view .LVU879
 2664 0068 0293     		str	r3, [sp, #8]
 494:Src/main.c    ****   {
 2665              		.loc 1 494 3 is_stmt 1 view .LVU880
 2666              	.L55:
 494:Src/main.c    ****   {
 2667              		.loc 1 494 8 view .LVU881
 494:Src/main.c    ****   {
 2668              		.loc 1 494 25 is_stmt 0 view .LVU882
 2669 006a 029B     		ldr	r3, [sp, #8]
 494:Src/main.c    ****   {
ARM GAS  /tmp/cc85dWdm.s 			page 309


 2670              		.loc 1 494 8 view .LVU883
 2671 006c 1BB1     		cbz	r3, .L58
 496:Src/main.c    ****   }
 2672              		.loc 1 496 5 is_stmt 1 view .LVU884
 496:Src/main.c    ****   }
 2673              		.loc 1 496 20 is_stmt 0 view .LVU885
 2674 006e 029B     		ldr	r3, [sp, #8]
 2675 0070 013B     		subs	r3, r3, #1
 2676 0072 0293     		str	r3, [sp, #8]
 2677 0074 F9E7     		b	.L55
 2678              	.L58:
 498:Src/main.c    ****   LL_EXTI_DisableIT_0_31(LL_EXTI_LINE_21);
 2679              		.loc 1 498 3 is_stmt 1 view .LVU886
 2680              	.LVL191:
 2681              	.LBB744:
 2682              	.LBI744:
 2683              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @file    stm32g4xx_ll_exti.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief   Header file of EXTI LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #ifndef __STM32G4xx_LL_EXTI_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define __STM32G4xx_LL_EXTI_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined (EXTI)
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL EXTI
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /* Private types -------------------------------------------------------------*/
ARM GAS  /tmp/cc85dWdm.s 			page 310


  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /* Private Macros ------------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_Private_Macros EXTI Private Macros
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @}
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /* Exported types ------------------------------------------------------------*/
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_ES_INIT EXTI Exported Init structure
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** typedef struct
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   uint32_t Line_0_31;           /*!< Specifies the EXTI lines to be enabled or disabled for Lines i
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****                                      This parameter can be any combination of @ref EXTI_LL_EC_LINE 
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   uint32_t Line_32_63;          /*!< Specifies the EXTI lines to be enabled or disabled for Lines i
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****                                      This parameter can be any combination of @ref EXTI_LL_EC_LINE 
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   FunctionalState LineCommand;  /*!< Specifies the new state of the selected EXTI lines.
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****                                      This parameter can be set either to ENABLE or DISABLE */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   uint8_t Mode;                 /*!< Specifies the mode for the EXTI lines.
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****                                      This parameter can be a value of @ref EXTI_LL_EC_MODE. */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   uint8_t Trigger;              /*!< Specifies the trigger signal active edge for the EXTI lines.
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****                                      This parameter can be a value of @ref EXTI_LL_EC_TRIGGER. */
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** } LL_EXTI_InitTypeDef;
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @}
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /* Exported constants --------------------------------------------------------*/
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Constants EXTI Exported Constants
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_EC_LINE LINE
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_0                 EXTI_IMR1_IM0           /*!< Extended line 0 */
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_1                 EXTI_IMR1_IM1           /*!< Extended line 1 */
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_2                 EXTI_IMR1_IM2           /*!< Extended line 2 */
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_3                 EXTI_IMR1_IM3           /*!< Extended line 3 */
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_4                 EXTI_IMR1_IM4           /*!< Extended line 4 */
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_5                 EXTI_IMR1_IM5           /*!< Extended line 5 */
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_6                 EXTI_IMR1_IM6           /*!< Extended line 6 */
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_7                 EXTI_IMR1_IM7           /*!< Extended line 7 */
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_8                 EXTI_IMR1_IM8           /*!< Extended line 8 */
ARM GAS  /tmp/cc85dWdm.s 			page 311


  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_9                 EXTI_IMR1_IM9           /*!< Extended line 9 */
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_10                EXTI_IMR1_IM10          /*!< Extended line 10 */
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_11                EXTI_IMR1_IM11          /*!< Extended line 11 */
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_12                EXTI_IMR1_IM12          /*!< Extended line 12 */
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_13                EXTI_IMR1_IM13          /*!< Extended line 13 */
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_14                EXTI_IMR1_IM14          /*!< Extended line 14 */
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_15                EXTI_IMR1_IM15          /*!< Extended line 15 */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM16)
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_16                EXTI_IMR1_IM16          /*!< Extended line 16 */
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM16 */
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_17                EXTI_IMR1_IM17          /*!< Extended line 17 */
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM18)
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_18                EXTI_IMR1_IM18          /*!< Extended line 18 */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM18 */
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_19                EXTI_IMR1_IM19          /*!< Extended line 19 */
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM20)
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_20                EXTI_IMR1_IM20          /*!< Extended line 20 */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM20 */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM21)
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_21                EXTI_IMR1_IM21          /*!< Extended line 21 */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM21 */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM22)
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_22                EXTI_IMR1_IM22          /*!< Extended line 22 */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM22 */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_23                EXTI_IMR1_IM23          /*!< Extended line 23 */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM24)
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_24                EXTI_IMR1_IM24          /*!< Extended line 24 */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM24 */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM25)
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_25                EXTI_IMR1_IM25          /*!< Extended line 25 */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM25 */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM26)
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_26                EXTI_IMR1_IM26          /*!< Extended line 26 */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM26 */
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM27)
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_27                EXTI_IMR1_IM27          /*!< Extended line 27 */
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM27 */
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM28)
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_28                EXTI_IMR1_IM28          /*!< Extended line 28 */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM28 */
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM29)
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_29                EXTI_IMR1_IM29          /*!< Extended line 29 */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM29 */
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM30)
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_30                EXTI_IMR1_IM30          /*!< Extended line 30 */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM30 */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR1_IM31)
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_31                EXTI_IMR1_IM31          /*!< Extended line 31 */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR1_IM31 */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_ALL_0_31          EXTI_IMR1_IM            /*!< All Extended line not reserved*
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM32)
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_32                EXTI_IMR2_IM32          /*!< Extended line 32 */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM32 */
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM33)
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_33                EXTI_IMR2_IM33          /*!< Extended line 33 */
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM33 */
ARM GAS  /tmp/cc85dWdm.s 			page 312


 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM34)
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_34                EXTI_IMR2_IM34          /*!< Extended line 34 */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM34 */
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM35)
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_35                EXTI_IMR2_IM35          /*!< Extended line 35 */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM35 */
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM36)
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_36                EXTI_IMR2_IM36          /*!< Extended line 36 */
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM36 */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM37)
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_37                EXTI_IMR2_IM37          /*!< Extended line 37 */
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM37 */
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM38)
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_38                EXTI_IMR2_IM38          /*!< Extended line 38 */
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM38 */
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM39)
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_39                EXTI_IMR2_IM39          /*!< Extended line 39 */
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM39 */
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM40)
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_40                EXTI_IMR2_IM40          /*!< Extended line 40 */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM40 */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM41)
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_41                EXTI_IMR2_IM41          /*!< Extended line 41 */
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM41 */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(EXTI_IMR2_IM42)
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_42                EXTI_IMR2_IM42          /*!< Extended line 42 */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /* EXTI_IMR2_IM42 */
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_ALL_32_63         EXTI_IMR2_IM            /*!< All Extended line not reserved*
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_ALL               (0xFFFFFFFFU)  /*!< All Extended line */
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_LINE_NONE              0x00000000U             /*!< None Extended line */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @}
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_EC_MODE Mode
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_MODE_IT                 ((uint8_t)0x00U) /*!< Interrupt Mode */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_MODE_EVENT              ((uint8_t)0x01U) /*!< Event Mode */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_MODE_IT_EVENT           ((uint8_t)0x02U) /*!< Interrupt & Event Mode */
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @}
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_EC_TRIGGER Edge Trigger
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_TRIGGER_NONE            ((uint8_t)0x00U) /*!< No Trigger Mode */
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_TRIGGER_RISING          ((uint8_t)0x01U) /*!< Trigger Rising Mode */
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_TRIGGER_FALLING         ((uint8_t)0x02U) /*!< Trigger Falling Mode */
ARM GAS  /tmp/cc85dWdm.s 			page 313


 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_TRIGGER_RISING_FALLING  ((uint8_t)0x03U) /*!< Trigger Rising & Falling Mode */
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @}
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @}
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /* Exported macro ------------------------------------------------------------*/
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Macros EXTI Exported Macros
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_EM_WRITE_READ Common Write and read registers Macros
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Write a value in EXTI register
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  __REG__ Register to be written
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  __VALUE__ Value to be written in the register
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval None
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_WriteReg(__REG__, __VALUE__) WRITE_REG(EXTI->__REG__, (__VALUE__))
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Read a value in EXTI register
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  __REG__ Register to be read
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval Register value
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** #define LL_EXTI_ReadReg(__REG__) READ_REG(EXTI->__REG__)
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @}
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @}
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /* Exported functions --------------------------------------------------------*/
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Functions EXTI Exported Functions
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_IT_Management IT_Management
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 314


 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Enable ExtiLine Interrupt request for Lines in range 0 to 31
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note The reset value for the direct or internal lines (see RM)
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       is set to 1 in order to enable the interrupt by default.
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @rmtoll IMR1         IMx           LL_EXTI_EnableIT_0_31
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31 (*)
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   (*): Available in some devices
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval None
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableIT_0_31(uint32_t ExtiLine)
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   SET_BIT(EXTI->IMR1, ExtiLine);
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Enable ExtiLine Interrupt request for Lines in range 32 to 63
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note The reset value for the direct lines (lines from 32 to 34, line
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       39) is set to 1 in order to enable the interrupt by default.
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @rmtoll IMR2         IMx           LL_EXTI_EnableIT_32_63
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_32 (*)
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_33 (*)
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
ARM GAS  /tmp/cc85dWdm.s 			page 315


 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_35 (*)
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_36
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_37
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_38
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_39
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_42(*)
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_32_63
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   (*): Available in some devices
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval None
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableIT_32_63(uint32_t ExtiLine)
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   SET_BIT(EXTI->IMR2, ExtiLine);
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Disable ExtiLine Interrupt request for Lines in range 0 to 31
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note The reset value for the direct or internal lines (see RM)
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       is set to 1 in order to enable the interrupt by default.
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @rmtoll IMR1         IMx           LL_EXTI_DisableIT_0_31
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31 (*)
ARM GAS  /tmp/cc85dWdm.s 			page 316


 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   (*): Available in some devices
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval None
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableIT_0_31(uint32_t ExtiLine)
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   CLEAR_BIT(EXTI->IMR1, ExtiLine);
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Disable ExtiLine Interrupt request for Lines in range 32 to 63
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note The reset value for the direct lines (lines from 32 to 34, line
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       39) is set to 1 in order to enable the interrupt by default.
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @rmtoll IMR2         IMx           LL_EXTI_DisableIT_32_63
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_32 (*)
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_33 (*)
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_35 (*)
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_36
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_37
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_38
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_39
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_42(*)
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_32_63
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   (*): Available in some devices
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval None
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableIT_32_63(uint32_t ExtiLine)
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   CLEAR_BIT(EXTI->IMR2, ExtiLine);
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Indicate if ExtiLine Interrupt request is enabled for Lines in range 0 to 31
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note The reset value for the direct or internal lines (see RM)
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       is set to 1 in order to enable the interrupt by default.
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @rmtoll IMR1         IMx           LL_EXTI_IsEnabledIT_0_31
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
ARM GAS  /tmp/cc85dWdm.s 			page 317


 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31 (*)
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   (*): Available in some devices
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledIT_0_31(uint32_t ExtiLine)
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   return ((READ_BIT(EXTI->IMR1, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Indicate if ExtiLine Interrupt request is enabled for Lines in range 32 to 63
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note The reset value for the direct lines (lines from 32 to 34, line
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       39) is set to 1 in order to enable the interrupt by default.
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @rmtoll IMR2         IMx           LL_EXTI_IsEnabledIT_32_63
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_32 (*)
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_33 (*)
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_35 (*)
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_36
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_37
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_38
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_39
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_42(*)
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_32_63
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   (*): Available in some devices
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledIT_32_63(uint32_t ExtiLine)
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   return ((READ_BIT(EXTI->IMR2, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @}
ARM GAS  /tmp/cc85dWdm.s 			page 318


 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Event_Management Event_Management
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @{
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Enable ExtiLine Event request for Lines in range 0 to 31
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @rmtoll EMR1         EMx           LL_EXTI_EnableEvent_0_31
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31 (*)
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   (*): Available in some devices
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval None
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableEvent_0_31(uint32_t ExtiLine)
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   SET_BIT(EXTI->EMR1, ExtiLine);
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Enable ExtiLine Event request for Lines in range 32 to 63
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @rmtoll EMR2         EMx           LL_EXTI_EnableEvent_32_63
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
ARM GAS  /tmp/cc85dWdm.s 			page 319


 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_32 (*)
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_33 (*)
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_35 (*)
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_36
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_37
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_38
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_39
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_42(*)
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_32_63
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   (*): Available in some devices
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval None
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableEvent_32_63(uint32_t ExtiLine)
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   SET_BIT(EXTI->EMR2, ExtiLine);
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @brief  Disable ExtiLine Event request for Lines in range 0 to 31
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @rmtoll EMR1         EMx           LL_EXTI_DisableEvent_0_31
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31 (*)
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
ARM GAS  /tmp/cc85dWdm.s 			page 320


 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   (*): Available in some devices
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   * @retval None
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   */
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableEvent_0_31(uint32_t ExtiLine)
 2684              		.loc 9 615 22 view .LVU887
 2685              	.LBB745:
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h ****   CLEAR_BIT(EXTI->EMR1, ExtiLine);
 2686              		.loc 9 617 3 view .LVU888
 2687 0076 03F18043 		add	r3, r3, #1073741824
 2688 007a 03F58233 		add	r3, r3, #66560
 2689 007e 5A68     		ldr	r2, [r3, #4]
 2690 0080 22F40012 		bic	r2, r2, #2097152
 2691 0084 5A60     		str	r2, [r3, #4]
 2692              	.LVL192:
 2693              		.loc 9 617 3 is_stmt 0 view .LVU889
 2694              	.LBE745:
 2695              	.LBE744:
 499:Src/main.c    ****   /* USER CODE BEGIN COMP1_Init 2 */
 2696              		.loc 1 499 3 is_stmt 1 view .LVU890
 2697              	.LBB746:
 2698              	.LBI746:
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 2699              		.loc 9 387 22 view .LVU891
 2700              	.LBB747:
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 2701              		.loc 9 389 3 view .LVU892
 2702 0086 1A68     		ldr	r2, [r3]
 2703 0088 22F40012 		bic	r2, r2, #2097152
 2704 008c 1A60     		str	r2, [r3]
 2705              	.LVL193:
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 2706              		.loc 9 389 3 is_stmt 0 view .LVU893
 2707              	.LBE747:
 2708              	.LBE746:
 504:Src/main.c    **** 
 2709              		.loc 1 504 1 view .LVU894
 2710 008e 0EB0     		add	sp, sp, #56
 2711              		.cfi_def_cfa_offset 8
 2712              		@ sp needed
 2713 0090 10BD     		pop	{r4, pc}
 2714              	.L60:
 2715 0092 00BF     		.align	2
 2716              	.L59:
 2717 0094 00100240 		.word	1073876992
 2718 0098 00020140 		.word	1073807872
 2719 009c 00000000 		.word	SystemCoreClock
 2720 00a0 83DE1B43 		.word	1125899907
 2721              		.cfi_endproc
 2722              	.LFE1627:
 2724              		.section	.text.MX_COMP2_Init,"ax",%progbits
 2725              		.align	1
 2726              		.syntax unified
 2727              		.thumb
 2728              		.thumb_func
 2729              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc85dWdm.s 			page 321


 2731              	MX_COMP2_Init:
 2732              	.LFB1628:
 512:Src/main.c    **** 
 2733              		.loc 1 512 1 is_stmt 1 view -0
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 56
 2736              		@ frame_needed = 0, uses_anonymous_args = 0
 2737 0000 10B5     		push	{r4, lr}
 2738              		.cfi_def_cfa_offset 8
 2739              		.cfi_offset 4, -8
 2740              		.cfi_offset 14, -4
 2741 0002 8EB0     		sub	sp, sp, #56
 2742              		.cfi_def_cfa_offset 64
 518:Src/main.c    **** 
 2743              		.loc 1 518 3 view .LVU896
 518:Src/main.c    **** 
 2744              		.loc 1 518 23 is_stmt 0 view .LVU897
 2745 0004 0024     		movs	r4, #0
 2746 0006 0994     		str	r4, [sp, #36]
 2747 0008 0A94     		str	r4, [sp, #40]
 2748 000a 0B94     		str	r4, [sp, #44]
 2749 000c 0C94     		str	r4, [sp, #48]
 2750 000e 0D94     		str	r4, [sp, #52]
 520:Src/main.c    **** 
 2751              		.loc 1 520 3 is_stmt 1 view .LVU898
 520:Src/main.c    **** 
 2752              		.loc 1 520 23 is_stmt 0 view .LVU899
 2753 0010 0594     		str	r4, [sp, #20]
 2754 0012 0694     		str	r4, [sp, #24]
 2755 0014 0794     		str	r4, [sp, #28]
 2756 0016 0894     		str	r4, [sp, #32]
 522:Src/main.c    ****   /**COMP2 GPIO Configuration
 2757              		.loc 1 522 3 is_stmt 1 view .LVU900
 2758              	.LVL194:
 2759              	.LBB748:
 2760              	.LBI748:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 2761              		.loc 3 451 22 view .LVU901
 2762              	.LBB749:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 2763              		.loc 3 453 3 view .LVU902
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 2764              		.loc 3 454 3 view .LVU903
 2765 0018 1E4B     		ldr	r3, .L66
 2766 001a DA6C     		ldr	r2, [r3, #76]
 2767 001c 42F00102 		orr	r2, r2, #1
 2768 0020 DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2769              		.loc 3 456 3 view .LVU904
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2770              		.loc 3 456 12 is_stmt 0 view .LVU905
 2771 0022 DB6C     		ldr	r3, [r3, #76]
 2772 0024 03F00103 		and	r3, r3, #1
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2773              		.loc 3 456 10 view .LVU906
 2774 0028 0193     		str	r3, [sp, #4]
 2775              		.loc 3 457 3 is_stmt 1 view .LVU907
ARM GAS  /tmp/cc85dWdm.s 			page 322


 2776 002a 019B     		ldr	r3, [sp, #4]
 2777              	.LVL195:
 2778              		.loc 3 457 3 is_stmt 0 view .LVU908
 2779              	.LBE749:
 2780              	.LBE748:
 526:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 2781              		.loc 1 526 3 is_stmt 1 view .LVU909
 526:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 2782              		.loc 1 526 23 is_stmt 0 view .LVU910
 2783 002c 8023     		movs	r3, #128
 2784 002e 0393     		str	r3, [sp, #12]
 527:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 2785              		.loc 1 527 3 is_stmt 1 view .LVU911
 527:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 2786              		.loc 1 527 24 is_stmt 0 view .LVU912
 2787 0030 0323     		movs	r3, #3
 2788 0032 0493     		str	r3, [sp, #16]
 528:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_V_GPIO_Port, &GPIO_InitStruct);
 2789              		.loc 1 528 3 is_stmt 1 view .LVU913
 528:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_V_GPIO_Port, &GPIO_InitStruct);
 2790              		.loc 1 528 24 is_stmt 0 view .LVU914
 2791 0034 0794     		str	r4, [sp, #28]
 529:Src/main.c    **** 
 2792              		.loc 1 529 3 is_stmt 1 view .LVU915
 2793 0036 03A9     		add	r1, sp, #12
 2794 0038 4FF09040 		mov	r0, #1207959552
 2795 003c FFF7FEFF 		bl	LL_GPIO_Init
 2796              	.LVL196:
 534:Src/main.c    ****   COMP_InitStruct.InputMinus = LL_COMP_INPUT_MINUS_DAC3_CH2;
 2797              		.loc 1 534 3 view .LVU916
 534:Src/main.c    ****   COMP_InitStruct.InputMinus = LL_COMP_INPUT_MINUS_DAC3_CH2;
 2798              		.loc 1 534 29 is_stmt 0 view .LVU917
 2799 0040 0994     		str	r4, [sp, #36]
 535:Src/main.c    ****   COMP_InitStruct.InputHysteresis = LL_COMP_HYSTERESIS_NONE;
 2800              		.loc 1 535 3 is_stmt 1 view .LVU918
 535:Src/main.c    ****   COMP_InitStruct.InputHysteresis = LL_COMP_HYSTERESIS_NONE;
 2801              		.loc 1 535 30 is_stmt 0 view .LVU919
 2802 0042 4023     		movs	r3, #64
 2803 0044 0A93     		str	r3, [sp, #40]
 536:Src/main.c    ****   COMP_InitStruct.OutputPolarity = LL_COMP_OUTPUTPOL_NONINVERTED;
 2804              		.loc 1 536 3 is_stmt 1 view .LVU920
 536:Src/main.c    ****   COMP_InitStruct.OutputPolarity = LL_COMP_OUTPUTPOL_NONINVERTED;
 2805              		.loc 1 536 35 is_stmt 0 view .LVU921
 2806 0046 0B94     		str	r4, [sp, #44]
 537:Src/main.c    ****   COMP_InitStruct.OutputBlankingSource = LL_COMP_BLANKINGSRC_NONE;
 2807              		.loc 1 537 3 is_stmt 1 view .LVU922
 537:Src/main.c    ****   COMP_InitStruct.OutputBlankingSource = LL_COMP_BLANKINGSRC_NONE;
 2808              		.loc 1 537 34 is_stmt 0 view .LVU923
 2809 0048 0C94     		str	r4, [sp, #48]
 538:Src/main.c    ****   LL_COMP_Init(COMP2, &COMP_InitStruct);
 2810              		.loc 1 538 3 is_stmt 1 view .LVU924
 538:Src/main.c    ****   LL_COMP_Init(COMP2, &COMP_InitStruct);
 2811              		.loc 1 538 40 is_stmt 0 view .LVU925
 2812 004a 0D94     		str	r4, [sp, #52]
 539:Src/main.c    **** 
 2813              		.loc 1 539 3 is_stmt 1 view .LVU926
 2814 004c 09A9     		add	r1, sp, #36
ARM GAS  /tmp/cc85dWdm.s 			page 323


 2815 004e 1248     		ldr	r0, .L66+4
 2816 0050 FFF7FEFF 		bl	LL_COMP_Init
 2817              	.LVL197:
 543:Src/main.c    ****   wait_loop_index = (LL_COMP_DELAY_VOLTAGE_SCALER_STAB_US * (SystemCoreClock / (1000000 * 2)));
 2818              		.loc 1 543 3 view .LVU927
 543:Src/main.c    ****   wait_loop_index = (LL_COMP_DELAY_VOLTAGE_SCALER_STAB_US * (SystemCoreClock / (1000000 * 2)));
 2819              		.loc 1 543 17 is_stmt 0 view .LVU928
 2820 0054 0294     		str	r4, [sp, #8]
 544:Src/main.c    ****   while(wait_loop_index != 0)
 2821              		.loc 1 544 3 is_stmt 1 view .LVU929
 544:Src/main.c    ****   while(wait_loop_index != 0)
 2822              		.loc 1 544 78 is_stmt 0 view .LVU930
 2823 0056 114B     		ldr	r3, .L66+8
 2824 0058 1B68     		ldr	r3, [r3]
 2825 005a 114A     		ldr	r2, .L66+12
 2826 005c A2FB0323 		umull	r2, r3, r2, r3
 2827 0060 DB0C     		lsrs	r3, r3, #19
 544:Src/main.c    ****   while(wait_loop_index != 0)
 2828              		.loc 1 544 59 view .LVU931
 2829 0062 C822     		movs	r2, #200
 2830 0064 02FB03F3 		mul	r3, r2, r3
 544:Src/main.c    ****   while(wait_loop_index != 0)
 2831              		.loc 1 544 19 view .LVU932
 2832 0068 0293     		str	r3, [sp, #8]
 545:Src/main.c    ****   {
 2833              		.loc 1 545 3 is_stmt 1 view .LVU933
 2834              	.L62:
 545:Src/main.c    ****   {
 2835              		.loc 1 545 8 view .LVU934
 545:Src/main.c    ****   {
 2836              		.loc 1 545 25 is_stmt 0 view .LVU935
 2837 006a 029B     		ldr	r3, [sp, #8]
 545:Src/main.c    ****   {
 2838              		.loc 1 545 8 view .LVU936
 2839 006c 1BB1     		cbz	r3, .L65
 547:Src/main.c    ****   }
 2840              		.loc 1 547 5 is_stmt 1 view .LVU937
 547:Src/main.c    ****   }
 2841              		.loc 1 547 20 is_stmt 0 view .LVU938
 2842 006e 029B     		ldr	r3, [sp, #8]
 2843 0070 013B     		subs	r3, r3, #1
 2844 0072 0293     		str	r3, [sp, #8]
 2845 0074 F9E7     		b	.L62
 2846              	.L65:
 549:Src/main.c    ****   LL_EXTI_DisableIT_0_31(LL_EXTI_LINE_22);
 2847              		.loc 1 549 3 is_stmt 1 view .LVU939
 2848              	.LVL198:
 2849              	.LBB750:
 2850              	.LBI750:
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 2851              		.loc 9 615 22 view .LVU940
 2852              	.LBB751:
 2853              		.loc 9 617 3 view .LVU941
 2854 0076 03F18043 		add	r3, r3, #1073741824
 2855 007a 03F58233 		add	r3, r3, #66560
 2856 007e 5A68     		ldr	r2, [r3, #4]
 2857 0080 22F48002 		bic	r2, r2, #4194304
ARM GAS  /tmp/cc85dWdm.s 			page 324


 2858 0084 5A60     		str	r2, [r3, #4]
 2859              	.LVL199:
 2860              		.loc 9 617 3 is_stmt 0 view .LVU942
 2861              	.LBE751:
 2862              	.LBE750:
 550:Src/main.c    ****   /* USER CODE BEGIN COMP2_Init 2 */
 2863              		.loc 1 550 3 is_stmt 1 view .LVU943
 2864              	.LBB752:
 2865              	.LBI752:
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 2866              		.loc 9 387 22 view .LVU944
 2867              	.LBB753:
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 2868              		.loc 9 389 3 view .LVU945
 2869 0086 1A68     		ldr	r2, [r3]
 2870 0088 22F48002 		bic	r2, r2, #4194304
 2871 008c 1A60     		str	r2, [r3]
 2872              	.LVL200:
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 2873              		.loc 9 389 3 is_stmt 0 view .LVU946
 2874              	.LBE753:
 2875              	.LBE752:
 555:Src/main.c    **** 
 2876              		.loc 1 555 1 view .LVU947
 2877 008e 0EB0     		add	sp, sp, #56
 2878              		.cfi_def_cfa_offset 8
 2879              		@ sp needed
 2880 0090 10BD     		pop	{r4, pc}
 2881              	.L67:
 2882 0092 00BF     		.align	2
 2883              	.L66:
 2884 0094 00100240 		.word	1073876992
 2885 0098 04020140 		.word	1073807876
 2886 009c 00000000 		.word	SystemCoreClock
 2887 00a0 83DE1B43 		.word	1125899907
 2888              		.cfi_endproc
 2889              	.LFE1628:
 2891              		.section	.text.MX_COMP4_Init,"ax",%progbits
 2892              		.align	1
 2893              		.syntax unified
 2894              		.thumb
 2895              		.thumb_func
 2896              		.fpu fpv4-sp-d16
 2898              	MX_COMP4_Init:
 2899              	.LFB1629:
 563:Src/main.c    **** 
 2900              		.loc 1 563 1 is_stmt 1 view -0
 2901              		.cfi_startproc
 2902              		@ args = 0, pretend = 0, frame = 56
 2903              		@ frame_needed = 0, uses_anonymous_args = 0
 2904 0000 10B5     		push	{r4, lr}
 2905              		.cfi_def_cfa_offset 8
 2906              		.cfi_offset 4, -8
 2907              		.cfi_offset 14, -4
 2908 0002 8EB0     		sub	sp, sp, #56
 2909              		.cfi_def_cfa_offset 64
 569:Src/main.c    **** 
ARM GAS  /tmp/cc85dWdm.s 			page 325


 2910              		.loc 1 569 3 view .LVU949
 569:Src/main.c    **** 
 2911              		.loc 1 569 23 is_stmt 0 view .LVU950
 2912 0004 0024     		movs	r4, #0
 2913 0006 0994     		str	r4, [sp, #36]
 2914 0008 0A94     		str	r4, [sp, #40]
 2915 000a 0B94     		str	r4, [sp, #44]
 2916 000c 0C94     		str	r4, [sp, #48]
 2917 000e 0D94     		str	r4, [sp, #52]
 571:Src/main.c    **** 
 2918              		.loc 1 571 3 is_stmt 1 view .LVU951
 571:Src/main.c    **** 
 2919              		.loc 1 571 23 is_stmt 0 view .LVU952
 2920 0010 0594     		str	r4, [sp, #20]
 2921 0012 0694     		str	r4, [sp, #24]
 2922 0014 0794     		str	r4, [sp, #28]
 2923 0016 0894     		str	r4, [sp, #32]
 573:Src/main.c    ****   /**COMP4 GPIO Configuration
 2924              		.loc 1 573 3 is_stmt 1 view .LVU953
 2925              	.LVL201:
 2926              	.LBB754:
 2927              	.LBI754:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 2928              		.loc 3 451 22 view .LVU954
 2929              	.LBB755:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 2930              		.loc 3 453 3 view .LVU955
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 2931              		.loc 3 454 3 view .LVU956
 2932 0018 1D4B     		ldr	r3, .L73
 2933 001a DA6C     		ldr	r2, [r3, #76]
 2934 001c 42F00202 		orr	r2, r2, #2
 2935 0020 DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2936              		.loc 3 456 3 view .LVU957
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2937              		.loc 3 456 12 is_stmt 0 view .LVU958
 2938 0022 DB6C     		ldr	r3, [r3, #76]
 2939 0024 03F00203 		and	r3, r3, #2
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 2940              		.loc 3 456 10 view .LVU959
 2941 0028 0193     		str	r3, [sp, #4]
 2942              		.loc 3 457 3 is_stmt 1 view .LVU960
 2943 002a 019B     		ldr	r3, [sp, #4]
 2944              	.LVL202:
 2945              		.loc 3 457 3 is_stmt 0 view .LVU961
 2946              	.LBE755:
 2947              	.LBE754:
 577:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 2948              		.loc 1 577 3 is_stmt 1 view .LVU962
 577:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 2949              		.loc 1 577 23 is_stmt 0 view .LVU963
 2950 002c 0123     		movs	r3, #1
 2951 002e 0393     		str	r3, [sp, #12]
 578:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 2952              		.loc 1 578 3 is_stmt 1 view .LVU964
 578:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
ARM GAS  /tmp/cc85dWdm.s 			page 326


 2953              		.loc 1 578 24 is_stmt 0 view .LVU965
 2954 0030 0323     		movs	r3, #3
 2955 0032 0493     		str	r3, [sp, #16]
 579:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_W_GPIO_Port, &GPIO_InitStruct);
 2956              		.loc 1 579 3 is_stmt 1 view .LVU966
 579:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_W_GPIO_Port, &GPIO_InitStruct);
 2957              		.loc 1 579 24 is_stmt 0 view .LVU967
 2958 0034 0794     		str	r4, [sp, #28]
 580:Src/main.c    **** 
 2959              		.loc 1 580 3 is_stmt 1 view .LVU968
 2960 0036 03A9     		add	r1, sp, #12
 2961 0038 1648     		ldr	r0, .L73+4
 2962 003a FFF7FEFF 		bl	LL_GPIO_Init
 2963              	.LVL203:
 585:Src/main.c    ****   COMP_InitStruct.InputMinus = LL_COMP_INPUT_MINUS_DAC3_CH2;
 2964              		.loc 1 585 3 view .LVU969
 585:Src/main.c    ****   COMP_InitStruct.InputMinus = LL_COMP_INPUT_MINUS_DAC3_CH2;
 2965              		.loc 1 585 29 is_stmt 0 view .LVU970
 2966 003e 0994     		str	r4, [sp, #36]
 586:Src/main.c    ****   COMP_InitStruct.InputHysteresis = LL_COMP_HYSTERESIS_NONE;
 2967              		.loc 1 586 3 is_stmt 1 view .LVU971
 586:Src/main.c    ****   COMP_InitStruct.InputHysteresis = LL_COMP_HYSTERESIS_NONE;
 2968              		.loc 1 586 30 is_stmt 0 view .LVU972
 2969 0040 4023     		movs	r3, #64
 2970 0042 0A93     		str	r3, [sp, #40]
 587:Src/main.c    ****   COMP_InitStruct.OutputPolarity = LL_COMP_OUTPUTPOL_NONINVERTED;
 2971              		.loc 1 587 3 is_stmt 1 view .LVU973
 587:Src/main.c    ****   COMP_InitStruct.OutputPolarity = LL_COMP_OUTPUTPOL_NONINVERTED;
 2972              		.loc 1 587 35 is_stmt 0 view .LVU974
 2973 0044 0B94     		str	r4, [sp, #44]
 588:Src/main.c    ****   COMP_InitStruct.OutputBlankingSource = LL_COMP_BLANKINGSRC_NONE;
 2974              		.loc 1 588 3 is_stmt 1 view .LVU975
 588:Src/main.c    ****   COMP_InitStruct.OutputBlankingSource = LL_COMP_BLANKINGSRC_NONE;
 2975              		.loc 1 588 34 is_stmt 0 view .LVU976
 2976 0046 0C94     		str	r4, [sp, #48]
 589:Src/main.c    ****   LL_COMP_Init(COMP4, &COMP_InitStruct);
 2977              		.loc 1 589 3 is_stmt 1 view .LVU977
 589:Src/main.c    ****   LL_COMP_Init(COMP4, &COMP_InitStruct);
 2978              		.loc 1 589 40 is_stmt 0 view .LVU978
 2979 0048 0D94     		str	r4, [sp, #52]
 590:Src/main.c    **** 
 2980              		.loc 1 590 3 is_stmt 1 view .LVU979
 2981 004a 09A9     		add	r1, sp, #36
 2982 004c 1248     		ldr	r0, .L73+8
 2983 004e FFF7FEFF 		bl	LL_COMP_Init
 2984              	.LVL204:
 594:Src/main.c    ****   wait_loop_index = (LL_COMP_DELAY_VOLTAGE_SCALER_STAB_US * (SystemCoreClock / (1000000 * 2)));
 2985              		.loc 1 594 3 view .LVU980
 594:Src/main.c    ****   wait_loop_index = (LL_COMP_DELAY_VOLTAGE_SCALER_STAB_US * (SystemCoreClock / (1000000 * 2)));
 2986              		.loc 1 594 17 is_stmt 0 view .LVU981
 2987 0052 0294     		str	r4, [sp, #8]
 595:Src/main.c    ****   while(wait_loop_index != 0)
 2988              		.loc 1 595 3 is_stmt 1 view .LVU982
 595:Src/main.c    ****   while(wait_loop_index != 0)
 2989              		.loc 1 595 78 is_stmt 0 view .LVU983
 2990 0054 114B     		ldr	r3, .L73+12
 2991 0056 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc85dWdm.s 			page 327


 2992 0058 114A     		ldr	r2, .L73+16
 2993 005a A2FB0323 		umull	r2, r3, r2, r3
 2994 005e DB0C     		lsrs	r3, r3, #19
 595:Src/main.c    ****   while(wait_loop_index != 0)
 2995              		.loc 1 595 59 view .LVU984
 2996 0060 C822     		movs	r2, #200
 2997 0062 02FB03F3 		mul	r3, r2, r3
 595:Src/main.c    ****   while(wait_loop_index != 0)
 2998              		.loc 1 595 19 view .LVU985
 2999 0066 0293     		str	r3, [sp, #8]
 596:Src/main.c    ****   {
 3000              		.loc 1 596 3 is_stmt 1 view .LVU986
 3001              	.L69:
 596:Src/main.c    ****   {
 3002              		.loc 1 596 8 view .LVU987
 596:Src/main.c    ****   {
 3003              		.loc 1 596 25 is_stmt 0 view .LVU988
 3004 0068 029B     		ldr	r3, [sp, #8]
 596:Src/main.c    ****   {
 3005              		.loc 1 596 8 view .LVU989
 3006 006a 1BB1     		cbz	r3, .L72
 598:Src/main.c    ****   }
 3007              		.loc 1 598 5 is_stmt 1 view .LVU990
 598:Src/main.c    ****   }
 3008              		.loc 1 598 20 is_stmt 0 view .LVU991
 3009 006c 029B     		ldr	r3, [sp, #8]
 3010 006e 013B     		subs	r3, r3, #1
 3011 0070 0293     		str	r3, [sp, #8]
 3012 0072 F9E7     		b	.L69
 3013              	.L72:
 600:Src/main.c    ****   LL_EXTI_DisableIT_0_31(LL_EXTI_LINE_30);
 3014              		.loc 1 600 3 is_stmt 1 view .LVU992
 3015              	.LVL205:
 3016              	.LBB756:
 3017              	.LBI756:
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 3018              		.loc 9 615 22 view .LVU993
 3019              	.LBB757:
 3020              		.loc 9 617 3 view .LVU994
 3021 0074 03F18043 		add	r3, r3, #1073741824
 3022 0078 03F58233 		add	r3, r3, #66560
 3023 007c 5A68     		ldr	r2, [r3, #4]
 3024 007e 22F08042 		bic	r2, r2, #1073741824
 3025 0082 5A60     		str	r2, [r3, #4]
 3026              	.LVL206:
 3027              		.loc 9 617 3 is_stmt 0 view .LVU995
 3028              	.LBE757:
 3029              	.LBE756:
 601:Src/main.c    ****   /* USER CODE BEGIN COMP4_Init 2 */
 3030              		.loc 1 601 3 is_stmt 1 view .LVU996
 3031              	.LBB758:
 3032              	.LBI758:
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** {
 3033              		.loc 9 387 22 view .LVU997
 3034              	.LBB759:
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 3035              		.loc 9 389 3 view .LVU998
ARM GAS  /tmp/cc85dWdm.s 			page 328


 3036 0084 1A68     		ldr	r2, [r3]
 3037 0086 22F08042 		bic	r2, r2, #1073741824
 3038 008a 1A60     		str	r2, [r3]
 3039              	.LVL207:
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_exti.h **** }
 3040              		.loc 9 389 3 is_stmt 0 view .LVU999
 3041              	.LBE759:
 3042              	.LBE758:
 606:Src/main.c    **** 
 3043              		.loc 1 606 1 view .LVU1000
 3044 008c 0EB0     		add	sp, sp, #56
 3045              		.cfi_def_cfa_offset 8
 3046              		@ sp needed
 3047 008e 10BD     		pop	{r4, pc}
 3048              	.L74:
 3049              		.align	2
 3050              	.L73:
 3051 0090 00100240 		.word	1073876992
 3052 0094 00040048 		.word	1207960576
 3053 0098 0C020140 		.word	1073807884
 3054 009c 00000000 		.word	SystemCoreClock
 3055 00a0 83DE1B43 		.word	1125899907
 3056              		.cfi_endproc
 3057              	.LFE1629:
 3059              		.section	.text.MX_DAC3_Init,"ax",%progbits
 3060              		.align	1
 3061              		.syntax unified
 3062              		.thumb
 3063              		.thumb_func
 3064              		.fpu fpv4-sp-d16
 3066              	MX_DAC3_Init:
 3067              	.LFB1631:
 641:Src/main.c    **** 
 3068              		.loc 1 641 1 is_stmt 1 view -0
 3069              		.cfi_startproc
 3070              		@ args = 0, pretend = 0, frame = 32
 3071              		@ frame_needed = 0, uses_anonymous_args = 0
 3072 0000 10B5     		push	{r4, lr}
 3073              		.cfi_def_cfa_offset 8
 3074              		.cfi_offset 4, -8
 3075              		.cfi_offset 14, -4
 3076 0002 88B0     		sub	sp, sp, #32
 3077              		.cfi_def_cfa_offset 40
 647:Src/main.c    **** 
 3078              		.loc 1 647 3 view .LVU1002
 647:Src/main.c    **** 
 3079              		.loc 1 647 22 is_stmt 0 view .LVU1003
 3080 0004 0023     		movs	r3, #0
 3081 0006 0493     		str	r3, [sp, #16]
 650:Src/main.c    **** 
 3082              		.loc 1 650 3 is_stmt 1 view .LVU1004
 3083              	.LVL208:
 3084              	.LBB760:
 3085              	.LBI760:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 3086              		.loc 3 451 22 view .LVU1005
 3087              	.LBB761:
ARM GAS  /tmp/cc85dWdm.s 			page 329


 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 3088              		.loc 3 453 3 view .LVU1006
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 3089              		.loc 3 454 3 view .LVU1007
 3090 0008 1B4A     		ldr	r2, .L77
 3091 000a D16C     		ldr	r1, [r2, #76]
 3092 000c 41F48021 		orr	r1, r1, #262144
 3093 0010 D164     		str	r1, [r2, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3094              		.loc 3 456 3 view .LVU1008
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3095              		.loc 3 456 12 is_stmt 0 view .LVU1009
 3096 0012 D26C     		ldr	r2, [r2, #76]
 3097 0014 02F48022 		and	r2, r2, #262144
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3098              		.loc 3 456 10 view .LVU1010
 3099 0018 0092     		str	r2, [sp]
 3100              		.loc 3 457 3 is_stmt 1 view .LVU1011
 3101 001a 009A     		ldr	r2, [sp]
 3102              	.LVL209:
 3103              		.loc 3 457 3 is_stmt 0 view .LVU1012
 3104              	.LBE761:
 3105              	.LBE760:
 658:Src/main.c    ****   DAC_InitStruct.TriggerSource = LL_DAC_TRIG_SOFTWARE;
 3106              		.loc 1 658 3 is_stmt 1 view .LVU1013
 3107              	.LBB762:
 3108              	.LBI762:
 3109              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @file    stm32g4xx_ll_dac.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief   Header file of DAC LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #ifndef STM32G4xx_LL_DAC_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define STM32G4xx_LL_DAC_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 330


  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #if defined(DAC1) || defined(DAC2) || defined(DAC3) ||defined (DAC4)
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL DAC
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_Private_Constants DAC Private Constants
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Internal masks for DAC channels definition */
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* To select into literal LL_DAC_CHANNEL_x the relevant bits for:             */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel bits position into registers CR, MCR, CCR, SHHR, SHRR, STMODR    */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel bits position into register SWTRIG                               */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel bits position into register SWTRIGB                              */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel register offset of data holding register DHRx                    */
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel register offset of data output register DORx                     */
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel register offset of sample-and-hold sample time register SHSRx    */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* - channel register offset of sawtooth register STRx                        */
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_CR_CH1_BITOFFSET           0UL   /* Position of channel bits into registers
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                 CR, MCR, CCR, SHHR, SHRR, STMODR of channel 1 */
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_CR_CH2_BITOFFSET           16UL  /* Position of channel bits into registers
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                 CR, MCR, CCR, SHHR, SHRR, STMODR of channel 2 */
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_CR_CHX_BITOFFSET_MASK      (DAC_CR_CH1_BITOFFSET | DAC_CR_CH2_BITOFFSET)
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTR_CH1                   (DAC_SWTRIGR_SWTRIG1) /* Channel bit into register SWTRIGR o
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTR_CH2                   (DAC_SWTRIGR_SWTRIG2) /* Channel bit into register SWTRIGR o
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTR_CHX_MASK              (DAC_SWTR_CH1 | DAC_SWTR_CH2)
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTRB_CH1                  (DAC_SWTRIGR_SWTRIGB1) /* Channel bit into register SWTRIGRB
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTRB_CH2                  (DAC_SWTRIGR_SWTRIGB2) /* Channel bit into register SWTRIGR 
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_SWTRB_CHX_MASK             (DAC_SWTRB_CH1 | DAC_SWTRB_CH2)
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12R1_REGOFFSET      0x00000000UL            /* Register DHR12Rx channel 1 taken 
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12L1_REGOFFSET      0x00100000UL            /* Register offset of DHR12Lx channe
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DHR12Rx channel 1 (shifted left o
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR8R1_REGOFFSET       0x02000000UL            /* Register offset of DHR8Rx  channe
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DHR12Rx channel 1 (shifted left o
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12R2_REGOFFSET      0x30000000UL            /* Register offset of DHR12Rx channe
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DHR12Rx channel 1 (shifted left o
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12L2_REGOFFSET      0x00400000UL            /* Register offset of DHR12Lx channe
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DHR12Rx channel 1 (shifted left o
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR8R2_REGOFFSET       0x05000000UL            /* Register offset of DHR8Rx  channe
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DHR12Rx channel 1 (shifted left o
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12RX_REGOFFSET_MASK 0xF0000000UL
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12LX_REGOFFSET_MASK 0x00F00000UL
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR8RX_REGOFFSET_MASK  0x0F000000UL
ARM GAS  /tmp/cc85dWdm.s 			page 331


  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHRX_REGOFFSET_MASK    (DAC_REG_DHR12RX_REGOFFSET_MASK\
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                         | DAC_REG_DHR12LX_REGOFFSET_MASK | DAC_REG_DHR8RX_REGOFFSET
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DOR1_REGOFFSET         0x00000000UL            /* Register DORx channel 1 taken as 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DOR2_REGOFFSET         0x00000020UL            /* Register offset of DORx channel 1
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   DORx channel 2 (shifted left of 5
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DORX_REGOFFSET_MASK    (DAC_REG_DOR1_REGOFFSET | DAC_REG_DOR2_REGOFFSET)
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_SHSR1_REGOFFSET        0x00000000UL            /* Register SHSRx channel 1 taken as
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_SHSR2_REGOFFSET        0x00000040UL            /* Register offset of SHSRx channel 
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   SHSRx channel 2 (shifted left of 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_SHSRX_REGOFFSET_MASK   (DAC_REG_SHSR1_REGOFFSET | DAC_REG_SHSR2_REGOFFSET)
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_STR1_REGOFFSET         0x00000000UL            /* Register STRx channel 1 taken as 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_STR2_REGOFFSET         0x00000080UL            /* Register offset of STRx channel 1
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                   STRx channel 2 (shifted left of 7
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_STRX_REGOFFSET_MASK   (DAC_REG_STR1_REGOFFSET | DAC_REG_STR2_REGOFFSET)
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR_REGOFFSET_MASK_POSBIT0         0x0000000FUL /* Mask of data hold registers offs
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    DHR12Lx, DHR8Rx, ...) when shift
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DORX_REGOFFSET_MASK_POSBIT0        0x00000001UL /* Mask of DORx registers offset wh
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    to position 0                   
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_SHSRX_REGOFFSET_MASK_POSBIT0       0x00000001UL /* Mask of SHSRx registers offset w
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    to position 0                   
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_STRX_REGOFFSET_MASK_POSBIT0        0x00000001UL /* Mask of STRx registers offset wh
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    to position 0                   
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12RX_REGOFFSET_BITOFFSET_POS           28UL  /* Position of bits register offset
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus DHR12Rx ch
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 28 bits)       
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR12LX_REGOFFSET_BITOFFSET_POS           20UL  /* Position of bits register offset
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus DHR12Rx ch
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 20 bits)       
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DHR8RX_REGOFFSET_BITOFFSET_POS            24UL  /* Position of bits register offset
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus DHR12Rx ch
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 24 bits)       
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_DORX_REGOFFSET_BITOFFSET_POS               5UL  /* Position of bits register offset
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus DORx chann
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 5 bits)        
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_SHSRX_REGOFFSET_BITOFFSET_POS              6UL  /* Position of bits register offset
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus SHSRx chan
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 6 bits)        
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_REG_STRX_REGOFFSET_BITOFFSET_POS               7UL  /* Position of bits register offset
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    channel 1 or 2 versus STRx chann
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                                    (shifted left of 7 bits)        
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* DAC registers bits positions */
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_DHR12RD_DACC2DHR_BITOFFSET_POS                DAC_DHR12RD_DACC2DHR_Pos
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_DHR12LD_DACC2DHR_BITOFFSET_POS                DAC_DHR12LD_DACC2DHR_Pos
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_DHR8RD_DACC2DHR_BITOFFSET_POS                 DAC_DHR8RD_DACC2DHR_Pos
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Miscellaneous data */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define DAC_DIGITAL_SCALE_12BITS                  4095UL   /* Full-scale digital value with a resol
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                               bits (voltage range determined by ana
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                               references Vref+ and Vref-, refer to 
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 332


 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Private macros ------------------------------------------------------------*/
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_Private_Macros DAC Private Macros
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         a register from a register basis from which an offset
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         is applied.
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __REG__ Register basis from which the offset is applied.
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Pointer to register address
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __DAC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ((uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Exported types ------------------------------------------------------------*/
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #if defined(USE_FULL_LL_DRIVER)
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_ES_INIT DAC Exported Init structure
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Structure definition of some features of DAC instance.
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** typedef struct
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t TriggerSource;               /*!< Set the conversion trigger source for the selected DAC
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              internal (SW start) or from external peripheral
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              (timer event, external interrupt line).
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This parameter can be a value of @ref DAC_LL_EC_TRIGGE
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetTriggerSource().
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @note If waveform automatic generation mode is set to 
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              this parameter is used as sawtooth RESET trigger */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t TriggerSource2;              /*!< Set the conversion secondary trigger source for the se
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              internal (SW start) or from external peripheral
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              (timer event, external interrupt line).
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This parameter can be a value of @ref DAC_LL_EC_TRIGGE
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetTriggerSource2().
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @note If waveform automatic generation mode is set to 
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              this parameter is used as sawtooth step trigger */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 333


 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t WaveAutoGeneration;          /*!< Set the waveform automatic generation mode for the sel
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This parameter can be a value of @ref DAC_LL_EC_WAVE_A
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetWaveAutoGeneration(). */
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t WaveAutoGenerationConfig;    /*!< Set the waveform automatic generation mode for the sel
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              If waveform automatic generation mode is set to noise,
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              can be a value of @ref DAC_LL_EC_WAVE_NOISE_LFSR_UNMAS
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              If waveform automatic generation mode is set to triang
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              this parameter can be a value of @ref DAC_LL_EC_WAVE_T
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              If waveform automatic generation mode is set to sawtoo
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              host the sawtooth configuration: polarity, reset data,
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              Use __LL_DAC_FORMAT_SAWTOOTHWAVECONFIG macro to set th
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @note If waveform automatic generation mode is disable
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                               this parameter is discarded.
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetWaveNoiseLFSR(),
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @ref LL_DAC_SetWaveTriangleAmplitude(),
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @ref LL_DAC_SetWaveSawtoothPolarity(),
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              @ref LL_DAC_SetWaveSawtoothResetData()
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              or @ref LL_DAC_SetWaveSawtoothStepData(),
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              depending on the wave automatic generation selected. *
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t OutputBuffer;                /*!< Set the output buffer for the selected DAC channel.
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This parameter can be a value of @ref DAC_LL_EC_OUTPUT
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetOutputBuffer(). */
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t OutputConnection;            /*!< Set the output connection for the selected DAC channel
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This parameter can be a value of @ref DAC_LL_EC_OUTPUT
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetOutputConnection(). */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   uint32_t OutputMode;                  /*!< Set the output mode normal or sample-and-hold for the 
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              channel. This parameter can be a value of @ref DAC_LL_
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              This feature can be modified afterwards using unitary
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              function @ref LL_DAC_SetOutputMode(). */
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** } LL_DAC_InitTypeDef;
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #endif /* USE_FULL_LL_DRIVER */
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Exported constants --------------------------------------------------------*/
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_Exported_Constants DAC Exported Constants
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_GET_FLAG DAC flags
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief    Flags defines which can be used with LL_DAC_ReadReg function
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
ARM GAS  /tmp/cc85dWdm.s 			page 334


 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* DAC channel 1 flags */
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DMAUDR1                (DAC_SR_DMAUDR1)   /*!< DAC channel 1 flag DMA underrun 
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_CAL1                   (DAC_SR_CAL_FLAG1) /*!< DAC channel 1 flag offset calibr
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_BWST1                  (DAC_SR_BWST1)     /*!< DAC channel 1 flag busy writing 
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DAC1RDY                (DAC_SR_DAC1RDY)   /*!< DAC channel 1 flag ready */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DORSTAT1               (DAC_SR_DORSTAT1)  /*!< DAC channel 1 flag output regist
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* DAC channel 2 flags */
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DMAUDR2                (DAC_SR_DMAUDR2)   /*!< DAC channel 2 flag DMA underrun 
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_CAL2                   (DAC_SR_CAL_FLAG2) /*!< DAC channel 2 flag offset calibr
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_BWST2                  (DAC_SR_BWST2)     /*!< DAC channel 2 flag busy writing 
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DAC2RDY                (DAC_SR_DAC2RDY)   /*!< DAC channel 2 flag ready */
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_FLAG_DORSTAT2               (DAC_SR_DORSTAT2)  /*!< DAC channel 2 flag output regist
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_IT DAC interruptions
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief    IT defines which can be used with LL_DAC_ReadReg and  LL_DAC_WriteReg functions
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_IT_DMAUDRIE1                (DAC_CR_DMAUDRIE1) /*!< DAC channel 1 interruption DMA u
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_IT_DMAUDRIE2                (DAC_CR_DMAUDRIE2) /*!< DAC channel 2 interruption DMA u
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_CHANNEL DAC channels
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_CHANNEL_1                   (DAC_REG_STR1_REGOFFSET | DAC_REG_SHSR1_REGOFFSET | DAC_
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_CHANNEL_2                   (DAC_REG_STR2_REGOFFSET | DAC_REG_SHSR2_REGOFFSET | DAC_
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_HIGH_FREQUENCY_MODE DAC high frequency interface mode
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief    High frequency interface mode defines that can be used
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           with LL_DAC_SetHighFrequencyMode and LL_DAC_GetHighFrequencyMode
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_HIGH_FREQ_MODE_DISABLE         0x00000000UL       /*!< High frequency interface mode
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_HIGH_FREQ_MODE_ABOVE_80MHZ     (DAC_MCR_HFSEL_0)  /*!< High frequency interface mode
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_HIGH_FREQ_MODE_ABOVE_160MHZ    (DAC_MCR_HFSEL_1)  /*!< High frequency interface mode
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_OPERATING_MODE DAC operating mode
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_MODE_NORMAL_OPERATION       0x00000000UL            /*!< DAC channel in mode normal 
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_MODE_CALIBRATION            (DAC_CR_CEN1)           /*!< DAC channel in mode calibra
ARM GAS  /tmp/cc85dWdm.s 			page 335


 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_TRIGGER_SOURCE DAC trigger source
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_SOFTWARE                  0x00000000UL                                         
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM1_TRGO             (                                                   D
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM8_TRGO             (                                                   D
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM7_TRGO             (                                  DAC_CR_TSEL1_1    
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM15_TRGO            (                                  DAC_CR_TSEL1_1 | D
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM2_TRGO             (                 DAC_CR_TSEL1_2                     
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM4_TRGO             (                 DAC_CR_TSEL1_2                  | D
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_EXTI_LINE9            (                 DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1    
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_EXTI_LINE10           (                 DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1    
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM6_TRGO             (                 DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1 | D
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_TIM3_TRGO             (DAC_CR_TSEL1_3                                      
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG1       (DAC_CR_TSEL1_3                                   | D
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG1        (DAC_CR_TSEL1_3                                   | D
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG2       (DAC_CR_TSEL1_3                  | DAC_CR_TSEL1_1    
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG2        (DAC_CR_TSEL1_3                  | DAC_CR_TSEL1_1    
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG3       (DAC_CR_TSEL1_3                  | DAC_CR_TSEL1_1 | D
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG3        (DAC_CR_TSEL1_3                  | DAC_CR_TSEL1_1 | D
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG4       (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2                     
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG4        (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2                     
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG5       (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2                  | D
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG5        (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2                  | D
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_STEP_TRG6       (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1    
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_RST_TRG6        (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1    
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_TRGO1           (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1 | D
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_TRGO2           (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1 | D
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIG_EXT_HRTIM_TRGO3           (DAC_CR_TSEL1_3 | DAC_CR_TSEL1_2 | DAC_CR_TSEL1_1 | D
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_WAVE_AUTO_GENERATION_MODE DAC waveform automatic generation mode
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_WAVE_AUTO_GENERATION_NONE     0x00000000UL                    /*!< DAC channel wave 
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_WAVE_AUTO_GENERATION_NOISE    (               DAC_CR_WAVE1_0) /*!< DAC channel wave 
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_WAVE_AUTO_GENERATION_TRIANGLE (DAC_CR_WAVE1_1               ) /*!< DAC channel wave 
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_WAVE_AUTO_GENERATION_SAWTOOTH (DAC_CR_WAVE1_1|DAC_CR_WAVE1_0) /*!< DAC channel wave 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_WAVE_NOISE_LFSR_UNMASK_BITS DAC wave generation - Noise LFSR unmask bits
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BIT0      0x00000000UL                                            
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS1_0   (                                                   DAC_
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS2_0   (                                  DAC_CR_MAMP1_1       
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS3_0   (                                  DAC_CR_MAMP1_1 | DAC_
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS4_0   (                 DAC_CR_MAMP1_2                        
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS5_0   (                 DAC_CR_MAMP1_2                  | DAC_
ARM GAS  /tmp/cc85dWdm.s 			page 336


 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS6_0   (                 DAC_CR_MAMP1_2 | DAC_CR_MAMP1_1       
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS7_0   (                 DAC_CR_MAMP1_2 | DAC_CR_MAMP1_1 | DAC_
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS8_0   (DAC_CR_MAMP1_3                                         
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS9_0   (DAC_CR_MAMP1_3                                   | DAC_
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS10_0  (DAC_CR_MAMP1_3                  | DAC_CR_MAMP1_1       
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_NOISE_LFSR_UNMASK_BITS11_0  (DAC_CR_MAMP1_3                  | DAC_CR_MAMP1_1 | DAC_
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_WAVE_TRIANGLE_AMPLITUDE DAC wave generation - Triangle amplitude
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_1        0x00000000UL                                            
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_3        (                                                   DAC_
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_7        (                                  DAC_CR_MAMP1_1       
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_15       (                                  DAC_CR_MAMP1_1 | DAC_
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_31       (                 DAC_CR_MAMP1_2                        
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_63       (                 DAC_CR_MAMP1_2                  | DAC_
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_127      (                 DAC_CR_MAMP1_2 | DAC_CR_MAMP1_1       
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_255      (                 DAC_CR_MAMP1_2 | DAC_CR_MAMP1_1 | DAC_
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_511      (DAC_CR_MAMP1_3                                         
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_1023     (DAC_CR_MAMP1_3                                   | DAC_
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_2047     (DAC_CR_MAMP1_3                  | DAC_CR_MAMP1_1       
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_TRIANGLE_AMPLITUDE_4095     (DAC_CR_MAMP1_3                  | DAC_CR_MAMP1_1 | DAC_
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_SAWTOOTH_POLARITY_MODE DAC wave generation - Sawtooth polarity mode
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_SAWTOOTH_POLARITY_DECREMENT          0x00000000UL            /*!< Sawtooth wave gene
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_SAWTOOTH_POLARITY_INCREMENT          (DAC_STR1_STDIR1)       /*!< Sawtooth wave gene
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_OUTPUT_MODE DAC channel output mode
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_MODE_NORMAL          0x00000000UL            /*!< The selected DAC channel ou
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_MODE_SAMPLE_AND_HOLD (DAC_MCR_MODE1_2)       /*!< The selected DAC channel ou
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_OUTPUT_BUFFER DAC channel output buffer
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_BUFFER_ENABLE        0x00000000UL            /*!< The selected DAC channel ou
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_BUFFER_DISABLE       (DAC_MCR_MODE1_1)       /*!< The selected DAC channel ou
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_OUTPUT_CONNECTION DAC channel output connection
ARM GAS  /tmp/cc85dWdm.s 			page 337


 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_CONNECT_GPIO         0x00000000UL            /*!< The selected DAC channel ou
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_OUTPUT_CONNECT_INTERNAL     (DAC_MCR_MODE1_0)       /*!< The selected DAC channel ou
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_SIGNED_FORMAT DAC channel signed format
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_SIGNED_FORMAT_DISABLE       0x00000000UL            /*!< The selected DAC channel da
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_SIGNED_FORMAT_ENABLE        (DAC_MCR_SINFORMAT1)    /*!< The selected DAC channel da
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_RESOLUTION  DAC channel output resolution
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_RESOLUTION_12B              0x00000000UL            /*!< DAC channel resolution 12 b
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_RESOLUTION_8B               0x00000002UL            /*!< DAC channel resolution 8 bi
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_REGISTERS  DAC registers compliant with specific purpose
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* List of DAC registers intended to be used (most commonly) with             */
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* DMA transfer.                                                              */
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Refer to function @ref LL_DAC_DMA_GetRegAddr().                            */
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_DMA_REG_DATA_12BITS_RIGHT_ALIGNED  DAC_REG_DHR12RX_REGOFFSET_BITOFFSET_POS /*!< DAC 
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_DMA_REG_DATA_12BITS_LEFT_ALIGNED   DAC_REG_DHR12LX_REGOFFSET_BITOFFSET_POS /*!< DAC 
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_DMA_REG_DATA_8BITS_RIGHT_ALIGNED   DAC_REG_DHR8RX_REGOFFSET_BITOFFSET_POS  /*!< DAC 
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EC_HW_DELAYS  Definitions of DAC hardware constraints delays
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Only DAC peripheral HW delays are defined in DAC LL driver driver,
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         not timeout values.
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         For details on delays values, refer to descriptions in source code
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         above each literal definition.
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Delay for DAC channel voltage settling time from DAC channel startup       */
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* (transition from disable to enable).                                       */
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Note: DAC channel startup time depends on board application environment:   */
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*       impedance connected to DAC channel output.                           */
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*       The delay below is specified under conditions:                       */
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - voltage maximum transition (lowest to highest value)              */
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - until voltage reaches final value +-1LSB                          */
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - DAC channel output buffer enabled                                 */
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - load impedance of 5kOhm (min), 50pF (max)                         */
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Literal set to maximum value (refer to device datasheet,                   */
ARM GAS  /tmp/cc85dWdm.s 			page 338


 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* parameter "tWAKEUP").                                                      */
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Unit: us                                                                   */
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_DELAY_STARTUP_VOLTAGE_SETTLING_US             8UL  /*!< Delay for DAC channel voltag
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Delay for DAC channel voltage settling time.                               */
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Note: DAC channel startup time depends on board application environment:   */
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*       impedance connected to DAC channel output.                           */
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*       The delay below is specified under conditions:                       */
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - voltage maximum transition (lowest to highest value)              */
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - until voltage reaches final value +-1LSB                          */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - DAC channel output buffer enabled                                 */
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /*        - load impedance of 5kOhm min, 50pF max                             */
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* parameter "tSETTLING").                                                    */
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Unit: us                                                                   */
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_DELAY_VOLTAGE_SETTLING_US                     3UL /*!< Delay for DAC channel voltage
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Exported macro ------------------------------------------------------------*/
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_Exported_Macros DAC Exported Macros
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EM_WRITE_READ Common write and read registers macros
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Write a value in DAC register
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __INSTANCE__ DAC Instance
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __REG__ Register to be written
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __VALUE__ Value to be written in the register
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Read a value in DAC register
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __INSTANCE__ DAC Instance
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __REG__ Register to be read
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Register value
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define LL_DAC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EM_HELPER_MACRO DAC helper macro
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
ARM GAS  /tmp/cc85dWdm.s 			page 339


 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Helper macro to get DAC channel number in decimal format
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         from literals LL_DAC_CHANNEL_x.
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Example:
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *            __LL_DAC_CHANNEL_TO_DECIMAL_NB(LL_DAC_CHANNEL_1)
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *            will return decimal number "1".
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   The input can be a value from functions where a channel
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         number is returned.
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval 1...2
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __LL_DAC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                            \
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ((__CHANNEL__) & DAC_SWTR_CHX_MASK)
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Helper macro to get DAC channel in literal format LL_DAC_CHANNEL_x
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         from number in decimal format.
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Example:
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           __LL_DAC_DECIMAL_NB_TO_CHANNEL(1)
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           will return a data equivalent to "LL_DAC_CHANNEL_1".
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note  If the input parameter does not correspond to a DAC channel,
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *        this macro returns value '0'.
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __DECIMAL_NB__ 1...2
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __LL_DAC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)\
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   (((__DECIMAL_NB__) == 1UL)? (LL_DAC_CHANNEL_1  ):(((__DECIMAL_NB__) == 2UL) ? ( LL_DAC_CHANNEL_2)
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Helper macro to define the DAC conversion data full-scale digital
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         value corresponding to the selected DAC resolution.
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   DAC conversion data full-scale corresponds to voltage range
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         determined by analog voltage references Vref+ and Vref-
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (refer to reference manual).
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __DAC_RESOLUTION__ This parameter can be one of the following values:
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_RESOLUTION_12B
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_RESOLUTION_8B
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __LL_DAC_DIGITAL_SCALE(__DAC_RESOLUTION__)                             \
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   ((0x00000FFFUL) >> ((__DAC_RESOLUTION__) << 1UL))
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Helper macro to calculate the DAC conversion data (unit: digital
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         value) corresponding to a voltage (unit: mVolt).
ARM GAS  /tmp/cc85dWdm.s 			page 340


 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This helper macro is intended to provide input data in voltage
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         rather than digital value,
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         to be used with LL DAC functions such as
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @ref LL_DAC_ConvertData12RightAligned().
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Analog reference voltage (Vref+) must be either known from
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         user board environment or can be calculated using ADC measurement
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         and ADC helper macro __LL_ADC_CALC_VREFANALOG_VOLTAGE().
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __DAC_VOLTAGE__ Voltage to be generated by DAC channel
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                         (unit: mVolt).
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __DAC_RESOLUTION__ This parameter can be one of the following values:
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_RESOLUTION_12B
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_RESOLUTION_8B
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval DAC conversion data (unit: digital value)
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __LL_DAC_CALC_VOLTAGE_TO_DATA(__VREFANALOG_VOLTAGE__,\
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                       __DAC_VOLTAGE__,\
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                       __DAC_RESOLUTION__)                      \
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** ((__DAC_VOLTAGE__) * __LL_DAC_DIGITAL_SCALE(__DAC_RESOLUTION__)              \
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****  / (__VREFANALOG_VOLTAGE__)                                                  \
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** )
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Helper macro to format sawtooth wave generation configuration
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         value to be filled into WaveAutoGenerationConfig  parameter of @ref LL_DAC_InitTypeDef.
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This helper will format information to fit in DAC_STRx register.
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __POLARITY__ sawtooth wave polarity (must be value of @ref DAC_LL_EC_SAWTOOTH_POLARITY_
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __RESET_DATA__ sawtooth reset data.
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  __STEP_DATA__ sawtooth step data
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Sawtooth configuration organized in DAC_STRx compatible format.
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** #define __LL_DAC_FORMAT_SAWTOOTHWAVECONFIG(__POLARITY__,\
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                            __RESET_DATA__,\
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                            __STEP_DATA__)                        \
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** ( (((__STEP_DATA__) << DAC_STR1_STINCDATA1_Pos) & DAC_STR1_STINCDATA1_Msk)     \
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   | ((__POLARITY__) & DAC_STR1_STDIR1_Msk)                                    \
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   | (((__RESET_DATA__) << DAC_STR1_STRSTDATA1_Pos) & DAC_STR1_STRSTDATA1_Msk) \
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** )
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /* Exported functions --------------------------------------------------------*/
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_Exported_Functions DAC Exported Functions
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EF_Channel_Configuration Configuration of DAC instance
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the high frequency interface mode for the selected DAC instance
ARM GAS  /tmp/cc85dWdm.s 			page 341


 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      HFSEL          LL_DAC_SetHighFrequencyMode
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  HighFreqMode This parameter can be one of the following values:
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_DISABLE
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_ABOVE_80MHZ
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_ABOVE_160MHZ
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetHighFrequencyMode(DAC_TypeDef *DACx, uint32_t HighFreqMode)
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR, DAC_MCR_HFSEL, HighFreqMode);
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the high frequency interface mode for the selected DAC instance
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      HFSEL          LL_DAC_GetHighFrequencyMode
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_DISABLE
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_ABOVE_80MHZ
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_HIGH_FREQ_MODE_ABOVE_160MHZ
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetHighFrequencyMode(DAC_TypeDef *DACx)
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->MCR, DAC_MCR_HFSEL));
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EF_Configuration Configuration of DAC channels
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the operating mode for the selected DAC channel:
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         calibration or normal operating mode.
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       CEN1           LL_DAC_SetMode\n
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       CEN2           LL_DAC_SetMode
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  ChannelMode This parameter can be one of the following values:
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_MODE_NORMAL_OPERATION
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_MODE_CALIBRATION
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetMode(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t ChannelMode)
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CR,
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CR_CEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              ChannelMode << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 342


 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the operating mode for the selected DAC channel:
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         calibration or normal operating mode.
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       CEN1           LL_DAC_GetMode\n
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       CEN2           LL_DAC_GetMode
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_MODE_NORMAL_OPERATION
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_MODE_CALIBRATION
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetMode(DAC_TypeDef *DACx, uint32_t DAC_Channel)
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CR, DAC_CR_CEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the offset trimming value for the selected DAC channel.
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Trimming has an impact when output buffer is enabled
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         and is intended to replace factory calibration default values.
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CCR      OTRIM1         LL_DAC_SetTrimmingValue\n
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CCR      OTRIM2         LL_DAC_SetTrimmingValue
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  TrimmingValue Value between Min_Data=0x00 and Max_Data=0x1F
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetTrimmingValue(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Trim
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CCR,
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CCR_OTRIM1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              TrimmingValue << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the offset trimming value for the selected DAC channel.
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Trimming has an impact when output buffer is enabled
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         and is intended to replace factory calibration default values.
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CCR      OTRIM1         LL_DAC_GetTrimmingValue\n
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CCR      OTRIM2         LL_DAC_GetTrimmingValue
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
ARM GAS  /tmp/cc85dWdm.s 			page 343


 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval TrimmingValue Value between Min_Data=0x00 and Max_Data=0x1F
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetTrimmingValue(DAC_TypeDef *DACx, uint32_t DAC_Channel)
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CCR, DAC_CCR_OTRIM1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the conversion trigger source for the selected DAC channel.
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For conversion trigger source to be effective, DAC trigger
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         must be enabled using function @ref LL_DAC_EnableTrigger().
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   To set conversion trigger source, DAC channel must be disabled.
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Otherwise, the setting is discarded.
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Availability of parameters of trigger sources from timer
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         depends on timers availability on the selected device.
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       TSEL1          LL_DAC_SetTriggerSource\n
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       TSEL2          LL_DAC_SetTriggerSource
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  TriggerSource This parameter can be one of the following values:
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE9
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG1           (5)
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG2           (5)
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG3           (5)
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG4           (5)
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG5           (5)
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG6           (5)
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO1          (3) (5)
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO2          (4) (5)
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO3          (1) (5)
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter only available on DAC1&4.
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (4) On this STM32 series, parameter only available on DAC2.
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (5) On this STM32 series, parameter not available on all devices.
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
ARM GAS  /tmp/cc85dWdm.s 			page 344


 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetTriggerSource(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Trig
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CR,
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CR_TSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              TriggerSource << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the conversion trigger source for the selected DAC channel.
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For conversion trigger source to be effective, DAC trigger
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         must be enabled using function @ref LL_DAC_EnableTrigger().
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Availability of parameters of trigger sources from timer
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         depends on timers availability on the selected device.
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       TSEL1          LL_DAC_GetTriggerSource\n
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       TSEL2          LL_DAC_GetTriggerSource
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE9
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG1           (5)
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG2           (5)
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG3           (5)
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG4           (5)
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG5           (5)
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG6           (5)
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO1          (3) (5)
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO2          (4) (5)
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO3          (1) (5)
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter only available on DAC1&4.
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (4) On this STM32 series, parameter only available on DAC2.
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (5) On this STM32 series, parameter not available on all devices.
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetTriggerSource(DAC_TypeDef *DACx, uint32_t DAC_Channel)
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CR, DAC_CR_TSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
ARM GAS  /tmp/cc85dWdm.s 			page 345


 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the waveform automatic generation mode
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         for the selected DAC channel.
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       WAVE1          LL_DAC_SetWaveAutoGeneration\n
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       WAVE2          LL_DAC_SetWaveAutoGeneration
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  WaveAutoGeneration This parameter can be one of the following values:
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_NONE
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_NOISE
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_TRIANGLE
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_SAWTOOTH
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveAutoGeneration(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CR,
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CR_WAVE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              WaveAutoGeneration << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the waveform automatic generation mode
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         for the selected DAC channel.
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       WAVE1          LL_DAC_GetWaveAutoGeneration\n
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       WAVE2          LL_DAC_GetWaveAutoGeneration
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_NONE
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_NOISE
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_TRIANGLE
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_WAVE_AUTO_GENERATION_SAWTOOTH
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveAutoGeneration(DAC_TypeDef *DACx, uint32_t DAC_Channel)
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CR, DAC_CR_WAVE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the noise waveform generation for the selected DAC channel:
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Noise mode and parameters LFSR (linear feedback shift register).
ARM GAS  /tmp/cc85dWdm.s 			page 346


 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MAMP1          LL_DAC_SetWaveNoiseLFSR\n
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MAMP2          LL_DAC_SetWaveNoiseLFSR
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  NoiseLFSRMask This parameter can be one of the following values:
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BIT0
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS1_0
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS2_0
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS3_0
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS4_0
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS5_0
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS6_0
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS7_0
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS8_0
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS9_0
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS10_0
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS11_0
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveNoiseLFSR(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Nois
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CR,
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CR_MAMP1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              NoiseLFSRMask << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the noise waveform generation for the selected DAC channel:
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Noise mode and parameters LFSR (linear feedback shift register).
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MAMP1          LL_DAC_GetWaveNoiseLFSR\n
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MAMP2          LL_DAC_GetWaveNoiseLFSR
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BIT0
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS1_0
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS2_0
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS3_0
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS4_0
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS5_0
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS6_0
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS7_0
ARM GAS  /tmp/cc85dWdm.s 			page 347


 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS8_0
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS9_0
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS10_0
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_NOISE_LFSR_UNMASK_BITS11_0
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveNoiseLFSR(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CR, DAC_CR_MAMP1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the triangle waveform generation for the selected DAC channel:
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         triangle mode and amplitude.
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MAMP1          LL_DAC_SetWaveTriangleAmplitude\n
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MAMP2          LL_DAC_SetWaveTriangleAmplitude
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  TriangleAmplitude This parameter can be one of the following values:
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_1
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_3
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_7
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_15
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_31
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_63
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_127
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_255
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_511
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_1023
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_2047
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_4095
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveTriangleAmplitude(DAC_TypeDef *DACx, uint32_t DAC_Channel,
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                      uint32_t TriangleAmplitude)
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->CR,
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_CR_MAMP1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              TriangleAmplitude << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the triangle waveform generation for the selected DAC channel:
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         triangle mode and amplitude.
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MAMP1          LL_DAC_GetWaveTriangleAmplitude\n
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MAMP2          LL_DAC_GetWaveTriangleAmplitude
ARM GAS  /tmp/cc85dWdm.s 			page 348


1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_1
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_3
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_7
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_15
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_31
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_63
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_127
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_255
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_511
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_1023
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_2047
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIANGLE_AMPLITUDE_4095
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveTriangleAmplitude(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->CR, DAC_CR_MAMP1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the swatooth waveform generation polarity.
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STDIR1         LL_DAC_SetWaveSawtoothPolarity\n
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STDIR2         LL_DAC_SetWaveSawtoothPolarity
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  Polarity This parameter can be one of the following values:
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SAWTOOTH_POLARITY_DECREMENT
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SAWTOOTH_POLARITY_INCREMENT
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveSawtoothPolarity(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t *preg = __DAC_PTR_REG_OFFSET(DACx->STR1, (DAC_Channel >> DAC_REG_STRX_REGOFFSET_BIT
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(*preg,
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_STR1_STDIR1,
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              Polarity);
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 349


1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sawtooth waveform generation polarity.
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STDIR1         LL_DAC_GetWaveSawtoothPolarity\n
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STDIR2         LL_DAC_GetWaveSawtoothPolarity
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SAWTOOTH_POLARITY_DECREMENT
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SAWTOOTH_POLARITY_INCREMENT
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveSawtoothPolarity(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t const *preg = __DAC_PTR_REG_OFFSET(DACx->STR1, (DAC_Channel >> DAC_REG_STRX_REGOFFS
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t) READ_BIT(*preg, DAC_STR1_STDIR1);
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the swatooth waveform generation reset data.
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STRSTDATA1     LL_DAC_SetWaveSawtoothResetData\n
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STRSTDATA2     LL_DAC_SetWaveSawtoothResetData
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  ResetData This parameter is the sawtooth reset value.
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Range is from 0 to DAC full range 4095 (0xFFF)
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveSawtoothResetData(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint3
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t *preg = __DAC_PTR_REG_OFFSET(DACx->STR1, (DAC_Channel >> DAC_REG_STRX_REGOFFSET_BIT
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(*preg,
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_STR1_STRSTDATA1,
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              ResetData << DAC_STR1_STRSTDATA1_Pos);
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sawtooth waveform generation reset data.
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STRSTDATA1     LL_DAC_GetWaveSawtoothResetData\n
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STRSTDATA2     LL_DAC_GetWaveSawtoothResetData
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
ARM GAS  /tmp/cc85dWdm.s 			page 350


1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value is the sawtooth reset value.
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Range is from 0 to DAC full range 4095 (0xFFF)
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveSawtoothResetData(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t const *preg = __DAC_PTR_REG_OFFSET(DACx->STR1, (DAC_Channel >> DAC_REG_STRX_REGOFFS
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(*preg, DAC_STR1_STRSTDATA1) >> DAC_STR1_STRSTDATA1_Pos);
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the swatooth waveform generation step data.
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STINCDATA1     LL_DAC_SetWaveSawtoothStepData\n
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STINCDATA2     LL_DAC_SetWaveSawtoothStepData
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  StepData This parameter is the sawtooth step value.
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         12.4 bit format, unsigned: 12 bits exponent / 4 bits mantissa
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Step value step is 1/16 = 0.0625
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Step value range is 0.0000 to 4095.9375 (0xFFF.F)
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveSawtoothStepData(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t *preg = __DAC_PTR_REG_OFFSET(DACx->STR1, (DAC_Channel >> DAC_REG_STRX_REGOFFSET_BIT
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(*preg,
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_STR1_STINCDATA1,
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              StepData << DAC_STR1_STINCDATA1_Pos);
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sawtooth waveform generation step data.
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STR1     STINCDATA1     LL_DAC_GetWaveSawtoothStepData\n
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STR2     STINCDATA2     LL_DAC_GetWaveSawtoothStepData
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
ARM GAS  /tmp/cc85dWdm.s 			page 351


1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value is the sawtooth step value.
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         12.4 bit format, unsigned: 12 bits exponent / 4 bits mantissa
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Step value step is 1/16 = 0.0625
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Step value range is 0.0000 to 4095.9375 (0xFFF.F)
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveSawtoothStepData(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t const *preg = __DAC_PTR_REG_OFFSET(DACx->STR1, (DAC_Channel >> DAC_REG_STRX_REGOFFS
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(*preg, DAC_STR1_STINCDATA1) >> DAC_STR1_STINCDATA1_Pos);
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the swatooth waveform generation reset trigger source.
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STMODR   STRSTTRIGSEL1  LL_DAC_SetWaveSawtoothResetTriggerSource\n
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STMODR   STRSTTRIGSEL2  LL_DAC_SetWaveSawtoothResetTriggerSource
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  TriggerSource This parameter can be one of the following values:
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE9
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG1           (5)
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG2           (5)
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG3           (5)
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG4           (5)
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG5           (5)
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG6           (5)
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO1          (3) (5)
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO2          (4) (5)
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO3          (1) (5)
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter only available on DAC1&4.
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (4) On this STM32 series, parameter only available on DAC2.
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (5) On this STM32 series, parameter not available on all devices.
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
ARM GAS  /tmp/cc85dWdm.s 			page 352


1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveSawtoothResetTriggerSource(DAC_TypeDef *DACx, uint32_t DAC_Chann
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                               uint32_t TriggerSource)
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->STMODR,
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_STMODR_STRSTTRIGSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              ((TriggerSource >> DAC_CR_TSEL1_Pos) << DAC_STMODR_STRSTTRIGSEL1_Pos) << (DAC_Channel 
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sawtooth waveform generation reset trigger source.
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STMODR   STRSTTRIGSEL1  LL_DAC_GetWaveSawtoothResetTriggerSource\n
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STMODR   STRSTTRIGSEL2  LL_DAC_GetWaveSawtoothResetTriggerSource
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE9
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG1           (5)
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG2           (5)
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG3           (5)
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG4           (5)
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG5           (5)
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_RST_TRG6           (5)
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO1          (3) (5)
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO2          (4) (5)
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_TRGO3          (1) (5)
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter only available on DAC1&4.
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (4) On this STM32 series, parameter only available on DAC2.
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (5) On this STM32 series, parameter not available on all devices.
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveSawtoothResetTriggerSource(DAC_TypeDef *DACx, uint32_t DAC_C
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)((READ_BIT(DACx->STMODR,
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                               DAC_STMODR_STRSTTRIGSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                              )
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                      >> (DAC_STMODR_STRSTTRIGSEL1_Pos + (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     ) << DAC_CR_TSEL1_Pos);
ARM GAS  /tmp/cc85dWdm.s 			page 353


1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the swatooth waveform generation step trigger source.
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   For wave generation to be effective, DAC channel
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         wave generation mode must be enabled using
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function @ref LL_DAC_SetWaveAutoGeneration().
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This setting can be set when the selected DAC channel is disabled
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (otherwise, the setting operation is ignored).
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STMODR   STINCTRIGSEL1  LL_DAC_SetWaveSawtoothStepTriggerSource\n
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STMODR   STINCTRIGSEL2  LL_DAC_SetWaveSawtoothStepTriggerSource
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  TriggerSource This parameter can be one of the following values:
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE10
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG1      (3)
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG2      (3)
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG3      (3)
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG4      (3)
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG5      (3)
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG6      (3)
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter not available on all devices.
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetWaveSawtoothStepTriggerSource(DAC_TypeDef *DACx, uint32_t DAC_Channe
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                              uint32_t TriggerSource)
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->STMODR,
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_STMODR_STINCTRIGSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              ((TriggerSource >> DAC_CR_TSEL1_Pos) << DAC_STMODR_STINCTRIGSEL1_Pos) << (DAC_Channel 
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sawtooth waveform generation step trigger source.
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll STMODR   STINCTRIGSEL1  LL_DAC_GetWaveSawtoothStepTriggerSource\n
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         STMODR   STINCTRIGSEL2  LL_DAC_GetWaveSawtoothStepTriggerSource
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
ARM GAS  /tmp/cc85dWdm.s 			page 354


1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_SOFTWARE
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM1_TRGO            (1)
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM8_TRGO            (2)
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM7_TRGO
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM15_TRGO
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM2_TRGO
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM4_TRGO
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_EXTI_LINE10
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM6_TRGO
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_TIM3_TRGO
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG1      (3)
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG2      (3)
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG3      (3)
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG4      (3)
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG5      (3)
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_TRIG_EXT_HRTIM_STEP_TRG6      (3)
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter only available on DAC3.
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (2) On this STM32 series, parameter only available on DAC1/2/4.
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Refer to device datasheet for DACx instances availability.
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (3) On this STM32 series, parameter not available on all devices.
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *          Only available if HRTIM feature is supported (refer to device datasheet for supported 
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetWaveSawtoothStepTriggerSource(DAC_TypeDef *DACx, uint32_t DAC_Ch
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)((READ_BIT(DACx->STMODR,
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                               DAC_STMODR_STINCTRIGSEL1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                              )
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                      >> (DAC_STMODR_STINCTRIGSEL1_Pos + (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     ) << DAC_CR_TSEL1_Pos);
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the output for the selected DAC channel.
1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This function set several features:
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - mode normal or sample-and-hold
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - buffer
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - connection to GPIO or internal path.
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         These features can also be set individually using
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         dedicated functions:
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - @ref LL_DAC_SetOutputBuffer()
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - @ref LL_DAC_SetOutputMode()
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - @ref LL_DAC_SetOutputConnection()
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   On this STM32 series, output connection depends on output mode
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (normal or sample and hold) and output buffer state.
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to internal path and output buffer
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is enabled (whatever output mode):
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to GPIO pin
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to GPIO pin, output buffer
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is disabled, output mode set to sample and hold:
ARM GAS  /tmp/cc85dWdm.s 			page 355


1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to internal path
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Mode sample-and-hold requires an external capacitor
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         to be connected between DAC channel output and ground.
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Capacitor value depends on load on DAC channel output and
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample-and-hold timings configured.
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         As indication, capacitor typical value is 100nF
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (refer to device datasheet, parameter "CSH").
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_ConfigOutput\n
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_ConfigOutput
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputMode This parameter can be one of the following values:
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_NORMAL
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_SAMPLE_AND_HOLD
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputBuffer This parameter can be one of the following values:
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_ENABLE
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_DISABLE
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputConnection This parameter can be one of the following values:
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_GPIO
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_INTERNAL
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_ConfigOutput(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t OutputMo
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                          uint32_t OutputBuffer, uint32_t OutputConnection)
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR,
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (DAC_MCR_MODE1_2 | DAC_MCR_MODE1_1 | DAC_MCR_MODE1_0) << (DAC_Channel & DAC_CR_CHX_BIT
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (OutputMode | OutputBuffer | OutputConnection) << (DAC_Channel & DAC_CR_CHX_BITOFFSET_
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the output mode normal or sample-and-hold
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         for the selected DAC channel.
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Mode sample-and-hold requires an external capacitor
1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         to be connected between DAC channel output and ground.
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Capacitor value depends on load on DAC channel output and
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample-and-hold timings configured.
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         As indication, capacitor typical value is 100nF
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (refer to device datasheet, parameter "CSH").
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_SetOutputMode\n
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_SetOutputMode
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputMode This parameter can be one of the following values:
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_NORMAL
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_SAMPLE_AND_HOLD
ARM GAS  /tmp/cc85dWdm.s 			page 356


1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetOutputMode(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t OutputM
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR,
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (uint32_t)DAC_MCR_MODE1_2 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              OutputMode << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the output mode normal or sample-and-hold for the selected DAC channel.
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_GetOutputMode\n
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_GetOutputMode
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_NORMAL
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_MODE_SAMPLE_AND_HOLD
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetOutputMode(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->MCR, (uint32_t)DAC_MCR_MODE1_2 << (DAC_Channel & DAC_CR_CHX_BITO
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the output buffer for the selected DAC channel.
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   On this STM32 series, when buffer is enabled, its offset can be
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         trimmed: factory calibration default values can be
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         replaced by user trimming values, using function
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @ref LL_DAC_SetTrimmingValue().
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_SetOutputBuffer\n
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_SetOutputBuffer
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputBuffer This parameter can be one of the following values:
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_ENABLE
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_DISABLE
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetOutputBuffer(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Outpu
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR,
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (uint32_t)DAC_MCR_MODE1_1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              OutputBuffer << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 357


1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the output buffer state for the selected DAC channel.
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_GetOutputBuffer\n
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_GetOutputBuffer
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_ENABLE
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_BUFFER_DISABLE
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetOutputBuffer(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->MCR, (uint32_t)DAC_MCR_MODE1_1 << (DAC_Channel & DAC_CR_CHX_BITO
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the output connection for the selected DAC channel.
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   On this STM32 series, output connection depends on output mode (normal or
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample and hold) and output buffer state.
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to internal path and output buffer
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is enabled (whatever output mode):
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to GPIO pin
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to GPIO pin, output buffer
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is disabled, output mode set to sample and hold:
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to internal path
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_SetOutputConnection\n
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_SetOutputConnection
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  OutputConnection This parameter can be one of the following values:
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_GPIO
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_INTERNAL
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetOutputConnection(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t O
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR,
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              (uint32_t)DAC_MCR_MODE1_0 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              OutputConnection << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 358


1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the output connection for the selected DAC channel.
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   On this STM32 series, output connection depends on output mode (normal or
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample and hold) and output buffer state.
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to internal path and output buffer
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is enabled (whatever output mode):
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to GPIO pin
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - if output connection is set to GPIO pin, output buffer
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           is disabled, output mode set to sample and hold:
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           output connection is also connected to internal path
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           (both connections to GPIO pin and internal path).
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       MODE1          LL_DAC_GetOutputConnection\n
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       MODE2          LL_DAC_GetOutputConnection
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_GPIO
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_OUTPUT_CONNECT_INTERNAL
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetOutputConnection(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->MCR, (uint32_t)DAC_MCR_MODE1_0 << (DAC_Channel & DAC_CR_CHX_BITO
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the sample-and-hold timing for the selected DAC channel:
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample time
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   Sample time must be set when DAC channel is disabled
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         or during DAC operation when DAC channel flag BWSTx is reset,
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         otherwise the setting is ignored.
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Check BWSTx flag state using function "LL_DAC_IsActiveFlag_BWSTx()".
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHSR1    TSAMPLE1       LL_DAC_SetSampleAndHoldSampleTime\n
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHSR2    TSAMPLE2       LL_DAC_SetSampleAndHoldSampleTime
1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  SampleTime Value between Min_Data=0x000 and Max_Data=0x3FF
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetSampleAndHoldSampleTime(DAC_TypeDef *DACx, uint32_t DAC_Channel, uin
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t *preg = __DAC_PTR_REG_OFFSET(DACx->SHSR1, (DAC_Channel >> DAC_REG_SHSRX_REGOFFSET_B
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                              & DAC_REG_SHSRX_REGOFFSET_MASK_POSBIT0);
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(*preg, DAC_SHSR1_TSAMPLE1, SampleTime);
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 359


1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sample-and-hold timing for the selected DAC channel:
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         sample time
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHSR1    TSAMPLE1       LL_DAC_GetSampleAndHoldSampleTime\n
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHSR2    TSAMPLE2       LL_DAC_GetSampleAndHoldSampleTime
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetSampleAndHoldSampleTime(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   __IO uint32_t const *preg = __DAC_PTR_REG_OFFSET(DACx->SHSR1, (DAC_Channel >> DAC_REG_SHSRX_REGOF
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                    & DAC_REG_SHSRX_REGOFFSET_MASK_POSBIT0);
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t) READ_BIT(*preg, DAC_SHSR1_TSAMPLE1);
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the sample-and-hold timing for the selected DAC channel:
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         hold time
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHHR     THOLD1         LL_DAC_SetSampleAndHoldHoldTime\n
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHHR     THOLD2         LL_DAC_SetSampleAndHoldHoldTime
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  HoldTime Value between Min_Data=0x000 and Max_Data=0x3FF
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetSampleAndHoldHoldTime(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint3
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->SHHR,
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_SHHR_THOLD1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              HoldTime << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sample-and-hold timing for the selected DAC channel:
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         hold time
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHHR     THOLD1         LL_DAC_GetSampleAndHoldHoldTime\n
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHHR     THOLD2         LL_DAC_GetSampleAndHoldHoldTime
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
ARM GAS  /tmp/cc85dWdm.s 			page 360


1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetSampleAndHoldHoldTime(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->SHHR, DAC_SHHR_THOLD1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MAS
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the sample-and-hold timing for the selected DAC channel:
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         refresh time
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHRR     TREFRESH1      LL_DAC_SetSampleAndHoldRefreshTime\n
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHRR     TREFRESH2      LL_DAC_SetSampleAndHoldRefreshTime
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  RefreshTime Value between Min_Data=0x00 and Max_Data=0xFF
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetSampleAndHoldRefreshTime(DAC_TypeDef *DACx, uint32_t DAC_Channel, ui
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->SHRR,
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_SHRR_TREFRESH1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              RefreshTime << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the sample-and-hold timing for the selected DAC channel:
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         refresh time
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SHRR     TREFRESH1      LL_DAC_GetSampleAndHoldRefreshTime\n
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SHRR     TREFRESH2      LL_DAC_GetSampleAndHoldRefreshTime
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetSampleAndHoldRefreshTime(DAC_TypeDef *DACx, uint32_t DAC_Channel
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->SHRR, DAC_SHRR_TREFRESH1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Set the signed format for the selected DAC channel.
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   On this STM32 series, signed format can be used to inject
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Q1.15, Q1.11, Q1.7 signed format data to DAC.
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Ex when using 12bits data format (Q1.11 is used):
ARM GAS  /tmp/cc85dWdm.s 			page 361


1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             0x800 will output 0v level
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             0xFFF will output mid-scale level
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             0x000 will output mid-scale level
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             0x7FF will output full-scale level
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      SINFORMAT1     LL_DAC_SetSignedFormat\n
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         MCR      SINFORMAT2     LL_DAC_SetSignedFormat
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  SignedFormat This parameter can be one of the following values:
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SIGNED_FORMAT_ENABLE
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SIGNED_FORMAT_DISABLE
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_SetSignedFormat(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Signe
 3110              		.loc 10 1815 22 view .LVU1014
 3111              	.LBB763:
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   MODIFY_REG(DACx->MCR,
 3112              		.loc 10 1817 3 view .LVU1015
 3113 001c 174C     		ldr	r4, .L77+4
 3114 001e E26B     		ldr	r2, [r4, #60]
 3115 0020 22F40072 		bic	r2, r2, #512
 3116 0024 E263     		str	r2, [r4, #60]
 3117              	.LVL210:
 3118              		.loc 10 1817 3 is_stmt 0 view .LVU1016
 3119              	.LBE763:
 3120              	.LBE762:
 659:Src/main.c    ****   DAC_InitStruct.TriggerSource2 = LL_DAC_TRIG_SOFTWARE;
 3121              		.loc 1 659 3 is_stmt 1 view .LVU1017
 659:Src/main.c    ****   DAC_InitStruct.TriggerSource2 = LL_DAC_TRIG_SOFTWARE;
 3122              		.loc 1 659 32 is_stmt 0 view .LVU1018
 3123 0026 0193     		str	r3, [sp, #4]
 660:Src/main.c    ****   DAC_InitStruct.WaveAutoGeneration = LL_DAC_WAVE_AUTO_GENERATION_NONE;
 3124              		.loc 1 660 3 is_stmt 1 view .LVU1019
 660:Src/main.c    ****   DAC_InitStruct.WaveAutoGeneration = LL_DAC_WAVE_AUTO_GENERATION_NONE;
 3125              		.loc 1 660 33 is_stmt 0 view .LVU1020
 3126 0028 0293     		str	r3, [sp, #8]
 661:Src/main.c    ****   DAC_InitStruct.OutputBuffer = LL_DAC_OUTPUT_BUFFER_DISABLE;
 3127              		.loc 1 661 3 is_stmt 1 view .LVU1021
 661:Src/main.c    ****   DAC_InitStruct.OutputBuffer = LL_DAC_OUTPUT_BUFFER_DISABLE;
 3128              		.loc 1 661 37 is_stmt 0 view .LVU1022
 3129 002a 0393     		str	r3, [sp, #12]
 662:Src/main.c    ****   DAC_InitStruct.OutputConnection = LL_DAC_OUTPUT_CONNECT_INTERNAL;
 3130              		.loc 1 662 3 is_stmt 1 view .LVU1023
 662:Src/main.c    ****   DAC_InitStruct.OutputConnection = LL_DAC_OUTPUT_CONNECT_INTERNAL;
 3131              		.loc 1 662 31 is_stmt 0 view .LVU1024
 3132 002c 0222     		movs	r2, #2
 3133 002e 0592     		str	r2, [sp, #20]
 663:Src/main.c    ****   DAC_InitStruct.OutputMode = LL_DAC_OUTPUT_MODE_NORMAL;
 3134              		.loc 1 663 3 is_stmt 1 view .LVU1025
 663:Src/main.c    ****   DAC_InitStruct.OutputMode = LL_DAC_OUTPUT_MODE_NORMAL;
 3135              		.loc 1 663 35 is_stmt 0 view .LVU1026
ARM GAS  /tmp/cc85dWdm.s 			page 362


 3136 0030 0122     		movs	r2, #1
 3137 0032 0692     		str	r2, [sp, #24]
 664:Src/main.c    ****   LL_DAC_Init(DAC3, LL_DAC_CHANNEL_1, &DAC_InitStruct);
 3138              		.loc 1 664 3 is_stmt 1 view .LVU1027
 664:Src/main.c    ****   LL_DAC_Init(DAC3, LL_DAC_CHANNEL_1, &DAC_InitStruct);
 3139              		.loc 1 664 29 is_stmt 0 view .LVU1028
 3140 0034 0793     		str	r3, [sp, #28]
 665:Src/main.c    ****   LL_DAC_DisableTrigger(DAC3, LL_DAC_CHANNEL_1);
 3141              		.loc 1 665 3 is_stmt 1 view .LVU1029
 3142 0036 01AA     		add	r2, sp, #4
 3143 0038 1149     		ldr	r1, .L77+8
 3144 003a 2046     		mov	r0, r4
 3145 003c FFF7FEFF 		bl	LL_DAC_Init
 3146              	.LVL211:
 666:Src/main.c    ****   LL_DAC_DisableDMADoubleDataMode(DAC3, LL_DAC_CHANNEL_1);
 3147              		.loc 1 666 3 view .LVU1030
 3148              	.LBB764:
 3149              	.LBI764:
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_MCR_SINFORMAT1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              SignedFormat << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get the signed format state for the selected DAC channel.
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      SINFORMAT1     LL_DAC_GetSignedFormat\n
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         MCR      SINFORMAT2     LL_DAC_GetSignedFormat
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval Returned value can be one of the following values:
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SIGNED_FORMAT_ENABLE
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_SIGNED_FORMAT_DISABLE
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_GetSignedFormat(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return (uint32_t)(READ_BIT(DACx->MCR, DAC_MCR_SINFORMAT1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_M
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     >> (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK)
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                    );
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EF_DMA_Management DMA Management
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Enable DAC DMA transfer request of the selected channel.
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   To configure DMA source address (peripheral address),
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         use function @ref LL_DAC_DMA_GetRegAddr().
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       DMAEN1         LL_DAC_EnableDMAReq\n
ARM GAS  /tmp/cc85dWdm.s 			page 363


1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       DMAEN2         LL_DAC_EnableDMAReq
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_EnableDMAReq(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   SET_BIT(DACx->CR,
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****           DAC_CR_DMAEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Disable DAC DMA transfer request of the selected channel.
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   To configure DMA source address (peripheral address),
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         use function @ref LL_DAC_DMA_GetRegAddr().
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       DMAEN1         LL_DAC_DisableDMAReq\n
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       DMAEN2         LL_DAC_DisableDMAReq
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_DisableDMAReq(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   CLEAR_BIT(DACx->CR,
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_CR_DMAEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get DAC DMA transfer request state of the selected channel.
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (0: DAC DMA transfer request is disabled, 1: DAC DMA transfer request is enabled)
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       DMAEN1         LL_DAC_IsDMAReqEnabled\n
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       DMAEN2         LL_DAC_IsDMAReqEnabled
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval State of bit (1 or 0).
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_IsDMAReqEnabled(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((READ_BIT(DACx->CR,
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     DAC_CR_DMAEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****            == (DAC_CR_DMAEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))) ? 1UL : 0UL);
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 364


1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Enable DAC DMA Double data mode of the selected channel.
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      DMADOUBLE1     LL_DAC_EnableDMADoubleDataMode\n
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         MCR      DMADOUBLE2     LL_DAC_EnableDMADoubleDataMode
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_EnableDMADoubleDataMode(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   SET_BIT(DACx->MCR,
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****           DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Disable DAC DMA Double data mode of the selected channel.
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      DMADOUBLE1     LL_DAC_DisableDMADoubleDataMode\n
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         MCR      DMADOUBLE2     LL_DAC_DisableDMADoubleDataMode
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_DisableDMADoubleDataMode(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   CLEAR_BIT(DACx->MCR,
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get DAC DMA double data mode state of the selected channel.
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (0: DAC DMA double data mode is disabled, 1: DAC DMA double data mode is enabled)
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll MCR      DMADOUBLE1     LL_DAC_IsDMADoubleDataModeEnabled\n
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         MCR      DMADOUBLE2     LL_DAC_IsDMADoubleDataModeEnabled
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval State of bit (1 or 0).
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_IsDMADoubleDataModeEnabled(DAC_TypeDef *DACx, uint32_t DAC_Channel)
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((READ_BIT(DACx->MCR,
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
ARM GAS  /tmp/cc85dWdm.s 			page 365


1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****            == (DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))) ? 1UL : 0UL);
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Function to help to configure DMA transfer to DAC: retrieve the
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DAC register address from DAC instance and a list of DAC registers
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         intended to be used (most commonly) with DMA transfer.
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   These DAC registers are data holding registers:
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         when DAC conversion is requested, DAC generates a DMA transfer
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         request to have data available in DAC data holding registers.
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         function "LL_DMA_ConfigAddresses()".
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Example:
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                                  LL_DMA_CHANNEL_1,
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                                  (uint32_t)&< array or variable >,
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                                  LL_DAC_DMA_GetRegAddr(DAC1, LL_DAC_CHANNEL_1,
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                                  LL_DAC_DMA_REG_DATA_12BITS_RIGHT_ALIGNED),
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *                                  LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll DHR12R1  DACC1DHR       LL_DAC_DMA_GetRegAddr\n
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR12L1  DACC1DHR       LL_DAC_DMA_GetRegAddr\n
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR8R1   DACC1DHR       LL_DAC_DMA_GetRegAddr\n
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR12R2  DACC2DHR       LL_DAC_DMA_GetRegAddr\n
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR12L2  DACC2DHR       LL_DAC_DMA_GetRegAddr\n
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         DHR8R2   DACC2DHR       LL_DAC_DMA_GetRegAddr
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  Register This parameter can be one of the following values:
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_DMA_REG_DATA_12BITS_RIGHT_ALIGNED
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_DMA_REG_DATA_12BITS_LEFT_ALIGNED
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_DMA_REG_DATA_8BITS_RIGHT_ALIGNED
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval DAC register address
2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_DMA_GetRegAddr(DAC_TypeDef *DACx, uint32_t DAC_Channel, uint32_t Re
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   /* Retrieve address of register DHR12Rx, DHR12Lx or DHR8Rx depending on     */
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   /* DAC channel selected.                                                    */
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((uint32_t)(__DAC_PTR_REG_OFFSET((DACx)->DHR12R1, ((DAC_Channel >> (Register & 0x1FUL))
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                                                             & DAC_REG_DHR_REGOFFSET_MASK_POSBIT0)))
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @}
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /** @defgroup DAC_LL_EF_Operation Operation on DAC channels
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @{
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Enable DAC selected channel.
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       EN1            LL_DAC_Enable\n
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       EN2            LL_DAC_Enable
ARM GAS  /tmp/cc85dWdm.s 			page 366


2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   After enable from off state, DAC channel requires a delay
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         for output voltage to reach accuracy +/- 1 LSB.
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         Refer to device datasheet, parameter "tWAKEUP".
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_Enable(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   SET_BIT(DACx->CR,
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****           DAC_CR_EN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Disable DAC selected channel.
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       EN1            LL_DAC_Disable\n
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       EN2            LL_DAC_Disable
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_Disable(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   CLEAR_BIT(DACx->CR,
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_CR_EN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get DAC enable state of the selected channel.
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (0: DAC channel is disabled, 1: DAC channel is enabled)
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       EN1            LL_DAC_IsEnabled\n
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       EN2            LL_DAC_IsEnabled
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval State of bit (1 or 0).
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_IsEnabled(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((READ_BIT(DACx->CR,
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     DAC_CR_EN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****            == (DAC_CR_EN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))) ? 1UL : 0UL);
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 367


2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Get DAC ready for conversion state of the selected channel.
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (0: DAC channel is not ready, 1: DAC channel is ready)
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll SR       DAC1RDY        LL_DAC_IsReady\n
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         SR       DAC2RDY        LL_DAC_IsReady
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval State of bit (1 or 0).
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE uint32_t LL_DAC_IsReady(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   return ((READ_BIT(DACx->SR,
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****                     DAC_SR_DAC1RDY << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****            == (DAC_SR_DAC1RDY << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK))) ? 1UL : 0UL);
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Enable DAC trigger of the selected channel.
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @note   - If DAC trigger is disabled, DAC conversion is performed
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           automatically once the data holding register is updated,
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           using functions "LL_DAC_ConvertData{8; 12}{Right; Left} Aligned()":
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           @ref LL_DAC_ConvertData12RightAligned(), ...
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         - If DAC trigger is enabled, DAC conversion is performed
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           only when a hardware of software trigger event is occurring.
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           Select trigger source using
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *           function @ref LL_DAC_SetTriggerSource().
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       TEN1           LL_DAC_EnableTrigger\n
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       TEN2           LL_DAC_EnableTrigger
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_EnableTrigger(DAC_TypeDef *DACx, uint32_t DAC_Channel)
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   SET_BIT(DACx->CR,
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****           DAC_CR_TEN1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** }
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** 
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** /**
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @brief  Disable DAC trigger of the selected channel.
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @rmtoll CR       TEN1           LL_DAC_DisableTrigger\n
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         CR       TEN2           LL_DAC_DisableTrigger
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DACx DAC instance
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @param  DAC_Channel This parameter can be one of the following values:
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_1
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         @arg @ref LL_DAC_CHANNEL_2 (1)
ARM GAS  /tmp/cc85dWdm.s 			page 368


2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *         (1) On this STM32 series, parameter not available on all instances.
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   *             Refer to device datasheet for channels availability.
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   * @retval None
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   */
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** __STATIC_INLINE void LL_DAC_DisableTrigger(DAC_TypeDef *DACx, uint32_t DAC_Channel)
 3150              		.loc 10 2147 22 view .LVU1031
 3151              	.LBB765:
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****   CLEAR_BIT(DACx->CR,
 3152              		.loc 10 2149 3 view .LVU1032
 3153 0040 2368     		ldr	r3, [r4]
 3154 0042 23F00203 		bic	r3, r3, #2
 3155 0046 2360     		str	r3, [r4]
 3156              	.LVL212:
 3157              		.loc 10 2149 3 is_stmt 0 view .LVU1033
 3158              	.LBE765:
 3159              	.LBE764:
 667:Src/main.c    **** 
 3160              		.loc 1 667 3 is_stmt 1 view .LVU1034
 3161              	.LBB766:
 3162              	.LBI766:
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 3163              		.loc 10 1947 22 view .LVU1035
 3164              	.LBB767:
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 3165              		.loc 10 1949 3 view .LVU1036
 3166 0048 E36B     		ldr	r3, [r4, #60]
 3167 004a 23F48073 		bic	r3, r3, #256
 3168 004e E363     		str	r3, [r4, #60]
 3169              	.LVL213:
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 3170              		.loc 10 1949 3 is_stmt 0 view .LVU1037
 3171              	.LBE767:
 3172              	.LBE766:
 671:Src/main.c    ****   LL_DAC_Init(DAC3, LL_DAC_CHANNEL_2, &DAC_InitStruct);
 3173              		.loc 1 671 3 is_stmt 1 view .LVU1038
 3174              	.LBB768:
 3175              	.LBI768:
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 3176              		.loc 10 1815 22 view .LVU1039
 3177              	.LBB769:
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_MCR_SINFORMAT1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 3178              		.loc 10 1817 3 view .LVU1040
 3179 0050 E36B     		ldr	r3, [r4, #60]
 3180 0052 23F00073 		bic	r3, r3, #33554432
 3181 0056 E363     		str	r3, [r4, #60]
 3182              	.LVL214:
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****              DAC_MCR_SINFORMAT1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK),
 3183              		.loc 10 1817 3 is_stmt 0 view .LVU1041
 3184              	.LBE769:
 3185              	.LBE768:
 672:Src/main.c    ****   LL_DAC_DisableTrigger(DAC3, LL_DAC_CHANNEL_2);
 3186              		.loc 1 672 3 is_stmt 1 view .LVU1042
 3187 0058 01AA     		add	r2, sp, #4
 3188 005a 0A49     		ldr	r1, .L77+12
 3189 005c 2046     		mov	r0, r4
ARM GAS  /tmp/cc85dWdm.s 			page 369


 3190 005e FFF7FEFF 		bl	LL_DAC_Init
 3191              	.LVL215:
 673:Src/main.c    ****   LL_DAC_DisableDMADoubleDataMode(DAC3, LL_DAC_CHANNEL_2);
 3192              		.loc 1 673 3 view .LVU1043
 3193              	.LBB770:
 3194              	.LBI770:
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 3195              		.loc 10 2147 22 view .LVU1044
 3196              	.LBB771:
 3197              		.loc 10 2149 3 view .LVU1045
 3198 0062 2368     		ldr	r3, [r4]
 3199 0064 23F40033 		bic	r3, r3, #131072
 3200 0068 2360     		str	r3, [r4]
 3201              	.LVL216:
 3202              		.loc 10 2149 3 is_stmt 0 view .LVU1046
 3203              	.LBE771:
 3204              	.LBE770:
 674:Src/main.c    ****   /* USER CODE BEGIN DAC3_Init 2 */
 3205              		.loc 1 674 3 is_stmt 1 view .LVU1047
 3206              	.LBB772:
 3207              	.LBI772:
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h **** {
 3208              		.loc 10 1947 22 view .LVU1048
 3209              	.LBB773:
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 3210              		.loc 10 1949 3 view .LVU1049
 3211 006a E36B     		ldr	r3, [r4, #60]
 3212 006c 23F08073 		bic	r3, r3, #16777216
 3213 0070 E363     		str	r3, [r4, #60]
 3214              	.LVL217:
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dac.h ****             DAC_MCR_DMADOUBLE1 << (DAC_Channel & DAC_CR_CHX_BITOFFSET_MASK));
 3215              		.loc 10 1949 3 is_stmt 0 view .LVU1050
 3216              	.LBE773:
 3217              	.LBE772:
 679:Src/main.c    **** 
 3218              		.loc 1 679 1 view .LVU1051
 3219 0072 08B0     		add	sp, sp, #32
 3220              		.cfi_def_cfa_offset 8
 3221              		@ sp needed
 3222 0074 10BD     		pop	{r4, pc}
 3223              	.L78:
 3224 0076 00BF     		.align	2
 3225              	.L77:
 3226 0078 00100240 		.word	1073876992
 3227 007c 00100050 		.word	1342181376
 3228 0080 01001102 		.word	34668545
 3229 0084 F2004235 		.word	893518066
 3230              		.cfi_endproc
 3231              	.LFE1631:
 3233              		.section	.text.MX_OPAMP1_Init,"ax",%progbits
 3234              		.align	1
 3235              		.syntax unified
 3236              		.thumb
 3237              		.thumb_func
 3238              		.fpu fpv4-sp-d16
 3240              	MX_OPAMP1_Init:
 3241              	.LFB1632:
ARM GAS  /tmp/cc85dWdm.s 			page 370


 687:Src/main.c    **** 
 3242              		.loc 1 687 1 is_stmt 1 view -0
 3243              		.cfi_startproc
 3244              		@ args = 0, pretend = 0, frame = 48
 3245              		@ frame_needed = 0, uses_anonymous_args = 0
 3246 0000 30B5     		push	{r4, r5, lr}
 3247              		.cfi_def_cfa_offset 12
 3248              		.cfi_offset 4, -12
 3249              		.cfi_offset 5, -8
 3250              		.cfi_offset 14, -4
 3251 0002 8DB0     		sub	sp, sp, #52
 3252              		.cfi_def_cfa_offset 64
 693:Src/main.c    **** 
 3253              		.loc 1 693 3 view .LVU1053
 693:Src/main.c    **** 
 3254              		.loc 1 693 24 is_stmt 0 view .LVU1054
 3255 0004 0024     		movs	r4, #0
 3256 0006 0894     		str	r4, [sp, #32]
 3257 0008 0994     		str	r4, [sp, #36]
 3258 000a 0A94     		str	r4, [sp, #40]
 3259 000c 0B94     		str	r4, [sp, #44]
 695:Src/main.c    **** 
 3260              		.loc 1 695 3 is_stmt 1 view .LVU1055
 695:Src/main.c    **** 
 3261              		.loc 1 695 23 is_stmt 0 view .LVU1056
 3262 000e 0494     		str	r4, [sp, #16]
 3263 0010 0594     		str	r4, [sp, #20]
 3264 0012 0694     		str	r4, [sp, #24]
 3265 0014 0794     		str	r4, [sp, #28]
 697:Src/main.c    ****   /**OPAMP1 GPIO Configuration
 3266              		.loc 1 697 3 is_stmt 1 view .LVU1057
 3267              	.LVL218:
 3268              	.LBB774:
 3269              	.LBI774:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 3270              		.loc 3 451 22 view .LVU1058
 3271              	.LBB775:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 3272              		.loc 3 453 3 view .LVU1059
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 3273              		.loc 3 454 3 view .LVU1060
 3274 0016 224B     		ldr	r3, .L81
 3275 0018 DA6C     		ldr	r2, [r3, #76]
 3276 001a 42F00102 		orr	r2, r2, #1
 3277 001e DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3278              		.loc 3 456 3 view .LVU1061
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3279              		.loc 3 456 12 is_stmt 0 view .LVU1062
 3280 0020 DB6C     		ldr	r3, [r3, #76]
 3281 0022 03F00103 		and	r3, r3, #1
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3282              		.loc 3 456 10 view .LVU1063
 3283 0026 0193     		str	r3, [sp, #4]
 3284              		.loc 3 457 3 is_stmt 1 view .LVU1064
 3285 0028 019B     		ldr	r3, [sp, #4]
 3286              	.LVL219:
ARM GAS  /tmp/cc85dWdm.s 			page 371


 3287              		.loc 3 457 3 is_stmt 0 view .LVU1065
 3288              	.LBE775:
 3289              	.LBE774:
 703:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3290              		.loc 1 703 3 is_stmt 1 view .LVU1066
 703:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3291              		.loc 1 703 23 is_stmt 0 view .LVU1067
 3292 002a 0223     		movs	r3, #2
 3293 002c 0293     		str	r3, [sp, #8]
 704:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3294              		.loc 1 704 3 is_stmt 1 view .LVU1068
 704:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3295              		.loc 1 704 24 is_stmt 0 view .LVU1069
 3296 002e 0325     		movs	r5, #3
 3297 0030 0395     		str	r5, [sp, #12]
 705:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_U_GPIO_Port, &GPIO_InitStruct);
 3298              		.loc 1 705 3 is_stmt 1 view .LVU1070
 705:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_U_GPIO_Port, &GPIO_InitStruct);
 3299              		.loc 1 705 24 is_stmt 0 view .LVU1071
 3300 0032 0694     		str	r4, [sp, #24]
 706:Src/main.c    **** 
 3301              		.loc 1 706 3 is_stmt 1 view .LVU1072
 3302 0034 02A9     		add	r1, sp, #8
 3303 0036 4FF09040 		mov	r0, #1207959552
 3304 003a FFF7FEFF 		bl	LL_GPIO_Init
 3305              	.LVL220:
 708:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3306              		.loc 1 708 3 view .LVU1073
 708:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3307              		.loc 1 708 23 is_stmt 0 view .LVU1074
 3308 003e 0423     		movs	r3, #4
 3309 0040 0293     		str	r3, [sp, #8]
 709:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3310              		.loc 1 709 3 is_stmt 1 view .LVU1075
 709:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3311              		.loc 1 709 24 is_stmt 0 view .LVU1076
 3312 0042 0395     		str	r5, [sp, #12]
 710:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP1_OUT_GPIO_Port, &GPIO_InitStruct);
 3313              		.loc 1 710 3 is_stmt 1 view .LVU1077
 710:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP1_OUT_GPIO_Port, &GPIO_InitStruct);
 3314              		.loc 1 710 24 is_stmt 0 view .LVU1078
 3315 0044 0694     		str	r4, [sp, #24]
 711:Src/main.c    **** 
 3316              		.loc 1 711 3 is_stmt 1 view .LVU1079
 3317 0046 02A9     		add	r1, sp, #8
 3318 0048 4FF09040 		mov	r0, #1207959552
 3319 004c FFF7FEFF 		bl	LL_GPIO_Init
 3320              	.LVL221:
 713:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3321              		.loc 1 713 3 view .LVU1080
 713:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3322              		.loc 1 713 23 is_stmt 0 view .LVU1081
 3323 0050 0823     		movs	r3, #8
 3324 0052 0293     		str	r3, [sp, #8]
 714:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3325              		.loc 1 714 3 is_stmt 1 view .LVU1082
 714:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
ARM GAS  /tmp/cc85dWdm.s 			page 372


 3326              		.loc 1 714 24 is_stmt 0 view .LVU1083
 3327 0054 0395     		str	r5, [sp, #12]
 715:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP1_INT_GAIN_GPIO_Port, &GPIO_InitStruct);
 3328              		.loc 1 715 3 is_stmt 1 view .LVU1084
 715:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP1_INT_GAIN_GPIO_Port, &GPIO_InitStruct);
 3329              		.loc 1 715 24 is_stmt 0 view .LVU1085
 3330 0056 0694     		str	r4, [sp, #24]
 716:Src/main.c    **** 
 3331              		.loc 1 716 3 is_stmt 1 view .LVU1086
 3332 0058 0DEB0301 		add	r1, sp, r3
 3333 005c 4FF09040 		mov	r0, #1207959552
 3334 0060 FFF7FEFF 		bl	LL_GPIO_Init
 3335              	.LVL222:
 721:Src/main.c    ****   OPAMP_InitStruct.FunctionalMode = LL_OPAMP_MODE_PGA_IO0_BIAS;
 3336              		.loc 1 721 3 view .LVU1087
 721:Src/main.c    ****   OPAMP_InitStruct.FunctionalMode = LL_OPAMP_MODE_PGA_IO0_BIAS;
 3337              		.loc 1 721 30 is_stmt 0 view .LVU1088
 3338 0064 0894     		str	r4, [sp, #32]
 722:Src/main.c    ****   OPAMP_InitStruct.InputNonInverting = LL_OPAMP_INPUT_NONINVERT_IO0;
 3339              		.loc 1 722 3 is_stmt 1 view .LVU1089
 722:Src/main.c    ****   OPAMP_InitStruct.InputNonInverting = LL_OPAMP_INPUT_NONINVERT_IO0;
 3340              		.loc 1 722 35 is_stmt 0 view .LVU1090
 3341 0066 0F4B     		ldr	r3, .L81+4
 3342 0068 0993     		str	r3, [sp, #36]
 723:Src/main.c    ****   LL_OPAMP_Init(OPAMP1, &OPAMP_InitStruct);
 3343              		.loc 1 723 3 is_stmt 1 view .LVU1091
 723:Src/main.c    ****   LL_OPAMP_Init(OPAMP1, &OPAMP_InitStruct);
 3344              		.loc 1 723 38 is_stmt 0 view .LVU1092
 3345 006a 0A94     		str	r4, [sp, #40]
 724:Src/main.c    ****   LL_OPAMP_SetInputsMuxMode(OPAMP1, LL_OPAMP_INPUT_MUX_DISABLE);
 3346              		.loc 1 724 3 is_stmt 1 view .LVU1093
 3347 006c 0E4C     		ldr	r4, .L81+8
 3348 006e 08A9     		add	r1, sp, #32
 3349 0070 2046     		mov	r0, r4
 3350 0072 FFF7FEFF 		bl	LL_OPAMP_Init
 3351              	.LVL223:
 725:Src/main.c    ****   LL_OPAMP_SetInternalOutput(OPAMP1, LL_OPAMP_INTERNAL_OUPUT_DISABLED);
 3352              		.loc 1 725 3 view .LVU1094
 3353              	.LBB776:
 3354              	.LBI776:
 3355              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @file    stm32g4xx_ll_opamp.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief   Header file of OPAMP LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ******************************************************************************
ARM GAS  /tmp/cc85dWdm.s 			page 373


  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #ifndef STM32G4xx_LL_OPAMP_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define STM32G4xx_LL_OPAMP_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #if defined (OPAMP1) || defined (OPAMP2) || defined (OPAMP3) || defined (OPAMP4) || defined (OPAMP5
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL OPAMP
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Private_Constants OPAMP Private Constants
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Internal mask for OPAMP trimming of transistors differential pair NMOS     */
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* or PMOS.                                                                   */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* To select into literal LL_OPAMP_TRIMMING_x the relevant bits for:          */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* - OPAMP trimming selection of transistors differential pair                */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* - OPAMP trimming values of transistors differential pair                   */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define OPAMP_TRIMMING_SELECT_MASK          (OPAMP_CSR_CALSEL)
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define OPAMP_TRIMMING_VALUE_MASK           (OPAMP_CSR_TRIMOFFSETN | OPAMP_CSR_TRIMOFFSETP)
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Private_Macros OPAMP Private Macros
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         a register from a register basis from which an offset
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         is applied.
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG__ Register basis from which the offset is applied.
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG_OFFSET__ Offset to be applied (unit: number of registers).
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Register address
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 374


  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define __OPAMP_PTR_REG_OFFSET(__REG__, __REG_OFFSET__)                        \
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFSET__) << 2))))
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported types ------------------------------------------------------------*/
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #if defined(USE_FULL_LL_DRIVER)
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_ES_INIT OPAMP Exported Init structure
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Structure definition of some features of OPAMP instance.
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** typedef struct
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t PowerMode;                   /*!< Set OPAMP power mode.
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_POWE
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t FunctionalMode;              /*!< Set OPAMP functional mode by setting internal connecti
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_FUNC
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              @note If OPAMP is configured in mode PGA, the gain can
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t InputNonInverting;           /*!< Set OPAMP input non-inverting connection.
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_INPU
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t InputInverting;              /*!< Set OPAMP inverting input connection.
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This parameter can be a value of @ref OPAMP_LL_EC_INPU
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              @note OPAMP inverting input is used with OPAMP in mode
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                              This feature can be modified afterwards using unitary 
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** } LL_OPAMP_InitTypeDef;
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #endif /* USE_FULL_LL_DRIVER */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported constants --------------------------------------------------------*/
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Exported_Constants OPAMP Exported Constants
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 375


 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_MODE OPAMP mode calibration or functional.
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_FUNCTIONAL        (0x00000000UL)                              /*!< OPAMP func
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_CALIBRATION       (OPAMP_CSR_CALON)                           /*!< OPAMP cali
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_FUNCTIONAL_MODE OPAMP functional mode
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_STANDALONE        (0x00000000UL)                                             
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_FOLLOWER          (OPAMP_CSR_VMSEL_1 | OPAMP_CSR_VMSEL_0)                    
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA               (OPAMP_CSR_VMSEL_1)                                        
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA_IO0           (OPAMP_CSR_PGGAIN_4|OPAMP_CSR_VMSEL_1)                     
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA_IO0_BIAS      (OPAMP_CSR_PGGAIN_3|OPAMP_CSR_VMSEL_1)                     
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_MODE_PGA_IO0_IO1_BIAS  (OPAMP_CSR_PGGAIN_4|OPAMP_CSR_PGGAIN_3|OPAMP_CSR_VMSEL_1)  
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                                                    
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_MODE_PGA_GAIN OPAMP PGA gain (relevant when OPAMP is in functional mode P
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note Gain sign:
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         - is positive if the @ref OPAMP_LL_EC_FUNCTIONAL_MODE configuration is
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *           @ref LL_OPAMP_MODE_PGA or LL_OPAMP_MODE_PGA_IO0
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         - may be positive or negative if the @ref OPAMP_LL_EC_FUNCTIONAL_MODE configuration is
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *           @ref LL_OPAMP_MODE_PGA_IO0_BIAS or LL_OPAMP_MODE_PGA_IO0_IO1_BIAS
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       see @ref OPAMP_LL_EC_FUNCTIONAL_MODE for more details
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_2_OR_MINUS_1             (0x00000000UL)                                  
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_4_OR_MINUS_3             (                                          OPAMP
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_8_OR_MINUS_7             (                     OPAMP_CSR_PGGAIN_1        
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_16_OR_MINUS_15           (                     OPAMP_CSR_PGGAIN_1 | OPAMP
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_32_OR_MINUS_31           (OPAMP_CSR_PGGAIN_2                             
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_PGA_GAIN_64_OR_MINUS_63           (OPAMP_CSR_PGGAIN_2 |                      OPAMP
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_NONINVERTING OPAMP input non-inverting
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO0         (0x00000000UL)        /*!< OPAMP non inverting input c
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA1  for OPAMP1, PA7  for 
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO1         OPAMP_CSR_VPSEL_0     /*!< OPAMP non inverting input c
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA3  for OPAMP1, PB14 for 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO2         OPAMP_CSR_VPSEL_1     /*!< OPAMP non inverting input c
ARM GAS  /tmp/cc85dWdm.s 			page 376


 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA7  for OPAMP1, PB0  for 
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO3         OPAMP_CSR_VPSEL       /*!< OPAMP non inverting input c
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PD14 for OPAMP2) */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_DAC         OPAMP_CSR_VPSEL       /*!< OPAMP non inverting input c
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (DAC3_CH1 for OPAMP1, DAC3_
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_INVERTING OPAMP input inverting
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note OPAMP inverting input is used with OPAMP in mode standalone or PGA with negative gain or 
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       Otherwise (OPAMP in mode follower), OPAMP inverting input is not used (not connected to G
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO0         (0x00000000UL)           /*!< OPAMP inverting input conne
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PA3  for OPAMP1, PA5  for 
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO1         OPAMP_CSR_VMSEL_0        /*!< OPAMP inverting input conne
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         (PC5  for OPAMP1, PC5  for 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_CONNECT_NO  OPAMP_CSR_VMSEL_1        /*!< OPAMP inverting input not e
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                         Note: On this STM32 series,
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_NONINVERTING_SECONDARY OPAMP input non-inverting secondary
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO0_SEC         (0x00000000UL)       /*!< OPAMP secondary non inve
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA1  for OPAMP1, PA7  f
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO1_SEC         OPAMP_TCMR_VPSSEL_0  /*!< OPAMP secondary non inve
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA3  for OPAMP1, PB14 f
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO2_SEC         OPAMP_TCMR_VPSSEL_1  /*!< OPAMP secondary non inve
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA7  for OPAMP1, PB0  f
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_IO3_SEC         OPAMP_TCMR_VPSSEL    /*!< OPAMP secondary non inve
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PD14 for OPAMP2) */
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_NONINVERT_DAC_SEC         OPAMP_TCMR_VPSSEL    /*!< OPAMP secondary non inve
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (DAC3_CH1 for OPAMP1, DA
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_INVERTING_SECONDARY OPAMP input inverting secondary
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note OPAMP inverting input is used with OPAMP in mode standalone or PGA with negative gain or 
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       Otherwise (OPAMP in mode follower), OPAMP inverting input is not used (not connected to G
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO0_SEC         (0x00000000UL)          /*!< OPAMP secondary mode is 
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            has been configured by c
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
ARM GAS  /tmp/cc85dWdm.s 			page 377


 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PA3  for OPAMP1, PA5  f
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_IO1_SEC         OPAMP_TCMR_VMSSEL       /*!< OPAMP secondary mode is 
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            has been configured by c
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (PC5  for OPAMP1, PC5  f
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_PGA_SEC         (0x00000000UL)          /*!< OPAMP secondary mode is 
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            or @ref LL_OPAMP_SetFunc
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - Not connected if con
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - Connected to VINM0 a
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            (see @ref OPAMP_LL_EC_FU
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_INVERT_FOLLOWER_SEC    OPAMP_TCMR_VMSSEL       /*!< OPAMP secondary mode is 
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            or @ref LL_OPAMP_SetFunc
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            OPAMP secondary invertin
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INTERNAL_OUPUT_MODE OPAMP internal output mode
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INTERNAL_OUPUT_DISABLED       (0x00000000UL)         /*!< OPAMP internal output to
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INTERNAL_OUPUT_ENABLED        OPAMP_CSR_OPAMPINTEN   /*!< OPAMP internal output to
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP1 internal outp
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP2 internal outp
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP3 internal outp
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP4 internal outp
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP5 internal outp
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                              - OPAMP6 internal outp
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                            Note: On this STM32 seri
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_INPUT_MUX_MODE OPAMP inputs multiplexer mode
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note The switch can be controlled either by a single timer or a combination of them,
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       in this case application has to 'ORed' the values below
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *       ex LL_OPAMP_INPUT_MUX_TIM1_CH6 | LL_OPAMP_INPUT_MUX_TIM20_CH6
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_DISABLE       (0x00000000UL)         /*!< OPAMP inputs timer controlled 
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_TIM1_CH6      OPAMP_TCMR_T1CMEN      /*!< OPAMP inputs timer controlled 
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_TIM8_CH6      OPAMP_TCMR_T8CMEN      /*!< OPAMP inputs timer controlled 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_INPUT_MUX_TIM20_CH6     OPAMP_TCMR_T20CMEN     /*!< OPAMP inputs timer controlled 
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****                                                                      Note: On this STM32 series, TI
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_POWER_MODE OPAMP PowerMode
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_POWERMODE_NORMALSPEED   (0x00000000UL)         /*!< OPAMP output in normal mode */
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_POWERMODE_HIGHSPEED     OPAMP_CSR_HIGHSPEEDEN  /*!< OPAMP output in highspeed mode
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 378


 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_POWERMODE_NORMAL        LL_OPAMP_POWERMODE_NORMALSPEED /*!< OPAMP power mode norma
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_TRIMMING_MODE OPAMP trimming mode
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_FACTORY       (0x00000000UL)           /*!< OPAMP trimming factors set to
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_USER          OPAMP_CSR_USERTRIM      /*!< OPAMP trimming factors set to 
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_TRIMMING_TRANSISTORS_DIFF_PAIR OPAMP trimming of transistors differential
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_NMOS_VREF_90PC_VDDA  (OPAMP_CSR_TRIMOFFSETN | OPAMP_CSR_CALSEL_1 | OPAMP_
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_NMOS_VREF_50PC_VDDA  (OPAMP_CSR_TRIMOFFSETN | OPAMP_CSR_CALSEL_1         
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_PMOS_VREF_10PC_VDDA  (OPAMP_CSR_TRIMOFFSETP                      | OPAMP_
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_PMOS_VREF_3_3PC_VDDA (OPAMP_CSR_TRIMOFFSETP                              
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_NMOS          (LL_OPAMP_TRIMMING_NMOS_VREF_90PC_VDDA) /*!< OPAMP trimming
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_TRIMMING_PMOS          (LL_OPAMP_TRIMMING_PMOS_VREF_10PC_VDDA) /*!< OPAMP trimming
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EC_HW_DELAYS  Definitions of OPAMP hardware constraints delays
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Only OPAMP peripheral HW delays are defined in OPAMP LL driver driver,
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         not timeout values.
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         For details on delays values, refer to descriptions in source code
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         above each literal definition.
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Delay for OPAMP startup time (transition from state disable to enable).    */
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Note: OPAMP startup time depends on board application environment:         */
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*       impedance connected to OPAMP output.                                 */
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*       The delay below is specified under conditions:                       */
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*        - OPAMP in functional mode follower                                 */
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /*        - load impedance of 4kOhm (min), 50pF (max)                         */
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* parameter "tWAKEUP").                                                      */
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Unit: us                                                                   */
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_DELAY_STARTUP_US         (6)  /*!< Delay for OPAMP startup time */
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported macro ------------------------------------------------------------*/
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Exported_Macros OPAMP Exported Macros
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
ARM GAS  /tmp/cc85dWdm.s 			page 379


 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EM_WRITE_READ Common write and read registers macro
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Write a value in OPAMP register
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __INSTANCE__ OPAMP Instance
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG__ Register to be written
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __VALUE__ Value to be written in the register
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__V
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Read a value in OPAMP register
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __INSTANCE__ OPAMP Instance
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  __REG__ Register to be read
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Register value
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** #define LL_OPAMP_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /* Exported functions --------------------------------------------------------*/
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_Exported_Functions OPAMP Exported Functions
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_CONFIGURATION_OPAMP_INSTANCE Configuration of OPAMP hierarchical scope: O
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP mode calibration or functional.
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP mode corresponds to functional or calibration mode:
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - functional mode: OPAMP operation in standalone, follower, ...
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            Set functional mode using function
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            @ref LL_OPAMP_SetFunctionalMode().
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - calibration mode: offset calibration of the selected
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            transistors differential pair NMOS or PMOS.
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      CALON          LL_OPAMP_SetMode
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  Mode This parameter can be one of the following values:
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FUNCTIONAL
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_CALIBRATION
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetMode(OPAMP_TypeDef *OPAMPx, uint32_t Mode)
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_CALON, Mode);
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 380


 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP mode calibration or functional.
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP mode corresponds to functional or calibration mode:
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - functional mode: OPAMP operation in standalone, follower, ...
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            Set functional mode using function
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            @ref LL_OPAMP_SetFunctionalMode().
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *          - calibration mode: offset calibration of the selected
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *            transistors differential pair NMOS or PMOS.
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      CALON          LL_OPAMP_GetMode
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FUNCTIONAL
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_CALIBRATION
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetMode(OPAMP_TypeDef *OPAMPx)
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_CALON));
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP functional mode by setting internal connections.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         OPAMP operation in standalone, follower, ...
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   This function reset bit of calibration mode to ensure
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         to be in functional mode, in order to have OPAMP parameters
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         (inputs selection, ...) set with the corresponding OPAMP mode
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         to be effective.
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_SetFunctionalMode
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  FunctionalMode This parameter can be one of the following values:
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_STANDALONE
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FOLLOWER
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_BIAS
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_IO1_BIAS
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetFunctionalMode(OPAMP_TypeDef *OPAMPx, uint32_t FunctionalMode)
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Note: Bit OPAMP_CSR_CALON reset to ensure to be in functional mode */
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_PGGAIN_4 | OPAMP_CSR_PGGAIN_3 | OPAMP_CSR_VMSEL | OPAMP_CSR_CAL
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP functional mode from setting of internal connections.
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         OPAMP operation in standalone, follower, ...
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_GetFunctionalMode
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_STANDALONE
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_FOLLOWER
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_BIAS
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_MODE_PGA_IO0_IO1_BIAS
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetFunctionalMode(OPAMP_TypeDef *OPAMPx)
ARM GAS  /tmp/cc85dWdm.s 			page 381


 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_PGGAIN_4 | OPAMP_CSR_PGGAIN_3 | OPAMP_CSR_VMSEL
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP PGA gain.
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Preliminarily, OPAMP must be set in mode PGA
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         using function @ref LL_OPAMP_SetFunctionalMode().
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      PGGAIN         LL_OPAMP_SetPGAGain
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  PGAGain This parameter can be one of the following values:
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_2_OR_MINUS_1
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_4_OR_MINUS_3
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_8_OR_MINUS_7
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_16_OR_MINUS_15
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_32_OR_MINUS_31
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_64_OR_MINUS_63
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetPGAGain(OPAMP_TypeDef *OPAMPx, uint32_t PGAGain)
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_PGGAIN_2 | OPAMP_CSR_PGGAIN_1 | OPAMP_CSR_PGGAIN_0, PGAGain);
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP PGA gain.
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   Preliminarily, OPAMP must be set in mode PGA
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         using function @ref LL_OPAMP_SetFunctionalMode().
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      PGGAIN         LL_OPAMP_GetPGAGain
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_2_OR_MINUS_1
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_4_OR_MINUS_3
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_8_OR_MINUS_7
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_16_OR_MINUS_15
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_32_OR_MINUS_31
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_PGA_GAIN_64_OR_MINUS_63
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetPGAGain(OPAMP_TypeDef *OPAMPx)
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_PGGAIN_2 | OPAMP_CSR_PGGAIN_1 | OPAMP_CSR_PGGAI
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP power mode normal or highspeed.
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP highspeed mode allows output stage to have a better slew rate.
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      HIGHSPEEDEN     LL_OPAMP_SetPowerMode
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  PowerMode This parameter can be one of the following values:
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_NORMALSPEED
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_HIGHSPEED
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetPowerMode(OPAMP_TypeDef *OPAMPx, uint32_t PowerMode)
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_HIGHSPEEDEN, PowerMode);
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 382


 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP power mode normal or highspeed.
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP highspeed mode allows output stage to have a better slew rate.
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      HIGHSPEEDEN     LL_OPAMP_GetPowerMode
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_NORMALSPEED
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_POWERMODE_HIGHSPEED
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetPowerMode(OPAMP_TypeDef *OPAMPx)
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_HIGHSPEEDEN));
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_CONFIGURATION_INPUTS Configuration of OPAMP inputs
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP non-inverting input connection.
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VPSEL          LL_OPAMP_SetInputNonInverting
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputNonInverting This parameter can be one of the following values:
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputNonInverting(OPAMP_TypeDef *OPAMPx, uint32_t InputNonInvertin
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_VPSEL, InputNonInverting);
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP non-inverting input connection.
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VPSEL          LL_OPAMP_GetInputNonInverting
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputNonInverting(OPAMP_TypeDef *OPAMPx)
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->CSR, OPAMP_CSR_VPSEL));
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP inverting input connection.
ARM GAS  /tmp/cc85dWdm.s 			page 383


 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP inverting input is used with OPAMP in mode standalone
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         or PGA with external capacitors for filtering circuit.
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         Otherwise (OPAMP in mode follower), OPAMP inverting input
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         is not used (not connected to GPIO pin).
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_SetInputInverting
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputInverting This parameter can be one of the following values:
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_CONNECT_NO
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputInverting(OPAMP_TypeDef *OPAMPx, uint32_t InputInverting)
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Manage cases of OPAMP inverting input not connected (0x10 and 0x11)      */
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* to not modify OPAMP mode follower or PGA.                                */
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Bit OPAMP_CSR_VMSEL_1 is set by OPAMP mode (follower, PGA). */
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, (~(InputInverting >> 1)) & OPAMP_CSR_VMSEL_0, InputInverting);
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP inverting input connection.
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      VMSEL          LL_OPAMP_GetInputInverting
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_CONNECT_NO
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputInverting(OPAMP_TypeDef *OPAMPx)
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   uint32_t input_inverting = READ_BIT(OPAMPx->CSR, OPAMP_CSR_VMSEL);
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* Manage cases 0x10 and 0x11 to return the same value: OPAMP inverting     */
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   /* input not connected.                                                     */
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (input_inverting & ~((input_inverting >> 1) & OPAMP_CSR_VMSEL_0));
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP non-inverting input secondary connection.
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VPSSEL         LL_OPAMP_SetInputNonInvertingSecondary
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputNonInverting This parameter can be one of the following values:
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0_SEC
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1_SEC
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2_SEC
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3_SEC
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC_SEC
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputNonInvertingSecondary(OPAMP_TypeDef *OPAMPx, uint32_t InputNo
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->TCMR, OPAMP_TCMR_VPSSEL, InputNonInverting);
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP non-inverting input secondary connection.
ARM GAS  /tmp/cc85dWdm.s 			page 384


 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VPSSEL         LL_OPAMP_GetInputNonInvertingSecondary
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO0_SEC
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO1_SEC
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO2_SEC
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_IO3_SEC
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_NONINVERT_DAC_SEC
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputNonInvertingSecondary(OPAMP_TypeDef *OPAMPx)
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->TCMR, OPAMP_TCMR_VPSSEL));
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP inverting input secondary connection.
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP inverting input is used with OPAMP in mode standalone
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         or PGA with external capacitors for filtering circuit.
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         Otherwise (OPAMP in mode follower), OPAMP inverting input
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         is not used (not connected to GPIO pin).
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VMSSEL         LL_OPAMP_SetInputInvertingSecondary
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputInverting This parameter can be one of the following values:
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0_SEC
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1_SEC
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_PGA_SEC
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_FOLLOWER_SEC
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputInvertingSecondary(OPAMP_TypeDef *OPAMPx, uint32_t InputInver
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->TCMR, OPAMP_TCMR_VMSSEL, InputInverting);
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP inverting input secondary connection.
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     VMSSEL         LL_OPAMP_GetInputInvertingSecondary
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO0_SEC
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_IO1_SEC
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_PGA_SEC
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_INVERT_FOLLOWER_SEC
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputInvertingSecondary(OPAMP_TypeDef *OPAMPx)
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->TCMR, OPAMP_TCMR_VMSSEL));
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP inputs multiplexer mode.
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     TCMEN          LL_OPAMP_SetInputsMuxMode
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InputsMuxMode This parameter can be one of the following values:
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_DISABLE
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM1_CH6
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM8_CH6
ARM GAS  /tmp/cc85dWdm.s 			page 385


 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM20_CH6  (1)
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         On this STM32 series, this value is not available on all devices. Refer to datasheet fo
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInputsMuxMode(OPAMP_TypeDef *OPAMPx, uint32_t InputsMuxMode)
 3356              		.loc 11 705 22 view .LVU1095
 3357              	.LBB777:
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->TCMR, OPAMP_TCMR_T1CMEN | OPAMP_TCMR_T8CMEN | OPAMP_TCMR_T20CMEN, InputsMuxMod
 3358              		.loc 11 707 3 view .LVU1096
 3359 0076 A369     		ldr	r3, [r4, #24]
 3360 0078 23F03803 		bic	r3, r3, #56
 3361 007c A361     		str	r3, [r4, #24]
 3362              	.LVL224:
 3363              		.loc 11 707 3 is_stmt 0 view .LVU1097
 3364              	.LBE777:
 3365              	.LBE776:
 726:Src/main.c    ****   LL_OPAMP_SetPGAGain(OPAMP1, LL_OPAMP_PGA_GAIN_16_OR_MINUS_15);
 3366              		.loc 1 726 3 is_stmt 1 view .LVU1098
 3367              	.LBB778:
 3368              	.LBI778:
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP inputs multiplexer mode.
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll TCMR     TCMEN          LL_OPAMP_GetInputsMuxMode
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_DISABLE
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM1_CH6
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM8_CH6
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INPUT_MUX_TIM20_CH6  (1)
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         On this STM32 series, this value is not available on all devices. Refer to datasheet fo
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInputsMuxMode(OPAMP_TypeDef *OPAMPx)
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return (uint32_t)(READ_BIT(OPAMPx->TCMR, OPAMP_TCMR_T1CMEN | OPAMP_TCMR_T8CMEN | OPAMP_TCMR_T20CM
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP internal output.
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @note   OPAMP internal output is used to link OPAMP output to ADC input internally.
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OPAMPINTEN     LL_OPAMP_SetInternalOutput
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  InternalOutput This parameter can be one of the following values:
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_DISABLED
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_ENABLED
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetInternalOutput(OPAMP_TypeDef *OPAMPx, uint32_t InternalOutput)
 3369              		.loc 11 736 22 view .LVU1099
 3370              	.LBB779:
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_OPAMPINTEN, InternalOutput);
 3371              		.loc 11 738 3 view .LVU1100
 3372 007e 2368     		ldr	r3, [r4]
 3373 0080 23F48073 		bic	r3, r3, #256
ARM GAS  /tmp/cc85dWdm.s 			page 386


 3374 0084 2360     		str	r3, [r4]
 3375              	.LVL225:
 3376              		.loc 11 738 3 is_stmt 0 view .LVU1101
 3377              	.LBE779:
 3378              	.LBE778:
 727:Src/main.c    ****   LL_OPAMP_SetTrimmingMode(OPAMP1, LL_OPAMP_TRIMMING_FACTORY);
 3379              		.loc 1 727 3 is_stmt 1 view .LVU1102
 3380              	.LBB780:
 3381              	.LBI780:
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 3382              		.loc 11 492 22 view .LVU1103
 3383              	.LBB781:
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3384              		.loc 11 494 3 view .LVU1104
 3385 0086 2368     		ldr	r3, [r4]
 3386 0088 23F4E033 		bic	r3, r3, #114688
 3387 008c 43F44043 		orr	r3, r3, #49152
 3388 0090 2360     		str	r3, [r4]
 3389              	.LVL226:
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3390              		.loc 11 494 3 is_stmt 0 view .LVU1105
 3391              	.LBE781:
 3392              	.LBE780:
 728:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 2 */
 3393              		.loc 1 728 3 is_stmt 1 view .LVU1106
 3394              	.LBB782:
 3395              	.LBI782:
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Get OPAMP internal output state.
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      OPAMPINTEN     LL_OPAMP_GetInternalOutput
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval Returned value can be one of the following values:
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_DISABLED
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_INTERNAL_OUPUT_ENABLED
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE uint32_t LL_OPAMP_GetInternalOutput(OPAMP_TypeDef *OPAMPx)
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   return READ_BIT(OPAMPx->CSR, OPAMP_CSR_OPAMPINTEN);
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @}
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /** @defgroup OPAMP_LL_EF_OPAMP_TRIMMING Configuration and operation of OPAMP trimming
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @{
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** 
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** /**
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @brief  Set OPAMP trimming mode.
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @rmtoll CSR      USERTRIM       LL_OPAMP_SetTrimmingMode
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  OPAMPx OPAMP instance
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @param  TrimmingMode This parameter can be one of the following values:
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_FACTORY
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   *         @arg @ref LL_OPAMP_TRIMMING_USER
ARM GAS  /tmp/cc85dWdm.s 			page 387


 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   * @retval None
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   */
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** __STATIC_INLINE void LL_OPAMP_SetTrimmingMode(OPAMP_TypeDef *OPAMPx, uint32_t TrimmingMode)
 3396              		.loc 11 771 22 view .LVU1107
 3397              	.LBB783:
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h ****   MODIFY_REG(OPAMPx->CSR, OPAMP_CSR_USERTRIM, TrimmingMode);
 3398              		.loc 11 773 3 view .LVU1108
 3399 0092 2368     		ldr	r3, [r4]
 3400 0094 23F01003 		bic	r3, r3, #16
 3401 0098 2360     		str	r3, [r4]
 3402              	.LVL227:
 3403              		.loc 11 773 3 is_stmt 0 view .LVU1109
 3404              	.LBE783:
 3405              	.LBE782:
 733:Src/main.c    **** 
 3406              		.loc 1 733 1 view .LVU1110
 3407 009a 0DB0     		add	sp, sp, #52
 3408              		.cfi_def_cfa_offset 12
 3409              		@ sp needed
 3410 009c 30BD     		pop	{r4, r5, pc}
 3411              	.L82:
 3412 009e 00BF     		.align	2
 3413              	.L81:
 3414 00a0 00100240 		.word	1073876992
 3415 00a4 40000200 		.word	131136
 3416 00a8 00030140 		.word	1073808128
 3417              		.cfi_endproc
 3418              	.LFE1632:
 3420              		.section	.text.MX_OPAMP2_Init,"ax",%progbits
 3421              		.align	1
 3422              		.syntax unified
 3423              		.thumb
 3424              		.thumb_func
 3425              		.fpu fpv4-sp-d16
 3427              	MX_OPAMP2_Init:
 3428              	.LFB1633:
 741:Src/main.c    **** 
 3429              		.loc 1 741 1 is_stmt 1 view -0
 3430              		.cfi_startproc
 3431              		@ args = 0, pretend = 0, frame = 48
 3432              		@ frame_needed = 0, uses_anonymous_args = 0
 3433 0000 30B5     		push	{r4, r5, lr}
 3434              		.cfi_def_cfa_offset 12
 3435              		.cfi_offset 4, -12
 3436              		.cfi_offset 5, -8
 3437              		.cfi_offset 14, -4
 3438 0002 8DB0     		sub	sp, sp, #52
 3439              		.cfi_def_cfa_offset 64
 747:Src/main.c    **** 
 3440              		.loc 1 747 3 view .LVU1112
 747:Src/main.c    **** 
 3441              		.loc 1 747 24 is_stmt 0 view .LVU1113
 3442 0004 0024     		movs	r4, #0
 3443 0006 0894     		str	r4, [sp, #32]
 3444 0008 0994     		str	r4, [sp, #36]
 3445 000a 0A94     		str	r4, [sp, #40]
ARM GAS  /tmp/cc85dWdm.s 			page 388


 3446 000c 0B94     		str	r4, [sp, #44]
 749:Src/main.c    **** 
 3447              		.loc 1 749 3 is_stmt 1 view .LVU1114
 749:Src/main.c    **** 
 3448              		.loc 1 749 23 is_stmt 0 view .LVU1115
 3449 000e 0494     		str	r4, [sp, #16]
 3450 0010 0594     		str	r4, [sp, #20]
 3451 0012 0694     		str	r4, [sp, #24]
 3452 0014 0794     		str	r4, [sp, #28]
 751:Src/main.c    ****   /**OPAMP2 GPIO Configuration
 3453              		.loc 1 751 3 is_stmt 1 view .LVU1116
 3454              	.LVL228:
 3455              	.LBB784:
 3456              	.LBI784:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 3457              		.loc 3 451 22 view .LVU1117
 3458              	.LBB785:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 3459              		.loc 3 453 3 view .LVU1118
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 3460              		.loc 3 454 3 view .LVU1119
 3461 0016 214B     		ldr	r3, .L85
 3462 0018 DA6C     		ldr	r2, [r3, #76]
 3463 001a 42F00102 		orr	r2, r2, #1
 3464 001e DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3465              		.loc 3 456 3 view .LVU1120
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3466              		.loc 3 456 12 is_stmt 0 view .LVU1121
 3467 0020 DB6C     		ldr	r3, [r3, #76]
 3468 0022 03F00103 		and	r3, r3, #1
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3469              		.loc 3 456 10 view .LVU1122
 3470 0026 0193     		str	r3, [sp, #4]
 3471              		.loc 3 457 3 is_stmt 1 view .LVU1123
 3472 0028 019B     		ldr	r3, [sp, #4]
 3473              	.LVL229:
 3474              		.loc 3 457 3 is_stmt 0 view .LVU1124
 3475              	.LBE785:
 3476              	.LBE784:
 757:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3477              		.loc 1 757 3 is_stmt 1 view .LVU1125
 757:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3478              		.loc 1 757 23 is_stmt 0 view .LVU1126
 3479 002a 2023     		movs	r3, #32
 3480 002c 0293     		str	r3, [sp, #8]
 758:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3481              		.loc 1 758 3 is_stmt 1 view .LVU1127
 758:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3482              		.loc 1 758 24 is_stmt 0 view .LVU1128
 3483 002e 0325     		movs	r5, #3
 3484 0030 0395     		str	r5, [sp, #12]
 759:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP2_INT_GAIN_GPIO_Port, &GPIO_InitStruct);
 3485              		.loc 1 759 3 is_stmt 1 view .LVU1129
 759:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP2_INT_GAIN_GPIO_Port, &GPIO_InitStruct);
 3486              		.loc 1 759 24 is_stmt 0 view .LVU1130
 3487 0032 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/cc85dWdm.s 			page 389


 760:Src/main.c    **** 
 3488              		.loc 1 760 3 is_stmt 1 view .LVU1131
 3489 0034 02A9     		add	r1, sp, #8
 3490 0036 4FF09040 		mov	r0, #1207959552
 3491 003a FFF7FEFF 		bl	LL_GPIO_Init
 3492              	.LVL230:
 762:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3493              		.loc 1 762 3 view .LVU1132
 762:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3494              		.loc 1 762 23 is_stmt 0 view .LVU1133
 3495 003e 4023     		movs	r3, #64
 3496 0040 0293     		str	r3, [sp, #8]
 763:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3497              		.loc 1 763 3 is_stmt 1 view .LVU1134
 763:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3498              		.loc 1 763 24 is_stmt 0 view .LVU1135
 3499 0042 0395     		str	r5, [sp, #12]
 764:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP2_OUT_GPIO_Port, &GPIO_InitStruct);
 3500              		.loc 1 764 3 is_stmt 1 view .LVU1136
 764:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP2_OUT_GPIO_Port, &GPIO_InitStruct);
 3501              		.loc 1 764 24 is_stmt 0 view .LVU1137
 3502 0044 0694     		str	r4, [sp, #24]
 765:Src/main.c    **** 
 3503              		.loc 1 765 3 is_stmt 1 view .LVU1138
 3504 0046 02A9     		add	r1, sp, #8
 3505 0048 4FF09040 		mov	r0, #1207959552
 3506 004c FFF7FEFF 		bl	LL_GPIO_Init
 3507              	.LVL231:
 767:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3508              		.loc 1 767 3 view .LVU1139
 767:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3509              		.loc 1 767 23 is_stmt 0 view .LVU1140
 3510 0050 8023     		movs	r3, #128
 3511 0052 0293     		str	r3, [sp, #8]
 768:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3512              		.loc 1 768 3 is_stmt 1 view .LVU1141
 768:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3513              		.loc 1 768 24 is_stmt 0 view .LVU1142
 3514 0054 0395     		str	r5, [sp, #12]
 769:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_V_GPIO_Port, &GPIO_InitStruct);
 3515              		.loc 1 769 3 is_stmt 1 view .LVU1143
 769:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_V_GPIO_Port, &GPIO_InitStruct);
 3516              		.loc 1 769 24 is_stmt 0 view .LVU1144
 3517 0056 0694     		str	r4, [sp, #24]
 770:Src/main.c    **** 
 3518              		.loc 1 770 3 is_stmt 1 view .LVU1145
 3519 0058 02A9     		add	r1, sp, #8
 3520 005a 4FF09040 		mov	r0, #1207959552
 3521 005e FFF7FEFF 		bl	LL_GPIO_Init
 3522              	.LVL232:
 775:Src/main.c    ****   OPAMP_InitStruct.FunctionalMode = LL_OPAMP_MODE_PGA_IO0_BIAS;
 3523              		.loc 1 775 3 view .LVU1146
 775:Src/main.c    ****   OPAMP_InitStruct.FunctionalMode = LL_OPAMP_MODE_PGA_IO0_BIAS;
 3524              		.loc 1 775 30 is_stmt 0 view .LVU1147
 3525 0062 0894     		str	r4, [sp, #32]
 776:Src/main.c    ****   OPAMP_InitStruct.InputNonInverting = LL_OPAMP_INPUT_NONINVERT_IO0;
 3526              		.loc 1 776 3 is_stmt 1 view .LVU1148
ARM GAS  /tmp/cc85dWdm.s 			page 390


 776:Src/main.c    ****   OPAMP_InitStruct.InputNonInverting = LL_OPAMP_INPUT_NONINVERT_IO0;
 3527              		.loc 1 776 35 is_stmt 0 view .LVU1149
 3528 0064 0E4B     		ldr	r3, .L85+4
 3529 0066 0993     		str	r3, [sp, #36]
 777:Src/main.c    ****   LL_OPAMP_Init(OPAMP2, &OPAMP_InitStruct);
 3530              		.loc 1 777 3 is_stmt 1 view .LVU1150
 777:Src/main.c    ****   LL_OPAMP_Init(OPAMP2, &OPAMP_InitStruct);
 3531              		.loc 1 777 38 is_stmt 0 view .LVU1151
 3532 0068 0A94     		str	r4, [sp, #40]
 778:Src/main.c    ****   LL_OPAMP_SetInputsMuxMode(OPAMP2, LL_OPAMP_INPUT_MUX_DISABLE);
 3533              		.loc 1 778 3 is_stmt 1 view .LVU1152
 3534 006a 0E4C     		ldr	r4, .L85+8
 3535 006c 08A9     		add	r1, sp, #32
 3536 006e 2046     		mov	r0, r4
 3537 0070 FFF7FEFF 		bl	LL_OPAMP_Init
 3538              	.LVL233:
 779:Src/main.c    ****   LL_OPAMP_SetInternalOutput(OPAMP2, LL_OPAMP_INTERNAL_OUPUT_DISABLED);
 3539              		.loc 1 779 3 view .LVU1153
 3540              	.LBB786:
 3541              	.LBI786:
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 3542              		.loc 11 705 22 view .LVU1154
 3543              	.LBB787:
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3544              		.loc 11 707 3 view .LVU1155
 3545 0074 A369     		ldr	r3, [r4, #24]
 3546 0076 23F03803 		bic	r3, r3, #56
 3547 007a A361     		str	r3, [r4, #24]
 3548              	.LVL234:
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3549              		.loc 11 707 3 is_stmt 0 view .LVU1156
 3550              	.LBE787:
 3551              	.LBE786:
 780:Src/main.c    ****   LL_OPAMP_SetPGAGain(OPAMP2, LL_OPAMP_PGA_GAIN_16_OR_MINUS_15);
 3552              		.loc 1 780 3 is_stmt 1 view .LVU1157
 3553              	.LBB788:
 3554              	.LBI788:
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 3555              		.loc 11 736 22 view .LVU1158
 3556              	.LBB789:
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3557              		.loc 11 738 3 view .LVU1159
 3558 007c 2368     		ldr	r3, [r4]
 3559 007e 23F48073 		bic	r3, r3, #256
 3560 0082 2360     		str	r3, [r4]
 3561              	.LVL235:
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3562              		.loc 11 738 3 is_stmt 0 view .LVU1160
 3563              	.LBE789:
 3564              	.LBE788:
 781:Src/main.c    ****   LL_OPAMP_SetTrimmingMode(OPAMP2, LL_OPAMP_TRIMMING_FACTORY);
 3565              		.loc 1 781 3 is_stmt 1 view .LVU1161
 3566              	.LBB790:
 3567              	.LBI790:
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 3568              		.loc 11 492 22 view .LVU1162
 3569              	.LBB791:
ARM GAS  /tmp/cc85dWdm.s 			page 391


 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3570              		.loc 11 494 3 view .LVU1163
 3571 0084 2368     		ldr	r3, [r4]
 3572 0086 23F4E033 		bic	r3, r3, #114688
 3573 008a 43F44043 		orr	r3, r3, #49152
 3574 008e 2360     		str	r3, [r4]
 3575              	.LVL236:
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3576              		.loc 11 494 3 is_stmt 0 view .LVU1164
 3577              	.LBE791:
 3578              	.LBE790:
 782:Src/main.c    ****   /* USER CODE BEGIN OPAMP2_Init 2 */
 3579              		.loc 1 782 3 is_stmt 1 view .LVU1165
 3580              	.LBB792:
 3581              	.LBI792:
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 3582              		.loc 11 771 22 view .LVU1166
 3583              	.LBB793:
 3584              		.loc 11 773 3 view .LVU1167
 3585 0090 2368     		ldr	r3, [r4]
 3586 0092 23F01003 		bic	r3, r3, #16
 3587 0096 2360     		str	r3, [r4]
 3588              	.LVL237:
 3589              		.loc 11 773 3 is_stmt 0 view .LVU1168
 3590              	.LBE793:
 3591              	.LBE792:
 787:Src/main.c    **** 
 3592              		.loc 1 787 1 view .LVU1169
 3593 0098 0DB0     		add	sp, sp, #52
 3594              		.cfi_def_cfa_offset 12
 3595              		@ sp needed
 3596 009a 30BD     		pop	{r4, r5, pc}
 3597              	.L86:
 3598              		.align	2
 3599              	.L85:
 3600 009c 00100240 		.word	1073876992
 3601 00a0 40000200 		.word	131136
 3602 00a4 04030140 		.word	1073808132
 3603              		.cfi_endproc
 3604              	.LFE1633:
 3606              		.section	.text.MX_OPAMP3_Init,"ax",%progbits
 3607              		.align	1
 3608              		.syntax unified
 3609              		.thumb
 3610              		.thumb_func
 3611              		.fpu fpv4-sp-d16
 3613              	MX_OPAMP3_Init:
 3614              	.LFB1634:
 795:Src/main.c    **** 
 3615              		.loc 1 795 1 is_stmt 1 view -0
 3616              		.cfi_startproc
 3617              		@ args = 0, pretend = 0, frame = 48
 3618              		@ frame_needed = 0, uses_anonymous_args = 0
 3619 0000 70B5     		push	{r4, r5, r6, lr}
 3620              		.cfi_def_cfa_offset 16
 3621              		.cfi_offset 4, -16
 3622              		.cfi_offset 5, -12
ARM GAS  /tmp/cc85dWdm.s 			page 392


 3623              		.cfi_offset 6, -8
 3624              		.cfi_offset 14, -4
 3625 0002 8CB0     		sub	sp, sp, #48
 3626              		.cfi_def_cfa_offset 64
 801:Src/main.c    **** 
 3627              		.loc 1 801 3 view .LVU1171
 801:Src/main.c    **** 
 3628              		.loc 1 801 24 is_stmt 0 view .LVU1172
 3629 0004 0024     		movs	r4, #0
 3630 0006 0894     		str	r4, [sp, #32]
 3631 0008 0994     		str	r4, [sp, #36]
 3632 000a 0A94     		str	r4, [sp, #40]
 3633 000c 0B94     		str	r4, [sp, #44]
 803:Src/main.c    **** 
 3634              		.loc 1 803 3 is_stmt 1 view .LVU1173
 803:Src/main.c    **** 
 3635              		.loc 1 803 23 is_stmt 0 view .LVU1174
 3636 000e 0494     		str	r4, [sp, #16]
 3637 0010 0594     		str	r4, [sp, #20]
 3638 0012 0694     		str	r4, [sp, #24]
 3639 0014 0794     		str	r4, [sp, #28]
 805:Src/main.c    ****   /**OPAMP3 GPIO Configuration
 3640              		.loc 1 805 3 is_stmt 1 view .LVU1175
 3641              	.LVL238:
 3642              	.LBB794:
 3643              	.LBI794:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 3644              		.loc 3 451 22 view .LVU1176
 3645              	.LBB795:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 3646              		.loc 3 453 3 view .LVU1177
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 3647              		.loc 3 454 3 view .LVU1178
 3648 0016 204B     		ldr	r3, .L89
 3649 0018 DA6C     		ldr	r2, [r3, #76]
 3650 001a 42F00202 		orr	r2, r2, #2
 3651 001e DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3652              		.loc 3 456 3 view .LVU1179
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3653              		.loc 3 456 12 is_stmt 0 view .LVU1180
 3654 0020 DB6C     		ldr	r3, [r3, #76]
 3655 0022 03F00203 		and	r3, r3, #2
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3656              		.loc 3 456 10 view .LVU1181
 3657 0026 0193     		str	r3, [sp, #4]
 3658              		.loc 3 457 3 is_stmt 1 view .LVU1182
 3659 0028 019B     		ldr	r3, [sp, #4]
 3660              	.LVL239:
 3661              		.loc 3 457 3 is_stmt 0 view .LVU1183
 3662              	.LBE795:
 3663              	.LBE794:
 811:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3664              		.loc 1 811 3 is_stmt 1 view .LVU1184
 811:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3665              		.loc 1 811 23 is_stmt 0 view .LVU1185
 3666 002a 0123     		movs	r3, #1
ARM GAS  /tmp/cc85dWdm.s 			page 393


 3667 002c 0293     		str	r3, [sp, #8]
 812:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3668              		.loc 1 812 3 is_stmt 1 view .LVU1186
 812:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3669              		.loc 1 812 24 is_stmt 0 view .LVU1187
 3670 002e 0326     		movs	r6, #3
 3671 0030 0396     		str	r6, [sp, #12]
 813:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_W_GPIO_Port, &GPIO_InitStruct);
 3672              		.loc 1 813 3 is_stmt 1 view .LVU1188
 813:Src/main.c    ****   LL_GPIO_Init(M1_CURR_SHUNT_W_GPIO_Port, &GPIO_InitStruct);
 3673              		.loc 1 813 24 is_stmt 0 view .LVU1189
 3674 0032 0694     		str	r4, [sp, #24]
 814:Src/main.c    **** 
 3675              		.loc 1 814 3 is_stmt 1 view .LVU1190
 3676 0034 194D     		ldr	r5, .L89+4
 3677 0036 02A9     		add	r1, sp, #8
 3678 0038 2846     		mov	r0, r5
 3679 003a FFF7FEFF 		bl	LL_GPIO_Init
 3680              	.LVL240:
 816:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3681              		.loc 1 816 3 view .LVU1191
 816:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3682              		.loc 1 816 23 is_stmt 0 view .LVU1192
 3683 003e 0223     		movs	r3, #2
 3684 0040 0293     		str	r3, [sp, #8]
 817:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3685              		.loc 1 817 3 is_stmt 1 view .LVU1193
 817:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3686              		.loc 1 817 24 is_stmt 0 view .LVU1194
 3687 0042 0396     		str	r6, [sp, #12]
 818:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP3_OUT_GPIO_Port, &GPIO_InitStruct);
 3688              		.loc 1 818 3 is_stmt 1 view .LVU1195
 818:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP3_OUT_GPIO_Port, &GPIO_InitStruct);
 3689              		.loc 1 818 24 is_stmt 0 view .LVU1196
 3690 0044 0694     		str	r4, [sp, #24]
 819:Src/main.c    **** 
 3691              		.loc 1 819 3 is_stmt 1 view .LVU1197
 3692 0046 02A9     		add	r1, sp, #8
 3693 0048 2846     		mov	r0, r5
 3694 004a FFF7FEFF 		bl	LL_GPIO_Init
 3695              	.LVL241:
 821:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3696              		.loc 1 821 3 view .LVU1198
 821:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 3697              		.loc 1 821 23 is_stmt 0 view .LVU1199
 3698 004e 0423     		movs	r3, #4
 3699 0050 0293     		str	r3, [sp, #8]
 822:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3700              		.loc 1 822 3 is_stmt 1 view .LVU1200
 822:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3701              		.loc 1 822 24 is_stmt 0 view .LVU1201
 3702 0052 0396     		str	r6, [sp, #12]
 823:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP3_INT_GAIN_GPIO_Port, &GPIO_InitStruct);
 3703              		.loc 1 823 3 is_stmt 1 view .LVU1202
 823:Src/main.c    ****   LL_GPIO_Init(M1_OPAMP3_INT_GAIN_GPIO_Port, &GPIO_InitStruct);
 3704              		.loc 1 823 24 is_stmt 0 view .LVU1203
 3705 0054 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/cc85dWdm.s 			page 394


 824:Src/main.c    **** 
 3706              		.loc 1 824 3 is_stmt 1 view .LVU1204
 3707 0056 02A9     		add	r1, sp, #8
 3708 0058 2846     		mov	r0, r5
 3709 005a FFF7FEFF 		bl	LL_GPIO_Init
 3710              	.LVL242:
 829:Src/main.c    ****   OPAMP_InitStruct.FunctionalMode = LL_OPAMP_MODE_PGA_IO0_BIAS;
 3711              		.loc 1 829 3 view .LVU1205
 829:Src/main.c    ****   OPAMP_InitStruct.FunctionalMode = LL_OPAMP_MODE_PGA_IO0_BIAS;
 3712              		.loc 1 829 30 is_stmt 0 view .LVU1206
 3713 005e 0894     		str	r4, [sp, #32]
 830:Src/main.c    ****   OPAMP_InitStruct.InputNonInverting = LL_OPAMP_INPUT_NONINVERT_IO0;
 3714              		.loc 1 830 3 is_stmt 1 view .LVU1207
 830:Src/main.c    ****   OPAMP_InitStruct.InputNonInverting = LL_OPAMP_INPUT_NONINVERT_IO0;
 3715              		.loc 1 830 35 is_stmt 0 view .LVU1208
 3716 0060 0F4B     		ldr	r3, .L89+8
 3717 0062 0993     		str	r3, [sp, #36]
 831:Src/main.c    ****   LL_OPAMP_Init(OPAMP3, &OPAMP_InitStruct);
 3718              		.loc 1 831 3 is_stmt 1 view .LVU1209
 831:Src/main.c    ****   LL_OPAMP_Init(OPAMP3, &OPAMP_InitStruct);
 3719              		.loc 1 831 38 is_stmt 0 view .LVU1210
 3720 0064 0A94     		str	r4, [sp, #40]
 832:Src/main.c    ****   LL_OPAMP_SetInputsMuxMode(OPAMP3, LL_OPAMP_INPUT_MUX_DISABLE);
 3721              		.loc 1 832 3 is_stmt 1 view .LVU1211
 3722 0066 0F4C     		ldr	r4, .L89+12
 3723 0068 08A9     		add	r1, sp, #32
 3724 006a 2046     		mov	r0, r4
 3725 006c FFF7FEFF 		bl	LL_OPAMP_Init
 3726              	.LVL243:
 833:Src/main.c    ****   LL_OPAMP_SetInternalOutput(OPAMP3, LL_OPAMP_INTERNAL_OUPUT_ENABLED);
 3727              		.loc 1 833 3 view .LVU1212
 3728              	.LBB796:
 3729              	.LBI796:
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 3730              		.loc 11 705 22 view .LVU1213
 3731              	.LBB797:
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3732              		.loc 11 707 3 view .LVU1214
 3733 0070 A369     		ldr	r3, [r4, #24]
 3734 0072 23F03803 		bic	r3, r3, #56
 3735 0076 A361     		str	r3, [r4, #24]
 3736              	.LVL244:
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3737              		.loc 11 707 3 is_stmt 0 view .LVU1215
 3738              	.LBE797:
 3739              	.LBE796:
 834:Src/main.c    ****   LL_OPAMP_SetPGAGain(OPAMP3, LL_OPAMP_PGA_GAIN_16_OR_MINUS_15);
 3740              		.loc 1 834 3 is_stmt 1 view .LVU1216
 3741              	.LBB798:
 3742              	.LBI798:
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 3743              		.loc 11 736 22 view .LVU1217
 3744              	.LBB799:
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3745              		.loc 11 738 3 view .LVU1218
 3746 0078 2368     		ldr	r3, [r4]
 3747 007a 43F48073 		orr	r3, r3, #256
ARM GAS  /tmp/cc85dWdm.s 			page 395


 3748 007e 2360     		str	r3, [r4]
 3749              	.LVL245:
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3750              		.loc 11 738 3 is_stmt 0 view .LVU1219
 3751              	.LBE799:
 3752              	.LBE798:
 835:Src/main.c    ****   LL_OPAMP_SetTrimmingMode(OPAMP3, LL_OPAMP_TRIMMING_FACTORY);
 3753              		.loc 1 835 3 is_stmt 1 view .LVU1220
 3754              	.LBB800:
 3755              	.LBI800:
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 3756              		.loc 11 492 22 view .LVU1221
 3757              	.LBB801:
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3758              		.loc 11 494 3 view .LVU1222
 3759 0080 2368     		ldr	r3, [r4]
 3760 0082 23F4E033 		bic	r3, r3, #114688
 3761 0086 43F44043 		orr	r3, r3, #49152
 3762 008a 2360     		str	r3, [r4]
 3763              	.LVL246:
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** }
 3764              		.loc 11 494 3 is_stmt 0 view .LVU1223
 3765              	.LBE801:
 3766              	.LBE800:
 836:Src/main.c    ****   /* USER CODE BEGIN OPAMP3_Init 2 */
 3767              		.loc 1 836 3 is_stmt 1 view .LVU1224
 3768              	.LBB802:
 3769              	.LBI802:
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_opamp.h **** {
 3770              		.loc 11 771 22 view .LVU1225
 3771              	.LBB803:
 3772              		.loc 11 773 3 view .LVU1226
 3773 008c 2368     		ldr	r3, [r4]
 3774 008e 23F01003 		bic	r3, r3, #16
 3775 0092 2360     		str	r3, [r4]
 3776              	.LVL247:
 3777              		.loc 11 773 3 is_stmt 0 view .LVU1227
 3778              	.LBE803:
 3779              	.LBE802:
 841:Src/main.c    **** 
 3780              		.loc 1 841 1 view .LVU1228
 3781 0094 0CB0     		add	sp, sp, #48
 3782              		.cfi_def_cfa_offset 16
 3783              		@ sp needed
 3784 0096 70BD     		pop	{r4, r5, r6, pc}
 3785              	.L90:
 3786              		.align	2
 3787              	.L89:
 3788 0098 00100240 		.word	1073876992
 3789 009c 00040048 		.word	1207960576
 3790 00a0 40000200 		.word	131136
 3791 00a4 08030140 		.word	1073808136
 3792              		.cfi_endproc
 3793              	.LFE1634:
 3795              		.section	.text.MX_TIM4_Init,"ax",%progbits
 3796              		.align	1
 3797              		.syntax unified
ARM GAS  /tmp/cc85dWdm.s 			page 396


 3798              		.thumb
 3799              		.thumb_func
 3800              		.fpu fpv4-sp-d16
 3802              	MX_TIM4_Init:
 3803              	.LFB1636:
 990:Src/main.c    **** 
 3804              		.loc 1 990 1 is_stmt 1 view -0
 3805              		.cfi_startproc
 3806              		@ args = 0, pretend = 0, frame = 56
 3807              		@ frame_needed = 0, uses_anonymous_args = 0
 3808 0000 70B5     		push	{r4, r5, r6, lr}
 3809              		.cfi_def_cfa_offset 16
 3810              		.cfi_offset 4, -16
 3811              		.cfi_offset 5, -12
 3812              		.cfi_offset 6, -8
 3813              		.cfi_offset 14, -4
 3814 0002 8EB0     		sub	sp, sp, #56
 3815              		.cfi_def_cfa_offset 72
 996:Src/main.c    **** 
 3816              		.loc 1 996 3 view .LVU1230
 996:Src/main.c    **** 
 3817              		.loc 1 996 22 is_stmt 0 view .LVU1231
 3818 0004 0024     		movs	r4, #0
 3819 0006 0994     		str	r4, [sp, #36]
 3820 0008 0A94     		str	r4, [sp, #40]
 3821 000a 0B94     		str	r4, [sp, #44]
 3822 000c 0C94     		str	r4, [sp, #48]
 3823 000e 0D94     		str	r4, [sp, #52]
 998:Src/main.c    **** 
 3824              		.loc 1 998 3 is_stmt 1 view .LVU1232
1001:Src/main.c    **** 
 3825              		.loc 1 1001 3 view .LVU1233
 3826              	.LVL248:
 3827              	.LBB804:
 3828              	.LBI804:
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled or not
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_IsEnabledClock\n
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_IsEnabledClock\n
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_IsEnabledClock\n
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIODEN       LL_AHB2_GRP1_IsEnabledClock\n
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOEEN       LL_AHB2_GRP1_IsEnabledClock\n
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOFEN       LL_AHB2_GRP1_IsEnabledClock\n
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOGEN       LL_AHB2_GRP1_IsEnabledClock\n
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      ADC12EN       LL_AHB2_GRP1_IsEnabledClock\n
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      ADC345EN      LL_AHB2_GRP1_IsEnabledClock\n
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC1EN        LL_AHB2_GRP1_IsEnabledClock\n
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC2EN        LL_AHB2_GRP1_IsEnabledClock\n
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC3EN        LL_AHB2_GRP1_IsEnabledClock\n
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC4EN        LL_AHB2_GRP1_IsEnabledClock\n
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      AESEN         LL_AHB2_GRP1_IsEnabledClock\n
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      RNGEN         LL_AHB2_GRP1_IsEnabledClock
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
ARM GAS  /tmp/cc85dWdm.s 			page 397


 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC12
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC345 (*)
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC1
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC2 (*)
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC3
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC4 (*)
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClock(uint32_t Periphs)
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   return ((READ_BIT(RCC->AHB2ENR, Periphs) == Periphs) ? 1UL : 0UL);
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock.
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_DisableClock\n
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_DisableClock\n
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_DisableClock\n
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIODEN       LL_AHB2_GRP1_DisableClock\n
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOEEN       LL_AHB2_GRP1_DisableClock\n
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOFEN       LL_AHB2_GRP1_DisableClock\n
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      GPIOGEN       LL_AHB2_GRP1_DisableClock\n
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      ADC12EN       LL_AHB2_GRP1_DisableClock\n
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      ADC345EN      LL_AHB2_GRP1_DisableClock\n
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC1EN        LL_AHB2_GRP1_DisableClock\n
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC2EN        LL_AHB2_GRP1_DisableClock\n
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC3EN        LL_AHB2_GRP1_DisableClock\n
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      DAC4EN        LL_AHB2_GRP1_DisableClock\n
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      AESEN         LL_AHB2_GRP1_DisableClock\n
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2ENR      RNGEN         LL_AHB2_GRP1_DisableClock
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC12
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC345 (*)
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC1
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC2 (*)
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC3
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC4 (*)
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
ARM GAS  /tmp/cc85dWdm.s 			page 398


 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClock(uint32_t Periphs)
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2ENR, Periphs);
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Force AHB2 peripherals reset.
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB2RSTR      GPIOARST       LL_AHB2_GRP1_ForceReset\n
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIOBRST       LL_AHB2_GRP1_ForceReset\n
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIOCRST       LL_AHB2_GRP1_ForceReset\n
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIODRST       LL_AHB2_GRP1_ForceReset\n
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIOERST       LL_AHB2_GRP1_ForceReset\n
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIOFRST       LL_AHB2_GRP1_ForceReset\n
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIOGRST       LL_AHB2_GRP1_ForceReset\n
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      ADC12RST       LL_AHB2_GRP1_ForceReset\n
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      ADC345RST      LL_AHB2_GRP1_ForceReset\n
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      DAC1RST        LL_AHB2_GRP1_ForceReset\n
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      DAC2RST        LL_AHB2_GRP1_ForceReset\n
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      DAC3RST        LL_AHB2_GRP1_ForceReset\n
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      DAC4RST        LL_AHB2_GRP1_ForceReset\n
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      AESRST         LL_AHB2_GRP1_ForceReset\n
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      RNGRST         LL_AHB2_GRP1_ForceReset
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC12
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC345 (*)
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC1
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC2 (*)
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC3
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC4 (*)
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ForceReset(uint32_t Periphs)
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2RSTR, Periphs);
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Release AHB2 peripherals reset.
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB2RSTR      GPIOARST       LL_AHB2_GRP1_ReleaseReset\n
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIOBRST       LL_AHB2_GRP1_ReleaseReset\n
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIOCRST       LL_AHB2_GRP1_ReleaseReset\n
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIODRST       LL_AHB2_GRP1_ReleaseReset\n
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIOERST       LL_AHB2_GRP1_ReleaseReset\n
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIOFRST       LL_AHB2_GRP1_ReleaseReset\n
ARM GAS  /tmp/cc85dWdm.s 			page 399


 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      GPIOGRST       LL_AHB2_GRP1_ReleaseReset\n
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      ADC12RST       LL_AHB2_GRP1_ReleaseReset\n
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      ADC345RST      LL_AHB2_GRP1_ReleaseReset\n
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      DAC1RST        LL_AHB2_GRP1_ReleaseReset\n
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      DAC2RST        LL_AHB2_GRP1_ReleaseReset\n
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      DAC3RST        LL_AHB2_GRP1_ReleaseReset\n
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      DAC4RST        LL_AHB2_GRP1_ReleaseReset\n
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      AESRST         LL_AHB2_GRP1_ReleaseReset\n
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2RSTR      RNGRST         LL_AHB2_GRP1_ReleaseReset
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC12
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC345 (*)
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC1
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC2 (*)
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC3
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC4 (*)
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ReleaseReset(uint32_t Periphs)
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2RSTR, Periphs);
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable AHB2 peripheral clocks in Sleep and Stop modes
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIODSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIOESMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIOFSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIOGSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    SRAM2SMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    CCMSMEN       LL_AHB2_GRP1_EnableClockStopSleep\n
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    ADC12SMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    ADC345SMEN    LL_AHB2_GRP1_EnableClockStopSleep\n
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    DAC1SMEN      LL_AHB2_GRP1_EnableClockStopSleep\n
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    DAC2SMEN      LL_AHB2_GRP1_EnableClockStopSleep\n
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    DAC3SMEN      LL_AHB2_GRP1_EnableClockStopSleep\n
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    DAC4SMEN      LL_AHB2_GRP1_EnableClockStopSleep\n
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    AESSMEN       LL_AHB2_GRP1_EnableClockStopSleep\n
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    RNGSMEN       LL_AHB2_GRP1_EnableClockStopSleep
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
ARM GAS  /tmp/cc85dWdm.s 			page 400


 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SRAM2
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CCM
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC12
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC345 (*)
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC1
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC2 (*)
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC3
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC4 (*)
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClockStopSleep(uint32_t Periphs)
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2SMENR, Periphs);
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2SMENR, Periphs);
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Disable AHB2 peripheral clocks in Sleep and Stop modes
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIODSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIOESMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIOFSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    GPIOGSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    SRAM2SMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    CCMSMEN       LL_AHB2_GRP1_DisableClockStopSleep\n
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    ADC12SMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    ADC345SMEN    LL_AHB2_GRP1_DisableClockStopSleep\n
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    DAC1SMEN      LL_AHB2_GRP1_DisableClockStopSleep\n
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    DAC2SMEN      LL_AHB2_GRP1_DisableClockStopSleep\n
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    DAC3SMEN      LL_AHB2_GRP1_DisableClockStopSleep\n
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    DAC4SMEN      LL_AHB2_GRP1_DisableClockStopSleep\n
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    AESSMEN       LL_AHB2_GRP1_DisableClockStopSleep\n
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB2SMENR    RNGSMEN       LL_AHB2_GRP1_DisableClockStopSleep
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SRAM2
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CCM
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC12
ARM GAS  /tmp/cc85dWdm.s 			page 401


 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC345 (*)
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC1
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC2 (*)
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC3
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DAC4 (*)
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClockStopSleep(uint32_t Periphs)
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2SMENR, Periphs);
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB3 AHB3
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_EnableClock\n
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_EnableClock
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClock(uint32_t Periphs)
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB3ENR, Periphs);
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_IsEnabledClock\n
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_IsEnabledClock
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClock(uint32_t Periphs)
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 402


 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   return ((READ_BIT(RCC->AHB3ENR, Periphs) == Periphs) ? 1UL : 0UL);
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_DisableClock\n
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_DisableClock
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClock(uint32_t Periphs)
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3ENR, Periphs);
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB3RSTR     FMCRST        LL_AHB3_GRP1_ForceReset\n
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB3RSTR     QSPIRST       LL_AHB3_GRP1_ForceReset
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ForceReset(uint32_t Periphs)
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB3RSTR, Periphs);
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB3RSTR     FMCRST        LL_AHB3_GRP1_ReleaseReset\n
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB3RSTR     QSPIRST       LL_AHB3_GRP1_ReleaseReset
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ReleaseReset(uint32_t Periphs)
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3RSTR, Periphs);
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable AHB3 peripheral clocks in Sleep and Stop modes
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB3SMENR    FMCSMEN       LL_AHB3_GRP1_EnableClockStopSleep\n
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB3SMENR    QSPISMEN      LL_AHB3_GRP1_EnableClockStopSleep
ARM GAS  /tmp/cc85dWdm.s 			page 403


 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC  (*)
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClockStopSleep(uint32_t Periphs)
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB3SMENR, Periphs);
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3SMENR, Periphs);
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Disable AHB3 peripheral clocks in Sleep and Stop modes
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll AHB3SMENR    FMCSMEN       LL_AHB3_GRP1_DisableClockStopSleep\n
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         AHB3SMENR    QSPISMEN      LL_AHB3_GRP1_DisableClockStopSleep
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClockStopSleep(uint32_t Periphs)
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3SMENR, Periphs);
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_EnableClock\n
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM3EN        LL_APB1_GRP1_EnableClock\n
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM4EN        LL_APB1_GRP1_EnableClock\n
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM5EN        LL_APB1_GRP1_EnableClock\n
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM6EN        LL_APB1_GRP1_EnableClock\n
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM7EN        LL_APB1_GRP1_EnableClock\n
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     CRSEN         LL_APB1_GRP1_EnableClock\n
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_EnableClock\n
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_EnableClock\n
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_EnableClock\n
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     SPI3EN        LL_APB1_GRP1_EnableClock\n
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_EnableClock\n
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     USART3EN      LL_APB1_GRP1_EnableClock\n
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     UART4EN       LL_APB1_GRP1_EnableClock\n
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     UART5EN       LL_APB1_GRP1_EnableClock\n
ARM GAS  /tmp/cc85dWdm.s 			page 404


 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_EnableClock\n
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_EnableClock\n
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     USBEN         LL_APB1_GRP1_EnableClock\n
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     FDCANEN       LL_APB1_GRP1_EnableClock\n
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     PWREN         LL_APB1_GRP1_EnableClock\n
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_EnableClock\n
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_EnableClock
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_FDCAN (*)
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 3829              		.loc 3 913 22 view .LVU1234
 3830              	.LBB805:
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 3831              		.loc 3 915 3 view .LVU1235
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR1, Periphs);
 3832              		.loc 3 916 3 view .LVU1236
 3833 0010 394B     		ldr	r3, .L93
 3834 0012 9A6D     		ldr	r2, [r3, #88]
 3835 0014 42F00402 		orr	r2, r2, #4
 3836 0018 9A65     		str	r2, [r3, #88]
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 3837              		.loc 3 918 3 view .LVU1237
 3838              		.loc 3 918 12 is_stmt 0 view .LVU1238
 3839 001a 9A6D     		ldr	r2, [r3, #88]
 3840 001c 02F00402 		and	r2, r2, #4
 3841              		.loc 3 918 10 view .LVU1239
 3842 0020 0292     		str	r2, [sp, #8]
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3843              		.loc 3 919 3 is_stmt 1 view .LVU1240
 3844 0022 029A     		ldr	r2, [sp, #8]
ARM GAS  /tmp/cc85dWdm.s 			page 405


 3845              	.LVL249:
 3846              		.loc 3 919 3 is_stmt 0 view .LVU1241
 3847              	.LBE805:
 3848              	.LBE804:
1003:Src/main.c    ****   /**TIM4 GPIO Configuration
 3849              		.loc 1 1003 3 is_stmt 1 view .LVU1242
 3850              	.LBB806:
 3851              	.LBI806:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 3852              		.loc 3 451 22 view .LVU1243
 3853              	.LBB807:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 3854              		.loc 3 453 3 view .LVU1244
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 3855              		.loc 3 454 3 view .LVU1245
 3856 0024 DA6C     		ldr	r2, [r3, #76]
 3857 0026 42F00202 		orr	r2, r2, #2
 3858 002a DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3859              		.loc 3 456 3 view .LVU1246
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3860              		.loc 3 456 12 is_stmt 0 view .LVU1247
 3861 002c DB6C     		ldr	r3, [r3, #76]
 3862 002e 03F00203 		and	r3, r3, #2
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 3863              		.loc 3 456 10 view .LVU1248
 3864 0032 0193     		str	r3, [sp, #4]
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 3865              		.loc 3 457 3 is_stmt 1 view .LVU1249
 3866 0034 019B     		ldr	r3, [sp, #4]
 3867              	.LVL250:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 3868              		.loc 3 457 3 is_stmt 0 view .LVU1250
 3869              	.LBE807:
 3870              	.LBE806:
1008:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 3871              		.loc 1 1008 3 is_stmt 1 view .LVU1251
1008:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 3872              		.loc 1 1008 23 is_stmt 0 view .LVU1252
 3873 0036 4023     		movs	r3, #64
 3874 0038 0393     		str	r3, [sp, #12]
1009:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 3875              		.loc 1 1009 3 is_stmt 1 view .LVU1253
1009:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 3876              		.loc 1 1009 24 is_stmt 0 view .LVU1254
 3877 003a 0225     		movs	r5, #2
 3878 003c 0495     		str	r5, [sp, #16]
1010:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 3879              		.loc 1 1010 3 is_stmt 1 view .LVU1255
1010:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 3880              		.loc 1 1010 25 is_stmt 0 view .LVU1256
 3881 003e 0594     		str	r4, [sp, #20]
1011:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3882              		.loc 1 1011 3 is_stmt 1 view .LVU1257
1011:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3883              		.loc 1 1011 30 is_stmt 0 view .LVU1258
 3884 0040 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/cc85dWdm.s 			page 406


1012:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_2;
 3885              		.loc 1 1012 3 is_stmt 1 view .LVU1259
1012:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_2;
 3886              		.loc 1 1012 24 is_stmt 0 view .LVU1260
 3887 0042 0794     		str	r4, [sp, #28]
1013:Src/main.c    ****   LL_GPIO_Init(M1_ENCODER_A_GPIO_Port, &GPIO_InitStruct);
 3888              		.loc 1 1013 3 is_stmt 1 view .LVU1261
1013:Src/main.c    ****   LL_GPIO_Init(M1_ENCODER_A_GPIO_Port, &GPIO_InitStruct);
 3889              		.loc 1 1013 29 is_stmt 0 view .LVU1262
 3890 0044 0895     		str	r5, [sp, #32]
1014:Src/main.c    **** 
 3891              		.loc 1 1014 3 is_stmt 1 view .LVU1263
 3892 0046 2D4E     		ldr	r6, .L93+4
 3893 0048 03A9     		add	r1, sp, #12
 3894 004a 3046     		mov	r0, r6
 3895 004c FFF7FEFF 		bl	LL_GPIO_Init
 3896              	.LVL251:
1016:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 3897              		.loc 1 1016 3 view .LVU1264
1016:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 3898              		.loc 1 1016 23 is_stmt 0 view .LVU1265
 3899 0050 8023     		movs	r3, #128
 3900 0052 0393     		str	r3, [sp, #12]
1017:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 3901              		.loc 1 1017 3 is_stmt 1 view .LVU1266
1017:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 3902              		.loc 1 1017 24 is_stmt 0 view .LVU1267
 3903 0054 0495     		str	r5, [sp, #16]
1018:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 3904              		.loc 1 1018 3 is_stmt 1 view .LVU1268
1018:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 3905              		.loc 1 1018 25 is_stmt 0 view .LVU1269
 3906 0056 0594     		str	r4, [sp, #20]
1019:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3907              		.loc 1 1019 3 is_stmt 1 view .LVU1270
1019:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 3908              		.loc 1 1019 30 is_stmt 0 view .LVU1271
 3909 0058 0694     		str	r4, [sp, #24]
1020:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_2;
 3910              		.loc 1 1020 3 is_stmt 1 view .LVU1272
1020:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_2;
 3911              		.loc 1 1020 24 is_stmt 0 view .LVU1273
 3912 005a 0794     		str	r4, [sp, #28]
1021:Src/main.c    ****   LL_GPIO_Init(M1_ENCODER_B_GPIO_Port, &GPIO_InitStruct);
 3913              		.loc 1 1021 3 is_stmt 1 view .LVU1274
1021:Src/main.c    ****   LL_GPIO_Init(M1_ENCODER_B_GPIO_Port, &GPIO_InitStruct);
 3914              		.loc 1 1021 29 is_stmt 0 view .LVU1275
 3915 005c 0895     		str	r5, [sp, #32]
1022:Src/main.c    **** 
 3916              		.loc 1 1022 3 is_stmt 1 view .LVU1276
 3917 005e 03A9     		add	r1, sp, #12
 3918 0060 3046     		mov	r0, r6
 3919 0062 FFF7FEFF 		bl	LL_GPIO_Init
 3920              	.LVL252:
1027:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 3921              		.loc 1 1027 3 view .LVU1277
1027:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
ARM GAS  /tmp/cc85dWdm.s 			page 407


 3922              		.loc 1 1027 28 is_stmt 0 view .LVU1278
 3923 0066 ADF82440 		strh	r4, [sp, #36]	@ movhi
1028:Src/main.c    ****   TIM_InitStruct.Autoreload = M1_PULSE_NBR;
 3924              		.loc 1 1028 3 is_stmt 1 view .LVU1279
1028:Src/main.c    ****   TIM_InitStruct.Autoreload = M1_PULSE_NBR;
 3925              		.loc 1 1028 30 is_stmt 0 view .LVU1280
 3926 006a 0A94     		str	r4, [sp, #40]
1029:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 3927              		.loc 1 1029 3 is_stmt 1 view .LVU1281
1029:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 3928              		.loc 1 1029 29 is_stmt 0 view .LVU1282
 3929 006c 40F2CF73 		movw	r3, #1999
 3930 0070 0B93     		str	r3, [sp, #44]
1030:Src/main.c    ****   LL_TIM_Init(TIM4, &TIM_InitStruct);
 3931              		.loc 1 1030 3 is_stmt 1 view .LVU1283
1030:Src/main.c    ****   LL_TIM_Init(TIM4, &TIM_InitStruct);
 3932              		.loc 1 1030 32 is_stmt 0 view .LVU1284
 3933 0072 0C94     		str	r4, [sp, #48]
1031:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM4);
 3934              		.loc 1 1031 3 is_stmt 1 view .LVU1285
 3935 0074 224C     		ldr	r4, .L93+8
 3936 0076 09A9     		add	r1, sp, #36
 3937 0078 2046     		mov	r0, r4
 3938 007a FFF7FEFF 		bl	LL_TIM_Init
 3939              	.LVL253:
1032:Src/main.c    ****   LL_TIM_SetEncoderMode(TIM4, LL_TIM_ENCODERMODE_X4_TI12);
 3940              		.loc 1 1032 3 view .LVU1286
 3941              	.LBB808:
 3942              	.LBI808:
 3943              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @file    stm32g4xx_ll_tim.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #ifndef __STM32G4xx_LL_TIM_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __STM32G4xx_LL_TIM_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/cc85dWdm.s 			page 408


  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined (TIM1) || defined (TIM2) || defined (TIM3) || defined (TIM4) || defined (TIM5) || defin
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x00U,   /* 1: TIMx_CH1N */
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x00U,   /* 3: TIMx_CH2N */
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x04U,   /* 5: TIMx_CH3N */
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x04U,   /* 6: TIMx_CH4  */
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x04U,   /* 7: TIMx_CH4N */
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x38U,   /* 8: TIMx_CH5  */
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0x38U    /* 9: TIMx_CH6  */
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** };
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 1: - NA */
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 3: - NA */
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 5: - NA */
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 6: OC4M, OC4FE, OC4PE */
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 7: - NA */
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 8: OC5M, OC5FE, OC5PE */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U             /* 9: OC6M, OC6FE, OC6PE */
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** };
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 1: - NA */
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 3: - NA */
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 5: - NA */
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 6: CC4S, IC4PSC, IC4F */
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 7: - NA */
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 8: - NA */
ARM GAS  /tmp/cc85dWdm.s 			page 409


  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U             /* 9: - NA */
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** };
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 0: CC1P */
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   2U,            /* 1: CC1NP */
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   4U,            /* 2: CC2P */
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   6U,            /* 3: CC2NP */
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 4: CC3P */
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   10U,           /* 5: CC3NP */
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   12U,           /* 6: CC4P */
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   14U,           /* 7: CC4NP */
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   16U,           /* 8: CC5P */
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   20U            /* 9: CC6P */
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** };
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OISx[] =
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   0U,            /* 0: OIS1 */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   1U,            /* 1: OIS1N */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   2U,            /* 2: OIS2 */
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   3U,            /* 3: OIS2N */
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   4U,            /* 4: OIS3 */
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   5U,            /* 5: OIS3N */
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   6U,            /* 6: OIS4 */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   7U,            /* 7: OIS4N */
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   8U,            /* 8: OIS5 */
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   10U            /* 9: OIS6 */
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** };
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Defines used for the bit position in the register and perform offsets */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define TIM_POSITION_BRK_SOURCE            (POSITION_VAL(Source) & 0x1FUL)
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Generic bit definitions for TIMx_AF1 register */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define TIMx_AF1_BKINP     TIM1_AF1_BKINP     /*!< BRK BKIN input polarity */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define TIMx_AF1_ETRSEL    TIM1_AF1_ETRSEL    /*!< TIMx ETR source selection */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Mask used to set the TDG[x:0] of the DTG bits of the TIMx_BDTR register */
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_DELAY_1 ((uint8_t)0x7F)
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_DELAY_2 ((uint8_t)0x3F)
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_DELAY_3 ((uint8_t)0x1F)
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_DELAY_4 ((uint8_t)0x1F)
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Mask used to set the DTG[7:5] bits of the DTG bits of the TIMx_BDTR register */
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_RANGE_1 ((uint8_t)0x00)
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_RANGE_2 ((uint8_t)0x80)
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_RANGE_3 ((uint8_t)0xC0)
ARM GAS  /tmp/cc85dWdm.s 			page 410


 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define DT_RANGE_4 ((uint8_t)0xE0)
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** Legacy definitions for compatibility purpose
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @cond 0
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @endcond
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define OCREF_CLEAR_SELECT_Pos (28U)
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define OCREF_CLEAR_SELECT_Msk (0x1U << OCREF_CLEAR_SELECT_Pos)                /*!< 0x10000000 */
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval none
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH1N) ? 1U :\
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2N) ? 3U :\
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U :\
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3N) ? 5U :\
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH4) ? 6U :\
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH4N) ? 7U :\
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH5) ? 8U : 9U)
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @brief  Calculate the deadtime sampling period(in ps).
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz).
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval none
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define TIM_CALC_DTS(__TIMCLK__, __CKD__)                                                        \
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   (((__CKD__) == LL_TIM_CLOCKDIVISION_DIV1) ? ((uint64_t)1000000000000U/(__TIMCLK__))         : \
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((__CKD__) == LL_TIM_CLOCKDIVISION_DIV2) ? ((uint64_t)1000000000000U/((__TIMCLK__) >> 1U)) : \
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    ((uint64_t)1000000000000U/((__TIMCLK__) >> 2U)))
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 411


 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    @ref LL_TIM_SetPrescaler().*/
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    @ref LL_TIM_SetCounterMode().*/
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    be a number between 0x0000 and 0xFFFFFFFF.
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    @ref LL_TIM_SetAutoReload().*/
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    @ref LL_TIM_SetClockDivision().*/
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t RepetitionCounter;  /*!< Specifies the repetition counter value. Each time the RCR downc
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    reaches zero, an update event is generated and counting restarts
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    from the RCR value (N).
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This means in PWM mode that (N+1) corresponds to:
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       - the number of PWM periods in edge-aligned mode
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       - the number of half PWM period in center-aligned mode
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    GP timers: this parameter must be a number between Min_Data = 0x
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    Max_Data = 0xFF.
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    Advanced timers: this parameter must be a number between Min_Dat
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    Max_Data = 0xFFFF.
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                    @ref LL_TIM_SetRepetitionCounter().*/
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 412


 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_OC_SetMode().*/
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_CC_EnableChannel() or @ref LL_TIM_CC_DisableChannel().*/
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCNState;      /*!< Specifies the TIM complementary Output Compare state.
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_CC_EnableChannel() or @ref LL_TIM_CC_DisableChannel().*/
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                LL_TIM_OC_SetCompareCHx (x=1..6).*/
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_OC_SetPolarity().*/
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCNPolarity;   /*!< Specifies the complementary output polarity.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_OC_SetPolarity().*/
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCIdleState;   /*!< Specifies the TIM Output Compare pin state during Idle state.
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_OC_SetIdleState().*/
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OCNIdleState;  /*!< Specifies the TIM Output Compare pin state during Idle state.
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_OC_SetIdleState().*/
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
ARM GAS  /tmp/cc85dWdm.s 			page 413


 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_IC_SetPolarity().*/
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_IC_SetActiveInput().*/
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_IC_SetPrescaler().*/
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                @ref LL_TIM_IC_SetFilter().*/
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_SetEncoderMode().*/
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPolarity().*/
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetActiveInput().*/
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 414


 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPrescaler().*/
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetFilter().*/
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPolarity().*/
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetActiveInput().*/
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPrescaler().*/
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetFilter().*/
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  TIM Hall sensor interface configuration structure definition.
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Polarity;        /*!< Specifies the active edge of TI1 input.
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetPolarity().*/
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Prescaler;       /*!< Specifies the TI1 input prescaler value.
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     Prescaler must be set to get a maximum counter period longer th
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     time interval between 2 consecutive changes on the Hall inputs.
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetPrescaler().*/
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t IC1Filter;          /*!< Specifies the TI1 input filter.
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This parameter can be a value of
ARM GAS  /tmp/cc85dWdm.s 			page 415


 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     @ref TIM_LL_EC_IC_FILTER.
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetFilter().*/
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compa
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     A positive pulse (TRGO event) is generated with a programmable 
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     a change occurs on the Hall inputs.
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This parameter can be a number between Min_Data = 0x0000 and Ma
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                     @ref LL_TIM_OC_SetCompareCH2().*/
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_HALLSENSOR_InitTypeDef;
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  BDTR (Break and Dead Time) structure definition
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** typedef struct
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OSSRState;            /*!< Specifies the Off-State selection used in Run mode.
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSR
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_SetOffStates()
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                        programmed. */
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t OSSIState;            /*!< Specifies the Off-State used in Idle state.
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSI
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_SetOffStates()
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t LockLevel;            /*!< Specifies the LOCK level parameters.
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_LOCKLEVEL
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note The LOCK bits can be written only once after the reset.
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       register has been written, their content is frozen until the 
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       switching-on of the outputs.
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a number between Min_Data = 0x00 and Ma
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_OC_SetDeadTime()
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                        programmed. */
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint16_t BreakState;           /*!< Specifies whether the TIM Break input is enabled or not.
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_ENABLE
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
ARM GAS  /tmp/cc85dWdm.s 			page 416


 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_EnableBRK() or @ref LL_TIM_DisableBRK()
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t BreakPolarity;        /*!< Specifies the TIM Break Input pin polarity.
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_POLARIT
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK()
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t BreakFilter;          /*!< Specifies the TIM Break Filter.
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_FILTER
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK()
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t BreakAFMode;           /*!< Specifies the alternate function mode of the break input.
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_AFMODE
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK()
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note Bidirectional break input is only supported by advanced
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t Break2State;          /*!< Specifies whether the TIM Break2 input is enabled or not.
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_ENABLE
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_EnableBRK2() or @ref LL_TIM_DisableBRK2()
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t Break2Polarity;        /*!< Specifies the TIM Break2 Input pin polarity.
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_POLARI
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK2()
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t Break2Filter;          /*!< Specifies the TIM Break2 Filter.
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_FILTER
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK2()
ARM GAS  /tmp/cc85dWdm.s 			page 417


 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t Break2AFMode;          /*!< Specifies the alternate function mode of the break2 input.
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_AFMODE
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK2()
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note Bidirectional break input is only supported by advanced
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t AutomaticOutput;      /*!< Specifies whether the TIM Automatic Output feature is enabled
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_AUTOMATICOUTP
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @ref LL_TIM_EnableAutomaticOutput() or @ref LL_TIM_DisableAut
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       programmed. */
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** } LL_TIM_BDTR_InitTypeDef;
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC5IF                        TIM_SR_CC5IF         /*!< Capture/compare 5 interrup
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC6IF                        TIM_SR_CC6IF         /*!< Capture/compare 6 interrup
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_COMIF                        TIM_SR_COMIF         /*!< COM interrupt flag */
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_BIF                          TIM_SR_BIF           /*!< Break interrupt flag */
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_B2IF                         TIM_SR_B2IF          /*!< Second break interrupt fla
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_SBIF                         TIM_SR_SBIF          /*!< System Break interrupt fla
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_IDXF                         TIM_SR_IDXF          /*!< Index interrupt flag  */
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_DIRF                         TIM_SR_DIRF          /*!< Direction Change interrupt
ARM GAS  /tmp/cc85dWdm.s 			page 418


 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_IERRF                        TIM_SR_IERRF         /*!< Index Error flag  */
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SR_TERRF                        TIM_SR_TERRF         /*!< Transition Error flag  */
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_ENABLE Break Enable
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_DISABLE            0x00000000U             /*!< Break function disabled */
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_ENABLE             TIM_BDTR_BKE            /*!< Break function enabled */
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_ENABLE Break2 Enable
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_DISABLE            0x00000000U              /*!< Break2 function disabled */
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_ENABLE             TIM_BDTR_BK2E            /*!< Break2 function enabled */
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_AUTOMATICOUTPUT_ENABLE Automatic output enable
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_DISABLE         0x00000000U             /*!< MOE can be set only by 
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_ENABLE          TIM_BDTR_AOE            /*!< MOE can be set by softw
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_COMIE                      TIM_DIER_COMIE       /*!< COM interrupt enable */
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_BIE                        TIM_DIER_BIE         /*!< Break interrupt enable */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_IDXIE                      TIM_DIER_IDXIE       /*!< Index interrupt enable */
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_DIRIE                      TIM_DIER_DIRIE       /*!< Direction Change interrupt
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_IERRIE                     TIM_DIER_IERRIE      /*!< Index Error interrupt enab
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DIER_TERRIE                     TIM_DIER_TERRIE      /*!< Transition Error interrupt
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
ARM GAS  /tmp/cc85dWdm.s 			page 419


 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter stops counting at 
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter is not stopped at 
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_0        /*!< The counter counts up and 
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_1        /*!<The counter counts up and d
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCUPDATESOURCE Capture Compare  Update Source
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_ONLY        0x00000000U          /*!< Capture/compare control bi
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI    TIM_CR2_CCUS         /*!< Capture/compare control bi
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
ARM GAS  /tmp/cc85dWdm.s 			page 420


 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_LOCKLEVEL Lock Level
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_OFF                   0x00000000U          /*!< LOCK OFF - No bit is write
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_1                     TIM_BDTR_LOCK_0      /*!< LOCK Level 1 */
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_2                     TIM_BDTR_LOCK_1      /*!< LOCK Level 2 */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_3                     TIM_BDTR_LOCK        /*!< LOCK Level 3 */
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1N                    TIM_CCER_CC1NE    /*!< Timer complementary output ch
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2N                    TIM_CCER_CC2NE    /*!< Timer complementary output ch
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3N                    TIM_CCER_CC3NE    /*!< Timer complementary output ch
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4N                    TIM_CCER_CC4NE     /*!< Timer complementary output c
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH5                     TIM_CCER_CC5E     /*!< Timer output channel 5 */
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH6                     TIM_CCER_CC6E     /*!< Timer output channel 6 */
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
ARM GAS  /tmp/cc85dWdm.s 			page 421


 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM1              TIM_CCMR1_OC1M_3                                    
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM2              (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0)               
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM1            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_2)               
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM2            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0 | TIM_CCMR1_OC1
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM1          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM2          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M)                 
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_PULSE_ON_COMPARE         (TIM_CCMR2_OC3M_3 | TIM_CCMR2_OC3M_1)               
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCMODE_DIRECTION_OUTPUT         (TIM_CCMR2_OC3M_3 | TIM_CCMR2_OC3M_1 | TIM_CCMR2_OC3
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCIDLESTATE Output Configuration Idle State
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_LOW                 0x00000000U             /*!<OCx=0 (after a dead-time
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_HIGH                TIM_CR2_OIS1            /*!<OCx=1 (after a dead-time
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GROUPCH5 GROUPCH5
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_NONE                   0x00000000U           /*!< No effect of OC5REF on OC
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC1REFC                TIM_CCR5_GC5C1        /*!< OC1REFC is the logical AN
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC2REFC                TIM_CCR5_GC5C2        /*!< OC2REFC is the logical AN
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC3REFC                TIM_CCR5_GC5C3        /*!< OC3REFC is the logical AN
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
ARM GAS  /tmp/cc85dWdm.s 			page 422


 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_BOTHEDGE            (TIM_CCER_CC1P | TIM_CCER_CC1NP) /*!< The circuit is
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_CLOCKPLUSDIRECTION_X2     (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_1)             
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_CLOCKPLUSDIRECTION_X1     (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_1 | TIM_SMCR_SM
ARM GAS  /tmp/cc85dWdm.s 			page 423


 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_DIRECTIONALCLOCK_X2       (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_2)             
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_DIRECTIONALCLOCK_X1_TI12  (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_2 | TIM_SMCR_SM
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X1_TI1                    (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_2 | TIM_SMCR_SM
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X1_TI2                    (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_2 | TIM_SMCR_SM
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO_ENCODERCLK                 TIM_CR2_MMS_3                                   /*!<
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO2 Trigger Output 2
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_RESET                     0x00000000U                                         
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_ENABLE                    TIM_CR2_MMS2_0                                      
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_UPDATE                    TIM_CR2_MMS2_1                                      
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_CC1F                      (TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)                   
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC1                       TIM_CR2_MMS2_2                                      
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC2                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)                   
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC3                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1)                   
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5                       TIM_CR2_MMS2_3                                      
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6                       (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_0)                   
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1)                   
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2)                   
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)  
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 |TIM_CR2_MMS2_1)   
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | 
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER TIM_SMCR_SMS_3                      /*!< Combined re
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_COMBINED_GATEDRESET   (TIM_SMCR_SMS_3 | TIM_SMCR_SMS_0)   /*!< Combined ga
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                                                         the counter
ARM GAS  /tmp/cc85dWdm.s 			page 424


 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SMS_PRELOAD_SOURCE SMS Preload Source
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SMSPS_TIMUPDATE                 0x00000000U                         /*!< The SMS pre
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_SMSPS_INDEX                     TIM_SMCR_SMSPS                      /*!< The SMS pre
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR4                         TIM_SMCR_TS_3                                       
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR5                         (TIM_SMCR_TS_3 | TIM_SMCR_TS_0)                     
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR6                         (TIM_SMCR_TS_3 | TIM_SMCR_TS_1)                     
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR7                         (TIM_SMCR_TS_3 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR8                         (TIM_SMCR_TS_3 | TIM_SMCR_TS_2)                     
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR9                         (TIM_SMCR_TS_3 | TIM_SMCR_TS_2 | TIM_SMCR_TS_0)     
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR10                        (TIM_SMCR_TS_3 | TIM_SMCR_TS_2 | TIM_SMCR_TS_1)     
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TS_ITR11                        (TIM_SMCR_TS_3 | TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
ARM GAS  /tmp/cc85dWdm.s 			page 425


 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM1_ETRSOURCE External Trigger Source TIM1
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_GPIO        0x00000000U                                              
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP1       TIM1_AF1_ETRSEL_0                                        
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP2       TIM1_AF1_ETRSEL_1                                        
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP3       (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                  
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP4       TIM1_AF1_ETRSEL_2                                        
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP5       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                  
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP6       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                  
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_COMP7       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC1_AWD1   TIM1_AF1_ETRSEL_3                                        
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC1_AWD2   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                  
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC1_AWD3   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1)                  
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(ADC4)
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC4_AWD1   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC4_AWD2   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2)                  
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_ETRSOURCE_ADC4_AWD3   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* ADC4 */
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_ETRSOURCE External Trigger Source TIM2
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_GPIO         0x00000000U                                             
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP1        TIM1_AF1_ETRSEL_0                                       
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP2        TIM1_AF1_ETRSEL_1                                       
ARM GAS  /tmp/cc85dWdm.s 			page 426


1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP3        (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                 
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP4        TIM1_AF1_ETRSEL_2                                       
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP5        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                 
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP6        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                 
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_COMP7        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_TIM3_ETR     TIM1_AF1_ETRSEL_3                                       
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_TIM4_ETR     (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                 
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM5)
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_TIM5_ETR     (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1)                 
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM5 */
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_ETRSOURCE_LSE          (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_ETRSOURCE External Trigger Source TIM3
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_GPIO         0x00000000U                                             
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP1        TIM1_AF1_ETRSEL_0                                       
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP2        TIM1_AF1_ETRSEL_1                                       
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP3        (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                 
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP4        TIM1_AF1_ETRSEL_2                                       
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP5        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                 
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP6        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                 
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_COMP7        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_TIM2_ETR     TIM1_AF1_ETRSEL_3                                       
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_TIM4_ETR     (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                 
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_ADC2_AWD1    (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_ADC2_AWD2    (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2)                 
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_ETRSOURCE_ADC2_AWD3    (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM4_ETRSOURCE External Trigger Source TIM4
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_GPIO         0x00000000U                                             
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP1        TIM1_AF1_ETRSEL_0                                       
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP2        TIM1_AF1_ETRSEL_1                                       
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP3        (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                 
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP4        TIM1_AF1_ETRSEL_2                                       
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP5        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                 
ARM GAS  /tmp/cc85dWdm.s 			page 427


1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP6        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                 
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_COMP7        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_TIM3_ETR     TIM1_AF1_ETRSEL_3                                       
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM5)
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_ETRSOURCE_TIM5_ETR     (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                 
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM5 */
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM5)
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM5_ETRSOURCE External Trigger Source TIM5
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_GPIO         0x00000000U                                             
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP1        TIM1_AF1_ETRSEL_0                                       
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP2        TIM1_AF1_ETRSEL_1                                       
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP3        (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                 
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP4        TIM1_AF1_ETRSEL_2                                       
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP5        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                 
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP6        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                 
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_COMP7        (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_TIM2_ETR     TIM1_AF1_ETRSEL_3                                       
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_ETRSOURCE_TIM3_ETR     (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                 
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM5 */
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM8_ETRSOURCE External Trigger Source TIM8
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_GPIO        0x00000000U                                              
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP1       TIM1_AF1_ETRSEL_0                                        
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP2       TIM1_AF1_ETRSEL_1                                        
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP3       (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                  
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP4       TIM1_AF1_ETRSEL_2                                        
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP5       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                  
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP6       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                  
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_COMP7       (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
ARM GAS  /tmp/cc85dWdm.s 			page 428


1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC2_AWD1   TIM1_AF1_ETRSEL_3                                        
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC2_AWD2   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                  
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC2_AWD3   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1)                  
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(ADC3)
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC3_AWD1   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC3_AWD2   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2)                  
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_ETRSOURCE_ADC3_AWD3   (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* ADC3 */
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM20)
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM20_ETRSOURCE External Trigger Source TIM20
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_GPIO       0x00000000U                                              
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP1      TIM1_AF1_ETRSEL_0                                        
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP2      TIM1_AF1_ETRSEL_1                                        
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP3      (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0)                  
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP4      TIM1_AF1_ETRSEL_2                                        
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP5      (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0)                  
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP6      (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1)                  
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_COMP7      (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(ADC3)
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC3_AWD1  TIM1_AF1_ETRSEL_3                                        
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC3_AWD2  (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_0)                  
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC3_AWD3  (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1)                  
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* ADC3 */
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(ADC5)
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC5_AWD1  (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC5_AWD2  (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2)                  
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_ETRSOURCE_ADC5_AWD3  (TIM1_AF1_ETRSEL_3 | TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* ADC5 */
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM20 */
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_POLARITY break polarity
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_LOW              0x00000000U               /*!< Break input BRK is ac
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_HIGH             TIM_BDTR_BKP              /*!< Break input BRK is ac
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_FILTER break filter
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 429


1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1              0x00000000U   /*!< No filter, BRK acts asynchronousl
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N2           0x00010000U   /*!< fSAMPLING=fCK_INT, N=2 */
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N4           0x00020000U   /*!< fSAMPLING=fCK_INT, N=4 */
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N8           0x00030000U   /*!< fSAMPLING=fCK_INT, N=8 */
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N6           0x00040000U   /*!< fSAMPLING=fDTS/2, N=6 */
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N8           0x00050000U   /*!< fSAMPLING=fDTS/2, N=8 */
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N6           0x00060000U   /*!< fSAMPLING=fDTS/4, N=6 */
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N8           0x00070000U   /*!< fSAMPLING=fDTS/4, N=8 */
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N6           0x00080000U   /*!< fSAMPLING=fDTS/8, N=6 */
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N8           0x00090000U   /*!< fSAMPLING=fDTS/8, N=8 */
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N5          0x000A0000U   /*!< fSAMPLING=fDTS/16, N=5 */
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N6          0x000B0000U   /*!< fSAMPLING=fDTS/16, N=6 */
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N8          0x000C0000U   /*!< fSAMPLING=fDTS/16, N=8 */
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N5          0x000D0000U   /*!< fSAMPLING=fDTS/32, N=5 */
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N6          0x000E0000U   /*!< fSAMPLING=fDTS/32, N=6 */
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N8          0x000F0000U   /*!< fSAMPLING=fDTS/32, N=8 */
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_POLARITY BREAK2 POLARITY
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_LOW             0x00000000U             /*!< Break input BRK2 is act
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_HIGH            TIM_BDTR_BK2P           /*!< Break input BRK2 is act
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_FILTER BREAK2 FILTER
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1             0x00000000U   /*!< No filter, BRK acts asynchronousl
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N2          0x00100000U   /*!< fSAMPLING=fCK_INT, N=2 */
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N4          0x00200000U   /*!< fSAMPLING=fCK_INT, N=4 */
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N8          0x00300000U   /*!< fSAMPLING=fCK_INT, N=8 */
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N6          0x00400000U   /*!< fSAMPLING=fDTS/2, N=6 */
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N8          0x00500000U   /*!< fSAMPLING=fDTS/2, N=8 */
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N6          0x00600000U   /*!< fSAMPLING=fDTS/4, N=6 */
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N8          0x00700000U   /*!< fSAMPLING=fDTS/4, N=8 */
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N6          0x00800000U   /*!< fSAMPLING=fDTS/8, N=6 */
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N8          0x00900000U   /*!< fSAMPLING=fDTS/8, N=8 */
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N5         0x00A00000U   /*!< fSAMPLING=fDTS/16, N=5 */
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N6         0x00B00000U   /*!< fSAMPLING=fDTS/16, N=6 */
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N8         0x00C00000U   /*!< fSAMPLING=fDTS/16, N=8 */
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N5         0x00D00000U   /*!< fSAMPLING=fDTS/32, N=5 */
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N6         0x00E00000U   /*!< fSAMPLING=fDTS/32, N=6 */
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N8         0x00F00000U   /*!< fSAMPLING=fDTS/32, N=8 */
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSI OSSI
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OSSI_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OSSI_ENABLE                     TIM_BDTR_OSSI           /*!< When inactive, OxC/OCxN
ARM GAS  /tmp/cc85dWdm.s 			page 430


1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSR OSSR
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OSSR_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OSSR_ENABLE                     TIM_BDTR_OSSR           /*!< When inactive, OC/OCN o
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_INPUT BREAK INPUT
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN                0x00000000U  /*!< TIMx_BKIN input */
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN2               0x00000004U  /*!< TIMx_BKIN2 input */
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_SOURCE BKIN SOURCE
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKIN                TIM1_AF1_BKINE      /*!< BKIN input from AF controll
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP1             TIM1_AF1_BKCMP1E    /*!< internal signal: COMP1 outp
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP2             TIM1_AF1_BKCMP2E    /*!< internal signal: COMP2 outp
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP3             TIM1_AF1_BKCMP3E    /*!< internal signal: COMP3 outp
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP4             TIM1_AF1_BKCMP4E    /*!< internal signal: COMP4 outp
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP5             TIM1_AF1_BKCMP5E    /*!< internal signal: COMP5 outp
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP6             TIM1_AF1_BKCMP6E    /*!< internal signal: COMP6 outp
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP7             TIM1_AF1_BKCMP7E    /*!< internal signal: COMP7 outp
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_POLARITY BKIN POLARITY
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_LOW               TIM1_AF1_BKINP           /*!< BRK BKIN input is acti
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_HIGH              0x00000000U              /*!< BRK BKIN input is acti
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_AFMODE BREAK AF MODE
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_AFMODE_INPUT              0x00000000U              /*!< Break input BRK in inp
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK_AFMODE_BIDIRECTIONAL      TIM_BDTR_BKBID           /*!< Break input BRK in bid
ARM GAS  /tmp/cc85dWdm.s 			page 431


1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_AFMODE BREAK2 AF MODE
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_AFMODE_INPUT             0x00000000U             /*!< Break2 input BRK2 in in
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BREAK2_AFMODE_BIDIRECTIONAL     TIM_BDTR_BK2BID         /*!< Break2 input BRK2 in bi
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_RCR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_2)                     
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_BDTR          (TIM_DCR_DBA_4 | TIM_DCR_DBA_0)                     
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR5          (TIM_DCR_DBA_4 | TIM_DCR_DBA_1)                     
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR6          (TIM_DCR_DBA_4 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR3         (TIM_DCR_DBA_4 | TIM_DCR_DBA_2)                     
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DTR2          (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ECR           (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_TISEL         (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_AF1           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3)                     
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_AF2           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3 | TIM_DCR_DBA_0)     
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR            (TIM_DCR_DBA_4 | TIM_DCR_DBA_3 | TIM_DCR_DBA_1)     
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
ARM GAS  /tmp/cc85dWdm.s 			page 432


1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_19TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_1)                     
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_20TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_21TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_2)                     
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_22TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_23TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_24TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_25TRANSFERS     (TIM_DCR_DBL_4 | TIM_DCR_DBL_3)                     
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_26TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_3 |  TIM_DCR_DBL_0)   
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM1_TI1_RMP  TIM1 Timer Input Ch1 Remap
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM1 inpu
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM1 inpu
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_COMP2  TIM_TISEL_TI1SEL_1                                /*!< TIM1 inpu
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM1 inpu
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_COMP4  TIM_TISEL_TI1SEL_2                                /*!< TIM1 inpu
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI1_RMP  TIM2 Timer Input Ch1 Remap
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM2 inpu
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM2 inpu
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP2  TIM_TISEL_TI1SEL_1                                /*!< TIM2 inpu
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM2 inpu
1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP4  TIM_TISEL_TI1SEL_2                                /*!< TIM2 inpu
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP5  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)         /*!< TIM2 inpu
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI2_RMP  TIM2 Timer Input Ch2 Remap
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM2 inpu
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP1  TIM_TISEL_TI2SEL_0                                /*!< TIM2 inpu
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_1                                /*!< TIM2 inpu
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP3  (TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)         /*!< TIM2 inpu
ARM GAS  /tmp/cc85dWdm.s 			page 433


1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP4  TIM_TISEL_TI2SEL_2                                /*!< TIM2 inpu
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP6  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_0)         /*!< TIM2 inpu
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI3_RMP  TIM2 Timer Input Ch3 Remap
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI3_RMP_GPIO   0x00000000U                                       /*!< TIM2 inpu
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI3_RMP_COMP4  TIM_TISEL_TI3SEL_0                                /*!< TIM2 inpu
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI4_RMP  TIM2 Timer Input Ch4 Remap
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI4_RMP_GPIO   0x00000000U                                       /*!< TIM2 inpu
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI4_RMP_COMP1  TIM_TISEL_TI4SEL_0                                /*!< TIM2 inpu
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM2_TI4_RMP_COMP2  TIM_TISEL_TI4SEL_1                                /*!< TIM2 inpu
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_TI1_RMP  TIM3 Timer Input Ch1 Remap
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM3 inpu
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM3 inpu
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP2  TIM_TISEL_TI1SEL_1                                /*!< TIM3 inpu
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM3 inpu
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP4  TIM_TISEL_TI1SEL_2                                /*!< TIM3 inpu
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP5  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)         /*!< TIM3 inpu
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP6  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1)         /*!< TIM3 inpu
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP7  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)  
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_TI2_RMP  TIM3 Timer Input Ch2 Remap
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM3 inpu
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP1  TIM_TISEL_TI2SEL_0                                /*!< TIM3 inpu
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_1                                /*!< TIM3 inpu
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP3  (TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)         /*!< TIM3 inpu
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP4  TIM_TISEL_TI2SEL_2                                /*!< TIM3 inpu
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
ARM GAS  /tmp/cc85dWdm.s 			page 434


1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP5  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_0)         /*!< TIM3 inpu
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP6  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1)         /*!< TIM3 inpu
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP7  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)  
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_TI3_RMP  TIM3 Timer Input Ch3 Remap
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI3_RMP_GPIO   0x00000000U                                       /*!< TIM3 inpu
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM3_TI3_RMP_COMP3  TIM_TISEL_TI3SEL_0                                /*!< TIM3 inpu
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM4_TI1_RMP  TIM4 Timer Input Ch1 Remap
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM4 inpu
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM4 inpu
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP2  TIM_TISEL_TI1SEL_1                                /*!< TIM4 inpu
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM4 inpu
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP4  TIM_TISEL_TI1SEL_2                                /*!< TIM4 inpu
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP5  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)         /*!< TIM4 inpu
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP6  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1)         /*!< TIM4 inpu
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI1_RMP_COMP7  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)  
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM4_TI2_RMP  TIM4 Timer Input Ch2 Remap
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM4 inpu
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP1  TIM_TISEL_TI2SEL_0                                /*!< TIM4 inpu
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_1                                /*!< TIM4 inpu
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP3  (TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)         /*!< TIM4 inpu
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP4  TIM_TISEL_TI2SEL_2                                /*!< TIM4 inpu
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP5  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_0)         /*!< TIM4 inpu
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP6  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1)         /*!< TIM4 inpu
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
ARM GAS  /tmp/cc85dWdm.s 			page 435


1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI2_RMP_COMP7  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)  
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM4_TI3_RMP  TIM4 Timer Input Ch3 Remap
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI3_RMP_GPIO   0x00000000U                                       /*!< TIM4 inpu
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI3_RMP_COMP5  TIM_TISEL_TI3SEL_0                                /*!< TIM4 inpu
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM4_TI4_RMP  TIM4 Timer Input Ch4 Remap
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI4_RMP_GPIO   0x00000000U                                       /*!< TIM4 inpu
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM4_TI4_RMP_COMP6  TIM_TISEL_TI4SEL_0                                /*!< TIM4 inpu
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM5)
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM5_TI1_RMP  TIM5 Timer Input Ch1 Remap
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM5 inpu
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_LSI    TIM_TISEL_TI1SEL_0                                /*!< TIM5 inpu
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_LSE    TIM_TISEL_TI1SEL_1                                /*!< TIM5 inpu
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_RTC_WK (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM5 inpu
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_2                                /*!< TIM5 inpu
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP2  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)         /*!< TIM5 inpu
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1)         /*!< TIM5 inpu
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP4  (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)  
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP5  TIM_TISEL_TI1SEL_3                                /*!< TIM5 inpu
1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP6  (TIM_TISEL_TI1SEL_3 | TIM_TISEL_TI1SEL_0)         /*!< TIM5 inpu
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI1_RMP_COMP7  (TIM_TISEL_TI1SEL_3 | TIM_TISEL_TI1SEL_1)         /*!< TIM5 inpu
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM5_TI2_RMP  TIM5 Timer Input Ch2 Remap
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM5 inpu
ARM GAS  /tmp/cc85dWdm.s 			page 436


1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP1  TIM_TISEL_TI2SEL_0                                /*!< TIM5 inpu
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_1                                /*!< TIM5 inpu
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP3  (TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)         /*!< TIM5 inpu
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP4  TIM_TISEL_TI2SEL_2                                /*!< TIM5 inpu
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP5  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_0)         /*!< TIM5 inpu
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP6  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1)         /*!< TIM5 inpu
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM5_TI2_RMP_COMP7  (TIM_TISEL_TI2SEL_2 | TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)  
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM5 */
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM8_TI1_RMP  TIM8 Timer Input Ch1 Remap
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM8 inpu
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM8 inpu
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_COMP2  TIM_TISEL_TI1SEL_1                                /*!< TIM8 inpu
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_COMP3  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM8 inpu
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_COMP4  TIM_TISEL_TI1SEL_2                                /*!< TIM8 inpu
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM15_TI1_RMP  TIM15 Timer Input Ch1 Remap
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_GPIO  0x00000000U                                       /*!< TIM15 inp
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_LSE   TIM_TISEL_TI1SEL_0                                /*!< TIM15 inp
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_COMP1 TIM_TISEL_TI1SEL_1                                /*!< TIM15 inp
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_COMP2 (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)         /*!< TIM15 inp
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_COMP5 TIM_TISEL_TI1SEL_2                                /*!< TIM15 inp
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_COMP7 (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)         /*!< TIM15 inp
1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM15_TI2_RMP  TIM15 Timer Input Ch2 Remap
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_GPIO  0x00000000U                                       /*!< TIM15 inp
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_COMP2 TIM_TISEL_TI2SEL_0                                /*!< TIM15 inp
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_COMP3 TIM_TISEL_TI2SEL_1                                /*!< TIM15 inp
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_COMP6 (TIM_TISEL_TI2SEL_1 | TIM_TISEL_TI2SEL_0)         /*!< TIM15 inp
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
ARM GAS  /tmp/cc85dWdm.s 			page 437


1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_COMP7 TIM_TISEL_TI2SEL_2                                /*!< TIM15 inp
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM16_TI1_RMP  TIM16 Timer Input Ch1 Remap
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_GPIO    0x00000000U                                     /*!< TIM16 inp
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_COMP6   TIM_TISEL_TI1SEL_0                              /*!< TIM16 inp
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_MCO     TIM_TISEL_TI1SEL_1                              /*!< TIM16 inp
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_HSE_32  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)       /*!< TIM16 inp
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_RTC_WK  TIM_TISEL_TI1SEL_2                              /*!< TIM16 inp
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_LSE     (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)       /*!< TIM16 inp
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_LSI     (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1)       /*!< TIM16 inp
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM17_TI1_RMP  TIM17 Timer Input Ch1 Remap
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_GPIO    0x00000000U                                     /*!< TIM17 inp
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_COMP5   TIM_TISEL_TI1SEL_0                              /*!< TIM17 inp
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_MCO     TIM_TISEL_TI1SEL_1                              /*!< TIM17 inp
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_HSE_32  (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)       /*!< TIM17 inp
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_RTC_WK  TIM_TISEL_TI1SEL_2                              /*!< TIM17 inp
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_LSE     (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_0)       /*!< TIM17 inp
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_LSI     (TIM_TISEL_TI1SEL_2 | TIM_TISEL_TI1SEL_1)       /*!< TIM17 inp
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(TIM20)
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM20_TI1_RMP  TIM20 Timer Input Ch1 Remap
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_TI1_RMP_GPIO  0x00000000U                                      /*!< TIM20 inpu
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_TI1_RMP_COMP1 TIM_TISEL_TI1SEL_0                               /*!< TIM20 inpu
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_TI1_RMP_COMP2 TIM_TISEL_TI1SEL_1                               /*!< TIM20 inpu
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_TI1_RMP_COMP3 (TIM_TISEL_TI1SEL_1 | TIM_TISEL_TI1SEL_0)        /*!< TIM20 inpu
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_TIM20_TI1_RMP_COMP4 TIM_TISEL_TI1SEL_2                               /*!< TIM20 inpu
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* TIM20 */
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCREF_CLR_INT OCREF clear input selection
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_ETR         OCREF_CLEAR_SELECT_Msk                   /*!< OCREF_CLR_IN
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP1       0x00000000U                              /*!< OCREF clear 
ARM GAS  /tmp/cc85dWdm.s 			page 438


1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP2       TIM1_AF2_OCRSEL_0                        /*!< OCREF clear 
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP3       TIM1_AF2_OCRSEL_1                        /*!< OCREF clear 
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP4       (TIM1_AF2_OCRSEL_1 | TIM1_AF2_OCRSEL_0)  /*!< OCREF clear 
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP5)
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP5       TIM1_AF2_OCRSEL_2                        /*!< OCREF clear 
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP5 */
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP6)
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP6       (TIM1_AF2_OCRSEL_2 | TIM1_AF2_OCRSEL_0)  /*!< OCREF clear 
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP6 */
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #if defined(COMP7)
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP7       (TIM1_AF2_OCRSEL_2 | TIM1_AF2_OCRSEL_1)  /*!< OCREF clear 
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #endif /* COMP7 */
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_INDEX_DIR index direction selection
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_UP_DOWN     0x00000000U         /*!< Index resets the counter whatever the dir
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_UP          TIM_ECR_IDIR_0      /*!< Index resets the counter when up-counting
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_DOWN        TIM_ECR_IDIR_1      /*!< Index resets the counter when down-counti
1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_INDEX_POSITION index positioning selection
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_DOWN_DOWN    0x00000000U                           /*!< Index resets 
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_DOWN_UP      TIM_ECR_IPOS_0                        /*!< Index resets 
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_UP_DOWN      TIM_ECR_IPOS_1                        /*!< Index resets 
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_UP_UP        (TIM_ECR_IPOS_1 | TIM_ECR_IPOS_0)     /*!< Index resets 
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_DOWN         0x00000000U                           /*!< Index resets 
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_POSITION_UP           TIM_ECR_IPOS_0                        /*!< Index resets 
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_FIRST_INDEX first index selection
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_ALL           0x00000000U                           /*!< Index is always activ
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_INDEX_FIRST_ONLY    TIM_ECR_FIDX                          /*!< The first Index only 
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_PWPRSC Pulse on compare pulse width prescaler
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X1     0x00000000U                                              /*!< Pulse on
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X2     TIM_ECR_PWPRSC_0                                         /*!< Pulse on
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X4     TIM_ECR_PWPRSC_1                                         /*!< Pulse on
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X8     (TIM_ECR_PWPRSC_1 | TIM_ECR_PWPRSC_0)                    /*!< Pulse on
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X16    TIM_ECR_PWPRSC_2                                         /*!< Pulse on
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X32    (TIM_ECR_PWPRSC_2 | TIM_ECR_PWPRSC_0)                    /*!< Pulse on
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X64    (TIM_ECR_PWPRSC_2 | TIM_ECR_PWPRSC_1)                    /*!< Pulse on
ARM GAS  /tmp/cc85dWdm.s 			page 439


1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_PWPRSC_X128   (TIM_ECR_PWPRSC_2 | TIM_ECR_PWPRSC_1 | TIM_ECR_PWPRSC_0) /*!< Pulse on
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_HSE_32_REQUEST Clock HSE/32 request
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_HSE_32_NOT_REQUEST     0x00000000U            /*!< Clock HSE/32 not requested */
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_HSE_32_REQUEST         TIM_OR_HSE32EN         /*!< Clock HSE/32 requested for TIM16/
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** Legacy definitions for compatibility purpose
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @cond 0
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_DFBK  LL_TIM_BKIN_SOURCE_DF1BK
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** @endcond
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Write a value in TIM register.
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __REG__ Register to be written
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Read a value in TIM register.
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __REG__ Register to be read
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Register value
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EM_Exported_Macros Exported_Macros
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 440


1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro retrieving the UIFCPY flag from the counter value.
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GETFLAG_UIFCPY (@ref LL_TIM_GetCounter ());
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  Relevant only if UIF flag remapping has been enabled  (UIF status bit is copied
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        to TIMx_CNT register bit 31)
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __CNT__ Counter value
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval UIF status bit
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_GETFLAG_UIFCPY(__CNT__)  \
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   (READ_BIT((__CNT__), TIM_CNT_UIFCPY) >> TIM_CNT_UIFCPY_Pos)
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating DTG[0:7] in the TIMx_BDTR register to achieve the requested de
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DEADTIME (80000000, @ref LL_TIM_GetClockDivision (), 120);
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __DT__ deadtime duration (in ns)
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval DTG[0:7]
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_DEADTIME(__TIMCLK__, __CKD__, __DT__)  \
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ( (((uint64_t)((__DT__)*1000U)) < ((DT_DELAY_1+1U) * TIM_CALC_DTS((__TIMCLK__), (__CKD__))))    ?
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (uint8_t)(((uint64_t)((__DT__)*1000U) / TIM_CALC_DTS((__TIMCLK__), (__CKD__)))  & DT_DELAY_1) :
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((64U + (DT_DELAY_2+1U)) * 2U * TIM_CALC_DTS((__TIMCLK__), (__C
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (uint8_t)(DT_RANGE_2 | ((uint8_t)((uint8_t)((((uint64_t)((__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                  (__CKD__))) >> 1U) - (uint8_t) 64) & DT_DELAY_2)) 
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_3+1U)) * 8U * TIM_CALC_DTS((__TIMCLK__), (__C
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (uint8_t)(DT_RANGE_3 | ((uint8_t)((uint8_t)(((((uint64_t)(__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                  (__CKD__))) >> 3U) - (uint8_t) 32) & DT_DELAY_3)) 
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_4+1U)) * 16U * TIM_CALC_DTS((__TIMCLK__), (__
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     (uint8_t)(DT_RANGE_4 | ((uint8_t)((uint8_t)(((((uint64_t)(__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                  (__CKD__))) >> 4U) - (uint8_t) 32) & DT_DELAY_4)) 
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     0U)
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)(((__TIMCLK__)/(__CNTCLK__)) - 1U) : 0U)
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1U))
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 441


1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value, with dithering feature enabled, to achi
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         output signal frequency.
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR_DITHER (1000000, @ref LL_TIM_GetPrescaler (), 10000);
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_ARR_DITHER(__TIMCLK__, __PSC__, __FREQ__) \
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? \
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****    (uint32_t)((((uint64_t)(__TIMCLK__) * 16U/((__FREQ__) * ((__PSC__) + 1U))) - 16U)) : 0U)
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         active/inactive delay.
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****               / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value, with dithering feature enabled, to achieve 
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         output compare active/inactive delay.
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY_DITHER (1000000, @ref LL_TIM_GetPrescaler (), 10);
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY_DITHER(__TIMCLK__, __PSC__, __DELAY__)  \
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__) * 16U) \
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****               / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (when the timer operates in one pulse mode).
1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****               + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value, with dithering feature enabled, to achi
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         pulse duration (when the timer operates in one pulse mode).
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE_DITHER (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
ARM GAS  /tmp/cc85dWdm.s 			page 442


1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE_DITHER(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((uint32_t)(__LL_TIM_CALC_DELAY_DITHER((__TIMCLK__), (__PSC__), (__PULSE__)) \
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****               + __LL_TIM_CALC_DELAY_DITHER((__TIMCLK__), (__PSC__), (__DELAY__))))
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable timer counter.
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable timer counter.
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/cc85dWdm.s 			page 443


2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(TIM_TypeDef *TIMx)
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable update event generation.
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable update event generation.
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(TIM_TypeDef *TIMx)
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set update event source
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        - Counter overflow/underflow
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        - Setting the UG bit
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        - Update generation through the slave mode controller
ARM GAS  /tmp/cc85dWdm.s 			page 444


2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual event update source
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(TIM_TypeDef *TIMx)
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(TIM_TypeDef *TIMx)
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
ARM GAS  /tmp/cc85dWdm.s 			page 445


2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       by a timer instance.
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual counter mode.
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       by a timer instance.
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(TIM_TypeDef *TIMx)
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t counter_mode;
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CMS));
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   if (counter_mode == 0U)
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   {
2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****     counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   }
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return counter_mode;
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
ARM GAS  /tmp/cc85dWdm.s 			page 446


2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
 3944              		.loc 12 2204 22 view .LVU1287
 3945              	.LBB809:
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_ARPE);
 3946              		.loc 12 2206 3 view .LVU1288
 3947 007e 2368     		ldr	r3, [r4]
 3948 0080 23F08003 		bic	r3, r3, #128
 3949 0084 2360     		str	r3, [r4]
 3950              	.LVL254:
 3951              		.loc 12 2206 3 is_stmt 0 view .LVU1289
 3952              	.LBE809:
 3953              	.LBE808:
1033:Src/main.c    ****   LL_TIM_IC_SetActiveInput(TIM4, LL_TIM_CHANNEL_CH1, LL_TIM_ACTIVEINPUT_DIRECTTI);
 3954              		.loc 1 1033 3 is_stmt 1 view .LVU1290
 3955              	.LBB810:
 3956              	.LBI810:
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(TIM_TypeDef *TIMx)
2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (when supported) and the digital filters.
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
ARM GAS  /tmp/cc85dWdm.s 			page 447


2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
2241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         generators (when supported) and the digital filters.
2242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
2243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
2244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
2245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
2246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
2249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
2250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
2251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(TIM_TypeDef *TIMx)
2253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
2255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the counter value.
2259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the Counter value interpretation
2262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
2263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
2265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
2268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
2270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the counter value.
2274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the Counter value interpretation
2277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
2278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
2280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(TIM_TypeDef *TIMx)
2282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
2284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the current direction of the counter
2288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
2289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
2292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
2293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 448


2294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(TIM_TypeDef *TIMx)
2295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
2297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the prescaler value.
2301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
2302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
2303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
2304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
2305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
2306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
2308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
2311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
2313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the prescaler value.
2317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
2318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
2320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(TIM_TypeDef *TIMx)
2322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
2324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the auto-reload value.
2328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
2329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
2332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       In case dithering is activated,macro __LL_TIM_CALC_ARR_DITHER can be used instead, to cal
2333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       parameter.
2334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
2335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
2337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
2340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
2342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the auto-reload value.
2346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
2347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation
2350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /tmp/cc85dWdm.s 			page 449


2351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Auto-reload value
2352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(TIM_TypeDef *TIMx)
2354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
2356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the repetition counter value.
2360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note For advanced timer instances RepetitionCounter can be up to 65535.
2361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
2362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
2363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_SetRepetitionCounter
2364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  RepetitionCounter between Min_Data=0 and Max_Data=255 or 65535 for advanced timer.
2366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
2369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->RCR, RepetitionCounter);
2371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the repetition counter value.
2375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
2376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
2377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_GetRepetitionCounter
2378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Repetition counter value
2380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetRepetitionCounter(TIM_TypeDef *TIMx)
2382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->RCR));
2384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Force a continuous copy of the update interrupt flag (UIF) into the timer counter regis
2388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This allows both the counter value and a potential roll-over condition signalled by the U
2389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       in an atomic way.
2390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_EnableUIFRemap
2391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUIFRemap(TIM_TypeDef *TIMx)
2395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
2397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable update interrupt flag (UIF) remapping.
2401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_DisableUIFRemap
2402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUIFRemap(TIM_TypeDef *TIMx)
2406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
ARM GAS  /tmp/cc85dWdm.s 			page 450


2408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) copy is set.
2412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Counter Counter value
2413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveUIFCPY(uint32_t Counter)
2416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (((Counter & TIM_CNT_UIFCPY) == (TIM_CNT_UIFCPY)) ? 1UL : 0UL);
2418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable dithering.
2422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DITHERING_INSTANCE(TIMx) can be used to check whether or not
2423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides dithering.
2424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DITHEN          LL_TIM_EnableDithering
2425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDithering(TIM_TypeDef *TIMx)
2429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_DITHEN);
2431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable dithering.
2435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DITHERING_INSTANCE(TIMx) can be used to check whether or not
2436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides dithering.
2437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DITHEN          LL_TIM_DisableDithering
2438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDithering(TIM_TypeDef *TIMx)
2442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_DITHEN);
2444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether dithering is activated.
2448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DITHERING_INSTANCE(TIMx) can be used to check whether or not
2449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides dithering.
2450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR1          DITHEN          LL_TIM_IsEnabledDithering
2451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDithering(TIM_TypeDef *TIMx)
2455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_DITHEN) == (TIM_CR1_DITHEN)) ? 1UL : 0UL);
2457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
2461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
2464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
ARM GAS  /tmp/cc85dWdm.s 			page 451


2465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
2468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note CCxE, CCxNE and OCxM bits are preloaded, after having been written,
2469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       they are updated only when a commutation event (COM) occurs.
2470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Only on channels that have a complementary output.
2471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
2472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
2473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_EnablePreload
2474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnablePreload(TIM_TypeDef *TIMx)
2478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_CCPC);
2480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
2484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
2485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
2486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_DisablePreload
2487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisablePreload(TIM_TypeDef *TIMx)
2491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_CCPC);
2493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the updated source of the capture/compare control bits (CCxE, CCxNE and OCxM).
2497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
2498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
2499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCUS          LL_TIM_CC_SetUpdate
2500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CCUpdateSource This parameter can be one of the following values:
2502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_ONLY
2503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI
2504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetUpdate(TIM_TypeDef *TIMx, uint32_t CCUpdateSource)
2507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCUS, CCUpdateSource);
2509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
2513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
2514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
2516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
2517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
2518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
2521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 452


2522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
2523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
2527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
2528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
2531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
2532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(TIM_TypeDef *TIMx)
2534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
2536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the lock level to freeze the
2540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         configuration of several capture/compare parameters.
2541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       the lock mechanism is supported by a timer instance.
2543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         LOCK          LL_TIM_CC_SetLockLevel
2544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  LockLevel This parameter can be one of the following values:
2546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_OFF
2547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_1
2548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_2
2549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_3
2550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetLockLevel(TIM_TypeDef *TIMx, uint32_t LockLevel)
2553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_LOCK, LockLevel);
2555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
2559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
2560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_EnableChannel\n
2561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
2562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_EnableChannel\n
2563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
2564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_EnableChannel\n
2565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel\n
2566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NE         LL_TIM_CC_EnableChannel\n
2567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_EnableChannel\n
2568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_EnableChannel
2569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
2571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
ARM GAS  /tmp/cc85dWdm.s 			page 453


2579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
2584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
2586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
2590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
2591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_DisableChannel\n
2592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
2593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_DisableChannel\n
2594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
2595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_DisableChannel\n
2596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel\n
2597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NE         LL_TIM_CC_DisableChannel\n
2598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_DisableChannel\n
2599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_DisableChannel
2600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
2602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
2615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
2617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
2621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
2622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_IsEnabledChannel\n
2623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
2624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_IsEnabledChannel\n
2625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
2626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_IsEnabledChannel\n
2627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel\n
2628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NE         LL_TIM_CC_IsEnabledChannel\n
2629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_IsEnabledChannel\n
2630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_IsEnabledChannel
2631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
2633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
ARM GAS  /tmp/cc85dWdm.s 			page 454


2636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(TIM_TypeDef *TIMx, uint32_t Channels)
2646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
2648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
2652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
2655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
2656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure an output channel.
2659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
2660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
2661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
2662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
2663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        CC5S          LL_TIM_OC_ConfigOutput\n
2664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        CC6S          LL_TIM_OC_ConfigOutput\n
2665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
2666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
2667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
2668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
2669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_ConfigOutput\n
2670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_ConfigOutput\n
2671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS1          LL_TIM_OC_ConfigOutput\n
2672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS2          LL_TIM_OC_ConfigOutput\n
2673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS3          LL_TIM_OC_ConfigOutput\n
2674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS4          LL_TIM_OC_ConfigOutput\n
2675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS5          LL_TIM_OC_ConfigOutput\n
2676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2          OIS6          LL_TIM_OC_ConfigOutput
2677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
2687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW or @ref LL_TIM_OCIDLESTATE_HIGH
2688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
2691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
ARM GAS  /tmp/cc85dWdm.s 			page 455


2693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
2695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
2696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
2697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),
2698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              (Configuration & TIM_CR2_OIS1) << SHIFT_TAB_OISx[iChannel]);
2699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
2703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
2704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
2705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
2706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
2707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode\n
2708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_SetMode\n
2709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_SetMode
2710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
2719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
2720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
2721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
2722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
2723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
2724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
2725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
2726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
2727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
2728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
2729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
2730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
2731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM1
2732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM2
2733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PULSE_ON_COMPARE   (for channel 3 or channel 4 only)
2734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_DIRECTION_OUTPUT   (for channel 3 or channel 4 only)
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
2738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]), Mode << SHIFT
2742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
2746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
2747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
2748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
2749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode\n
ARM GAS  /tmp/cc85dWdm.s 			page 456


2750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_GetMode\n
2751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_GetMode
2752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
2762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
2763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
2764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
2766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
2768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
2769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
2770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
2771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
2772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
2773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM1
2774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM2
2775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PULSE_ON_COMPARE   (for channel 3 or channel 4 only)
2776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_DIRECTION_OUTPUT   (for channel 3 or channel 4 only)
2777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(TIM_TypeDef *TIMx, uint32_t Channel)
2779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIFT
2783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
2787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
2788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_SetPolarity\n
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
2790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_SetPolarity\n
2791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
2792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_SetPolarity\n
2793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity\n
2794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_OC_SetPolarity\n
2795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_SetPolarity\n
2796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_SetPolarity
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
ARM GAS  /tmp/cc85dWdm.s 			page 457


2807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
2810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
2811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
2812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
2815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
2818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
2822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
2823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_GetPolarity\n
2824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
2825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_GetPolarity\n
2826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
2827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_GetPolarity\n
2828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity\n
2829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_OC_GetPolarity\n
2830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_GetPolarity\n
2831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_GetPolarity
2832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
2846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
2847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
2852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the IDLE state of an output channel
2856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This function is significant only for the timer instances
2857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       supporting the break feature. Macro IS_TIM_BREAK_INSTANCE(TIMx)
2858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       can be used to check whether or not a timer instance provides
2859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a break input.
2860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_SetIdleState\n
2861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_SetIdleState\n
2863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
ARM GAS  /tmp/cc85dWdm.s 			page 458


2864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_SetIdleState\n
2865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_SetIdleState\n
2866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_SetIdleState\n
2867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS4N         LL_TIM_OC_SetIdleState\n
2868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_SetIdleState\n
2869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_SetIdleState
2870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  IdleState This parameter can be one of the following values:
2883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetIdleState(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t IdleState
2888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),  IdleState << SHIFT_TAB_OISx[iC
2891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the IDLE state of an output channel
2895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_GetIdleState\n
2896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_GetIdleState\n
2898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_GetIdleState\n
2900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_GetIdleState\n
2901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_GetIdleState\n
2902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS4N         LL_TIM_OC_GetIdleState\n
2903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_GetIdleState\n
2904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_GetIdleState
2905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4N
2915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 459


2921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetIdleState(TIM_TypeDef *TIMx, uint32_t Channel)
2922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel])) >> SHIFT_TAB_OISx[iChanne
2925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
2929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
2930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
2931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
2932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
2933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast\n
2934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_EnableFast\n
2935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_EnableFast
2936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
2956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
2957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
2958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
2959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast\n
2960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_DisableFast\n
2961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_DisableFast
2962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
2971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 460


2978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
2979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
2980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
2981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
2982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
2983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
2984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
2985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
2986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_IsEnabledFast\n
2987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_IsEnabledFast
2988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
2989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
2998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(TIM_TypeDef *TIMx, uint32_t Channel)
2999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
3002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
3003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
3004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
3008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
3009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
3010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
3011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload\n
3012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_EnablePreload\n
3013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_EnablePreload
3014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
3025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
3029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
3033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
3034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
ARM GAS  /tmp/cc85dWdm.s 			page 461


3035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
3036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload\n
3037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_DisablePreload\n
3038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_DisablePreload
3039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
3050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
3054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
3058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
3059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
3060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
3061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
3062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_IsEnabledPreload\n
3063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_IsEnabledPreload
3064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(TIM_TypeDef *TIMx, uint32_t Channel)
3075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
3078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
3079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
3080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
3084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
3085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
3086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
3087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
3088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
3089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
3090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear\n
3091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_EnableClear\n
ARM GAS  /tmp/cc85dWdm.s 			page 462


3092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_EnableClear
3093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
3104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
3108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
3112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
3113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
3114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
3115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
3116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
3117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear\n
3118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_DisableClear\n
3119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_DisableClear
3120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
3131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
3135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
3139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
3140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
3141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
3142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
3143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
3144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
3145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
3146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
3147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_IsEnabledClear\n
3148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_IsEnabledClear
ARM GAS  /tmp/cc85dWdm.s 			page 463


3149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
3156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
3157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(TIM_TypeDef *TIMx, uint32_t Channel)
3160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
3163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
3164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
3165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal an
3169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         the Ocx and OCxN signals).
3170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       dead-time insertion feature is supported by a timer instance.
3172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
3173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         DTG           LL_TIM_OC_SetDeadTime
3174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
3176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
3179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_DTG, DeadTime);
3181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
3185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
3186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
3189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
3190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
3192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
3197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
3199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
3203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
3204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
ARM GAS  /tmp/cc85dWdm.s 			page 464


3206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
3207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
3208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
3210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
3215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
3217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
3221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
3222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
3225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel is supported by a timer instance.
3226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
3228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
3233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
3235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
3239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
3240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
3243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
3244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
3246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
3251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
3253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 5 (TIMx_CCR5).
3257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
3258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
3259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_SetCompareCH5
3261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
ARM GAS  /tmp/cc85dWdm.s 			page 465


3263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH5(TIM_TypeDef *TIMx, uint32_t CompareValue)
3266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, TIM_CCR5_CCR5, CompareValue);
3268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set compare value for output channel 6 (TIMx_CCR6).
3272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
3273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
3274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, CompareValue can be calculated with macro @ref __LL_TIM_CALC_D
3275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_SetCompareCH6
3276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
3278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH6(TIM_TypeDef *TIMx, uint32_t CompareValue)
3281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR6, CompareValue);
3283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
3287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
3288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
3291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
3292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
3294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(TIM_TypeDef *TIMx)
3298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
3300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
3304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
3305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
3308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
3309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
3311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(TIM_TypeDef *TIMx)
3315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
3317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 466


3320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
3321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
3322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
3325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
3326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
3328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(TIM_TypeDef *TIMx)
3332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
3334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
3338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
3339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
3342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
3343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
3345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(TIM_TypeDef *TIMx)
3349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
3351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR5) set for  output channel 5.
3355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
3356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
3357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_GetCompareCH5
3359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH5(TIM_TypeDef *TIMx)
3363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CCR5, TIM_CCR5_CCR5));
3365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR6) set for  output channel 6.
3369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
3370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
3371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_GetCompareCH6
3373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
3375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH6(TIM_TypeDef *TIMx)
ARM GAS  /tmp/cc85dWdm.s 			page 467


3377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR6));
3379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Select on which reference signal the OC5REF is combined to.
3383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_COMBINED3PHASEPWM_INSTANCE(TIMx) can be used to check
3384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the combined 3-phase PWM mode.
3385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR5         GC5C3          LL_TIM_SetCH5CombinedChannels\n
3386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCR5         GC5C2          LL_TIM_SetCH5CombinedChannels\n
3387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCR5         GC5C1          LL_TIM_SetCH5CombinedChannels
3388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  GroupCH5 This parameter can be a combination of the following values:
3390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_NONE
3391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC1REFC
3392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC2REFC
3393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC3REFC
3394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCH5CombinedChannels(TIM_TypeDef *TIMx, uint32_t GroupCH5)
3397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, (TIM_CCR5_GC5C3 | TIM_CCR5_GC5C2 | TIM_CCR5_GC5C1), GroupCH5);
3399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the pulse on compare pulse width prescaler.
3403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_PULSEONCOMPARE_INSTANCE(TIMx) can be used to check
3404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the pulse on compare feature is supported by the timer
3405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
3406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          PWPRSC           LL_TIM_OC_SetPulseWidthPrescaler
3407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  PulseWidthPrescaler This parameter can be one of the following values:
3409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X1
3410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X2
3411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X4
3412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X8
3413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X16
3414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X32
3415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X64
3416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X128
3417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPulseWidthPrescaler(TIM_TypeDef *TIMx, uint32_t PulseWidthPrescal
3420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->ECR, TIM_ECR_PWPRSC, PulseWidthPrescaler);
3422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the pulse on compare pulse width prescaler.
3426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_PULSEONCOMPARE_INSTANCE(TIMx) can be used to check
3427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the pulse on compare feature is supported by the timer
3428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
3429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          PWPRSC           LL_TIM_OC_GetPulseWidthPrescaler
3430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X1
3433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X2
ARM GAS  /tmp/cc85dWdm.s 			page 468


3434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X4
3435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X8
3436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X16
3437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X32
3438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X64
3439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_PWPRSC_X128
3440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPulseWidthPrescaler(TIM_TypeDef *TIMx)
3442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->ECR, TIM_ECR_PWPRSC));
3444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the pulse on compare pulse width duration.
3448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_PULSEONCOMPARE_INSTANCE(TIMx) can be used to check
3449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the pulse on compare feature is supported by the timer
3450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
3451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          PW           LL_TIM_OC_SetPulseWidth
3452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  PulseWidth This parameter can be between Min_Data=0 and Max_Data=255
3454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPulseWidth(TIM_TypeDef *TIMx, uint32_t PulseWidth)
3457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->ECR, TIM_ECR_PW, PulseWidth << TIM_ECR_PW_Pos);
3459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the pulse on compare pulse width duration.
3463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_PULSEONCOMPARE_INSTANCE(TIMx) can be used to check
3464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not the pulse on compare feature is supported by the timer
3465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       instance.
3466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          PW           LL_TIM_OC_GetPulseWidth
3467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be between Min_Data=0 and Max_Data=255:
3469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPulseWidth(TIM_TypeDef *TIMx)
3471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->ECR, TIM_ECR_PW));
3473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
3477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
3480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
3481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure input channel.
3484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
3485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
3486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
3487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
3488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
3489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
3490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
ARM GAS  /tmp/cc85dWdm.s 			page 469


3491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
3492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
3493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
3494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
3495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
3496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
3497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
3498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
3499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
3500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
3501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
3502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
3503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_Config
3504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
3511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
3512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
3513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
3514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING or @ref LL_TIM_I
3515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
3518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
3522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))       
3523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              << SHIFT_TAB_ICxx[iChannel]);
3524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
3525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
3526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the active input.
3530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
3531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
3532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
3533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
3534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
3541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
3542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
3543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
3544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
3547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 470


3548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
3551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the current active input.
3555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
3556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
3557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
3558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
3559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
3567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
3568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
3569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel)
3571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
3574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
3575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
3579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
3580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
3581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
3582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
3583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
3590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
3591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
3592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
3593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
3594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
3597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
3601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
ARM GAS  /tmp/cc85dWdm.s 			page 471


3605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
3606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
3607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
3608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
3609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
3617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
3618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
3619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
3620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel)
3622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
3625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
3626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the input filter duration.
3630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
3631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
3632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
3633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
3634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
3641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
3642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
3643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
3644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
3645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
3646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
3647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
3648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
3649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
3650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
3651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
3652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
3653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
3654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
3655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
3656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
3657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
3660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
ARM GAS  /tmp/cc85dWdm.s 			page 472


3662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
3664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the input filter duration.
3668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
3669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
3670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
3671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
3672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
3680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
3681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
3682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
3683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
3684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
3685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
3686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
3687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
3688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
3689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
3690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
3691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
3692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
3693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
3694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
3695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(TIM_TypeDef *TIMx, uint32_t Channel)
3697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
3700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
3701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the input channel polarity.
3705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
3706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
3707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
3708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
3709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
3710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
3711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
3712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_SetPolarity
3713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
ARM GAS  /tmp/cc85dWdm.s 			page 473


3719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
3720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
3721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
3722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
3723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
3726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
3729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
3730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
3734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
3735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
3736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
3737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
3738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
3739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
3740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
3741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_GetPolarity
3742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
3750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
3751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
3752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
3754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
3757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
3758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
3762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an XOR input.
3764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
3765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
3769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
3771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
3775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
ARM GAS  /tmp/cc85dWdm.s 			page 474


3776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an XOR input.
3777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
3778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
3782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
3784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
3788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * a timer instance provides an XOR input.
3790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
3791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(TIM_TypeDef *TIMx)
3795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
3797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
3801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
3805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
3806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
3808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(TIM_TypeDef *TIMx)
3812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
3814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
3818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
3822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
3823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
3825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(TIM_TypeDef *TIMx)
3829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
3831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 475


3833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
3835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
3839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
3840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
3842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(TIM_TypeDef *TIMx)
3846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
3848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
3852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
3856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
3857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note If dithering is activated, pay attention to the returned value interpretation.
3858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
3859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(TIM_TypeDef *TIMx)
3863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
3865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
3869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
3872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
3873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
3876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
3877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
3880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
3884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
3886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
ARM GAS  /tmp/cc85dWdm.s 			page 476


3890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
3893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
3897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
3899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
3903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
3906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(TIM_TypeDef *TIMx)
3910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
3912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
3916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
3917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
3918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       function. This timer input must be configured by calling
3919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
3920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
3921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
3922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
3925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
3926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
3928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
3929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
3930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
3931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
3934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
3936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
3940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
3941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
3942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
3943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
3945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
3946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
ARM GAS  /tmp/cc85dWdm.s 			page 477


3947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
3948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_CLOCKPLUSDIRECTION_X2
3949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_CLOCKPLUSDIRECTION_X1
3950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_DIRECTIONALCLOCK_X2
3951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_DIRECTIONALCLOCK_X1_TI12
3952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X1_TI1
3953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X1_TI2
3954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
 3957              		.loc 12 3956 22 view .LVU1291
 3958              	.LBB811:
3957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
 3959              		.loc 12 3958 3 view .LVU1292
 3960 0086 A368     		ldr	r3, [r4, #8]
 3961 0088 23F48033 		bic	r3, r3, #65536
 3962 008c 23F00703 		bic	r3, r3, #7
 3963 0090 43F00303 		orr	r3, r3, #3
 3964 0094 A360     		str	r3, [r4, #8]
 3965              	.LVL255:
 3966              		.loc 12 3958 3 is_stmt 0 view .LVU1293
 3967              	.LBE811:
 3968              	.LBE810:
1034:Src/main.c    ****   LL_TIM_IC_SetPrescaler(TIM4, LL_TIM_CHANNEL_CH1, LL_TIM_ICPSC_DIV1);
 3969              		.loc 1 1034 3 is_stmt 1 view .LVU1294
 3970              	.LBB812:
 3971              	.LBI812:
3546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 3972              		.loc 12 3546 22 view .LVU1295
 3973              	.LBB813:
3548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 3974              		.loc 12 3548 3 view .LVU1296
3549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
 3975              		.loc 12 3549 3 view .LVU1297
3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 3976              		.loc 12 3550 3 view .LVU1298
 3977 0096 A369     		ldr	r3, [r4, #24]
 3978 0098 23F00303 		bic	r3, r3, #3
 3979 009c 43F00103 		orr	r3, r3, #1
 3980 00a0 A361     		str	r3, [r4, #24]
 3981              	.LVL256:
3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 3982              		.loc 12 3550 3 is_stmt 0 view .LVU1299
 3983              	.LBE813:
 3984              	.LBE812:
1035:Src/main.c    ****   LL_TIM_IC_SetFilter(TIM4, LL_TIM_CHANNEL_CH1, M1_ENC_IC_FILTER);
 3985              		.loc 1 1035 3 is_stmt 1 view .LVU1300
 3986              	.LBB814:
 3987              	.LBI814:
3596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 3988              		.loc 12 3596 22 view .LVU1301
 3989              	.LBB815:
3598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 3990              		.loc 12 3598 3 view .LVU1302
3599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
 3991              		.loc 12 3599 3 view .LVU1303
ARM GAS  /tmp/cc85dWdm.s 			page 478


3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 3992              		.loc 12 3600 3 view .LVU1304
 3993 00a2 A369     		ldr	r3, [r4, #24]
 3994 00a4 23F00C03 		bic	r3, r3, #12
 3995 00a8 A361     		str	r3, [r4, #24]
 3996              	.LVL257:
3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 3997              		.loc 12 3600 3 is_stmt 0 view .LVU1305
 3998              	.LBE815:
 3999              	.LBE814:
1036:Src/main.c    ****   LL_TIM_IC_SetPolarity(TIM4, LL_TIM_CHANNEL_CH1, LL_TIM_IC_POLARITY_RISING);
 4000              		.loc 1 1036 3 is_stmt 1 view .LVU1306
 4001              	.LBB816:
 4002              	.LBI816:
3659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4003              		.loc 12 3659 22 view .LVU1307
 4004              	.LBB817:
3661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4005              		.loc 12 3661 3 view .LVU1308
3662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
 4006              		.loc 12 3662 3 view .LVU1309
3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4007              		.loc 12 3663 3 view .LVU1310
 4008 00aa A369     		ldr	r3, [r4, #24]
 4009 00ac 23F0F003 		bic	r3, r3, #240
 4010 00b0 A361     		str	r3, [r4, #24]
 4011              	.LVL258:
3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4012              		.loc 12 3663 3 is_stmt 0 view .LVU1311
 4013              	.LBE817:
 4014              	.LBE816:
1037:Src/main.c    ****   LL_TIM_IC_SetActiveInput(TIM4, LL_TIM_CHANNEL_CH2, LL_TIM_ACTIVEINPUT_DIRECTTI);
 4015              		.loc 1 1037 3 is_stmt 1 view .LVU1312
 4016              	.LBB818:
 4017              	.LBI818:
3725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4018              		.loc 12 3725 22 view .LVU1313
 4019              	.LBB819:
3727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
 4020              		.loc 12 3727 3 view .LVU1314
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
 4021              		.loc 12 3728 3 view .LVU1315
 4022 00b2 236A     		ldr	r3, [r4, #32]
 4023 00b4 23F00A03 		bic	r3, r3, #10
 4024 00b8 2362     		str	r3, [r4, #32]
 4025              	.LVL259:
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
 4026              		.loc 12 3728 3 is_stmt 0 view .LVU1316
 4027              	.LBE819:
 4028              	.LBE818:
1038:Src/main.c    ****   LL_TIM_IC_SetPrescaler(TIM4, LL_TIM_CHANNEL_CH2, LL_TIM_ICPSC_DIV1);
 4029              		.loc 1 1038 3 is_stmt 1 view .LVU1317
 4030              	.LBB820:
 4031              	.LBI820:
3546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4032              		.loc 12 3546 22 view .LVU1318
 4033              	.LBB821:
ARM GAS  /tmp/cc85dWdm.s 			page 479


3548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4034              		.loc 12 3548 3 view .LVU1319
3549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
 4035              		.loc 12 3549 3 view .LVU1320
3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4036              		.loc 12 3550 3 view .LVU1321
 4037 00ba A369     		ldr	r3, [r4, #24]
 4038 00bc 23F44073 		bic	r3, r3, #768
 4039 00c0 43F48073 		orr	r3, r3, #256
 4040 00c4 A361     		str	r3, [r4, #24]
 4041              	.LVL260:
3550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4042              		.loc 12 3550 3 is_stmt 0 view .LVU1322
 4043              	.LBE821:
 4044              	.LBE820:
1039:Src/main.c    ****   LL_TIM_IC_SetFilter(TIM4, LL_TIM_CHANNEL_CH2, M1_ENC_IC_FILTER);
 4045              		.loc 1 1039 3 is_stmt 1 view .LVU1323
 4046              	.LBB822:
 4047              	.LBI822:
3596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4048              		.loc 12 3596 22 view .LVU1324
 4049              	.LBB823:
3598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4050              		.loc 12 3598 3 view .LVU1325
3599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
 4051              		.loc 12 3599 3 view .LVU1326
3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4052              		.loc 12 3600 3 view .LVU1327
 4053 00c6 A369     		ldr	r3, [r4, #24]
 4054 00c8 23F44063 		bic	r3, r3, #3072
 4055 00cc A361     		str	r3, [r4, #24]
 4056              	.LVL261:
3600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4057              		.loc 12 3600 3 is_stmt 0 view .LVU1328
 4058              	.LBE823:
 4059              	.LBE822:
1040:Src/main.c    ****   LL_TIM_IC_SetPolarity(TIM4, LL_TIM_CHANNEL_CH2, LL_TIM_IC_POLARITY_RISING);
 4060              		.loc 1 1040 3 is_stmt 1 view .LVU1329
 4061              	.LBB824:
 4062              	.LBI824:
3659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4063              		.loc 12 3659 22 view .LVU1330
 4064              	.LBB825:
3661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4065              		.loc 12 3661 3 view .LVU1331
3662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
 4066              		.loc 12 3662 3 view .LVU1332
3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4067              		.loc 12 3663 3 view .LVU1333
 4068 00ce A369     		ldr	r3, [r4, #24]
 4069 00d0 23F47043 		bic	r3, r3, #61440
 4070 00d4 A361     		str	r3, [r4, #24]
 4071              	.LVL262:
3663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4072              		.loc 12 3663 3 is_stmt 0 view .LVU1334
 4073              	.LBE825:
 4074              	.LBE824:
ARM GAS  /tmp/cc85dWdm.s 			page 480


1041:Src/main.c    ****   LL_TIM_SetTriggerOutput(TIM4, LL_TIM_TRGO_RESET);
 4075              		.loc 1 1041 3 is_stmt 1 view .LVU1335
 4076              	.LBB826:
 4077              	.LBI826:
3725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4078              		.loc 12 3725 22 view .LVU1336
 4079              	.LBB827:
3727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
 4080              		.loc 12 3727 3 view .LVU1337
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
 4081              		.loc 12 3728 3 view .LVU1338
 4082 00d6 236A     		ldr	r3, [r4, #32]
 4083 00d8 23F0A003 		bic	r3, r3, #160
 4084 00dc 2362     		str	r3, [r4, #32]
 4085              	.LVL263:
3728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
 4086              		.loc 12 3728 3 is_stmt 0 view .LVU1339
 4087              	.LBE827:
 4088              	.LBE826:
1042:Src/main.c    ****   LL_TIM_DisableMasterSlaveMode(TIM4);
 4089              		.loc 1 1042 3 is_stmt 1 view .LVU1340
 4090              	.LBB828:
 4091              	.LBI828:
3959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
3963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
3966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
3967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
3970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
3971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
3972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
3973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
3974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
3975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
3976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
3977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
3978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
3979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
3980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
3981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
3982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
3983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENCODERCLK
3984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
3985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
3986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
 4092              		.loc 12 3986 22 view .LVU1341
 4093              	.LBB829:
3987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
3988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 4094              		.loc 12 3988 3 view .LVU1342
 4095 00de 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/cc85dWdm.s 			page 481


 4096 00e0 23F00073 		bic	r3, r3, #33554432
 4097 00e4 23F07003 		bic	r3, r3, #112
 4098 00e8 6360     		str	r3, [r4, #4]
 4099              	.LVL264:
 4100              		.loc 12 3988 3 is_stmt 0 view .LVU1343
 4101              	.LBE829:
 4102              	.LBE828:
1043:Src/main.c    ****   /* USER CODE BEGIN TIM4_Init 2 */
 4103              		.loc 1 1043 3 is_stmt 1 view .LVU1344
 4104              	.LBB830:
 4105              	.LBI830:
3989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
3990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
3991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
3992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the trigger output 2 (TRGO2) used for ADC synchronization .
3993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_TRGO2_INSTANCE(TIMx) can be used to check
3994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance can be used for ADC synchronization.
3995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll CR2          MMS2          LL_TIM_SetTriggerOutput2
3996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer Instance
3997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ADCSynchronization This parameter can be one of the following values:
3998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_RESET
3999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_ENABLE
4000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_UPDATE
4001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_CC1F
4002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC1
4003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC2
4004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC3
4005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4
4006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5
4007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6
4008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISINGFALLING
4009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6_RISINGFALLING
4010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_RISING
4011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_FALLING
4012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_RISING
4013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_FALLING
4014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput2(TIM_TypeDef *TIMx, uint32_t ADCSynchronization)
4017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS2, ADCSynchronization);
4019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
4023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
4024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
4025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
4026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
4028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
4029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
4030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
4031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
4032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER
4033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_COMBINED_GATEDRESET
4034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/cc85dWdm.s 			page 482


4035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
4037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
4039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
4043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
4044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
4045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
4046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
4048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
4049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
4050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
4051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
4052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
4053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
4054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
4055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
4056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR4
4057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR5
4058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR6
4059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR7
4060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR8
4061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR9
4062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR10
4063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR11
4064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
4067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
4069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
4073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
4074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
4075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
4076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
4080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
4082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
4086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
4087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
4088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
4089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 483


4092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
 4106              		.loc 12 4092 22 view .LVU1345
 4107              	.LBB831:
4093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
 4108              		.loc 12 4094 3 view .LVU1346
 4109 00ea A368     		ldr	r3, [r4, #8]
 4110 00ec 23F08003 		bic	r3, r3, #128
 4111 00f0 A360     		str	r3, [r4, #8]
 4112              	.LVL265:
 4113              		.loc 12 4094 3 is_stmt 0 view .LVU1347
 4114              	.LBE831:
 4115              	.LBE830:
1048:Src/main.c    **** 
 4116              		.loc 1 1048 1 view .LVU1348
 4117 00f2 0EB0     		add	sp, sp, #56
 4118              		.cfi_def_cfa_offset 16
 4119              		@ sp needed
 4120 00f4 70BD     		pop	{r4, r5, r6, pc}
 4121              	.L94:
 4122 00f6 00BF     		.align	2
 4123              	.L93:
 4124 00f8 00100240 		.word	1073876992
 4125 00fc 00040048 		.word	1207960576
 4126 0100 00080040 		.word	1073743872
 4127              		.cfi_endproc
 4128              	.LFE1636:
 4130              		.section	.text.MX_TIM1_Init,"ax",%progbits
 4131              		.align	1
 4132              		.syntax unified
 4133              		.thumb
 4134              		.thumb_func
 4135              		.fpu fpv4-sp-d16
 4137              	MX_TIM1_Init:
 4138              	.LFB1635:
 849:Src/main.c    **** 
 4139              		.loc 1 849 1 is_stmt 1 view -0
 4140              		.cfi_startproc
 4141              		@ args = 0, pretend = 0, frame = 144
 4142              		@ frame_needed = 0, uses_anonymous_args = 0
 4143 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4144              		.cfi_def_cfa_offset 28
 4145              		.cfi_offset 4, -28
 4146              		.cfi_offset 5, -24
 4147              		.cfi_offset 6, -20
 4148              		.cfi_offset 7, -16
 4149              		.cfi_offset 8, -12
 4150              		.cfi_offset 9, -8
 4151              		.cfi_offset 14, -4
 4152 0004 A5B0     		sub	sp, sp, #148
 4153              		.cfi_def_cfa_offset 176
 855:Src/main.c    ****   LL_TIM_OC_InitTypeDef TIM_OC_InitStruct = {0};
 4154              		.loc 1 855 3 view .LVU1350
 855:Src/main.c    ****   LL_TIM_OC_InitTypeDef TIM_OC_InitStruct = {0};
 4155              		.loc 1 855 22 is_stmt 0 view .LVU1351
 4156 0006 0025     		movs	r5, #0
 4157 0008 ADF87E50 		strh	r5, [sp, #126]	@ movhi
ARM GAS  /tmp/cc85dWdm.s 			page 484


 856:Src/main.c    ****   LL_TIM_BDTR_InitTypeDef TIM_BDTRInitStruct = {0};
 4158              		.loc 1 856 3 is_stmt 1 view .LVU1352
 856:Src/main.c    ****   LL_TIM_BDTR_InitTypeDef TIM_BDTRInitStruct = {0};
 4159              		.loc 1 856 25 is_stmt 0 view .LVU1353
 4160 000c 2024     		movs	r4, #32
 4161 000e 2246     		mov	r2, r4
 4162 0010 2946     		mov	r1, r5
 4163 0012 17A8     		add	r0, sp, #92
 4164 0014 FFF7FEFF 		bl	memset
 4165              	.LVL266:
 857:Src/main.c    **** 
 4166              		.loc 1 857 3 is_stmt 1 view .LVU1354
 857:Src/main.c    **** 
 4167              		.loc 1 857 27 is_stmt 0 view .LVU1355
 4168 0018 3022     		movs	r2, #48
 4169 001a 2946     		mov	r1, r5
 4170 001c 0BA8     		add	r0, sp, #44
 4171 001e FFF7FEFF 		bl	memset
 4172              	.LVL267:
 859:Src/main.c    **** 
 4173              		.loc 1 859 3 is_stmt 1 view .LVU1356
 859:Src/main.c    **** 
 4174              		.loc 1 859 23 is_stmt 0 view .LVU1357
 4175 0022 0595     		str	r5, [sp, #20]
 4176 0024 0695     		str	r5, [sp, #24]
 4177 0026 0795     		str	r5, [sp, #28]
 4178 0028 0895     		str	r5, [sp, #32]
 4179 002a 0995     		str	r5, [sp, #36]
 4180 002c 0A95     		str	r5, [sp, #40]
 862:Src/main.c    **** 
 4181              		.loc 1 862 3 is_stmt 1 view .LVU1358
 4182              	.LVL268:
 4183              	.LBB832:
 4184              	.LBI832:
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_EnableClock\n
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR2     I2C4EN        LL_APB1_GRP2_EnableClock\n
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR2     UCPD1EN       LL_APB1_GRP2_EnableClock
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_UCPD1
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClock(uint32_t Periphs)
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR2, Periphs);
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR2, Periphs);
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 485


 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM4EN        LL_APB1_GRP1_IsEnabledClock\n
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM5EN        LL_APB1_GRP1_IsEnabledClock\n
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_IsEnabledClock\n
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     SPI3EN        LL_APB1_GRP1_IsEnabledClock\n
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     UART4EN       LL_APB1_GRP1_IsEnabledClock\n
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     UART5EN       LL_APB1_GRP1_IsEnabledClock\n
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     USBEN         LL_APB1_GRP1_IsEnabledClock\n
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     FDCANEN       LL_APB1_GRP1_IsEnabledClock\n
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     PWREN         LL_APB1_GRP1_IsEnabledClock\n
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_FDCAN (*)
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR1, Periphs) == Periphs) ? 1UL : 0UL);
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 486


1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_IsEnabledClock\n
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR2     I2C4EN        LL_APB1_GRP2_IsEnabledClock\n
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR2     UCPD1EN       LL_APB1_GRP2_IsEnabledClock
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_UCPD1
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP2_IsEnabledClock(uint32_t Periphs)
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR2, Periphs) == Periphs) ? 1UL : 0UL);
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_DisableClock\n
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM3EN        LL_APB1_GRP1_DisableClock\n
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM4EN        LL_APB1_GRP1_DisableClock\n
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM5EN        LL_APB1_GRP1_DisableClock\n
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM6EN        LL_APB1_GRP1_DisableClock\n
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     TIM7EN        LL_APB1_GRP1_DisableClock\n
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     CRSEN         LL_APB1_GRP1_DisableClock\n
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_DisableClock\n
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_DisableClock\n
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_DisableClock\n
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     SPI3EN        LL_APB1_GRP1_DisableClock\n
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_DisableClock\n
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     USART3EN      LL_APB1_GRP1_DisableClock\n
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     UART4EN       LL_APB1_GRP1_DisableClock\n
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     UART5EN       LL_APB1_GRP1_DisableClock\n
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_DisableClock\n
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_DisableClock\n
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     USBEN         LL_APB1_GRP1_DisableClock\n
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     FDCANEN       LL_APB1_GRP1_DisableClock\n
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     PWREN         LL_APB1_GRP1_DisableClock\n
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_DisableClock\n
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_DisableClock
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
ARM GAS  /tmp/cc85dWdm.s 			page 487


1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_FDCAN (*)
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR1, Periphs);
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_DisableClock\n
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR2     I2C4EN        LL_APB1_GRP2_DisableClock\n
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1ENR2     UCPD1EN      LL_APB1_GRP2_DisableClock
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_UCPD1
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_DisableClock(uint32_t Periphs)
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR2, Periphs);
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1RSTR1     TIM2RST        LL_APB1_GRP1_ForceReset\n
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     TIM3RST        LL_APB1_GRP1_ForceReset\n
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     TIM4RST        LL_APB1_GRP1_ForceReset\n
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     TIM5RST        LL_APB1_GRP1_ForceReset\n
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     TIM6RST        LL_APB1_GRP1_ForceReset\n
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     TIM7RST        LL_APB1_GRP1_ForceReset\n
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     CRSRST         LL_APB1_GRP1_ForceReset\n
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     SPI2RST        LL_APB1_GRP1_ForceReset\n
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     SPI3RST        LL_APB1_GRP1_ForceReset\n
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     USART2RST      LL_APB1_GRP1_ForceReset\n
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     USART3RST      LL_APB1_GRP1_ForceReset\n
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     UART4RST       LL_APB1_GRP1_ForceReset\n
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     UART5RST       LL_APB1_GRP1_ForceReset\n
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     I2C1RST        LL_APB1_GRP1_ForceReset\n
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     I2C2RST        LL_APB1_GRP1_ForceReset\n
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     USBRST         LL_APB1_GRP1_ForceReset\n
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     FDCANRST       LL_APB1_GRP1_ForceReset\n
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     PWRRST         LL_APB1_GRP1_ForceReset\n
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     I2C3RST        LL_APB1_GRP1_ForceReset\n
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     LPTIM1RST      LL_APB1_GRP1_ForceReset
ARM GAS  /tmp/cc85dWdm.s 			page 488


1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_FDCAN (*)
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR1, Periphs);
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1RSTR2     LPUART1RST     LL_APB1_GRP2_ForceReset\n
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR2     I2C4RST        LL_APB1_GRP2_ForceReset\n
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR2     UCPD1RST       LL_APB1_GRP2_ForceReset
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_UCPD1
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ForceReset(uint32_t Periphs)
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR2, Periphs);
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1RSTR1     TIM2RST        LL_APB1_GRP1_ReleaseReset\n
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     TIM3RST        LL_APB1_GRP1_ReleaseReset\n
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     TIM4RST        LL_APB1_GRP1_ReleaseReset\n
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     TIM5RST        LL_APB1_GRP1_ReleaseReset\n
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     TIM6RST        LL_APB1_GRP1_ReleaseReset\n
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     TIM7RST        LL_APB1_GRP1_ReleaseReset\n
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     CRSRST         LL_APB1_GRP1_ReleaseReset\n
ARM GAS  /tmp/cc85dWdm.s 			page 489


1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     SPI2RST        LL_APB1_GRP1_ReleaseReset\n
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     SPI3RST        LL_APB1_GRP1_ReleaseReset\n
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     USART2RST      LL_APB1_GRP1_ReleaseReset\n
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     USART3RST      LL_APB1_GRP1_ReleaseReset\n
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     UART4RST       LL_APB1_GRP1_ReleaseReset\n
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     UART5RST       LL_APB1_GRP1_ReleaseReset\n
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     I2C1RST        LL_APB1_GRP1_ReleaseReset\n
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     I2C2RST        LL_APB1_GRP1_ReleaseReset\n
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     USBRST         LL_APB1_GRP1_ReleaseReset\n
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     FDCANRST       LL_APB1_GRP1_ReleaseReset\n
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     PWRRST         LL_APB1_GRP1_ReleaseReset\n
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     I2C3RST        LL_APB1_GRP1_ReleaseReset\n
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR1     LPTIM1RST      LL_APB1_GRP1_ReleaseReset
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_FDCAN (*)
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR1, Periphs);
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1RSTR2     LPUART1RST     LL_APB1_GRP2_ReleaseReset\n
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR2     I2C4RST        LL_APB1_GRP2_ReleaseReset\n
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1RSTR2     UCPD1RST       LL_APB1_GRP2_ReleaseReset
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_UCPD1
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ReleaseReset(uint32_t Periphs)
ARM GAS  /tmp/cc85dWdm.s 			page 490


1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR2, Periphs);
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable APB1 peripheral clocks in Sleep and Stop modes
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1SMENR1     TIM2SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     TIM3SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     TIM4SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     TIM5SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     TIM6SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     TIM7SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     CRSSMEN         LL_APB1_GRP1_EnableClockStopSleep\n
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     RTCAPBSMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     WWDGSMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     SPI2SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     SPI3SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     USART2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     USART3SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     UART4SMEN       LL_APB1_GRP1_EnableClockStopSleep\n
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     UART5SMEN       LL_APB1_GRP1_EnableClockStopSleep\n
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     I2C1SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     I2C2SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     USBSMEN         LL_APB1_GRP1_EnableClockStopSleep\n
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     FDCANSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     PWRSMEN         LL_APB1_GRP1_EnableClockStopSleep\n
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     I2C3SMEN        LL_APB1_GRP1_EnableClockStopSleep\n
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     LPTIM1SMEN      LL_APB1_GRP1_EnableClockStopSleep
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_FDCAN (*)
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 491


1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR1, Periphs);
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR1, Periphs);
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable APB1 peripheral clocks in Sleep and Stop modes
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1SMENR2     LPUART1SMEN     LL_APB1_GRP2_EnableClockStopSleep\n
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR2     I2C4SMEN        LL_APB1_GRP2_EnableClockStopSleep\n
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR2     UCPD1SMEN       LL_APB1_GRP2_EnableClockStopSleep
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_UCPD1 (*)
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClockStopSleep(uint32_t Periphs)
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR2, Periphs);
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR2, Periphs);
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Disable APB1 peripheral clocks in Sleep and Stop modes
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1SMENR1     TIM2SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     TIM3SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     TIM4SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     TIM5SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     TIM6SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     TIM7SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     CRSSMEN         LL_APB1_GRP1_DisableClockStopSleep\n
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     RTCAPBSMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     WWDGSMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     SPI2SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     SPI3SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     USART2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     USART3SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     UART4SMEN       LL_APB1_GRP1_DisableClockStopSleep\n
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     UART5SMEN       LL_APB1_GRP1_DisableClockStopSleep\n
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     I2C1SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     I2C2SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     USBSMEN         LL_APB1_GRP1_DisableClockStopSleep\n
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     FDCANSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     PWRSMEN         LL_APB1_GRP1_DisableClockStopSleep\n
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     I2C3SMEN        LL_APB1_GRP1_DisableClockStopSleep\n
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR1     LPTIM1SMEN      LL_APB1_GRP1_DisableClockStopSleep
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
ARM GAS  /tmp/cc85dWdm.s 			page 492


1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_FDCAN (*)
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR1, Periphs);
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Disable APB1 peripheral clocks in Sleep and Stop modes
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB1SMENR2     LPUART1SMEN     LL_APB1_GRP2_DisableClockStopSleep\n
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR2     I2C4SMEN        LL_APB1_GRP2_DisableClockStopSleep\n
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB1SMENR2     UCPD1SMEN      LL_APB1_GRP2_DisableClockStopSleep
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_UCPD1 (*)
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_DisableClockStopSleep(uint32_t Periphs)
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR2, Periphs);
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @}
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @{
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** 
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** /**
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
ARM GAS  /tmp/cc85dWdm.s 			page 493


1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB2_GRP1_EnableClock\n
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      TIM8EN        LL_APB2_GRP1_EnableClock\n
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock\n
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      SPI4EN        LL_APB2_GRP1_EnableClock\n
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB2_GRP1_EnableClock\n
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB2_GRP1_EnableClock\n
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB2_GRP1_EnableClock\n
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      TIM20EN       LL_APB2_GRP1_EnableClock\n
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      SAI1EN        LL_APB2_GRP1_EnableClock\n
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         APB2ENR      HRTIM1EN      LL_APB2_GRP1_EnableClock
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM8
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI4 (*)
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM20 (*)
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SAI1
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_HRTIM1 (*)
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   * @retval None
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   */
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 4185              		.loc 3 1427 22 view .LVU1359
 4186              	.LBB833:
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 4187              		.loc 3 1429 3 view .LVU1360
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 4188              		.loc 3 1430 3 view .LVU1361
 4189 002e B14B     		ldr	r3, .L103
 4190 0030 1A6E     		ldr	r2, [r3, #96]
 4191 0032 42F40062 		orr	r2, r2, #2048
 4192 0036 1A66     		str	r2, [r3, #96]
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 4193              		.loc 3 1432 3 view .LVU1362
 4194              		.loc 3 1432 12 is_stmt 0 view .LVU1363
 4195 0038 1B6E     		ldr	r3, [r3, #96]
 4196 003a 03F40063 		and	r3, r3, #2048
 4197              		.loc 3 1432 10 view .LVU1364
 4198 003e 0493     		str	r3, [sp, #16]
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 4199              		.loc 3 1433 3 is_stmt 1 view .LVU1365
 4200 0040 049B     		ldr	r3, [sp, #16]
 4201              	.LVL269:
 4202              		.loc 3 1433 3 is_stmt 0 view .LVU1366
 4203              	.LBE833:
 4204              	.LBE832:
 867:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_CENTER_DOWN;
 4205              		.loc 1 867 3 is_stmt 1 view .LVU1367
ARM GAS  /tmp/cc85dWdm.s 			page 494


 867:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_CENTER_DOWN;
 4206              		.loc 1 867 28 is_stmt 0 view .LVU1368
 4207 0042 ADF87C50 		strh	r5, [sp, #124]	@ movhi
 868:Src/main.c    ****   TIM_InitStruct.Autoreload = ((PWM_PERIOD_CYCLES) / 2);
 4208              		.loc 1 868 3 is_stmt 1 view .LVU1369
 868:Src/main.c    ****   TIM_InitStruct.Autoreload = ((PWM_PERIOD_CYCLES) / 2);
 4209              		.loc 1 868 30 is_stmt 0 view .LVU1370
 4210 0046 2094     		str	r4, [sp, #128]
 869:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV2;
 4211              		.loc 1 869 3 is_stmt 1 view .LVU1371
 869:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV2;
 4212              		.loc 1 869 29 is_stmt 0 view .LVU1372
 4213 0048 4FF4A653 		mov	r3, #5312
 4214 004c 2193     		str	r3, [sp, #132]
 870:Src/main.c    ****   TIM_InitStruct.RepetitionCounter = (REP_COUNTER);
 4215              		.loc 1 870 3 is_stmt 1 view .LVU1373
 870:Src/main.c    ****   TIM_InitStruct.RepetitionCounter = (REP_COUNTER);
 4216              		.loc 1 870 32 is_stmt 0 view .LVU1374
 4217 004e 4FF48077 		mov	r7, #256
 4218 0052 2297     		str	r7, [sp, #136]
 871:Src/main.c    ****   LL_TIM_Init(TIM1, &TIM_InitStruct);
 4219              		.loc 1 871 3 is_stmt 1 view .LVU1375
 871:Src/main.c    ****   LL_TIM_Init(TIM1, &TIM_InitStruct);
 4220              		.loc 1 871 36 is_stmt 0 view .LVU1376
 4221 0054 4FF00108 		mov	r8, #1
 4222 0058 CDF88C80 		str	r8, [sp, #140]
 872:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM1);
 4223              		.loc 1 872 3 is_stmt 1 view .LVU1377
 4224 005c A64C     		ldr	r4, .L103+4
 4225 005e 1FA9     		add	r1, sp, #124
 4226 0060 2046     		mov	r0, r4
 4227 0062 FFF7FEFF 		bl	LL_TIM_Init
 4228              	.LVL270:
 873:Src/main.c    ****   LL_TIM_OC_EnablePreload(TIM1, LL_TIM_CHANNEL_CH1);
 4229              		.loc 1 873 3 view .LVU1378
 4230              	.LBB834:
 4231              	.LBI834:
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4232              		.loc 12 2204 22 view .LVU1379
 4233              	.LBB835:
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4234              		.loc 12 2206 3 view .LVU1380
 4235 0066 2368     		ldr	r3, [r4]
 4236 0068 23F08003 		bic	r3, r3, #128
 4237 006c 2360     		str	r3, [r4]
 4238              	.LVL271:
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4239              		.loc 12 2206 3 is_stmt 0 view .LVU1381
 4240              	.LBE835:
 4241              	.LBE834:
 874:Src/main.c    ****   TIM_OC_InitStruct.OCMode = LL_TIM_OCMODE_PWM1;
 4242              		.loc 1 874 3 is_stmt 1 view .LVU1382
 4243              	.LBB836:
 4244              	.LBI836:
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4245              		.loc 12 3024 22 view .LVU1383
 4246              	.LBB837:
ARM GAS  /tmp/cc85dWdm.s 			page 495


3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4247              		.loc 12 3026 3 view .LVU1384
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
 4248              		.loc 12 3027 3 view .LVU1385
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
 4249              		.loc 12 3027 65 is_stmt 0 view .LVU1386
 4250 006e A34E     		ldr	r6, .L103+8
 4251              	.LVL272:
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4252              		.loc 12 3028 3 is_stmt 1 view .LVU1387
 4253 0070 A369     		ldr	r3, [r4, #24]
 4254 0072 43F00803 		orr	r3, r3, #8
 4255 0076 A361     		str	r3, [r4, #24]
 4256              	.LVL273:
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4257              		.loc 12 3028 3 is_stmt 0 view .LVU1388
 4258              	.LBE837:
 4259              	.LBE836:
 875:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 4260              		.loc 1 875 3 is_stmt 1 view .LVU1389
 875:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 4261              		.loc 1 875 28 is_stmt 0 view .LVU1390
 4262 0078 6023     		movs	r3, #96
 4263 007a 1793     		str	r3, [sp, #92]
 876:Src/main.c    ****   TIM_OC_InitStruct.OCNState = LL_TIM_OCSTATE_DISABLE;
 4264              		.loc 1 876 3 is_stmt 1 view .LVU1391
 876:Src/main.c    ****   TIM_OC_InitStruct.OCNState = LL_TIM_OCSTATE_DISABLE;
 4265              		.loc 1 876 29 is_stmt 0 view .LVU1392
 4266 007c 1895     		str	r5, [sp, #96]
 877:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = ((PWM_PERIOD_CYCLES) / 4);
 4267              		.loc 1 877 3 is_stmt 1 view .LVU1393
 877:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = ((PWM_PERIOD_CYCLES) / 4);
 4268              		.loc 1 877 30 is_stmt 0 view .LVU1394
 4269 007e 1995     		str	r5, [sp, #100]
 878:Src/main.c    ****   TIM_OC_InitStruct.OCPolarity = LL_TIM_OCPOLARITY_HIGH;
 4270              		.loc 1 878 3 is_stmt 1 view .LVU1395
 878:Src/main.c    ****   TIM_OC_InitStruct.OCPolarity = LL_TIM_OCPOLARITY_HIGH;
 4271              		.loc 1 878 34 is_stmt 0 view .LVU1396
 4272 0080 4FF42663 		mov	r3, #2656
 4273 0084 1A93     		str	r3, [sp, #104]
 879:Src/main.c    ****   TIM_OC_InitStruct.OCNPolarity = LL_TIM_OCPOLARITY_HIGH;
 4274              		.loc 1 879 3 is_stmt 1 view .LVU1397
 879:Src/main.c    ****   TIM_OC_InitStruct.OCNPolarity = LL_TIM_OCPOLARITY_HIGH;
 4275              		.loc 1 879 32 is_stmt 0 view .LVU1398
 4276 0086 1B95     		str	r5, [sp, #108]
 880:Src/main.c    ****   TIM_OC_InitStruct.OCIdleState = LL_TIM_OCIDLESTATE_LOW;
 4277              		.loc 1 880 3 is_stmt 1 view .LVU1399
 880:Src/main.c    ****   TIM_OC_InitStruct.OCIdleState = LL_TIM_OCIDLESTATE_LOW;
 4278              		.loc 1 880 33 is_stmt 0 view .LVU1400
 4279 0088 1C95     		str	r5, [sp, #112]
 881:Src/main.c    ****   TIM_OC_InitStruct.OCNIdleState = LL_TIM_OCIDLESTATE_LOW;
 4280              		.loc 1 881 3 is_stmt 1 view .LVU1401
 881:Src/main.c    ****   TIM_OC_InitStruct.OCNIdleState = LL_TIM_OCIDLESTATE_LOW;
 4281              		.loc 1 881 33 is_stmt 0 view .LVU1402
 4282 008a 1D95     		str	r5, [sp, #116]
 882:Src/main.c    ****   LL_TIM_OC_Init(TIM1, LL_TIM_CHANNEL_CH1, &TIM_OC_InitStruct);
 4283              		.loc 1 882 3 is_stmt 1 view .LVU1403
ARM GAS  /tmp/cc85dWdm.s 			page 496


 882:Src/main.c    ****   LL_TIM_OC_Init(TIM1, LL_TIM_CHANNEL_CH1, &TIM_OC_InitStruct);
 4284              		.loc 1 882 34 is_stmt 0 view .LVU1404
 4285 008c 1E95     		str	r5, [sp, #120]
 883:Src/main.c    ****   LL_TIM_OC_DisableFast(TIM1, LL_TIM_CHANNEL_CH1);
 4286              		.loc 1 883 3 is_stmt 1 view .LVU1405
 4287 008e 17AA     		add	r2, sp, #92
 4288 0090 4146     		mov	r1, r8
 4289 0092 2046     		mov	r0, r4
 4290 0094 FFF7FEFF 		bl	LL_TIM_OC_Init
 4291              	.LVL274:
 884:Src/main.c    ****   LL_TIM_OC_EnablePreload(TIM1, LL_TIM_CHANNEL_CH2);
 4292              		.loc 1 884 3 view .LVU1406
 4293              	.LBB838:
 4294              	.LBI838:
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4295              		.loc 12 2972 22 view .LVU1407
 4296              	.LBB839:
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4297              		.loc 12 2974 3 view .LVU1408
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
 4298              		.loc 12 2975 3 view .LVU1409
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 4299              		.loc 12 2976 3 view .LVU1410
 4300 0098 A369     		ldr	r3, [r4, #24]
 4301 009a 23F00403 		bic	r3, r3, #4
 4302 009e A361     		str	r3, [r4, #24]
 4303              	.LVL275:
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 4304              		.loc 12 2976 3 is_stmt 0 view .LVU1411
 4305              	.LBE839:
 4306              	.LBE838:
 885:Src/main.c    ****   LL_TIM_OC_Init(TIM1, LL_TIM_CHANNEL_CH2, &TIM_OC_InitStruct);
 4307              		.loc 1 885 3 is_stmt 1 view .LVU1412
 4308              	.LBB840:
 4309              	.LBI840:
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4310              		.loc 12 3024 22 view .LVU1413
 4311              	.LBB841:
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4312              		.loc 12 3026 3 view .LVU1414
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
 4313              		.loc 12 3027 3 view .LVU1415
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4314              		.loc 12 3028 3 view .LVU1416
 4315 00a0 A369     		ldr	r3, [r4, #24]
 4316 00a2 43F40063 		orr	r3, r3, #2048
 4317 00a6 A361     		str	r3, [r4, #24]
 4318              	.LVL276:
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4319              		.loc 12 3028 3 is_stmt 0 view .LVU1417
 4320              	.LBE841:
 4321              	.LBE840:
 886:Src/main.c    ****   LL_TIM_OC_DisableFast(TIM1, LL_TIM_CHANNEL_CH2);
 4322              		.loc 1 886 3 is_stmt 1 view .LVU1418
 4323 00a8 17AA     		add	r2, sp, #92
 4324 00aa 1021     		movs	r1, #16
 4325 00ac 2046     		mov	r0, r4
ARM GAS  /tmp/cc85dWdm.s 			page 497


 4326 00ae FFF7FEFF 		bl	LL_TIM_OC_Init
 4327              	.LVL277:
 887:Src/main.c    ****   LL_TIM_OC_EnablePreload(TIM1, LL_TIM_CHANNEL_CH3);
 4328              		.loc 1 887 3 view .LVU1419
 4329              	.LBB842:
 4330              	.LBI842:
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4331              		.loc 12 2972 22 view .LVU1420
 4332              	.LBB843:
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4333              		.loc 12 2974 3 view .LVU1421
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
 4334              		.loc 12 2975 3 view .LVU1422
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 4335              		.loc 12 2976 3 view .LVU1423
 4336 00b2 A369     		ldr	r3, [r4, #24]
 4337 00b4 23F48063 		bic	r3, r3, #1024
 4338 00b8 A361     		str	r3, [r4, #24]
 4339              	.LVL278:
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 4340              		.loc 12 2976 3 is_stmt 0 view .LVU1424
 4341              	.LBE843:
 4342              	.LBE842:
 888:Src/main.c    ****   LL_TIM_OC_Init(TIM1, LL_TIM_CHANNEL_CH3, &TIM_OC_InitStruct);
 4343              		.loc 1 888 3 is_stmt 1 view .LVU1425
 4344              	.LBB844:
 4345              	.LBI844:
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4346              		.loc 12 3024 22 view .LVU1426
 4347              	.LBB845:
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4348              		.loc 12 3026 3 view .LVU1427
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
 4349              		.loc 12 3027 3 view .LVU1428
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4350              		.loc 12 3028 3 view .LVU1429
 4351 00ba 7368     		ldr	r3, [r6, #4]
 4352 00bc 43F00803 		orr	r3, r3, #8
 4353 00c0 7360     		str	r3, [r6, #4]
 4354              	.LVL279:
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4355              		.loc 12 3028 3 is_stmt 0 view .LVU1430
 4356              	.LBE845:
 4357              	.LBE844:
 889:Src/main.c    ****   LL_TIM_OC_DisableFast(TIM1, LL_TIM_CHANNEL_CH3);
 4358              		.loc 1 889 3 is_stmt 1 view .LVU1431
 4359 00c2 17AA     		add	r2, sp, #92
 4360 00c4 3946     		mov	r1, r7
 4361 00c6 2046     		mov	r0, r4
 4362 00c8 FFF7FEFF 		bl	LL_TIM_OC_Init
 4363              	.LVL280:
 890:Src/main.c    ****   LL_TIM_OC_EnablePreload(TIM1, LL_TIM_CHANNEL_CH4);
 4364              		.loc 1 890 3 view .LVU1432
 4365              	.LBB846:
 4366              	.LBI846:
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4367              		.loc 12 2972 22 view .LVU1433
ARM GAS  /tmp/cc85dWdm.s 			page 498


 4368              	.LBB847:
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4369              		.loc 12 2974 3 view .LVU1434
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
 4370              		.loc 12 2975 3 view .LVU1435
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 4371              		.loc 12 2976 3 view .LVU1436
 4372 00cc 7368     		ldr	r3, [r6, #4]
 4373 00ce 23F00403 		bic	r3, r3, #4
 4374 00d2 7360     		str	r3, [r6, #4]
 4375              	.LVL281:
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 4376              		.loc 12 2976 3 is_stmt 0 view .LVU1437
 4377              	.LBE847:
 4378              	.LBE846:
 891:Src/main.c    ****   TIM_OC_InitStruct.OCMode = LL_TIM_OCMODE_PWM2;
 4379              		.loc 1 891 3 is_stmt 1 view .LVU1438
 4380              	.LBB848:
 4381              	.LBI848:
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4382              		.loc 12 3024 22 view .LVU1439
 4383              	.LBB849:
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4384              		.loc 12 3026 3 view .LVU1440
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
 4385              		.loc 12 3027 3 view .LVU1441
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4386              		.loc 12 3028 3 view .LVU1442
 4387 00d4 7368     		ldr	r3, [r6, #4]
 4388 00d6 43F40063 		orr	r3, r3, #2048
 4389 00da 7360     		str	r3, [r6, #4]
 4390              	.LVL282:
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4391              		.loc 12 3028 3 is_stmt 0 view .LVU1443
 4392              	.LBE849:
 4393              	.LBE848:
 892:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = (((PWM_PERIOD_CYCLES) / 2) - (HTMIN));
 4394              		.loc 1 892 3 is_stmt 1 view .LVU1444
 892:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = (((PWM_PERIOD_CYCLES) / 2) - (HTMIN));
 4395              		.loc 1 892 28 is_stmt 0 view .LVU1445
 4396 00dc 7023     		movs	r3, #112
 4397 00de 1793     		str	r3, [sp, #92]
 893:Src/main.c    ****   LL_TIM_OC_Init(TIM1, LL_TIM_CHANNEL_CH4, &TIM_OC_InitStruct);
 4398              		.loc 1 893 3 is_stmt 1 view .LVU1446
 893:Src/main.c    ****   LL_TIM_OC_Init(TIM1, LL_TIM_CHANNEL_CH4, &TIM_OC_InitStruct);
 4399              		.loc 1 893 34 is_stmt 0 view .LVU1447
 4400 00e0 41F2BF43 		movw	r3, #5311
 4401 00e4 1A93     		str	r3, [sp, #104]
 894:Src/main.c    ****   LL_TIM_OC_DisableFast(TIM1, LL_TIM_CHANNEL_CH4);
 4402              		.loc 1 894 3 is_stmt 1 view .LVU1448
 4403 00e6 17AA     		add	r2, sp, #92
 4404 00e8 4FF48051 		mov	r1, #4096
 4405 00ec 2046     		mov	r0, r4
 4406 00ee FFF7FEFF 		bl	LL_TIM_OC_Init
 4407              	.LVL283:
 895:Src/main.c    ****   LL_TIM_SetTriggerInput(TIM1, LL_TIM_TS_ITR1);
 4408              		.loc 1 895 3 view .LVU1449
ARM GAS  /tmp/cc85dWdm.s 			page 499


 4409              	.LBB850:
 4410              	.LBI850:
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4411              		.loc 12 2972 22 view .LVU1450
 4412              	.LBB851:
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 4413              		.loc 12 2974 3 view .LVU1451
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
 4414              		.loc 12 2975 3 view .LVU1452
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 4415              		.loc 12 2976 3 view .LVU1453
 4416 00f2 7368     		ldr	r3, [r6, #4]
 4417 00f4 23F48063 		bic	r3, r3, #1024
 4418 00f8 7360     		str	r3, [r6, #4]
 4419              	.LVL284:
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
 4420              		.loc 12 2976 3 is_stmt 0 view .LVU1454
 4421              	.LBE851:
 4422              	.LBE850:
 896:Src/main.c    ****   LL_TIM_SetSlaveMode(TIM1, LL_TIM_SLAVEMODE_TRIGGER);
 4423              		.loc 1 896 3 is_stmt 1 view .LVU1455
 4424              	.LBB852:
 4425              	.LBI852:
4066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4426              		.loc 12 4066 22 view .LVU1456
 4427              	.LBB853:
4068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4428              		.loc 12 4068 3 view .LVU1457
 4429 00fa A368     		ldr	r3, [r4, #8]
 4430 00fc 23F44013 		bic	r3, r3, #3145728
 4431 0100 23F07003 		bic	r3, r3, #112
 4432 0104 43F01003 		orr	r3, r3, #16
 4433 0108 A360     		str	r3, [r4, #8]
 4434              	.LVL285:
4068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4435              		.loc 12 4068 3 is_stmt 0 view .LVU1458
 4436              	.LBE853:
 4437              	.LBE852:
 897:Src/main.c    ****   LL_TIM_DisableIT_TRIG(TIM1);
 4438              		.loc 1 897 3 is_stmt 1 view .LVU1459
 4439              	.LBB854:
 4440              	.LBI854:
4036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4441              		.loc 12 4036 22 view .LVU1460
 4442              	.LBB855:
4038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4443              		.loc 12 4038 3 view .LVU1461
 4444 010a A368     		ldr	r3, [r4, #8]
 4445 010c 23F48033 		bic	r3, r3, #65536
 4446 0110 23F00703 		bic	r3, r3, #7
 4447 0114 43F00603 		orr	r3, r3, #6
 4448 0118 A360     		str	r3, [r4, #8]
 4449              	.LVL286:
4038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4450              		.loc 12 4038 3 is_stmt 0 view .LVU1462
 4451              	.LBE855:
 4452              	.LBE854:
ARM GAS  /tmp/cc85dWdm.s 			page 500


 898:Src/main.c    ****   LL_TIM_DisableDMAReq_TRIG(TIM1);
 4453              		.loc 1 898 3 is_stmt 1 view .LVU1463
 4454              	.LBB856:
 4455              	.LBI856:
4095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief Indicates whether the Master/Slave mode is enabled.
4099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
4100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * a timer instance can operate as a slave timer.
4101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_IsEnabledMasterSlaveMode
4102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledMasterSlaveMode(TIM_TypeDef *TIMx)
4106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_MSM) == (TIM_SMCR_MSM)) ? 1UL : 0UL);
4108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure the external trigger (ETR) input.
4112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ETR_INSTANCE(TIMx) can be used to check whether or not
4113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an external trigger input.
4114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         ETP           LL_TIM_ConfigETR\n
4115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         SMCR         ETPS          LL_TIM_ConfigETR\n
4116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         SMCR         ETF           LL_TIM_ConfigETR
4117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ETRPolarity This parameter can be one of the following values:
4119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_NONINVERTED
4120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_INVERTED
4121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ETRPrescaler This parameter can be one of the following values:
4122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV1
4123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV2
4124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV4
4125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV8
4126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ETRFilter This parameter can be one of the following values:
4127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1
4128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N2
4129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N4
4130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N8
4131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N6
4132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N8
4133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N6
4134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N8
4135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N6
4136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N8
4137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N5
4138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N6
4139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N8
4140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N5
4141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N6
4142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N8
4143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigETR(TIM_TypeDef *TIMx, uint32_t ETRPolarity, uint32_t ETRPrescale
4146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       uint32_t ETRFilter)
4147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 501


4148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | 
4149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Select the external trigger (ETR) input source.
4153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ETRSEL_INSTANCE(TIMx) can be used to check whether or
4154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       not a timer instance supports ETR source selection.
4155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll AF1          ETRSEL        LL_TIM_SetETRSource
4156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  ETRSource This parameter can be one of the following values:
4158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM1: any combination of ETR_RMP where
4160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_GPIO
4162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP1
4163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP2
4164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP3
4165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP4
4166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP5       (*)
4167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP6       (*)
4168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_COMP7       (*)
4169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC1_AWD1
4170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC1_AWD2
4171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC1_AWD3
4172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC4_AWD1   (*)
4173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC4_AWD2   (*)
4174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETRSOURCE_ADC4_AWD3   (*)
4175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2: any combination of ETR_RMP where
4177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_GPIO
4179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP1
4180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP2
4181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP3
4182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP4
4183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP5       (*)
4184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP6       (*)
4185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_COMP7       (*)
4186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_TIM3_ETR
4187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_TIM4_ETR
4188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_TIM5_ETR    (*)
4189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETRSOURCE_LSE
4190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM3: any combination of ETR_RMP where
4192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_GPIO
4194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP1
4195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP2
4196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP3
4197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP4
4198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP5       (*)
4199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP6       (*)
4200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_COMP7       (*)
4201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_TIM2_ETR
4202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_TIM4_ETR
4203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_ADC2_AWD1
4204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_ADC2_AWD2
ARM GAS  /tmp/cc85dWdm.s 			page 502


4205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_ETRSOURCE_ADC2_AWD3
4206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4: any combination of ETR_RMP where
4208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_GPIO
4210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP1
4211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP2
4212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP3
4213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP4
4214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP5       (*)
4215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP6       (*)
4216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_COMP7       (*)
4217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_TIM3_ETR
4218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_ETRSOURCE_TIM5_ETR    (*)
4219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM5: any combination of ETR_RMP where       (**)
4221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_GPIO        (*)
4223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP1       (*)
4224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP2       (*)
4225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP3       (*)
4226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP4       (*)
4227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP5       (*)
4228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP6       (*)
4229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_COMP7       (*)
4230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_TIM2_ETR    (*)
4231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_ETRSOURCE_TIM3_ETR    (*)
4232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM8: any combination of ETR_RMP where
4234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . ETR_RMP can be one of the following values
4236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_GPIO
4237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP1
4238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP2
4239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP3
4240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP4
4241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP5       (*)
4242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP6       (*)
4243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_COMP7       (*)
4244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC2_AWD1
4245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC2_AWD2
4246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC2_AWD3
4247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC3_AWD1   (*)
4248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC3_AWD2   (*)
4249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETRSOURCE_ADC3_AWD3   (*)
4250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM20: any combination of ETR_RMP where       (**)
4252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . ETR_RMP can be one of the following values
4254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_GPIO       (*)
4255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP1      (*)
4256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP2      (*)
4257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP3      (*)
4258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP4      (*)
4259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP5      (*)
4260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP6      (*)
4261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_COMP7      (*)
ARM GAS  /tmp/cc85dWdm.s 			page 503


4262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC3_AWD1  (*)
4263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC3_AWD2  (*)
4264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC3_AWD3  (*)
4265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC5_AWD1  (*)
4266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC5_AWD2  (*)
4267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_ETRSOURCE_ADC5_AWD3  (*)
4268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices. \n
4270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (**) Register not available in all devices.
4271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetETRSource(TIM_TypeDef *TIMx, uint32_t ETRSource)
4274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->AF1, TIMx_AF1_ETRSEL, ETRSource);
4276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable SMS preload.
4280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SMS_PRELOAD_INSTANCE(TIMx) can be used to check
4281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the preload of SMS field in SMCR register.
4282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMSPE           LL_TIM_EnableSMSPreload
4283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableSMSPreload(TIM_TypeDef *TIMx)
4287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_SMSPE);
4289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable SMS preload.
4293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SMS_PRELOAD_INSTANCE(TIMx) can be used to check
4294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the preload of SMS field in SMCR register.
4295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMSPE           LL_TIM_DisableSMSPreload
4296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableSMSPreload(TIM_TypeDef *TIMx)
4300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_SMSPE);
4302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether  SMS preload is enabled.
4306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SMS_PRELOAD_INSTANCE(TIMx) can be used to check
4307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the preload of SMS field in SMCR register.
4308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMSPE           LL_TIM_IsEnabledSMSPreload
4309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledSMSPreload(TIM_TypeDef *TIMx)
4313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_SMSPE) == (TIM_SMCR_SMSPE)) ? 1UL : 0UL);
4315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the preload source of SMS.
ARM GAS  /tmp/cc85dWdm.s 			page 504


4319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SMS_PRELOAD_INSTANCE(TIMx) can be used to check
4320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the preload of SMS field in SMCR register.
4321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMSPS        LL_TIM_SetSMSPreloadSource\n
4322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  PreloadSource This parameter can be one of the following values:
4324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SMSPS_TIMUPDATE
4325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SMSPS_INDEX
4326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSMSPreloadSource(TIM_TypeDef *TIMx, uint32_t PreloadSource)
4329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMSPS, PreloadSource);
4331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the preload source of SMS.
4335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_SMS_PRELOAD_INSTANCE(TIMx) can be used to check
4336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       whether or not a timer instance supports the preload of SMS field in SMCR register.
4337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR         SMSPS        LL_TIM_GetSMSPreloadSource\n
4338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
4340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SMSPS_TIMUPDATE
4341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SMSPS_INDEX
4342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetSMSPreloadSource(TIM_TypeDef *TIMx)
4344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->SMCR, TIM_SMCR_SMSPS));
4346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
4350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Break_Function Break function configuration
4353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
4354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable the break function.
4357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_EnableBRK
4360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBRK(TIM_TypeDef *TIMx)
4364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BKE);
4366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable the break function.
4370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_DisableBRK
4371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 505


4376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBRK(TIM_TypeDef *TIMx)
4377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BKE);
4379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure the break input.
4383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Bidirectional mode is only supported by advanced timer instances.
4386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       Macro IS_TIM_ADVANCED_INSTANCE(TIMx) can be used to check whether or not
4387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance is an advanced-control timer.
4388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In bidirectional mode (BKBID bit set), the Break input is configured both
4389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        in input mode and in open drain output mode. Any active Break event will
4390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        assert a low logic level on the Break input to indicate an internal break
4391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        event to external devices.
4392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note When bidirectional mode isn't supported, BreakAFMode must be set to
4393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       LL_TIM_BREAK_AFMODE_INPUT.
4394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BKP           LL_TIM_ConfigBRK\n
4395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         BDTR         BKF           LL_TIM_ConfigBRK\n
4396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         BDTR         BKBID         LL_TIM_ConfigBRK
4397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakPolarity This parameter can be one of the following values:
4399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_LOW
4400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_HIGH
4401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakFilter This parameter can be one of the following values:
4402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1
4403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N2
4404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N4
4405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N8
4406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV2_N6
4407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV2_N8
4408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV4_N6
4409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV4_N8
4410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV8_N6
4411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV8_N8
4412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N5
4413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N6
4414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N8
4415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N5
4416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N6
4417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N8
4418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakAFMode This parameter can be one of the following values:
4419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_AFMODE_INPUT
4420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_AFMODE_BIDIRECTIONAL
4421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigBRK(TIM_TypeDef *TIMx, uint32_t BreakPolarity, uint32_t BreakFilt
4424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                       uint32_t BreakAFMode)
4425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_BKP | TIM_BDTR_BKF | TIM_BDTR_BKBID, BreakPolarity | BreakFilter 
4427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disarm the break input (when it operates in bidirectional mode).
4431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  The break input can be disarmed only when it is configured in
4432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        bidirectional mode and when when MOE is reset.
ARM GAS  /tmp/cc85dWdm.s 			page 506


4433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  Purpose is to be able to have the input voltage back to high-state,
4434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        whatever the time constant on the output .
4435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BKDSRM        LL_TIM_DisarmBRK
4436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisarmBRK(TIM_TypeDef *TIMx)
4440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BKDSRM);
4442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Re-arm the break input (when it operates in bidirectional mode).
4446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  The Break input is automatically armed as soon as MOE bit is set.
4447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BKDSRM        LL_TIM_ReArmBRK
4448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ReArmBRK(TIM_TypeDef *TIMx)
4452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BKDSRM);
4454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable the break 2 function.
4458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
4459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a second break input.
4460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BK2E          LL_TIM_EnableBRK2
4461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBRK2(TIM_TypeDef *TIMx)
4465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BK2E);
4467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable the break  2 function.
4471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
4472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a second break input.
4473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BK2E          LL_TIM_DisableBRK2
4474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBRK2(TIM_TypeDef *TIMx)
4478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BK2E);
4480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure the break 2 input.
4484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
4485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a second break input.
4486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Bidirectional mode is only supported by advanced timer instances.
4487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       Macro IS_TIM_ADVANCED_INSTANCE(TIMx) can be used to check whether or not
4488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance is an advanced-control timer.
4489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note In bidirectional mode (BK2BID bit set), the Break 2 input is configured both
ARM GAS  /tmp/cc85dWdm.s 			page 507


4490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        in input mode and in open drain output mode. Any active Break event will
4491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        assert a low logic level on the Break 2 input to indicate an internal break
4492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        event to external devices.
4493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note When bidirectional mode isn't supported, Break2AFMode must be set to
4494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       LL_TIM_BREAK2_AFMODE_INPUT.
4495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BK2P          LL_TIM_ConfigBRK2\n
4496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         BDTR         BK2F          LL_TIM_ConfigBRK2\n
4497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         BDTR         BK2BID        LL_TIM_ConfigBRK2
4498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Break2Polarity This parameter can be one of the following values:
4500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_POLARITY_LOW
4501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_POLARITY_HIGH
4502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Break2Filter This parameter can be one of the following values:
4503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1
4504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N2
4505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N4
4506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N8
4507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV2_N6
4508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV2_N8
4509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV4_N6
4510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV4_N8
4511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV8_N6
4512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV8_N8
4513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N5
4514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N6
4515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N8
4516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N5
4517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N6
4518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N8
4519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Break2AFMode This parameter can be one of the following values:
4520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_AFMODE_INPUT
4521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_AFMODE_BIDIRECTIONAL
4522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigBRK2(TIM_TypeDef *TIMx, uint32_t Break2Polarity, uint32_t Break2F
4525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                        uint32_t Break2AFMode)
4526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_BK2P | TIM_BDTR_BK2F | TIM_BDTR_BK2BID, Break2Polarity | Break2Fi
4528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disarm the break 2 input (when it operates in bidirectional mode).
4532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  The break 2 input can be disarmed only when it is configured in
4533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        bidirectional mode and when when MOE is reset.
4534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  Purpose is to be able to have the input voltage back to high-state,
4535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *        whatever the time constant on the output.
4536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BK2DSRM       LL_TIM_DisarmBRK2
4537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisarmBRK2(TIM_TypeDef *TIMx)
4541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BK2DSRM);
4543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Re-arm the break 2 input (when it operates in bidirectional mode).
ARM GAS  /tmp/cc85dWdm.s 			page 508


4547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note  The Break 2 input is automatically armed as soon as MOE bit is set.
4548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         BK2DSRM       LL_TIM_ReArmBRK2
4549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ReArmBRK2(TIM_TypeDef *TIMx)
4553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BK2DSRM);
4555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Select the outputs off state (enabled v.s. disabled) in Idle and Run modes.
4559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         OSSI          LL_TIM_SetOffStates\n
4562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         BDTR         OSSR          LL_TIM_SetOffStates
4563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  OffStateIdle This parameter can be one of the following values:
4565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_DISABLE
4566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_ENABLE
4567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  OffStateRun This parameter can be one of the following values:
4568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_DISABLE
4569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_ENABLE
4570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOffStates(TIM_TypeDef *TIMx, uint32_t OffStateIdle, uint32_t OffStat
4573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_OSSI | TIM_BDTR_OSSR, OffStateIdle | OffStateRun);
4575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable automatic output (MOE can be set by software or automatically when a break input
4579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_EnableAutomaticOutput
4582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAutomaticOutput(TIM_TypeDef *TIMx)
4586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_AOE);
4588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable automatic output (MOE can be set only by software).
4592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_DisableAutomaticOutput
4595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAutomaticOutput(TIM_TypeDef *TIMx)
4599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_AOE);
4601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 509


4604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether automatic output is enabled.
4605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_IsEnabledAutomaticOutput
4608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAutomaticOutput(TIM_TypeDef *TIMx)
4612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->BDTR, TIM_BDTR_AOE) == (TIM_BDTR_AOE)) ? 1UL : 0UL);
4614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable the outputs (set the MOE bit in TIMx_BDTR register).
4618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
4619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       software and is reset in case of break or break2 event
4620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_EnableAllOutputs
4623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAllOutputs(TIM_TypeDef *TIMx)
4627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_MOE);
4629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable the outputs (reset the MOE bit in TIMx_BDTR register).
4633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
4634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       software and is reset in case of break or break2 event.
4635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_DisableAllOutputs
4638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAllOutputs(TIM_TypeDef *TIMx)
4642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_MOE);
4644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether outputs are enabled.
4648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides a break input.
4650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_IsEnabledAllOutputs
4651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAllOutputs(TIM_TypeDef *TIMx)
4655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->BDTR, TIM_BDTR_MOE) == (TIM_BDTR_MOE)) ? 1UL : 0UL);
4657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable the signals connected to the designated timer break input.
ARM GAS  /tmp/cc85dWdm.s 			page 510


4661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
4662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
4663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll AF1          BKINE         LL_TIM_EnableBreakInputSource\n
4664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP1E       LL_TIM_EnableBreakInputSource\n
4665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP2E       LL_TIM_EnableBreakInputSource\n
4666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP3E       LL_TIM_EnableBreakInputSource\n
4667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP4E       LL_TIM_EnableBreakInputSource\n
4668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP5E       LL_TIM_EnableBreakInputSource\n
4669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP6E       LL_TIM_EnableBreakInputSource\n
4670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP7E       LL_TIM_EnableBreakInputSource\n
4671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2NE         LL_TIM_EnableBreakInputSource\n
4672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP1E      LL_TIM_EnableBreakInputSource\n
4673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP2E      LL_TIM_EnableBreakInputSource\n
4674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP3E      LL_TIM_EnableBreakInputSource\n
4675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP4E      LL_TIM_EnableBreakInputSource\n
4676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP5E      LL_TIM_EnableBreakInputSource\n
4677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP6E      LL_TIM_EnableBreakInputSource\n
4678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP7E      LL_TIM_EnableBreakInputSource
4679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
4681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
4682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
4683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
4684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
4685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
4686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
4687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP3
4688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP4
4689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP5 (*)
4690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP6 (*)
4691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP7 (*)
4692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices.
4694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBreakInputSource(TIM_TypeDef *TIMx, uint32_t BreakInput, uint32_t
4697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->AF1) + BreakInput));
4699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(*pReg, Source);
4700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable the signals connected to the designated timer break input.
4704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
4705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
4706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll AF1          BKINE         LL_TIM_DisableBreakInputSource\n
4707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP1E       LL_TIM_DisableBreakInputSource\n
4708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP2E       LL_TIM_DisableBreakInputSource\n
4709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP3E       LL_TIM_DisableBreakInputSource\n
4710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP4E       LL_TIM_DisableBreakInputSource\n
4711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP5E       LL_TIM_DisableBreakInputSource\n
4712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP6E       LL_TIM_DisableBreakInputSource\n
4713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP7E       LL_TIM_DisableBreakInputSource\n
4714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BKINE         LL_TIM_DisableBreakInputSource\n
4715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BKCMP1E       LL_TIM_DisableBreakInputSource\n
4716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BKCMP2E       LL_TIM_DisableBreakInputSource\n
4717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BKCMP3E       LL_TIM_DisableBreakInputSource\n
ARM GAS  /tmp/cc85dWdm.s 			page 511


4718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BKCMP4E       LL_TIM_DisableBreakInputSource\n
4719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BKCMP5E       LL_TIM_DisableBreakInputSource\n
4720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BKCMP6E       LL_TIM_DisableBreakInputSource\n
4721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BKCMP7E       LL_TIM_DisableBreakInputSource
4722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
4724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
4725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
4726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
4727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
4728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
4729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
4730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP3
4731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP4
4732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP5 (*)
4733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP6 (*)
4734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP7 (*)
4735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
4736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices.
4737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBreakInputSource(TIM_TypeDef *TIMx, uint32_t BreakInput, uint32_
4740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->AF1) + BreakInput));
4742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(*pReg, Source);
4743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the polarity of the break signal for the timer break input.
4747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
4748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
4749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll AF1          BKINP         LL_TIM_SetBreakInputSourcePolarity\n
4750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP1P       LL_TIM_SetBreakInputSourcePolarity\n
4751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP2P       LL_TIM_SetBreakInputSourcePolarity\n
4752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP3P       LL_TIM_SetBreakInputSourcePolarity\n
4753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF1          BKCMP4P       LL_TIM_SetBreakInputSourcePolarity\n
4754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2INP        LL_TIM_SetBreakInputSourcePolarity\n
4755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP1P      LL_TIM_SetBreakInputSourcePolarity\n
4756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP2P      LL_TIM_SetBreakInputSourcePolarity\n
4757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP3P      LL_TIM_SetBreakInputSourcePolarity\n
4758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         AF2          BK2CMP4P      LL_TIM_SetBreakInputSourcePolarity
4759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
4761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
4762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
4763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
4764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
4765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
4766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
4767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP3
4768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP4
4769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
4770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_POLARITY_LOW
4771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_POLARITY_HIGH
4772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetBreakInputSourcePolarity(TIM_TypeDef *TIMx, uint32_t BreakInput, uin
ARM GAS  /tmp/cc85dWdm.s 			page 512


4775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                         uint32_t Polarity)
4776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->AF1) + BreakInput));
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, (TIMx_AF1_BKINP << TIM_POSITION_BRK_SOURCE), (Polarity << TIM_POSITION_BRK_SOUR
4779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable asymmetrical deadtime.
4782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not
4783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides asymmetrical deadtime.
4784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTAE          LL_TIM_EnableAsymmetricalDeadTime
4785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAsymmetricalDeadTime(TIM_TypeDef *TIMx)
4789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DTR2, TIM_DTR2_DTAE);
4791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable asymmetrical dead-time.
4795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not
4796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides asymmetrical deadtime.
4797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTAE          LL_TIM_DisableAsymmetricalDeadTime
4798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAsymmetricalDeadTime(TIM_TypeDef *TIMx)
4802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DTR2, TIM_DTR2_DTAE);
4804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether asymmetrical deadtime is activated.
4808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not
4809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides asymmetrical deadtime.
4810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTAE          LL_TIM_IsEnabledAsymmetricalDeadTime
4811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAsymmetricalDeadTime(TIM_TypeDef *TIMx)
4815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DTR2, TIM_DTR2_DTAE) == (TIM_DTR2_DTAE)) ? 1UL : 0UL);
4817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the falling edge dead-time delay (delay inserted between the falling edge of the OC
4821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         rising edge of OCxN signals).
4822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not
4823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       asymmetrical dead-time insertion feature is supported by a timer instance.
4824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
4825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed
4826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       (LOCK bits in TIMx_BDTR register).
4827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2         DTGF           LL_TIM_SetFallingDeadTime
4828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
4830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 513


4832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetFallingDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
4833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->DTR2, TIM_DTR2_DTGF, DeadTime);
4835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get the falling edge dead-time delay (delay inserted between the falling edge of the OC
4839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         the rising edge of OCxN signals).
4840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DEADTIME_ASYMMETRICAL_INSTANCE(TIMx) can be used to check whether or not
4841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       asymmetrical dead-time insertion feature is supported by a timer instance.
4842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed
4843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       (LOCK bits in TIMx_BDTR register).
4844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTGF           LL_TIM_GetFallingDeadTime
4845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be between Min_Data=0 and Max_Data=255:
4847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetFallingDeadTime(TIM_TypeDef *TIMx)
4849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->DTR2, TIM_DTR2_DTGF));
4851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable deadtime preload.
4855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides deadtime preload.
4857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTPE          LL_TIM_EnableDeadTimePreload
4858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDeadTimePreload(TIM_TypeDef *TIMx)
4862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DTR2, TIM_DTR2_DTPE);
4864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable dead-time preload.
4868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides deadtime preload.
4870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTPE          LL_TIM_DisableDeadTimePreload
4871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDeadTimePreload(TIM_TypeDef *TIMx)
4875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DTR2, TIM_DTR2_DTPE);
4877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether deadtime preload is activated.
4881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
4882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides deadtime preload.
4883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DTR2          DTPE          LL_TIM_IsEnabledDeadTimePreload
4884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDeadTimePreload(TIM_TypeDef *TIMx)
4888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 514


4889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DTR2, TIM_DTR2_DTPE) == (TIM_DTR2_DTPE)) ? 1UL : 0UL);
4890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
4894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Burst_Mode DMA burst mode configuration
4897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
4898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configures the timer DMA burst feature.
4901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_DMABURST_INSTANCE(TIMx) can be used to check whether or
4902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       not a timer instance supports the DMA burst mode.
4903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DCR          DBL           LL_TIM_ConfigDMABurst\n
4904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         DCR          DBA           LL_TIM_ConfigDMABurst
4905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  DMABurstBaseAddress This parameter can be one of the following values:
4907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR1
4908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR2
4909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SMCR
4910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DIER
4911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SR
4912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_EGR
4913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR1
4914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR2
4915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCER
4916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CNT
4917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_PSC
4918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ARR
4919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_RCR
4920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR1
4921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR2
4922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR3
4923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR4
4924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_BDTR
4925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR3
4926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR5
4927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR6
4928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DTR2
4929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ECR
4930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_TISEL
4931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_AF1
4932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_AF2
4933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_OR
4934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  DMABurstLength This parameter can be one of the following values:
4935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_1TRANSFER
4936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_2TRANSFERS
4937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_3TRANSFERS
4938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_4TRANSFERS
4939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_5TRANSFERS
4940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_6TRANSFERS
4941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_7TRANSFERS
4942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_8TRANSFERS
4943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_9TRANSFERS
4944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_10TRANSFERS
4945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_11TRANSFERS
ARM GAS  /tmp/cc85dWdm.s 			page 515


4946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_12TRANSFERS
4947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_13TRANSFERS
4948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_14TRANSFERS
4949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_15TRANSFERS
4950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_16TRANSFERS
4951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_17TRANSFERS
4952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_18TRANSFERS
4953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_19TRANSFERS
4954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_20TRANSFERS
4955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_21TRANSFERS
4956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_22TRANSFERS
4957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_23TRANSFERS
4958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_24TRANSFERS
4959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_25TRANSFERS
4960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_26TRANSFERS
4961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigDMABurst(TIM_TypeDef *TIMx, uint32_t DMABurstBaseAddress, uint32_
4964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->DCR, (TIM_DCR_DBL | TIM_DCR_DBA), (DMABurstBaseAddress | DMABurstLength));
4966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
4970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Encoder Encoder configuration
4973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
4974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable encoder index.
4978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
4979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
4980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR         IE           LL_TIM_EnableEncoderIndex
4981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableEncoderIndex(TIM_TypeDef *TIMx)
4985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->ECR, TIM_ECR_IE);
4987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
4988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
4989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
4990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable encoder index.
4991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
4992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
4993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR         IE           LL_TIM_DisableEncoderIndex
4994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
4995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
4996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
4997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableEncoderIndex(TIM_TypeDef *TIMx)
4998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
4999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->ECR, TIM_ECR_IE);
5000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 516


5003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether encoder index is enabled.
5004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR         IE           LL_TIM_IsEnabledEncoderIndex
5007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledEncoderIndex(TIM_TypeDef *TIMx)
5011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->ECR, TIM_ECR_IE) == (TIM_ECR_IE)) ? 1U : 0U);
5013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set index direction
5017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          IDIR           LL_TIM_SetIndexDirection
5020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  IndexDirection This parameter can be one of the following values:
5022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_UP_DOWN
5023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_UP
5024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_DOWN
5025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetIndexDirection(TIM_TypeDef *TIMx, uint32_t IndexDirection)
5028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->ECR, TIM_ECR_IDIR, IndexDirection);
5030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual index direction
5034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          IDIR           LL_TIM_GetIndexDirection
5037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
5039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_UP_DOWN
5040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_UP
5041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_DOWN
5042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetIndexDirection(TIM_TypeDef *TIMx)
5044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->ECR, TIM_ECR_IDIR));
5046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable first index.
5050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          FIDX          LL_TIM_EnableFirstIndex
5053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableFirstIndex(TIM_TypeDef *TIMx)
5057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->ECR, TIM_ECR_FIDX);
5059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 517


5060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable first index.
5063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          FIDX          LL_TIM_DisableFirstIndex
5066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableFirstIndex(TIM_TypeDef *TIMx)
5070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->ECR, TIM_ECR_FIDX);
5072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether first index is enabled.
5076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          FIDX          LL_TIM_IsEnabledFirstIndex
5079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledFirstIndex(TIM_TypeDef *TIMx)
5083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->ECR, TIM_ECR_FIDX) == (TIM_ECR_FIDX)) ? 1UL : 0UL);
5085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set index positioning
5089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          IPOS           LL_TIM_SetIndexPositionning
5092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  IndexPositionning This parameter can be one of the following values:
5094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN_DOWN
5095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN_UP
5096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP_DOWN
5097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP_UP
5098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN
5099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP
5100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetIndexPositionning(TIM_TypeDef *TIMx, uint32_t IndexPositionning)
5103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->ECR, TIM_ECR_IPOS, IndexPositionning);
5105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Get actual index positioning
5109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          IPOS           LL_TIM_GetIndexPositionning
5112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
5114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN_DOWN
5115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN_UP
5116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP_DOWN
ARM GAS  /tmp/cc85dWdm.s 			page 518


5117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP_UP
5118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN
5119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_UP
5120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetIndexPositionning(TIM_TypeDef *TIMx)
5122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->ECR, TIM_ECR_IPOS));
5124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Configure encoder index.
5128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_INDEX_INSTANCE(TIMx) can be used to check whether or not
5129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides an index input.
5130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll ECR          IDIR          LL_TIM_ConfigIDX\n
5131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         ECR          FIDX          LL_TIM_ConfigIDX\n
5132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         ECR          IPOS          LL_TIM_ConfigIDX
5133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
5135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_UP or @ref LL_TIM_INDEX_DOWN or @ref LL_TIM_INDEX_UP_DOWN
5136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_ALL or @ref LL_TIM_INDEX_FIRST_ONLY
5137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_INDEX_POSITION_DOWN_DOWN or ... or @ref LL_TIM_INDEX_POSITION_UP
5138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigIDX(TIM_TypeDef *TIMx, uint32_t Configuration)
5141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->ECR, TIM_ECR_IDIR | TIM_ECR_FIDX | TIM_ECR_IPOS, Configuration);
5143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
5147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Inputs_Remapping Timer input remapping
5150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
5151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Remap TIM inputs (input channel, internal/external triggers).
5154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_REMAP_INSTANCE(TIMx) can be used to check whether or not
5155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a some timer inputs can be remapped.
5156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll TIM1_TISEL    TI1SEL      LL_TIM_SetRemap\n
5157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2_TISEL    TI1SEL      LL_TIM_SetRemap\n
5158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2_TISEL    TI2SEL      LL_TIM_SetRemap\n
5159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2_TISEL    TI3SEL      LL_TIM_SetRemap\n
5160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2_TISEL    TI4SEL      LL_TIM_SetRemap\n
5161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM3_TISEL    TI1SEL      LL_TIM_SetRemap\n
5162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM3_TISEL    TI2SEL      LL_TIM_SetRemap\n
5163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM3_TISEL    TI3SEL      LL_TIM_SetRemap\n
5164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4_TISEL    TI1SEL      LL_TIM_SetRemap\n
5165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4_TISEL    TI2SEL      LL_TIM_SetRemap\n
5166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4_TISEL    TI3SEL      LL_TIM_SetRemap\n
5167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4_TISEL    TI4SEL      LL_TIM_SetRemap\n
5168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM5_TISEL    TI1SEL      LL_TIM_SetRemap\n
5169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM5_TISEL    TI2SEL      LL_TIM_SetRemap\n
5170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM8_TISEL    TI1SEL      LL_TIM_SetRemap\n
5171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM15_TISEL   TI1SEL      LL_TIM_SetRemap\n
5172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM15_TISEL   TI2SEL      LL_TIM_SetRemap\n
5173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM16_TISEL   TI1SEL      LL_TIM_SetRemap\n
ARM GAS  /tmp/cc85dWdm.s 			page 519


5174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM17_TISEL   TI1SEL      LL_TIM_SetRemap\n
5175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM20_TISEL   TI1SEL      LL_TIM_SetRemap
5176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  Remap Remap param depends on the TIMx. Description available only
5178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         in CHM version of the User Manual (not in .pdf).
5179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         Otherwise see Reference Manual description of TISEL registers.
5180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         Below description summarizes "Timer Instance" and "Remap" param combinations:
5182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM1: one of the following values
5184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_GPIO
5186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP1
5187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP2
5188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP3
5189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP4
5190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM2: any combination of TI1_RMP, TI2_RMP, TI3_RMP and TI4_RMP where
5192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
5194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_GPIO
5195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP1
5196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP2
5197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP3
5198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP4
5199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP5 (*)
5200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
5202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_GPIO
5203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP1
5204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP2
5205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP3
5206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP4
5207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP6 (*)
5208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI3_RMP can be one of the following values
5210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI3_RMP_GPIO
5211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI3_RMP_COMP4
5212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI4_RMP can be one of the following values
5214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_GPIO
5215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_COMP1
5216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_COMP2
5217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM3: any combination of TI1_RMP and TI2_RMP where
5219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
5221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_GPIO
5222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP1
5223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP2
5224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP3
5225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP4
5226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP5 (*)
5227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP6 (*)
5228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP7 (*)
5229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
ARM GAS  /tmp/cc85dWdm.s 			page 520


5231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_GPIO
5232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP1
5233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP2
5234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP3
5235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP4
5236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP5 (*)
5237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP6 (*)
5238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP7 (*)
5239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI3_RMP can be one of the following values
5241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI3_RMP_GPIO
5242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI3_RMP_COMP3
5243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM4: any combination of TI1_RMP, TI2_RMP, TI3_RMP and TI4_RMP where
5245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
5247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_GPIO
5248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP1
5249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP2
5250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP3
5251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP4
5252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP5 (*)
5253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP6 (*)
5254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI1_RMP_COMP7 (*)
5255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
5257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_GPIO
5258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP1
5259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP2
5260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP3
5261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP4
5262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP5 (*)
5263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP6 (*)
5264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI2_RMP_COMP7 (*)
5265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI3_RMP can be one of the following values
5267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI3_RMP_GPIO
5268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI3_RMP_COMP5 (*)
5269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI4_RMP can be one of the following values
5271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI4_RMP_GPIO
5272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM4_TI4_RMP_COMP6 (*)
5273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM5: any combination of TI1_RMP and TI2_RMP where (**)
5275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
5277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_GPIO   (*)
5278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_LSI    (*)
5279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_LSE    (*)
5280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_RTC_WK (*)
5281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP1  (*)
5282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP2  (*)
5283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP3  (*)
5284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP4  (*)
5285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP5  (*)
5286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP6  (*)
5287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI1_RMP_COMP7  (*)
ARM GAS  /tmp/cc85dWdm.s 			page 521


5288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
5290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_GPIO  (*)
5291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP1 (*)
5292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP2 (*)
5293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP3 (*)
5294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP4 (*)
5295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP5 (*)
5296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP6 (*)
5297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI2_RMP_COMP7 (*)
5298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM8: one of the following values
5300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_GPIO
5302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_COMP1
5303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_COMP2
5304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_COMP3
5305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_COMP4
5306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM15: any combination of TI1_RMP and TI2_RMP where
5308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
5310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_GPIO
5311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_LSE
5312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_COMP1
5313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_COMP2
5314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_COMP5 (*)
5315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_COMP7 (*)
5316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
5318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_GPIO
5319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_COMP2
5320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_COMP3
5321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_COMP6 (*)
5322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_COMP7 (*)
5323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM16: one of the following values
5325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_GPIO
5327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_COMP6 (*)
5328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_MCO
5329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_HSE_32
5330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_RTC_WK
5331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_LSE
5332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_LSI
5333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM17: one of the following values
5335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_GPIO
5337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_COMP5 (*)
5338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_MCO
5339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_HSE_32
5340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_RTC_WK
5341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_LSE
5342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_LSI
5343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         TIM20: one of the following values (**)
ARM GAS  /tmp/cc85dWdm.s 			page 522


5345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_TI1_RMP_GPIO  (*)
5347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_TI1_RMP_COMP1 (*)
5348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_TI1_RMP_COMP2 (*)
5349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_TI1_RMP_COMP3 (*)
5350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM20_TI1_RMP_COMP4 (*)
5351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices. \n
5353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (**) Register not available in all devices.
5354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRemap(TIM_TypeDef *TIMx, uint32_t Remap)
5359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->TISEL, (TIM_TISEL_TI1SEL | TIM_TISEL_TI2SEL | TIM_TISEL_TI3SEL | TIM_TISEL_TI4SE
5361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable request for HSE/32 clock used for TISEL remap.
5365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Only TIM16 and TIM17 support HSE/32 remap
5366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll OR         HSE32EN           LL_TIM_EnableHSE32
5367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableHSE32(TIM_TypeDef *TIMx)
5371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->OR, TIM_OR_HSE32EN);
5373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable request for HSE/32 clock used for TISEL remap.
5377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Only TIM16 and TIM17 support HSE/32 remap
5378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll OR         HSE32EN           LL_TIM_DisableHSE32
5379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableHSE32(TIM_TypeDef *TIMx)
5383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->OR, TIM_OR_HSE32EN);
5385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether request for HSE/32 clock is enabled.
5389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Only TIM16 and TIM17 support HSE/32 remap
5390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll OR         HSE32EN           LL_TIM_IsEnabledHSE32
5391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledHSE32(TIM_TypeDef *TIMx)
5395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->OR, TIM_OR_HSE32EN) == (TIM_OR_HSE32EN)) ? 1UL : 0UL);
5397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
5401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 523


5402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_OCREF_Clear OCREF_Clear_Management
5404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
5405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Set the OCREF clear input source
5408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note The OCxREF signal of a given channel can be cleared when a high level is applied on the O
5409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes.
5410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_OCCS_INSTANCE(TIMx) can be used to check whether
5411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       or not a timer instance can configure OCREF clear input source.
5412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SMCR          OCCS                LL_TIM_SetOCRefClearInputSource
5413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll AF2           OCRSEL              LL_TIM_SetOCRefClearInputSource
5414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  OCRefClearInputSource This parameter can be one of the following values:
5416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_ETR
5417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP1
5418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP2
5419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP3
5420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP4
5421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP5 (*)
5422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP6 (*)
5423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP7 (*)
5424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *
5425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (*)  Value not defined in all devices. \n
5426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOCRefClearInputSource(TIM_TypeDef *TIMx, uint32_t OCRefClearInputSou
5429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_OCCS,
5431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****              ((OCRefClearInputSource & OCREF_CLEAR_SELECT_Msk) >> OCREF_CLEAR_SELECT_Pos) << TIM_SM
5432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(TIMx->AF2, TIM1_AF2_OCRSEL, OCRefClearInputSource);
5433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
5436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_FLAG_Management FLAG-Management
5439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
5440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the update interrupt flag (UIF).
5443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_ClearFlag_UPDATE
5444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_UPDATE(TIM_TypeDef *TIMx)
5448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
5450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) is set (update interrupt is pending).
5454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_IsActiveFlag_UPDATE
5455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_UPDATE(TIM_TypeDef *TIMx)
ARM GAS  /tmp/cc85dWdm.s 			page 524


5459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF)) ? 1UL : 0UL);
5461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 interrupt flag (CC1F).
5465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_ClearFlag_CC1
5466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1(TIM_TypeDef *TIMx)
5470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1IF));
5472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 interrupt flag (CC1F) is set (Capture/Compare 1 inte
5476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_IsActiveFlag_CC1
5477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1(TIM_TypeDef *TIMx)
5481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1IF) == (TIM_SR_CC1IF)) ? 1UL : 0UL);
5483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 interrupt flag (CC2F).
5487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_ClearFlag_CC2
5488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2(TIM_TypeDef *TIMx)
5492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2IF));
5494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 interrupt flag (CC2F) is set (Capture/Compare 2 inte
5498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_IsActiveFlag_CC2
5499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2(TIM_TypeDef *TIMx)
5503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2IF) == (TIM_SR_CC2IF)) ? 1UL : 0UL);
5505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 interrupt flag (CC3F).
5509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_ClearFlag_CC3
5510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3(TIM_TypeDef *TIMx)
5514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3IF));
ARM GAS  /tmp/cc85dWdm.s 			page 525


5516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 interrupt flag (CC3F) is set (Capture/Compare 3 inte
5520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_IsActiveFlag_CC3
5521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3(TIM_TypeDef *TIMx)
5525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3IF) == (TIM_SR_CC3IF)) ? 1UL : 0UL);
5527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 interrupt flag (CC4F).
5531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_ClearFlag_CC4
5532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4(TIM_TypeDef *TIMx)
5536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4IF));
5538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 interrupt flag (CC4F) is set (Capture/Compare 4 inte
5542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_IsActiveFlag_CC4
5543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4(TIM_TypeDef *TIMx)
5547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4IF) == (TIM_SR_CC4IF)) ? 1UL : 0UL);
5549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 5 interrupt flag (CC5F).
5553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC5IF         LL_TIM_ClearFlag_CC5
5554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC5(TIM_TypeDef *TIMx)
5558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC5IF));
5560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 5 interrupt flag (CC5F) is set (Capture/Compare 5 inte
5564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC5IF         LL_TIM_IsActiveFlag_CC5
5565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC5(TIM_TypeDef *TIMx)
5569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC5IF) == (TIM_SR_CC5IF)) ? 1UL : 0UL);
5571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 526


5573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 6 interrupt flag (CC6F).
5575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC6IF         LL_TIM_ClearFlag_CC6
5576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC6(TIM_TypeDef *TIMx)
5580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC6IF));
5582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 6 interrupt flag (CC6F) is set (Capture/Compare 6 inte
5586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC6IF         LL_TIM_IsActiveFlag_CC6
5587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC6(TIM_TypeDef *TIMx)
5591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC6IF) == (TIM_SR_CC6IF)) ? 1UL : 0UL);
5593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the commutation interrupt flag (COMIF).
5597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           COMIF         LL_TIM_ClearFlag_COM
5598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_COM(TIM_TypeDef *TIMx)
5602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_COMIF));
5604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether commutation interrupt flag (COMIF) is set (commutation interrupt is pe
5608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           COMIF         LL_TIM_IsActiveFlag_COM
5609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_COM(TIM_TypeDef *TIMx)
5613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_COMIF) == (TIM_SR_COMIF)) ? 1UL : 0UL);
5615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the trigger interrupt flag (TIF).
5619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_ClearFlag_TRIG
5620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_TRIG(TIM_TypeDef *TIMx)
5624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_TIF));
5626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether trigger interrupt flag (TIF) is set (trigger interrupt is pending).
ARM GAS  /tmp/cc85dWdm.s 			page 527


5630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_IsActiveFlag_TRIG
5631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_TRIG(TIM_TypeDef *TIMx)
5635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_TIF) == (TIM_SR_TIF)) ? 1UL : 0UL);
5637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the break interrupt flag (BIF).
5641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           BIF           LL_TIM_ClearFlag_BRK
5642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_BRK(TIM_TypeDef *TIMx)
5646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_BIF));
5648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether break interrupt flag (BIF) is set (break interrupt is pending).
5652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           BIF           LL_TIM_IsActiveFlag_BRK
5653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_BRK(TIM_TypeDef *TIMx)
5657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_BIF) == (TIM_SR_BIF)) ? 1UL : 0UL);
5659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the break 2 interrupt flag (B2IF).
5663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           B2IF          LL_TIM_ClearFlag_BRK2
5664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_BRK2(TIM_TypeDef *TIMx)
5668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_B2IF));
5670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether break 2 interrupt flag (B2IF) is set (break 2 interrupt is pending).
5674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           B2IF          LL_TIM_IsActiveFlag_BRK2
5675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_BRK2(TIM_TypeDef *TIMx)
5679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_B2IF) == (TIM_SR_B2IF)) ? 1UL : 0UL);
5681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 over-capture interrupt flag (CC1OF).
5685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_ClearFlag_CC1OVR
5686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /tmp/cc85dWdm.s 			page 528


5687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1OVR(TIM_TypeDef *TIMx)
5690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1OF));
5692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 over-capture interrupt flag (CC1OF) is set
5696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (Capture/Compare 1 interrupt is pending).
5697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_IsActiveFlag_CC1OVR
5698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1OVR(TIM_TypeDef *TIMx)
5702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1OF) == (TIM_SR_CC1OF)) ? 1UL : 0UL);
5704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 over-capture interrupt flag (CC2OF).
5708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_ClearFlag_CC2OVR
5709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2OVR(TIM_TypeDef *TIMx)
5713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2OF));
5715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 over-capture interrupt flag (CC2OF) is set
5719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (Capture/Compare 2 over-capture interrupt is pending).
5720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_IsActiveFlag_CC2OVR
5721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2OVR(TIM_TypeDef *TIMx)
5725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2OF) == (TIM_SR_CC2OF)) ? 1UL : 0UL);
5727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 over-capture interrupt flag (CC3OF).
5731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_ClearFlag_CC3OVR
5732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3OVR(TIM_TypeDef *TIMx)
5736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3OF));
5738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 over-capture interrupt flag (CC3OF) is set
5742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (Capture/Compare 3 over-capture interrupt is pending).
5743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_IsActiveFlag_CC3OVR
ARM GAS  /tmp/cc85dWdm.s 			page 529


5744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3OVR(TIM_TypeDef *TIMx)
5748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3OF) == (TIM_SR_CC3OF)) ? 1UL : 0UL);
5750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 over-capture interrupt flag (CC4OF).
5754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_ClearFlag_CC4OVR
5755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4OVR(TIM_TypeDef *TIMx)
5759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4OF));
5761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 over-capture interrupt flag (CC4OF) is set
5765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *         (Capture/Compare 4 over-capture interrupt is pending).
5766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_IsActiveFlag_CC4OVR
5767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4OVR(TIM_TypeDef *TIMx)
5771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4OF) == (TIM_SR_CC4OF)) ? 1UL : 0UL);
5773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the system break interrupt flag (SBIF).
5777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           SBIF          LL_TIM_ClearFlag_SYSBRK
5778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_SYSBRK(TIM_TypeDef *TIMx)
5782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_SBIF));
5784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether system break interrupt flag (SBIF) is set (system break interrupt is p
5788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           SBIF          LL_TIM_IsActiveFlag_SYSBRK
5789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_SYSBRK(TIM_TypeDef *TIMx)
5793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_SBIF) == (TIM_SR_SBIF)) ? 1UL : 0UL);
5795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the transition error interrupt flag (TERRF).
5799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
5800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
ARM GAS  /tmp/cc85dWdm.s 			page 530


5801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           TERRF           LL_TIM_ClearFlag_TERR
5802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_TERR(TIM_TypeDef *TIMx)
5806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_TERRF));
5808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether transition error interrupt flag (TERRF) is set (transition error inter
5812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
5813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
5814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           TERRF           LL_TIM_IsActiveFlag_TERR
5815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_TERR(TIM_TypeDef *TIMx)
5819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_TERRF) == (TIM_SR_TERRF)) ? 1UL : 0UL);
5821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the index error interrupt flag (IERRF).
5825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
5826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
5827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           IERRF           LL_TIM_ClearFlag_IERR
5828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_IERR(TIM_TypeDef *TIMx)
5832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_IERRF));
5834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether index error interrupt flag (IERRF) is set (index error interrupt is pe
5838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
5839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
5840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           IERRF           LL_TIM_IsActiveFlag_IERR
5841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_IERR(TIM_TypeDef *TIMx)
5845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_IERRF) == (TIM_SR_IERRF)) ? 1UL : 0UL);
5847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the direction change interrupt flag (DIRF).
5851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
5852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
5853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           DIRF           LL_TIM_ClearFlag_DIR
5854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_DIR(TIM_TypeDef *TIMx)
ARM GAS  /tmp/cc85dWdm.s 			page 531


5858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_DIRF));
5860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether direction change interrupt flag (DIRF) is set (direction change interr
5864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
5865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
5866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           DIRF           LL_TIM_IsActiveFlag_DIR
5867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_DIR(TIM_TypeDef *TIMx)
5871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_DIRF) == (TIM_SR_DIRF)) ? 1UL : 0UL);
5873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Clear the index interrupt flag (IDXF).
5877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
5878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
5879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           IDXF           LL_TIM_ClearFlag_IDX
5880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_IDX(TIM_TypeDef *TIMx)
5884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_IDXF));
5886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicate whether index interrupt flag (IDXF) is set (index interrupt is pending).
5890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
5891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
5892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll SR           IDXF           LL_TIM_IsActiveFlag_IDX
5893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_IDX(TIM_TypeDef *TIMx)
5897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_IDXF) == (TIM_SR_IDXF)) ? 1UL : 0UL);
5899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
5902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_IT_Management IT-Management
5905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
5906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable update interrupt (UIE).
5909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_EnableIT_UPDATE
5910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_UPDATE(TIM_TypeDef *TIMx)
5914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 532


5915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UIE);
5916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable update interrupt (UIE).
5920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_DisableIT_UPDATE
5921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_UPDATE(TIM_TypeDef *TIMx)
5925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_UIE);
5927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the update interrupt (UIE) is enabled.
5931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_IsEnabledIT_UPDATE
5932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_UPDATE(TIM_TypeDef *TIMx)
5936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_UIE) == (TIM_DIER_UIE)) ? 1UL : 0UL);
5938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 1 interrupt (CC1IE).
5942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_EnableIT_CC1
5943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC1(TIM_TypeDef *TIMx)
5947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC1IE);
5949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 1  interrupt (CC1IE).
5953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_DisableIT_CC1
5954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC1(TIM_TypeDef *TIMx)
5958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1IE);
5960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 1 interrupt (CC1IE) is enabled.
5964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_IsEnabledIT_CC1
5965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
5967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC1(TIM_TypeDef *TIMx)
5969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC1IE) == (TIM_DIER_CC1IE)) ? 1UL : 0UL);
5971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 533


5972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 2 interrupt (CC2IE).
5975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_EnableIT_CC2
5976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC2(TIM_TypeDef *TIMx)
5980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC2IE);
5982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 2  interrupt (CC2IE).
5986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_DisableIT_CC2
5987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
5989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
5990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC2(TIM_TypeDef *TIMx)
5991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
5992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC2IE);
5993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
5994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
5995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
5996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 2 interrupt (CC2IE) is enabled.
5997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_IsEnabledIT_CC2
5998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
5999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC2(TIM_TypeDef *TIMx)
6002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC2IE) == (TIM_DIER_CC2IE)) ? 1UL : 0UL);
6004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 3 interrupt (CC3IE).
6008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_EnableIT_CC3
6009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC3(TIM_TypeDef *TIMx)
6013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC3IE);
6015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 3  interrupt (CC3IE).
6019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_DisableIT_CC3
6020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC3(TIM_TypeDef *TIMx)
6024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC3IE);
6026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 534


6029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 3 interrupt (CC3IE) is enabled.
6030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_IsEnabledIT_CC3
6031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC3(TIM_TypeDef *TIMx)
6035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC3IE) == (TIM_DIER_CC3IE)) ? 1UL : 0UL);
6037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 4 interrupt (CC4IE).
6041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_EnableIT_CC4
6042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC4(TIM_TypeDef *TIMx)
6046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC4IE);
6048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 4  interrupt (CC4IE).
6052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_DisableIT_CC4
6053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC4(TIM_TypeDef *TIMx)
6057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC4IE);
6059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 4 interrupt (CC4IE) is enabled.
6063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_IsEnabledIT_CC4
6064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC4(TIM_TypeDef *TIMx)
6068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC4IE) == (TIM_DIER_CC4IE)) ? 1UL : 0UL);
6070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable commutation interrupt (COMIE).
6074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_EnableIT_COM
6075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_COM(TIM_TypeDef *TIMx)
6079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_COMIE);
6081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable commutation interrupt (COMIE).
6085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_DisableIT_COM
ARM GAS  /tmp/cc85dWdm.s 			page 535


6086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_COM(TIM_TypeDef *TIMx)
6090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_COMIE);
6092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the commutation interrupt (COMIE) is enabled.
6096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_IsEnabledIT_COM
6097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_COM(TIM_TypeDef *TIMx)
6101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_COMIE) == (TIM_DIER_COMIE)) ? 1UL : 0UL);
6103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable trigger interrupt (TIE).
6107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_EnableIT_TRIG
6108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_TRIG(TIM_TypeDef *TIMx)
6112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_TIE);
6114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable trigger interrupt (TIE).
6118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_DisableIT_TRIG
6119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_TRIG(TIM_TypeDef *TIMx)
 4456              		.loc 12 6122 22 view .LVU1464
 4457              	.LBB857:
6123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_TIE);
 4458              		.loc 12 6124 3 view .LVU1465
 4459 011a E368     		ldr	r3, [r4, #12]
 4460 011c 23F04003 		bic	r3, r3, #64
 4461 0120 E360     		str	r3, [r4, #12]
 4462              	.LVL287:
 4463              		.loc 12 6124 3 is_stmt 0 view .LVU1466
 4464              	.LBE857:
 4465              	.LBE856:
 899:Src/main.c    ****   LL_TIM_SetTriggerOutput(TIM1, LL_TIM_TRGO_OC4REF);
 4466              		.loc 1 899 3 is_stmt 1 view .LVU1467
 4467              	.LBB858:
 4468              	.LBI858:
6125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the trigger interrupt (TIE) is enabled.
ARM GAS  /tmp/cc85dWdm.s 			page 536


6129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_IsEnabledIT_TRIG
6130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_TRIG(TIM_TypeDef *TIMx)
6134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_TIE) == (TIM_DIER_TIE)) ? 1UL : 0UL);
6136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable break interrupt (BIE).
6140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_EnableIT_BRK
6141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_BRK(TIM_TypeDef *TIMx)
6145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_BIE);
6147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable break interrupt (BIE).
6151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_DisableIT_BRK
6152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_BRK(TIM_TypeDef *TIMx)
6156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_BIE);
6158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the break interrupt (BIE) is enabled.
6162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_IsEnabledIT_BRK
6163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_BRK(TIM_TypeDef *TIMx)
6167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_BIE) == (TIM_DIER_BIE)) ? 1UL : 0UL);
6169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable transition error interrupt (TERRIE).
6173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TERRIE           LL_TIM_EnableIT_TERR
6176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_TERR(TIM_TypeDef *TIMx)
6180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_TERRIE);
6182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable transition error interrupt (TERRIE).
ARM GAS  /tmp/cc85dWdm.s 			page 537


6186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TERRIE           LL_TIM_DisableIT_TERR
6189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_TERR(TIM_TypeDef *TIMx)
6193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_TERRIE);
6195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the transition error interrupt (TERRIE) is enabled.
6199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TERRIE           LL_TIM_IsEnabledIT_TERR
6202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_TERR(TIM_TypeDef *TIMx)
6206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_TERRIE) == (TIM_DIER_TERRIE)) ? 1UL : 0UL);
6208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable index error interrupt (IERRIE).
6212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IERRIE           LL_TIM_EnableIT_IERR
6215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_IERR(TIM_TypeDef *TIMx)
6219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_IERRIE);
6221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable index error interrupt (IERRIE).
6225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IERRIE           LL_TIM_DisableIT_IERR
6228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_IERR(TIM_TypeDef *TIMx)
6232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_IERRIE);
6234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the index error interrupt (IERRIE) is enabled.
6238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_ERROR_INSTANCE(TIMx) can be used to check whether or not
6239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder error management.
6240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IERRIE           LL_TIM_IsEnabledIT_IERR
6241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/cc85dWdm.s 			page 538


6243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_IERR(TIM_TypeDef *TIMx)
6245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_IERRIE) == (TIM_DIER_IERRIE)) ? 1UL : 0UL);
6247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable direction change interrupt (DIRIE).
6251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         DIRIE           LL_TIM_EnableIT_DIR
6254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_DIR(TIM_TypeDef *TIMx)
6258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_DIRIE);
6260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable direction change interrupt (DIRIE).
6264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         DIRIE           LL_TIM_DisableIT_DIR
6267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_DIR(TIM_TypeDef *TIMx)
6271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_DIRIE);
6273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the direction change interrupt (DIRIE) is enabled.
6277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         DIRIE           LL_TIM_IsEnabledIT_DIR
6280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_DIR(TIM_TypeDef *TIMx)
6284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_DIRIE) == (TIM_DIER_DIRIE)) ? 1UL : 0UL);
6286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable index interrupt (IDXIE).
6290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IDXIE           LL_TIM_EnableIT_IDX
6293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_IDX(TIM_TypeDef *TIMx)
6297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_IDXIE);
6299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 539


6300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable index interrupt (IDXIE).
6303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IDXIE           LL_TIM_DisableIT_IDX
6306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_IDX(TIM_TypeDef *TIMx)
6310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_IDXIE);
6312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the index interrupt (IDXIE) is enabled.
6316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @note Macro IS_TIM_FUNCTINONAL_ENCODER_INTERRUPT_INSTANCE(TIMx) can be used to check whether or
6317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   *       a timer instance provides encoder interrupt management.
6318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         IDXIE           LL_TIM_IsEnabledIT_IDX
6319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_IDX(TIM_TypeDef *TIMx)
6323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_IDXIE) == (TIM_DIER_IDXIE)) ? 1UL : 0UL);
6325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @}
6329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Management DMA Management
6332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @{
6333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable update DMA request (UDE).
6336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_EnableDMAReq_UPDATE
6337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_UPDATE(TIM_TypeDef *TIMx)
6341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UDE);
6343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable update DMA request (UDE).
6347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_DisableDMAReq_UPDATE
6348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_UPDATE(TIM_TypeDef *TIMx)
6352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_UDE);
6354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 540


6357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the update DMA request  (UDE) is enabled.
6358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_IsEnabledDMAReq_UPDATE
6359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_UPDATE(TIM_TypeDef *TIMx)
6363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_UDE) == (TIM_DIER_UDE)) ? 1UL : 0UL);
6365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 1 DMA request (CC1DE).
6369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_EnableDMAReq_CC1
6370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC1(TIM_TypeDef *TIMx)
6374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC1DE);
6376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 1  DMA request (CC1DE).
6380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_DisableDMAReq_CC1
6381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC1(TIM_TypeDef *TIMx)
6385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1DE);
6387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 1 DMA request (CC1DE) is enabled.
6391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_IsEnabledDMAReq_CC1
6392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC1(TIM_TypeDef *TIMx)
6396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC1DE) == (TIM_DIER_CC1DE)) ? 1UL : 0UL);
6398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 2 DMA request (CC2DE).
6402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_EnableDMAReq_CC2
6403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC2(TIM_TypeDef *TIMx)
6407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC2DE);
6409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 2  DMA request (CC2DE).
6413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_DisableDMAReq_CC2
ARM GAS  /tmp/cc85dWdm.s 			page 541


6414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC2(TIM_TypeDef *TIMx)
6418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC2DE);
6420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 2 DMA request (CC2DE) is enabled.
6424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_IsEnabledDMAReq_CC2
6425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC2(TIM_TypeDef *TIMx)
6429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC2DE) == (TIM_DIER_CC2DE)) ? 1UL : 0UL);
6431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 3 DMA request (CC3DE).
6435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_EnableDMAReq_CC3
6436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC3(TIM_TypeDef *TIMx)
6440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC3DE);
6442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 3  DMA request (CC3DE).
6446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_DisableDMAReq_CC3
6447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC3(TIM_TypeDef *TIMx)
6451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC3DE);
6453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 3 DMA request (CC3DE) is enabled.
6457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_IsEnabledDMAReq_CC3
6458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC3(TIM_TypeDef *TIMx)
6462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC3DE) == (TIM_DIER_CC3DE)) ? 1UL : 0UL);
6464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable capture/compare 4 DMA request (CC4DE).
6468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4DE         LL_TIM_EnableDMAReq_CC4
6469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/cc85dWdm.s 			page 542


6471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC4(TIM_TypeDef *TIMx)
6473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC4DE);
6475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable capture/compare 4  DMA request (CC4DE).
6479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4DE         LL_TIM_DisableDMAReq_CC4
6480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC4(TIM_TypeDef *TIMx)
6484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC4DE);
6486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 4 DMA request (CC4DE) is enabled.
6490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         CC4DE         LL_TIM_IsEnabledDMAReq_CC4
6491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC4(TIM_TypeDef *TIMx)
6495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC4DE) == (TIM_DIER_CC4DE)) ? 1UL : 0UL);
6497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable commutation DMA request (COMDE).
6501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMDE         LL_TIM_EnableDMAReq_COM
6502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_COM(TIM_TypeDef *TIMx)
6506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_COMDE);
6508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable commutation DMA request (COMDE).
6512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMDE         LL_TIM_DisableDMAReq_COM
6513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_COM(TIM_TypeDef *TIMx)
6517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_COMDE);
6519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Indicates whether the commutation DMA request (COMDE) is enabled.
6523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         COMDE         LL_TIM_IsEnabledDMAReq_COM
6524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
6526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_COM(TIM_TypeDef *TIMx)
ARM GAS  /tmp/cc85dWdm.s 			page 543


6528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_COMDE) == (TIM_DIER_COMDE)) ? 1UL : 0UL);
6530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Enable trigger interrupt (TDE).
6534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TDE           LL_TIM_EnableDMAReq_TRIG
6535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_TRIG(TIM_TypeDef *TIMx)
6539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_TDE);
6541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
6542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** 
6543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** /**
6544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @brief  Disable trigger interrupt (TDE).
6545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @rmtoll DIER         TDE           LL_TIM_DisableDMAReq_TRIG
6546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @param  TIMx Timer instance
6547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   * @retval None
6548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   */
6549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_TRIG(TIM_TypeDef *TIMx)
 4469              		.loc 12 6549 22 view .LVU1468
 4470              	.LBB859:
6550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
6551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_TDE);
 4471              		.loc 12 6551 3 view .LVU1469
 4472 0122 E368     		ldr	r3, [r4, #12]
 4473 0124 23F48043 		bic	r3, r3, #16384
 4474 0128 E360     		str	r3, [r4, #12]
 4475              	.LVL288:
 4476              		.loc 12 6551 3 is_stmt 0 view .LVU1470
 4477              	.LBE859:
 4478              	.LBE858:
 900:Src/main.c    ****   LL_TIM_SetTriggerOutput2(TIM1, LL_TIM_TRGO2_RESET);
 4479              		.loc 1 900 3 is_stmt 1 view .LVU1471
 4480              	.LBB860:
 4481              	.LBI860:
3986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4482              		.loc 12 3986 22 view .LVU1472
 4483              	.LBB861:
3988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4484              		.loc 12 3988 3 view .LVU1473
 4485 012a 6368     		ldr	r3, [r4, #4]
 4486 012c 23F00073 		bic	r3, r3, #33554432
 4487 0130 23F07003 		bic	r3, r3, #112
 4488 0134 43F07003 		orr	r3, r3, #112
 4489 0138 6360     		str	r3, [r4, #4]
 4490              	.LVL289:
3988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4491              		.loc 12 3988 3 is_stmt 0 view .LVU1474
 4492              	.LBE861:
 4493              	.LBE860:
 901:Src/main.c    ****   LL_TIM_DisableMasterSlaveMode(TIM1);
 4494              		.loc 1 901 3 is_stmt 1 view .LVU1475
 4495              	.LBB862:
 4496              	.LBI862:
ARM GAS  /tmp/cc85dWdm.s 			page 544


4016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4497              		.loc 12 4016 22 view .LVU1476
 4498              	.LBB863:
4018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4499              		.loc 12 4018 3 view .LVU1477
 4500 013a 6368     		ldr	r3, [r4, #4]
 4501 013c 23F47003 		bic	r3, r3, #15728640
 4502 0140 6360     		str	r3, [r4, #4]
 4503              	.LVL290:
4018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4504              		.loc 12 4018 3 is_stmt 0 view .LVU1478
 4505              	.LBE863:
 4506              	.LBE862:
 902:Src/main.c    ****   LL_TIM_SetBreakInputSourcePolarity(TIM1, LL_TIM_BREAK_INPUT_BKIN2, LL_TIM_BKIN_SOURCE_BKCOMP1, LL
 4507              		.loc 1 902 3 is_stmt 1 view .LVU1479
 4508              	.LBB864:
 4509              	.LBI864:
4092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 4510              		.loc 12 4092 22 view .LVU1480
 4511              	.LBB865:
4094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4512              		.loc 12 4094 3 view .LVU1481
 4513 0142 A368     		ldr	r3, [r4, #8]
 4514 0144 23F08003 		bic	r3, r3, #128
 4515 0148 A360     		str	r3, [r4, #8]
 4516              	.LVL291:
4094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4517              		.loc 12 4094 3 is_stmt 0 view .LVU1482
 4518              	.LBE865:
 4519              	.LBE864:
 903:Src/main.c    ****   LL_TIM_SetBreakInputSourcePolarity(TIM1, LL_TIM_BREAK_INPUT_BKIN2, LL_TIM_BKIN_SOURCE_BKCOMP2, LL
 4520              		.loc 1 903 3 is_stmt 1 view .LVU1483
 4521              	.LBB866:
 4522              	.LBI866:
4774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                         uint32_t Polarity)
 4523              		.loc 12 4774 22 view .LVU1484
 4524              	.LBB867:
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, (TIMx_AF1_BKINP << TIM_POSITION_BRK_SOURCE), (Polarity << TIM_POSITION_BRK_SOUR
 4525              		.loc 12 4777 3 view .LVU1485
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, (TIMx_AF1_BKINP << TIM_POSITION_BRK_SOURCE), (Polarity << TIM_POSITION_BRK_SOUR
 4526              		.loc 12 4777 65 is_stmt 0 view .LVU1486
 4527 014a 6D4A     		ldr	r2, .L103+12
 4528              	.LVL292:
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4529              		.loc 12 4778 3 is_stmt 1 view .LVU1487
 4530 014c 5168     		ldr	r1, [r2, #4]
 4531              	.LVL293:
 4532              	.LBB868:
 4533              	.LBI868:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4534              		.loc 5 1048 31 view .LVU1488
 4535              	.LBB869:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4536              		.loc 5 1050 3 view .LVU1489
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4537              		.loc 5 1055 4 view .LVU1490
 4538 014e 0223     		movs	r3, #2
ARM GAS  /tmp/cc85dWdm.s 			page 545


 4539              		.syntax unified
 4540              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4541 0150 93FAA3F3 		rbit r3, r3
 4542              	@ 0 "" 2
 4543              	.LVL294:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4544              		.loc 5 1068 3 view .LVU1491
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4545              		.loc 5 1068 3 is_stmt 0 view .LVU1492
 4546              		.thumb
 4547              		.syntax unified
 4548              	.LBE869:
 4549              	.LBE868:
 4550              	.LBB870:
 4551              	.LBI870:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4552              		.loc 5 1078 30 is_stmt 1 view .LVU1493
 4553              	.LBB871:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4554              		.loc 5 1089 3 view .LVU1494
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4555              		.loc 5 1089 6 is_stmt 0 view .LVU1495
 4556 0154 002B     		cmp	r3, #0
 4557 0156 00F0C680 		beq	.L99
 4558              		.loc 5 1093 3 is_stmt 1 view .LVU1496
 4559              		.loc 5 1093 10 is_stmt 0 view .LVU1497
 4560 015a B3FA83F3 		clz	r3, r3
 4561              	.LVL295:
 4562              	.L96:
 4563              		.loc 5 1093 10 view .LVU1498
 4564              	.LBE871:
 4565              	.LBE870:
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4566              		.loc 12 4778 3 view .LVU1499
 4567 015e 03F01F03 		and	r3, r3, #31
 4568 0162 4FF40070 		mov	r0, #512
 4569 0166 00FA03F3 		lsl	r3, r0, r3
 4570 016a 21EA0303 		bic	r3, r1, r3
 4571              	.LVL296:
 4572              	.LBB873:
 4573              	.LBI873:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4574              		.loc 5 1048 31 is_stmt 1 view .LVU1500
 4575              	.LBB874:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4576              		.loc 5 1050 3 view .LVU1501
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4577              		.loc 5 1055 4 view .LVU1502
 4578 016e 0221     		movs	r1, #2
 4579              		.syntax unified
 4580              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4581 0170 91FAA1F1 		rbit r1, r1
 4582              	@ 0 "" 2
 4583              	.LVL297:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4584              		.loc 5 1068 3 view .LVU1503
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 546


 4585              		.loc 5 1068 3 is_stmt 0 view .LVU1504
 4586              		.thumb
 4587              		.syntax unified
 4588              	.LBE874:
 4589              	.LBE873:
 4590              	.LBE867:
 4591              	.LBE866:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4592              		.loc 5 1089 3 is_stmt 1 view .LVU1505
 4593              	.LBB878:
 4594              	.LBB876:
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4595              		.loc 12 4778 3 is_stmt 0 view .LVU1506
 4596 0174 5360     		str	r3, [r2, #4]
 4597              	.LVL298:
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4598              		.loc 12 4778 3 view .LVU1507
 4599              	.LBE876:
 4600              	.LBE878:
 904:Src/main.c    ****   LL_TIM_SetBreakInputSourcePolarity(TIM1, LL_TIM_BREAK_INPUT_BKIN2, LL_TIM_BKIN_SOURCE_BKCOMP4, LL
 4601              		.loc 1 904 3 is_stmt 1 view .LVU1508
 4602              	.LBB879:
 4603              	.LBI879:
4774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                         uint32_t Polarity)
 4604              		.loc 12 4774 22 view .LVU1509
 4605              	.LBB880:
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, (TIMx_AF1_BKINP << TIM_POSITION_BRK_SOURCE), (Polarity << TIM_POSITION_BRK_SOUR
 4606              		.loc 12 4777 3 view .LVU1510
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4607              		.loc 12 4778 3 view .LVU1511
 4608 0176 5168     		ldr	r1, [r2, #4]
 4609              	.LVL299:
 4610              	.LBB881:
 4611              	.LBI881:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4612              		.loc 5 1048 31 view .LVU1512
 4613              	.LBB882:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4614              		.loc 5 1050 3 view .LVU1513
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4615              		.loc 5 1055 4 view .LVU1514
 4616 0178 0423     		movs	r3, #4
 4617              		.syntax unified
 4618              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4619 017a 93FAA3F3 		rbit r3, r3
 4620              	@ 0 "" 2
 4621              	.LVL300:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4622              		.loc 5 1068 3 view .LVU1515
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4623              		.loc 5 1068 3 is_stmt 0 view .LVU1516
 4624              		.thumb
 4625              		.syntax unified
 4626              	.LBE882:
 4627              	.LBE881:
 4628              	.LBB883:
 4629              	.LBI883:
ARM GAS  /tmp/cc85dWdm.s 			page 547


1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4630              		.loc 5 1078 30 is_stmt 1 view .LVU1517
 4631              	.LBB884:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4632              		.loc 5 1089 3 view .LVU1518
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4633              		.loc 5 1089 6 is_stmt 0 view .LVU1519
 4634 017e 002B     		cmp	r3, #0
 4635 0180 00F0B380 		beq	.L100
 4636              		.loc 5 1093 3 is_stmt 1 view .LVU1520
 4637              		.loc 5 1093 10 is_stmt 0 view .LVU1521
 4638 0184 B3FA83F3 		clz	r3, r3
 4639              	.LVL301:
 4640              	.L97:
 4641              		.loc 5 1093 10 view .LVU1522
 4642              	.LBE884:
 4643              	.LBE883:
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4644              		.loc 12 4778 3 view .LVU1523
 4645 0188 03F01F03 		and	r3, r3, #31
 4646 018c 4FF40070 		mov	r0, #512
 4647 0190 00FA03F3 		lsl	r3, r0, r3
 4648 0194 21EA0303 		bic	r3, r1, r3
 4649              	.LVL302:
 4650              	.LBB886:
 4651              	.LBI886:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4652              		.loc 5 1048 31 is_stmt 1 view .LVU1524
 4653              	.LBB887:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4654              		.loc 5 1050 3 view .LVU1525
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4655              		.loc 5 1055 4 view .LVU1526
 4656 0198 0421     		movs	r1, #4
 4657              		.syntax unified
 4658              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4659 019a 91FAA1F1 		rbit r1, r1
 4660              	@ 0 "" 2
 4661              	.LVL303:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4662              		.loc 5 1068 3 view .LVU1527
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4663              		.loc 5 1068 3 is_stmt 0 view .LVU1528
 4664              		.thumb
 4665              		.syntax unified
 4666              	.LBE887:
 4667              	.LBE886:
 4668              	.LBE880:
 4669              	.LBE879:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4670              		.loc 5 1089 3 is_stmt 1 view .LVU1529
 4671              	.LBB891:
 4672              	.LBB889:
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4673              		.loc 12 4778 3 is_stmt 0 view .LVU1530
 4674 019e 5360     		str	r3, [r2, #4]
 4675              	.LVL304:
ARM GAS  /tmp/cc85dWdm.s 			page 548


4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4676              		.loc 12 4778 3 view .LVU1531
 4677              	.LBE889:
 4678              	.LBE891:
 905:Src/main.c    ****   TIM_BDTRInitStruct.OSSRState = LL_TIM_OSSR_ENABLE;
 4679              		.loc 1 905 3 is_stmt 1 view .LVU1532
 4680              	.LBB892:
 4681              	.LBI892:
4774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****                                                         uint32_t Polarity)
 4682              		.loc 12 4774 22 view .LVU1533
 4683              	.LBB893:
4777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h ****   MODIFY_REG(*pReg, (TIMx_AF1_BKINP << TIM_POSITION_BRK_SOURCE), (Polarity << TIM_POSITION_BRK_SOUR
 4684              		.loc 12 4777 3 view .LVU1534
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4685              		.loc 12 4778 3 view .LVU1535
 4686 01a0 5168     		ldr	r1, [r2, #4]
 4687              	.LVL305:
 4688              	.LBB894:
 4689              	.LBI894:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4690              		.loc 5 1048 31 view .LVU1536
 4691              	.LBB895:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4692              		.loc 5 1050 3 view .LVU1537
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4693              		.loc 5 1055 4 view .LVU1538
 4694 01a2 1023     		movs	r3, #16
 4695              		.syntax unified
 4696              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4697 01a4 93FAA3F3 		rbit r3, r3
 4698              	@ 0 "" 2
 4699              	.LVL306:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4700              		.loc 5 1068 3 view .LVU1539
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4701              		.loc 5 1068 3 is_stmt 0 view .LVU1540
 4702              		.thumb
 4703              		.syntax unified
 4704              	.LBE895:
 4705              	.LBE894:
 4706              	.LBB896:
 4707              	.LBI896:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4708              		.loc 5 1078 30 is_stmt 1 view .LVU1541
 4709              	.LBB897:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4710              		.loc 5 1089 3 view .LVU1542
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4711              		.loc 5 1089 6 is_stmt 0 view .LVU1543
 4712 01a8 002B     		cmp	r3, #0
 4713 01aa 00F0A080 		beq	.L101
 4714              		.loc 5 1093 3 is_stmt 1 view .LVU1544
 4715              		.loc 5 1093 10 is_stmt 0 view .LVU1545
 4716 01ae B3FA83F3 		clz	r3, r3
 4717              	.LVL307:
 4718              	.L98:
 4719              		.loc 5 1093 10 view .LVU1546
ARM GAS  /tmp/cc85dWdm.s 			page 549


 4720              	.LBE897:
 4721              	.LBE896:
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4722              		.loc 12 4778 3 view .LVU1547
 4723 01b2 03F01F03 		and	r3, r3, #31
 4724 01b6 4FF40077 		mov	r7, #512
 4725 01ba 07FA03F3 		lsl	r3, r7, r3
 4726 01be 21EA0303 		bic	r3, r1, r3
 4727              	.LVL308:
 4728              	.LBB899:
 4729              	.LBI899:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4730              		.loc 5 1048 31 is_stmt 1 view .LVU1548
 4731              	.LBB900:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4732              		.loc 5 1050 3 view .LVU1549
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4733              		.loc 5 1055 4 view .LVU1550
 4734 01c2 1021     		movs	r1, #16
 4735              		.syntax unified
 4736              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4737 01c4 91FAA1F1 		rbit r1, r1
 4738              	@ 0 "" 2
 4739              	.LVL309:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4740              		.loc 5 1068 3 view .LVU1551
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4741              		.loc 5 1068 3 is_stmt 0 view .LVU1552
 4742              		.thumb
 4743              		.syntax unified
 4744              	.LBE900:
 4745              	.LBE899:
 4746              	.LBE893:
 4747              	.LBE892:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4748              		.loc 5 1089 3 is_stmt 1 view .LVU1553
 4749              	.LBB904:
 4750              	.LBB902:
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4751              		.loc 12 4778 3 is_stmt 0 view .LVU1554
 4752 01c8 5360     		str	r3, [r2, #4]
 4753              	.LVL310:
4778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 4754              		.loc 12 4778 3 view .LVU1555
 4755              	.LBE902:
 4756              	.LBE904:
 906:Src/main.c    ****   TIM_BDTRInitStruct.OSSIState = LL_TIM_OSSI_ENABLE;
 4757              		.loc 1 906 3 is_stmt 1 view .LVU1556
 906:Src/main.c    ****   TIM_BDTRInitStruct.OSSIState = LL_TIM_OSSI_ENABLE;
 4758              		.loc 1 906 32 is_stmt 0 view .LVU1557
 4759 01ca 4FF40063 		mov	r3, #2048
 4760 01ce 0B93     		str	r3, [sp, #44]
 907:Src/main.c    ****   TIM_BDTRInitStruct.LockLevel = LL_TIM_LOCKLEVEL_1;
 4761              		.loc 1 907 3 is_stmt 1 view .LVU1558
 907:Src/main.c    ****   TIM_BDTRInitStruct.LockLevel = LL_TIM_LOCKLEVEL_1;
 4762              		.loc 1 907 32 is_stmt 0 view .LVU1559
 4763 01d0 4FF48068 		mov	r8, #1024
ARM GAS  /tmp/cc85dWdm.s 			page 550


 4764 01d4 CDF83080 		str	r8, [sp, #48]
 908:Src/main.c    ****   TIM_BDTRInitStruct.DeadTime = ((DEAD_TIME_COUNTS) / 2);
 4765              		.loc 1 908 3 is_stmt 1 view .LVU1560
 908:Src/main.c    ****   TIM_BDTRInitStruct.DeadTime = ((DEAD_TIME_COUNTS) / 2);
 4766              		.loc 1 908 32 is_stmt 0 view .LVU1561
 4767 01d8 4FF48076 		mov	r6, #256
 4768 01dc 0D96     		str	r6, [sp, #52]
 909:Src/main.c    ****   TIM_BDTRInitStruct.BreakState = LL_TIM_BREAK_DISABLE;
 4769              		.loc 1 909 3 is_stmt 1 view .LVU1562
 909:Src/main.c    ****   TIM_BDTRInitStruct.BreakState = LL_TIM_BREAK_DISABLE;
 4770              		.loc 1 909 31 is_stmt 0 view .LVU1563
 4771 01de 3F23     		movs	r3, #63
 4772 01e0 8DF83830 		strb	r3, [sp, #56]
 910:Src/main.c    ****   TIM_BDTRInitStruct.BreakPolarity = LL_TIM_BREAK_POLARITY_HIGH;
 4773              		.loc 1 910 3 is_stmt 1 view .LVU1564
 910:Src/main.c    ****   TIM_BDTRInitStruct.BreakPolarity = LL_TIM_BREAK_POLARITY_HIGH;
 4774              		.loc 1 910 33 is_stmt 0 view .LVU1565
 4775 01e4 0025     		movs	r5, #0
 4776 01e6 ADF83A50 		strh	r5, [sp, #58]	@ movhi
 911:Src/main.c    ****   TIM_BDTRInitStruct.BreakFilter = LL_TIM_BREAK_FILTER_FDIV1;
 4777              		.loc 1 911 3 is_stmt 1 view .LVU1566
 911:Src/main.c    ****   TIM_BDTRInitStruct.BreakFilter = LL_TIM_BREAK_FILTER_FDIV1;
 4778              		.loc 1 911 36 is_stmt 0 view .LVU1567
 4779 01ea 4FF40054 		mov	r4, #8192
 4780 01ee 0F94     		str	r4, [sp, #60]
 912:Src/main.c    ****   TIM_BDTRInitStruct.BreakAFMode = LL_TIM_BREAK_AFMODE_INPUT;
 4781              		.loc 1 912 3 is_stmt 1 view .LVU1568
 912:Src/main.c    ****   TIM_BDTRInitStruct.BreakAFMode = LL_TIM_BREAK_AFMODE_INPUT;
 4782              		.loc 1 912 34 is_stmt 0 view .LVU1569
 4783 01f0 1095     		str	r5, [sp, #64]
 913:Src/main.c    ****   TIM_BDTRInitStruct.Break2State = LL_TIM_BREAK2_ENABLE;
 4784              		.loc 1 913 3 is_stmt 1 view .LVU1570
 913:Src/main.c    ****   TIM_BDTRInitStruct.Break2State = LL_TIM_BREAK2_ENABLE;
 4785              		.loc 1 913 34 is_stmt 0 view .LVU1571
 4786 01f2 1195     		str	r5, [sp, #68]
 914:Src/main.c    ****   TIM_BDTRInitStruct.Break2Polarity = LL_TIM_BREAK2_POLARITY_HIGH;
 4787              		.loc 1 914 3 is_stmt 1 view .LVU1572
 914:Src/main.c    ****   TIM_BDTRInitStruct.Break2Polarity = LL_TIM_BREAK2_POLARITY_HIGH;
 4788              		.loc 1 914 34 is_stmt 0 view .LVU1573
 4789 01f4 4FF08073 		mov	r3, #16777216
 4790 01f8 1293     		str	r3, [sp, #72]
 915:Src/main.c    ****   TIM_BDTRInitStruct.Break2Filter = LL_TIM_BREAK2_FILTER_FDIV1_N8;
 4791              		.loc 1 915 3 is_stmt 1 view .LVU1574
 915:Src/main.c    ****   TIM_BDTRInitStruct.Break2Filter = LL_TIM_BREAK2_FILTER_FDIV1_N8;
 4792              		.loc 1 915 37 is_stmt 0 view .LVU1575
 4793 01fa 4FF00073 		mov	r3, #33554432
 4794 01fe 1393     		str	r3, [sp, #76]
 916:Src/main.c    ****   TIM_BDTRInitStruct.Break2AFMode = LL_TIM_BREAK_AFMODE_INPUT;
 4795              		.loc 1 916 3 is_stmt 1 view .LVU1576
 916:Src/main.c    ****   TIM_BDTRInitStruct.Break2AFMode = LL_TIM_BREAK_AFMODE_INPUT;
 4796              		.loc 1 916 35 is_stmt 0 view .LVU1577
 4797 0200 4FF44013 		mov	r3, #3145728
 4798 0204 1493     		str	r3, [sp, #80]
 917:Src/main.c    ****   TIM_BDTRInitStruct.AutomaticOutput = LL_TIM_AUTOMATICOUTPUT_DISABLE;
 4799              		.loc 1 917 3 is_stmt 1 view .LVU1578
 917:Src/main.c    ****   TIM_BDTRInitStruct.AutomaticOutput = LL_TIM_AUTOMATICOUTPUT_DISABLE;
 4800              		.loc 1 917 35 is_stmt 0 view .LVU1579
ARM GAS  /tmp/cc85dWdm.s 			page 551


 4801 0206 1595     		str	r5, [sp, #84]
 918:Src/main.c    ****   LL_TIM_BDTR_Init(TIM1, &TIM_BDTRInitStruct);
 4802              		.loc 1 918 3 is_stmt 1 view .LVU1580
 918:Src/main.c    ****   LL_TIM_BDTR_Init(TIM1, &TIM_BDTRInitStruct);
 4803              		.loc 1 918 38 is_stmt 0 view .LVU1581
 4804 0208 1695     		str	r5, [sp, #88]
 919:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 4805              		.loc 1 919 3 is_stmt 1 view .LVU1582
 4806 020a 0BA9     		add	r1, sp, #44
 4807 020c 3A48     		ldr	r0, .L103+4
 4808 020e FFF7FEFF 		bl	LL_TIM_BDTR_Init
 4809              	.LVL311:
 923:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
 4810              		.loc 1 923 3 view .LVU1583
 4811              	.LBB905:
 4812              	.LBI905:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 4813              		.loc 3 451 22 view .LVU1584
 4814              	.LBB906:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 4815              		.loc 3 453 3 view .LVU1585
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 4816              		.loc 3 454 3 view .LVU1586
 4817 0212 384B     		ldr	r3, .L103
 4818 0214 DA6C     		ldr	r2, [r3, #76]
 4819 0216 42F00402 		orr	r2, r2, #4
 4820 021a DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 4821              		.loc 3 456 3 view .LVU1587
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 4822              		.loc 3 456 12 is_stmt 0 view .LVU1588
 4823 021c DA6C     		ldr	r2, [r3, #76]
 4824 021e 02F00402 		and	r2, r2, #4
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 4825              		.loc 3 456 10 view .LVU1589
 4826 0222 0392     		str	r2, [sp, #12]
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 4827              		.loc 3 457 3 is_stmt 1 view .LVU1590
 4828 0224 039A     		ldr	r2, [sp, #12]
 4829              	.LVL312:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 4830              		.loc 3 457 3 is_stmt 0 view .LVU1591
 4831              	.LBE906:
 4832              	.LBE905:
 924:Src/main.c    ****   LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 4833              		.loc 1 924 3 is_stmt 1 view .LVU1592
 4834              	.LBB907:
 4835              	.LBI907:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 4836              		.loc 3 451 22 view .LVU1593
 4837              	.LBB908:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 4838              		.loc 3 453 3 view .LVU1594
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 4839              		.loc 3 454 3 view .LVU1595
 4840 0226 DA6C     		ldr	r2, [r3, #76]
 4841 0228 42F00202 		orr	r2, r2, #2
ARM GAS  /tmp/cc85dWdm.s 			page 552


 4842 022c DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 4843              		.loc 3 456 3 view .LVU1596
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 4844              		.loc 3 456 12 is_stmt 0 view .LVU1597
 4845 022e DA6C     		ldr	r2, [r3, #76]
 4846 0230 02F00202 		and	r2, r2, #2
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 4847              		.loc 3 456 10 view .LVU1598
 4848 0234 0292     		str	r2, [sp, #8]
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 4849              		.loc 3 457 3 is_stmt 1 view .LVU1599
 4850 0236 029A     		ldr	r2, [sp, #8]
 4851              	.LVL313:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 4852              		.loc 3 457 3 is_stmt 0 view .LVU1600
 4853              	.LBE908:
 4854              	.LBE907:
 925:Src/main.c    ****   /**TIM1 GPIO Configuration
 4855              		.loc 1 925 3 is_stmt 1 view .LVU1601
 4856              	.LBB909:
 4857              	.LBI909:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 4858              		.loc 3 451 22 view .LVU1602
 4859              	.LBB910:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 4860              		.loc 3 453 3 view .LVU1603
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 4861              		.loc 3 454 3 view .LVU1604
 4862 0238 DA6C     		ldr	r2, [r3, #76]
 4863 023a 42F00102 		orr	r2, r2, #1
 4864 023e DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 4865              		.loc 3 456 3 view .LVU1605
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 4866              		.loc 3 456 12 is_stmt 0 view .LVU1606
 4867 0240 DB6C     		ldr	r3, [r3, #76]
 4868 0242 03F00103 		and	r3, r3, #1
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 4869              		.loc 3 456 10 view .LVU1607
 4870 0246 0193     		str	r3, [sp, #4]
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 4871              		.loc 3 457 3 is_stmt 1 view .LVU1608
 4872 0248 019B     		ldr	r3, [sp, #4]
 4873              	.LVL314:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 4874              		.loc 3 457 3 is_stmt 0 view .LVU1609
 4875              	.LBE910:
 4876              	.LBE909:
 934:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4877              		.loc 1 934 3 is_stmt 1 view .LVU1610
 934:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4878              		.loc 1 934 23 is_stmt 0 view .LVU1611
 4879 024a 0594     		str	r4, [sp, #20]
 935:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 4880              		.loc 1 935 3 is_stmt 1 view .LVU1612
 935:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
ARM GAS  /tmp/cc85dWdm.s 			page 553


 4881              		.loc 1 935 24 is_stmt 0 view .LVU1613
 4882 024c 0224     		movs	r4, #2
 4883 024e 0694     		str	r4, [sp, #24]
 936:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 4884              		.loc 1 936 3 is_stmt 1 view .LVU1614
 936:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 4885              		.loc 1 936 25 is_stmt 0 view .LVU1615
 4886 0250 0794     		str	r4, [sp, #28]
 937:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 4887              		.loc 1 937 3 is_stmt 1 view .LVU1616
 937:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 4888              		.loc 1 937 30 is_stmt 0 view .LVU1617
 4889 0252 0895     		str	r5, [sp, #32]
 938:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 4890              		.loc 1 938 3 is_stmt 1 view .LVU1618
 938:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 4891              		.loc 1 938 24 is_stmt 0 view .LVU1619
 4892 0254 0994     		str	r4, [sp, #36]
 939:Src/main.c    ****   LL_GPIO_Init(M1_PWM_UL_GPIO_Port, &GPIO_InitStruct);
 4893              		.loc 1 939 3 is_stmt 1 view .LVU1620
 939:Src/main.c    ****   LL_GPIO_Init(M1_PWM_UL_GPIO_Port, &GPIO_InitStruct);
 4894              		.loc 1 939 29 is_stmt 0 view .LVU1621
 4895 0256 4FF00409 		mov	r9, #4
 4896 025a CDF82890 		str	r9, [sp, #40]
 940:Src/main.c    **** 
 4897              		.loc 1 940 3 is_stmt 1 view .LVU1622
 4898 025e 05A9     		add	r1, sp, #20
 4899 0260 2848     		ldr	r0, .L103+16
 4900 0262 FFF7FEFF 		bl	LL_GPIO_Init
 4901              	.LVL315:
 942:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4902              		.loc 1 942 3 view .LVU1623
 942:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4903              		.loc 1 942 23 is_stmt 0 view .LVU1624
 4904 0266 4FF40043 		mov	r3, #32768
 4905 026a 0593     		str	r3, [sp, #20]
 943:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 4906              		.loc 1 943 3 is_stmt 1 view .LVU1625
 943:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 4907              		.loc 1 943 24 is_stmt 0 view .LVU1626
 4908 026c 0694     		str	r4, [sp, #24]
 944:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 4909              		.loc 1 944 3 is_stmt 1 view .LVU1627
 944:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 4910              		.loc 1 944 25 is_stmt 0 view .LVU1628
 4911 026e 0794     		str	r4, [sp, #28]
 945:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 4912              		.loc 1 945 3 is_stmt 1 view .LVU1629
 945:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 4913              		.loc 1 945 30 is_stmt 0 view .LVU1630
 4914 0270 0895     		str	r5, [sp, #32]
 946:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 4915              		.loc 1 946 3 is_stmt 1 view .LVU1631
 946:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 4916              		.loc 1 946 24 is_stmt 0 view .LVU1632
 4917 0272 0994     		str	r4, [sp, #36]
 947:Src/main.c    ****   LL_GPIO_Init(M1_PWM_WL_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/cc85dWdm.s 			page 554


 4918              		.loc 1 947 3 is_stmt 1 view .LVU1633
 947:Src/main.c    ****   LL_GPIO_Init(M1_PWM_WL_GPIO_Port, &GPIO_InitStruct);
 4919              		.loc 1 947 29 is_stmt 0 view .LVU1634
 4920 0274 CDF82890 		str	r9, [sp, #40]
 948:Src/main.c    **** 
 4921              		.loc 1 948 3 is_stmt 1 view .LVU1635
 4922 0278 05A9     		add	r1, sp, #20
 4923 027a 2348     		ldr	r0, .L103+20
 4924 027c FFF7FEFF 		bl	LL_GPIO_Init
 4925              	.LVL316:
 950:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4926              		.loc 1 950 3 view .LVU1636
 950:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4927              		.loc 1 950 23 is_stmt 0 view .LVU1637
 4928 0280 0596     		str	r6, [sp, #20]
 951:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 4929              		.loc 1 951 3 is_stmt 1 view .LVU1638
 951:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 4930              		.loc 1 951 24 is_stmt 0 view .LVU1639
 4931 0282 0694     		str	r4, [sp, #24]
 952:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 4932              		.loc 1 952 3 is_stmt 1 view .LVU1640
 952:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 4933              		.loc 1 952 25 is_stmt 0 view .LVU1641
 4934 0284 0794     		str	r4, [sp, #28]
 953:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 4935              		.loc 1 953 3 is_stmt 1 view .LVU1642
 953:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 4936              		.loc 1 953 30 is_stmt 0 view .LVU1643
 4937 0286 0895     		str	r5, [sp, #32]
 954:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 4938              		.loc 1 954 3 is_stmt 1 view .LVU1644
 954:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 4939              		.loc 1 954 24 is_stmt 0 view .LVU1645
 4940 0288 0994     		str	r4, [sp, #36]
 955:Src/main.c    ****   LL_GPIO_Init(M1_PWM_UH_GPIO_Port, &GPIO_InitStruct);
 4941              		.loc 1 955 3 is_stmt 1 view .LVU1646
 955:Src/main.c    ****   LL_GPIO_Init(M1_PWM_UH_GPIO_Port, &GPIO_InitStruct);
 4942              		.loc 1 955 29 is_stmt 0 view .LVU1647
 4943 028a 0626     		movs	r6, #6
 4944 028c 0A96     		str	r6, [sp, #40]
 956:Src/main.c    **** 
 4945              		.loc 1 956 3 is_stmt 1 view .LVU1648
 4946 028e 05A9     		add	r1, sp, #20
 4947 0290 4FF09040 		mov	r0, #1207959552
 4948 0294 FFF7FEFF 		bl	LL_GPIO_Init
 4949              	.LVL317:
 958:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4950              		.loc 1 958 3 view .LVU1649
 958:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4951              		.loc 1 958 23 is_stmt 0 view .LVU1650
 4952 0298 0597     		str	r7, [sp, #20]
 959:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 4953              		.loc 1 959 3 is_stmt 1 view .LVU1651
 959:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 4954              		.loc 1 959 24 is_stmt 0 view .LVU1652
 4955 029a 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/cc85dWdm.s 			page 555


 960:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 4956              		.loc 1 960 3 is_stmt 1 view .LVU1653
 960:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 4957              		.loc 1 960 25 is_stmt 0 view .LVU1654
 4958 029c 0794     		str	r4, [sp, #28]
 961:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 4959              		.loc 1 961 3 is_stmt 1 view .LVU1655
 961:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 4960              		.loc 1 961 30 is_stmt 0 view .LVU1656
 4961 029e 0895     		str	r5, [sp, #32]
 962:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 4962              		.loc 1 962 3 is_stmt 1 view .LVU1657
 962:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 4963              		.loc 1 962 24 is_stmt 0 view .LVU1658
 4964 02a0 0994     		str	r4, [sp, #36]
 963:Src/main.c    ****   LL_GPIO_Init(M1_PWM_VH_GPIO_Port, &GPIO_InitStruct);
 4965              		.loc 1 963 3 is_stmt 1 view .LVU1659
 963:Src/main.c    ****   LL_GPIO_Init(M1_PWM_VH_GPIO_Port, &GPIO_InitStruct);
 4966              		.loc 1 963 29 is_stmt 0 view .LVU1660
 4967 02a2 0A96     		str	r6, [sp, #40]
 964:Src/main.c    **** 
 4968              		.loc 1 964 3 is_stmt 1 view .LVU1661
 4969 02a4 05A9     		add	r1, sp, #20
 4970 02a6 4FF09040 		mov	r0, #1207959552
 4971 02aa FFF7FEFF 		bl	LL_GPIO_Init
 4972              	.LVL318:
 966:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4973              		.loc 1 966 3 view .LVU1662
 966:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4974              		.loc 1 966 23 is_stmt 0 view .LVU1663
 4975 02ae CDF81480 		str	r8, [sp, #20]
 967:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 4976              		.loc 1 967 3 is_stmt 1 view .LVU1664
 967:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 4977              		.loc 1 967 24 is_stmt 0 view .LVU1665
 4978 02b2 0694     		str	r4, [sp, #24]
 968:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 4979              		.loc 1 968 3 is_stmt 1 view .LVU1666
 968:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 4980              		.loc 1 968 25 is_stmt 0 view .LVU1667
 4981 02b4 0794     		str	r4, [sp, #28]
 969:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 4982              		.loc 1 969 3 is_stmt 1 view .LVU1668
 969:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 4983              		.loc 1 969 30 is_stmt 0 view .LVU1669
 4984 02b6 0895     		str	r5, [sp, #32]
 970:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 4985              		.loc 1 970 3 is_stmt 1 view .LVU1670
 970:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 4986              		.loc 1 970 24 is_stmt 0 view .LVU1671
 4987 02b8 0994     		str	r4, [sp, #36]
 971:Src/main.c    ****   LL_GPIO_Init(M1_PWM_WH_GPIO_Port, &GPIO_InitStruct);
 4988              		.loc 1 971 3 is_stmt 1 view .LVU1672
 971:Src/main.c    ****   LL_GPIO_Init(M1_PWM_WH_GPIO_Port, &GPIO_InitStruct);
 4989              		.loc 1 971 29 is_stmt 0 view .LVU1673
 4990 02ba 0A96     		str	r6, [sp, #40]
 972:Src/main.c    **** 
ARM GAS  /tmp/cc85dWdm.s 			page 556


 4991              		.loc 1 972 3 is_stmt 1 view .LVU1674
 4992 02bc 05A9     		add	r1, sp, #20
 4993 02be 4FF09040 		mov	r0, #1207959552
 4994 02c2 FFF7FEFF 		bl	LL_GPIO_Init
 4995              	.LVL319:
 974:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4996              		.loc 1 974 3 view .LVU1675
 974:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 4997              		.loc 1 974 23 is_stmt 0 view .LVU1676
 4998 02c6 4FF48053 		mov	r3, #4096
 4999 02ca 0593     		str	r3, [sp, #20]
 975:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 5000              		.loc 1 975 3 is_stmt 1 view .LVU1677
 975:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 5001              		.loc 1 975 24 is_stmt 0 view .LVU1678
 5002 02cc 0694     		str	r4, [sp, #24]
 976:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 5003              		.loc 1 976 3 is_stmt 1 view .LVU1679
 976:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 5004              		.loc 1 976 25 is_stmt 0 view .LVU1680
 5005 02ce 0794     		str	r4, [sp, #28]
 977:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 5006              		.loc 1 977 3 is_stmt 1 view .LVU1681
 977:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_DOWN;
 5007              		.loc 1 977 30 is_stmt 0 view .LVU1682
 5008 02d0 0895     		str	r5, [sp, #32]
 978:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 5009              		.loc 1 978 3 is_stmt 1 view .LVU1683
 978:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_6;
 5010              		.loc 1 978 24 is_stmt 0 view .LVU1684
 5011 02d2 0994     		str	r4, [sp, #36]
 979:Src/main.c    ****   LL_GPIO_Init(M1_PWM_VL_GPIO_Port, &GPIO_InitStruct);
 5012              		.loc 1 979 3 is_stmt 1 view .LVU1685
 979:Src/main.c    ****   LL_GPIO_Init(M1_PWM_VL_GPIO_Port, &GPIO_InitStruct);
 5013              		.loc 1 979 29 is_stmt 0 view .LVU1686
 5014 02d4 0A96     		str	r6, [sp, #40]
 980:Src/main.c    **** 
 5015              		.loc 1 980 3 is_stmt 1 view .LVU1687
 5016 02d6 05A9     		add	r1, sp, #20
 5017 02d8 4FF09040 		mov	r0, #1207959552
 5018 02dc FFF7FEFF 		bl	LL_GPIO_Init
 5019              	.LVL320:
 982:Src/main.c    **** 
 5020              		.loc 1 982 1 is_stmt 0 view .LVU1688
 5021 02e0 25B0     		add	sp, sp, #148
 5022              		.cfi_remember_state
 5023              		.cfi_def_cfa_offset 28
 5024              		@ sp needed
 5025 02e2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5026              	.LVL321:
 5027              	.L99:
 5028              		.cfi_restore_state
 5029              	.LBB911:
 5030              	.LBB877:
 5031              	.LBB875:
 5032              	.LBB872:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /tmp/cc85dWdm.s 			page 557


 5033              		.loc 5 1091 12 view .LVU1689
 5034 02e6 2023     		movs	r3, #32
 5035              	.LVL322:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5036              		.loc 5 1091 12 view .LVU1690
 5037 02e8 39E7     		b	.L96
 5038              	.LVL323:
 5039              	.L100:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5040              		.loc 5 1091 12 view .LVU1691
 5041              	.LBE872:
 5042              	.LBE875:
 5043              	.LBE877:
 5044              	.LBE911:
 5045              	.LBB912:
 5046              	.LBB890:
 5047              	.LBB888:
 5048              	.LBB885:
 5049 02ea 2023     		movs	r3, #32
 5050              	.LVL324:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5051              		.loc 5 1091 12 view .LVU1692
 5052 02ec 4CE7     		b	.L97
 5053              	.LVL325:
 5054              	.L101:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5055              		.loc 5 1091 12 view .LVU1693
 5056              	.LBE885:
 5057              	.LBE888:
 5058              	.LBE890:
 5059              	.LBE912:
 5060              	.LBB913:
 5061              	.LBB903:
 5062              	.LBB901:
 5063              	.LBB898:
 5064 02ee 2023     		movs	r3, #32
 5065              	.LVL326:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5066              		.loc 5 1091 12 view .LVU1694
 5067 02f0 5FE7     		b	.L98
 5068              	.L104:
 5069 02f2 00BF     		.align	2
 5070              	.L103:
 5071 02f4 00100240 		.word	1073876992
 5072 02f8 002C0140 		.word	1073818624
 5073 02fc 182C0140 		.word	1073818648
 5074 0300 602C0140 		.word	1073818720
 5075 0304 00080048 		.word	1207961600
 5076 0308 00040048 		.word	1207960576
 5077              	.LBE898:
 5078              	.LBE901:
 5079              	.LBE903:
 5080              	.LBE913:
 5081              		.cfi_endproc
 5082              	.LFE1635:
 5084              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 5085              		.align	1
ARM GAS  /tmp/cc85dWdm.s 			page 558


 5086              		.syntax unified
 5087              		.thumb
 5088              		.thumb_func
 5089              		.fpu fpv4-sp-d16
 5091              	MX_USART2_UART_Init:
 5092              	.LFB1637:
1056:Src/main.c    **** 
 5093              		.loc 1 1056 1 is_stmt 1 view -0
 5094              		.cfi_startproc
 5095              		@ args = 0, pretend = 0, frame = 64
 5096              		@ frame_needed = 0, uses_anonymous_args = 0
 5097 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5098              		.cfi_def_cfa_offset 20
 5099              		.cfi_offset 4, -20
 5100              		.cfi_offset 5, -16
 5101              		.cfi_offset 6, -12
 5102              		.cfi_offset 7, -8
 5103              		.cfi_offset 14, -4
 5104 0002 91B0     		sub	sp, sp, #68
 5105              		.cfi_def_cfa_offset 88
1062:Src/main.c    **** 
 5106              		.loc 1 1062 3 view .LVU1696
1062:Src/main.c    **** 
 5107              		.loc 1 1062 24 is_stmt 0 view .LVU1697
 5108 0004 2022     		movs	r2, #32
 5109 0006 0021     		movs	r1, #0
 5110 0008 0DEB0200 		add	r0, sp, r2
 5111 000c FFF7FEFF 		bl	memset
 5112              	.LVL327:
1064:Src/main.c    **** 
 5113              		.loc 1 1064 3 is_stmt 1 view .LVU1698
1066:Src/main.c    **** 
 5114              		.loc 1 1066 3 view .LVU1699
 5115              	.LBB914:
 5116              	.LBI914:
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 5117              		.loc 7 1521 22 view .LVU1700
 5118              	.LBB915:
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5119              		.loc 7 1523 3 view .LVU1701
 5120 0010 5F4B     		ldr	r3, .L111
 5121 0012 D3F88820 		ldr	r2, [r3, #136]
 5122 0016 22F00C02 		bic	r2, r2, #12
 5123 001a C3F88820 		str	r2, [r3, #136]
 5124              	.LVL328:
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5125              		.loc 7 1523 3 is_stmt 0 view .LVU1702
 5126              	.LBE915:
 5127              	.LBE914:
1069:Src/main.c    **** 
 5128              		.loc 1 1069 3 is_stmt 1 view .LVU1703
 5129              	.LBB916:
 5130              	.LBI916:
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 5131              		.loc 3 913 22 view .LVU1704
 5132              	.LBB917:
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR1, Periphs);
ARM GAS  /tmp/cc85dWdm.s 			page 559


 5133              		.loc 3 915 3 view .LVU1705
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 5134              		.loc 3 916 3 view .LVU1706
 5135 001e 9A6D     		ldr	r2, [r3, #88]
 5136 0020 42F40032 		orr	r2, r2, #131072
 5137 0024 9A65     		str	r2, [r3, #88]
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 5138              		.loc 3 918 3 view .LVU1707
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 5139              		.loc 3 918 12 is_stmt 0 view .LVU1708
 5140 0026 9A6D     		ldr	r2, [r3, #88]
 5141 0028 02F40032 		and	r2, r2, #131072
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 5142              		.loc 3 918 10 view .LVU1709
 5143 002c 0192     		str	r2, [sp, #4]
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 5144              		.loc 3 919 3 is_stmt 1 view .LVU1710
 5145 002e 019A     		ldr	r2, [sp, #4]
 5146              	.LVL329:
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 5147              		.loc 3 919 3 is_stmt 0 view .LVU1711
 5148              	.LBE917:
 5149              	.LBE916:
1071:Src/main.c    ****   /**USART2 GPIO Configuration
 5150              		.loc 1 1071 3 is_stmt 1 view .LVU1712
 5151              	.LBB918:
 5152              	.LBI918:
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** {
 5153              		.loc 3 451 22 view .LVU1713
 5154              	.LBB919:
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 5155              		.loc 3 453 3 view .LVU1714
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 5156              		.loc 3 454 3 view .LVU1715
 5157 0030 DA6C     		ldr	r2, [r3, #76]
 5158 0032 42F00202 		orr	r2, r2, #2
 5159 0036 DA64     		str	r2, [r3, #76]
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 5160              		.loc 3 456 3 view .LVU1716
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 5161              		.loc 3 456 12 is_stmt 0 view .LVU1717
 5162 0038 DB6C     		ldr	r3, [r3, #76]
 5163 003a 03F00203 		and	r3, r3, #2
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h ****   (void)tmpreg;
 5164              		.loc 3 456 10 view .LVU1718
 5165 003e 0093     		str	r3, [sp]
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 5166              		.loc 3 457 3 is_stmt 1 view .LVU1719
 5167 0040 009B     		ldr	r3, [sp]
 5168              	.LVL330:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_bus.h **** }
 5169              		.loc 3 457 3 is_stmt 0 view .LVU1720
 5170              	.LBE919:
 5171              	.LBE918:
1076:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 5172              		.loc 1 1076 3 is_stmt 1 view .LVU1721
1076:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
ARM GAS  /tmp/cc85dWdm.s 			page 560


 5173              		.loc 1 1076 23 is_stmt 0 view .LVU1722
 5174 0042 0823     		movs	r3, #8
 5175 0044 0293     		str	r3, [sp, #8]
1077:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 5176              		.loc 1 1077 3 is_stmt 1 view .LVU1723
1077:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 5177              		.loc 1 1077 24 is_stmt 0 view .LVU1724
 5178 0046 0227     		movs	r7, #2
 5179 0048 0397     		str	r7, [sp, #12]
1078:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 5180              		.loc 1 1078 3 is_stmt 1 view .LVU1725
1078:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 5181              		.loc 1 1078 25 is_stmt 0 view .LVU1726
 5182 004a 0024     		movs	r4, #0
 5183 004c 0494     		str	r4, [sp, #16]
1079:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 5184              		.loc 1 1079 3 is_stmt 1 view .LVU1727
1079:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 5185              		.loc 1 1079 30 is_stmt 0 view .LVU1728
 5186 004e 0594     		str	r4, [sp, #20]
1080:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
 5187              		.loc 1 1080 3 is_stmt 1 view .LVU1729
1080:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
 5188              		.loc 1 1080 24 is_stmt 0 view .LVU1730
 5189 0050 0694     		str	r4, [sp, #24]
1081:Src/main.c    ****   LL_GPIO_Init(UART_TX_GPIO_Port, &GPIO_InitStruct);
 5190              		.loc 1 1081 3 is_stmt 1 view .LVU1731
1081:Src/main.c    ****   LL_GPIO_Init(UART_TX_GPIO_Port, &GPIO_InitStruct);
 5191              		.loc 1 1081 29 is_stmt 0 view .LVU1732
 5192 0052 0726     		movs	r6, #7
 5193 0054 0796     		str	r6, [sp, #28]
1082:Src/main.c    **** 
 5194              		.loc 1 1082 3 is_stmt 1 view .LVU1733
 5195 0056 4F4D     		ldr	r5, .L111+4
 5196 0058 0DEB0301 		add	r1, sp, r3
 5197 005c 2846     		mov	r0, r5
 5198 005e FFF7FEFF 		bl	LL_GPIO_Init
 5199              	.LVL331:
1084:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 5200              		.loc 1 1084 3 view .LVU1734
1084:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 5201              		.loc 1 1084 23 is_stmt 0 view .LVU1735
 5202 0062 1023     		movs	r3, #16
 5203 0064 0293     		str	r3, [sp, #8]
1085:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 5204              		.loc 1 1085 3 is_stmt 1 view .LVU1736
1085:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 5205              		.loc 1 1085 24 is_stmt 0 view .LVU1737
 5206 0066 0397     		str	r7, [sp, #12]
1086:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 5207              		.loc 1 1086 3 is_stmt 1 view .LVU1738
1086:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 5208              		.loc 1 1086 25 is_stmt 0 view .LVU1739
 5209 0068 0494     		str	r4, [sp, #16]
1087:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 5210              		.loc 1 1087 3 is_stmt 1 view .LVU1740
1087:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
ARM GAS  /tmp/cc85dWdm.s 			page 561


 5211              		.loc 1 1087 30 is_stmt 0 view .LVU1741
 5212 006a 0594     		str	r4, [sp, #20]
1088:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
 5213              		.loc 1 1088 3 is_stmt 1 view .LVU1742
1088:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
 5214              		.loc 1 1088 24 is_stmt 0 view .LVU1743
 5215 006c 0694     		str	r4, [sp, #24]
1089:Src/main.c    ****   LL_GPIO_Init(UART_RX_GPIO_Port, &GPIO_InitStruct);
 5216              		.loc 1 1089 3 is_stmt 1 view .LVU1744
1089:Src/main.c    ****   LL_GPIO_Init(UART_RX_GPIO_Port, &GPIO_InitStruct);
 5217              		.loc 1 1089 29 is_stmt 0 view .LVU1745
 5218 006e 0796     		str	r6, [sp, #28]
1090:Src/main.c    **** 
 5219              		.loc 1 1090 3 is_stmt 1 view .LVU1746
 5220 0070 02A9     		add	r1, sp, #8
 5221 0072 2846     		mov	r0, r5
 5222 0074 FFF7FEFF 		bl	LL_GPIO_Init
 5223              	.LVL332:
1095:Src/main.c    **** 
 5224              		.loc 1 1095 3 view .LVU1747
 5225              	.LBB920:
 5226              	.LBI920:
 5227              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @file    stm32g4xx_ll_dma.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #ifndef __STM32G4xx_LL_DMA_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __STM32G4xx_LL_DMA_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #include "stm32g4xx_ll_dmamux.h"
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @addtogroup STM32G4xx_LL_Driver
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 562


  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1) || defined (DMA2)
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE)
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel7)
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ,
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel7 */
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ,
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel8_BASE - DMA1_BASE)
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** };
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Constants DMA Private Constants
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Define used to get CSELR register offset */
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define DMA_CSELR_OFFSET                  (uint32_t)(DMA1_CSELR_BASE - DMA1_BASE)
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Defines used for the bit position in the register and perform offsets */
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define DMA_POSITION_CSELR_CXS            POSITION_VAL(DMA_CSELR_C1S << ((Channel-1U)*4U))
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
ARM GAS  /tmp/cc85dWdm.s 			page 563


  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** typedef struct
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         is incremented or not.
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         is incremented or not.
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
ARM GAS  /tmp/cc85dWdm.s 			page 564


 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMAMUX_LL_EC_REQUEST
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel7)
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel7 */
ARM GAS  /tmp/cc85dWdm.s 			page 565


 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF8                 DMA_IFCR_CGIF8        /*!< Channel 8 global flag         
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF8                DMA_IFCR_CTCIF8       /*!< Channel 8 transfer complete fl
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF8                DMA_IFCR_CHTIF8       /*!< Channel 8 half transfer flag  
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF8                DMA_IFCR_CTEIF8       /*!< Channel 8 transfer error flag 
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel7)
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel7 */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_GIF8                   DMA_ISR_GIF8          /*!< Channel 8 global flag         
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF8                  DMA_ISR_TCIF8         /*!< Channel 8 transfer complete fl
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF8                  DMA_ISR_HTIF8         /*!< Channel 8 half transfer flag  
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF8                  DMA_ISR_TEIF8         /*!< Channel 8 transfer error flag 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
ARM GAS  /tmp/cc85dWdm.s 			page 566


 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000000U /*!< DMA Channel 1 */
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000001U /*!< DMA Channel 2 */
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000002U /*!< DMA Channel 3 */
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000003U /*!< DMA Channel 4 */
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000004U /*!< DMA Channel 5 */
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000005U /*!< DMA Channel 6 */
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel7)
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000006U /*!< DMA Channel 7 */
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel7 */
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_8                  0x00000007U /*!< DMA Channel 8 */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 567


 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Write a value in DMA register
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __REG__ Register to be written
ARM GAS  /tmp/cc85dWdm.s 			page 568


 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Read a value in DMA register
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __REG__ Register to be read
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Register value
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval DMAx
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel8)) ?  DMA2 : DMA1)
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #else
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel6)) ?  DMA2 : DMA1)
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel6)) ? LL_DMA_CHANNEL_6 : \
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel7)) ? LL_DMA_CHANNEL_7 : \
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel7)) ? LL_DMA_CHANNEL_7 : \
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    LL_DMA_CHANNEL_8)
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #else
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
ARM GAS  /tmp/cc85dWdm.s 			page 569


 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    LL_DMA_CHANNEL_6)
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval DMAx_Channely
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #if defined (DMA1_Channel8)
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    DMA2_Channel8)
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #else
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****    DMA2_Channel6)
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** #endif /* DMA1_Channel8 */
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @}
ARM GAS  /tmp/cc85dWdm.s 			page 570


 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @{
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Enable DMA channel.
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CCR, 
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Disable DMA channel.
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CCR
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
ARM GAS  /tmp/cc85dWdm.s 			page 571


 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                     DMA_CCR_EN) == (DMA_CCR_EN)) ? 1UL : 0UL);
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Configuration);
ARM GAS  /tmp/cc85dWdm.s 			page 572


 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 573


 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Mode);
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_CIRC));
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  /tmp/cc85dWdm.s 			page 574


 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_PINC));
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
ARM GAS  /tmp/cc85dWdm.s 			page 575


 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_MINC));
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Peripheral size.
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
ARM GAS  /tmp/cc85dWdm.s 			page 576


 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Peripheral size.
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Memory size.
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 577


 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Memory size.
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Channel priority level.
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
ARM GAS  /tmp/cc85dWdm.s 			page 578


 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Priority);
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Channel priority level.
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CCR_PL));
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set Number of data to transfer.
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   This action has no effect if
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         channel is enabled.
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CN
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 579


1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Number of data to transfer.
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         remaining bytes to be transmitted.
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                    DMA_CNDTR_NDT));
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Each IP using DMA provides an API to get directly the register address (LL_PPP_DMA_GetR
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   /* Direction Memory to Periph */
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
ARM GAS  /tmp/cc85dWdm.s 			page 580


1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   {
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->C
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->C
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   }
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   else
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   {
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->C
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->C
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   }
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set the Memory address.
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CMA
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set the Peripheral address.
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetPeriphAddress
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  PeriphAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphAd
ARM GAS  /tmp/cc85dWdm.s 			page 581


1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CPA
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Memory address.
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetMemoryAddress
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get Peripheral address.
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetPeriphAddress
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set the Memory to Memory Source address.
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetM2MSrcAddress
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  /tmp/cc85dWdm.s 			page 582


1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CPA
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set the Memory to Memory Destination address.
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetM2MDstAddress
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CMA
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get the Memory to Memory Source address.
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetM2MSrcAddress
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
ARM GAS  /tmp/cc85dWdm.s 			page 583


1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Get the Memory to Memory Destination address.
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetM2MDstAddress
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** }
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** 
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** /**
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @brief  Set DMA request for DMA instance on Channel x.
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @note   Please refer to Reference Manual to get the available mapping of Request value link to 
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_SetPeriphRequest\n
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_SetPeriphRequest\n
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_SetPeriphRequest\n
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_SetPeriphRequest\n
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_SetPeriphRequest\n
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_SetPeriphRequest\n
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_SetPeriphRequest
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7 (*)
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_8 (*)
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @param  PeriphRequest This parameter can be one of the following values:
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_MEM2MEM
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR0
ARM GAS  /tmp/cc85dWdm.s 			page 584


1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR1
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR2
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR3
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC1
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH1
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH2
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM6_UP
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM7_UP
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_RX
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_TX
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_RX
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_TX
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI3_RX
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI3_TX
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_RX
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_TX
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_RX
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_TX
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_RX
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_TX (*)
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C4_RX (*)
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C4_TX
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_RX
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_TX
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_RX
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_TX
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_RX
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_TX
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART4_RX
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART4_TX
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART5_RX (*)
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART5_TX (*)
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_RX
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_TX
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC2
1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC3 (*)
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC4 (*)
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC5 (*)
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_QSPI (*)
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC2_CH1 (*)
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH1
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH2
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH3
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH4
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_UP
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_TRIG
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_COM
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH1
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH2
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH3
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH4
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_UP
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_TRIG
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_COM
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH1
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH2
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH3
ARM GAS  /tmp/cc85dWdm.s 			page 585


1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH4
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_UP
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH1
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH2
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH3
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH4
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_UP
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_TRIG
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH1
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH2
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH3
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH4
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_UP
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH1 (*)
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH2 (*)
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH3 (*)
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH4 (*)
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_UP (*)
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_TRIG (*)
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_CH1
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_UP
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_TRIG
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_COM
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_CH1
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_UP
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_CH1
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_UP
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM20_CH1 (*)
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM20_CH2 (*)
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM20_CH3 (*)
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM20_CH4 (*)
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM20_UP (*)
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_IN
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_OUT
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM20_TRIG (*)
1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM20_COM (*)
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HRTIM1_M (*)
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HRTIM1_A (*)
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HRTIM1_B (*)
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HRTIM1_C (*)
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HRTIM1_D (*)
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HRTIM1_E (*)
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HRTIM1_F (*)
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC3_CH1
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC3_CH2
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC4_CH1 (*)
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC4_CH2 (*)
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI4_RX (*)
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI4_TX (*)
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI1_A
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI1_B
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_FMAC_WRITE
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_FMAC_READ
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_CORDIC_WRITE
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_CORDIC_READ
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UCPD1_RX
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UCPD1_TX
ARM GAS  /tmp/cc85dWdm.s 			page 586


1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   *         (*) Not on all G4 devices
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   * @retval None
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   */
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphRe
 5228              		.loc 13 1406 22 view .LVU1748
 5229              	.LBB921:
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   uint32_t dmamux_ccr_offset = ((((uint32_t)DMAx ^ (uint32_t)DMA1) >> 10U) * 8U);
 5230              		.loc 13 1408 3 view .LVU1749
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG((DMAMUX1_Channel0 + Channel + dmamux_ccr_offset)->CCR, DMAMUX_CxCR_DMAREQ_ID, PeriphRe
 5231              		.loc 13 1409 3 view .LVU1750
 5232 0078 474A     		ldr	r2, .L111+8
 5233 007a 1368     		ldr	r3, [r2]
 5234 007c 23F0FF03 		bic	r3, r3, #255
 5235 0080 43F01A03 		orr	r3, r3, #26
 5236 0084 1360     		str	r3, [r2]
 5237              	.LVL333:
 5238              		.loc 13 1409 3 is_stmt 0 view .LVU1751
 5239              	.LBE921:
 5240              	.LBE920:
1097:Src/main.c    **** 
 5241              		.loc 1 1097 3 is_stmt 1 view .LVU1752
 5242              	.LBB922:
 5243              	.LBI922:
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5244              		.loc 13 628 22 view .LVU1753
 5245              	.LBB923:
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5246              		.loc 13 630 3 view .LVU1754
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 5247              		.loc 13 631 3 view .LVU1755
 5248 0086 454B     		ldr	r3, .L111+12
 5249 0088 1A68     		ldr	r2, [r3]
 5250 008a 22F48042 		bic	r2, r2, #16384
 5251 008e 22F01002 		bic	r2, r2, #16
 5252 0092 1A60     		str	r2, [r3]
 5253              	.LVL334:
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 5254              		.loc 13 631 3 is_stmt 0 view .LVU1756
 5255              	.LBE923:
 5256              	.LBE922:
1099:Src/main.c    **** 
 5257              		.loc 1 1099 3 is_stmt 1 view .LVU1757
 5258              	.LBB924:
 5259              	.LBI924:
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5260              		.loc 13 944 22 view .LVU1758
 5261              	.LBB925:
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5262              		.loc 13 946 3 view .LVU1759
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Priority);
 5263              		.loc 13 947 3 view .LVU1760
 5264 0094 1A68     		ldr	r2, [r3]
 5265 0096 22F44052 		bic	r2, r2, #12288
 5266 009a 1A60     		str	r2, [r3]
 5267              	.LVL335:
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Priority);
ARM GAS  /tmp/cc85dWdm.s 			page 587


 5268              		.loc 13 947 3 is_stmt 0 view .LVU1761
 5269              	.LBE925:
 5270              	.LBE924:
1101:Src/main.c    **** 
 5271              		.loc 1 1101 3 is_stmt 1 view .LVU1762
 5272              	.LBB926:
 5273              	.LBI926:
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5274              		.loc 13 683 22 view .LVU1763
 5275              	.LBB927:
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5276              		.loc 13 685 3 view .LVU1764
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Mode);
 5277              		.loc 13 686 3 view .LVU1765
 5278 009c 1A68     		ldr	r2, [r3]
 5279 009e 22F02002 		bic	r2, r2, #32
 5280 00a2 1A60     		str	r2, [r3]
 5281              	.LVL336:
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Mode);
 5282              		.loc 13 686 3 is_stmt 0 view .LVU1766
 5283              	.LBE927:
 5284              	.LBE926:
1103:Src/main.c    **** 
 5285              		.loc 1 1103 3 is_stmt 1 view .LVU1767
 5286              	.LBB928:
 5287              	.LBI928:
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5288              		.loc 13 734 22 view .LVU1768
 5289              	.LBB929:
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5290              		.loc 13 736 3 view .LVU1769
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 5291              		.loc 13 737 3 view .LVU1770
 5292 00a4 1A68     		ldr	r2, [r3]
 5293 00a6 22F04002 		bic	r2, r2, #64
 5294 00aa 1A60     		str	r2, [r3]
 5295              	.LVL337:
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 5296              		.loc 13 737 3 is_stmt 0 view .LVU1771
 5297              	.LBE929:
 5298              	.LBE928:
1105:Src/main.c    **** 
 5299              		.loc 1 1105 3 is_stmt 1 view .LVU1772
 5300              	.LBB930:
 5301              	.LBI930:
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5302              		.loc 13 785 22 view .LVU1773
 5303              	.LBB931:
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5304              		.loc 13 787 3 view .LVU1774
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 5305              		.loc 13 788 3 view .LVU1775
 5306 00ac 1A68     		ldr	r2, [r3]
 5307 00ae 42F08002 		orr	r2, r2, #128
 5308 00b2 1A60     		str	r2, [r3]
 5309              	.LVL338:
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
ARM GAS  /tmp/cc85dWdm.s 			page 588


 5310              		.loc 13 788 3 is_stmt 0 view .LVU1776
 5311              	.LBE931:
 5312              	.LBE930:
1107:Src/main.c    **** 
 5313              		.loc 1 1107 3 is_stmt 1 view .LVU1777
 5314              	.LBB932:
 5315              	.LBI932:
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5316              		.loc 13 837 22 view .LVU1778
 5317              	.LBB933:
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5318              		.loc 13 839 3 view .LVU1779
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 5319              		.loc 13 840 3 view .LVU1780
 5320 00b4 1A68     		ldr	r2, [r3]
 5321 00b6 22F44072 		bic	r2, r2, #768
 5322 00ba 1A60     		str	r2, [r3]
 5323              	.LVL339:
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 5324              		.loc 13 840 3 is_stmt 0 view .LVU1781
 5325              	.LBE933:
 5326              	.LBE932:
1109:Src/main.c    **** 
 5327              		.loc 1 1109 3 is_stmt 1 view .LVU1782
 5328              	.LBB934:
 5329              	.LBI934:
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5330              		.loc 13 890 22 view .LVU1783
 5331              	.LBB935:
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5332              		.loc 13 892 3 view .LVU1784
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 5333              		.loc 13 893 3 view .LVU1785
 5334 00bc 1A68     		ldr	r2, [r3]
 5335 00be 22F44062 		bic	r2, r2, #3072
 5336 00c2 1A60     		str	r2, [r3]
 5337              	.LVL340:
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 5338              		.loc 13 893 3 is_stmt 0 view .LVU1786
 5339              	.LBE935:
 5340              	.LBE934:
1112:Src/main.c    **** 
 5341              		.loc 1 1112 3 is_stmt 1 view .LVU1787
 5342              	.LBB936:
 5343              	.LBI936:
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5344              		.loc 13 1406 22 view .LVU1788
 5345              	.LBB937:
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG((DMAMUX1_Channel0 + Channel + dmamux_ccr_offset)->CCR, DMAMUX_CxCR_DMAREQ_ID, PeriphRe
 5346              		.loc 13 1408 3 view .LVU1789
 5347              		.loc 13 1409 3 view .LVU1790
 5348 00c4 364A     		ldr	r2, .L111+16
 5349 00c6 1368     		ldr	r3, [r2]
 5350 00c8 23F0FF03 		bic	r3, r3, #255
 5351 00cc 43F01B03 		orr	r3, r3, #27
 5352 00d0 1360     		str	r3, [r2]
 5353              	.LVL341:
ARM GAS  /tmp/cc85dWdm.s 			page 589


 5354              		.loc 13 1409 3 is_stmt 0 view .LVU1791
 5355              	.LBE937:
 5356              	.LBE936:
1114:Src/main.c    **** 
 5357              		.loc 1 1114 3 is_stmt 1 view .LVU1792
 5358              	.LBB938:
 5359              	.LBI938:
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5360              		.loc 13 628 22 view .LVU1793
 5361              	.LBB939:
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5362              		.loc 13 630 3 view .LVU1794
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 5363              		.loc 13 631 3 view .LVU1795
 5364 00d2 344B     		ldr	r3, .L111+20
 5365 00d4 1A68     		ldr	r2, [r3]
 5366 00d6 22F48042 		bic	r2, r2, #16384
 5367 00da 22F01002 		bic	r2, r2, #16
 5368 00de 42F01002 		orr	r2, r2, #16
 5369 00e2 1A60     		str	r2, [r3]
 5370              	.LVL342:
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 5371              		.loc 13 631 3 is_stmt 0 view .LVU1796
 5372              	.LBE939:
 5373              	.LBE938:
1116:Src/main.c    **** 
 5374              		.loc 1 1116 3 is_stmt 1 view .LVU1797
 5375              	.LBB940:
 5376              	.LBI940:
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5377              		.loc 13 944 22 view .LVU1798
 5378              	.LBB941:
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5379              		.loc 13 946 3 view .LVU1799
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Priority);
 5380              		.loc 13 947 3 view .LVU1800
 5381 00e4 1A68     		ldr	r2, [r3]
 5382 00e6 22F44052 		bic	r2, r2, #12288
 5383 00ea 1A60     		str	r2, [r3]
 5384              	.LVL343:
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Priority);
 5385              		.loc 13 947 3 is_stmt 0 view .LVU1801
 5386              	.LBE941:
 5387              	.LBE940:
1118:Src/main.c    **** 
 5388              		.loc 1 1118 3 is_stmt 1 view .LVU1802
 5389              	.LBB942:
 5390              	.LBI942:
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5391              		.loc 13 683 22 view .LVU1803
 5392              	.LBB943:
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5393              		.loc 13 685 3 view .LVU1804
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Mode);
 5394              		.loc 13 686 3 view .LVU1805
 5395 00ec 1A68     		ldr	r2, [r3]
 5396 00ee 22F02002 		bic	r2, r2, #32
ARM GAS  /tmp/cc85dWdm.s 			page 590


 5397 00f2 1A60     		str	r2, [r3]
 5398              	.LVL344:
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              Mode);
 5399              		.loc 13 686 3 is_stmt 0 view .LVU1806
 5400              	.LBE943:
 5401              	.LBE942:
1120:Src/main.c    **** 
 5402              		.loc 1 1120 3 is_stmt 1 view .LVU1807
 5403              	.LBB944:
 5404              	.LBI944:
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5405              		.loc 13 734 22 view .LVU1808
 5406              	.LBB945:
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5407              		.loc 13 736 3 view .LVU1809
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 5408              		.loc 13 737 3 view .LVU1810
 5409 00f4 1A68     		ldr	r2, [r3]
 5410 00f6 22F04002 		bic	r2, r2, #64
 5411 00fa 1A60     		str	r2, [r3]
 5412              	.LVL345:
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 5413              		.loc 13 737 3 is_stmt 0 view .LVU1811
 5414              	.LBE945:
 5415              	.LBE944:
1122:Src/main.c    **** 
 5416              		.loc 1 1122 3 is_stmt 1 view .LVU1812
 5417              	.LBB946:
 5418              	.LBI946:
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5419              		.loc 13 785 22 view .LVU1813
 5420              	.LBB947:
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5421              		.loc 13 787 3 view .LVU1814
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 5422              		.loc 13 788 3 view .LVU1815
 5423 00fc 1A68     		ldr	r2, [r3]
 5424 00fe 42F08002 		orr	r2, r2, #128
 5425 0102 1A60     		str	r2, [r3]
 5426              	.LVL346:
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 5427              		.loc 13 788 3 is_stmt 0 view .LVU1816
 5428              	.LBE947:
 5429              	.LBE946:
1124:Src/main.c    **** 
 5430              		.loc 1 1124 3 is_stmt 1 view .LVU1817
 5431              	.LBB948:
 5432              	.LBI948:
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5433              		.loc 13 837 22 view .LVU1818
 5434              	.LBB949:
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5435              		.loc 13 839 3 view .LVU1819
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 5436              		.loc 13 840 3 view .LVU1820
 5437 0104 1A68     		ldr	r2, [r3]
 5438 0106 22F44072 		bic	r2, r2, #768
ARM GAS  /tmp/cc85dWdm.s 			page 591


 5439 010a 1A60     		str	r2, [r3]
 5440              	.LVL347:
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 5441              		.loc 13 840 3 is_stmt 0 view .LVU1821
 5442              	.LBE949:
 5443              	.LBE948:
1126:Src/main.c    **** 
 5444              		.loc 1 1126 3 is_stmt 1 view .LVU1822
 5445              	.LBB950:
 5446              	.LBI950:
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h **** {
 5447              		.loc 13 890 22 view .LVU1823
 5448              	.LBB951:
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel])))->CC
 5449              		.loc 13 892 3 view .LVU1824
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 5450              		.loc 13 893 3 view .LVU1825
 5451 010c 1A68     		ldr	r2, [r3]
 5452 010e 22F44062 		bic	r2, r2, #3072
 5453 0112 1A60     		str	r2, [r3]
 5454              	.LVL348:
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 5455              		.loc 13 893 3 is_stmt 0 view .LVU1826
 5456              	.LBE951:
 5457              	.LBE950:
1131:Src/main.c    ****   USART_InitStruct.BaudRate = 1843200;
 5458              		.loc 1 1131 3 is_stmt 1 view .LVU1827
1131:Src/main.c    ****   USART_InitStruct.BaudRate = 1843200;
 5459              		.loc 1 1131 35 is_stmt 0 view .LVU1828
 5460 0114 0894     		str	r4, [sp, #32]
1132:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 5461              		.loc 1 1132 3 is_stmt 1 view .LVU1829
1132:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 5462              		.loc 1 1132 29 is_stmt 0 view .LVU1830
 5463 0116 4FF4E113 		mov	r3, #1843200
 5464 011a 0993     		str	r3, [sp, #36]
1133:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 5465              		.loc 1 1133 3 is_stmt 1 view .LVU1831
1133:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 5466              		.loc 1 1133 30 is_stmt 0 view .LVU1832
 5467 011c 0A94     		str	r4, [sp, #40]
1134:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 5468              		.loc 1 1134 3 is_stmt 1 view .LVU1833
1134:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 5469              		.loc 1 1134 29 is_stmt 0 view .LVU1834
 5470 011e 0B94     		str	r4, [sp, #44]
1135:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 5471              		.loc 1 1135 3 is_stmt 1 view .LVU1835
1135:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 5472              		.loc 1 1135 27 is_stmt 0 view .LVU1836
 5473 0120 0C94     		str	r4, [sp, #48]
1136:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 5474              		.loc 1 1136 3 is_stmt 1 view .LVU1837
1136:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 5475              		.loc 1 1136 38 is_stmt 0 view .LVU1838
 5476 0122 0C23     		movs	r3, #12
 5477 0124 0D93     		str	r3, [sp, #52]
ARM GAS  /tmp/cc85dWdm.s 			page 592


1137:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 5478              		.loc 1 1137 3 is_stmt 1 view .LVU1839
1137:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 5479              		.loc 1 1137 40 is_stmt 0 view .LVU1840
 5480 0126 0E94     		str	r4, [sp, #56]
1138:Src/main.c    ****   LL_USART_Init(USART2, &USART_InitStruct);
 5481              		.loc 1 1138 3 is_stmt 1 view .LVU1841
1138:Src/main.c    ****   LL_USART_Init(USART2, &USART_InitStruct);
 5482              		.loc 1 1138 33 is_stmt 0 view .LVU1842
 5483 0128 0F94     		str	r4, [sp, #60]
1139:Src/main.c    ****   LL_USART_SetTXFIFOThreshold(USART2, LL_USART_FIFOTHRESHOLD_1_8);
 5484              		.loc 1 1139 3 is_stmt 1 view .LVU1843
 5485 012a 08A9     		add	r1, sp, #32
 5486 012c 1E48     		ldr	r0, .L111+24
 5487 012e FFF7FEFF 		bl	LL_USART_Init
 5488              	.LVL349:
1140:Src/main.c    ****   LL_USART_SetRXFIFOThreshold(USART2, LL_USART_FIFOTHRESHOLD_1_8);
 5489              		.loc 1 1140 3 view .LVU1844
 5490              	.LBB952:
 5491              	.LBI952:
 5492              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @file    stm32g4xx_ll_usart.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #ifndef STM32G4xx_LL_USART_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define STM32G4xx_LL_USART_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5)
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL USART
ARM GAS  /tmp/cc85dWdm.s 			page 593


  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Variables USART Private Variables
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Array used to get the USART prescaler division decimal values versus @ref USART_LL_EC_PRESCALER 
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** static const uint32_t USART_PRESCALER_TAB[] =
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   1UL,
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   2UL,
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   4UL,
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   6UL,
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   8UL,
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   10UL,
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   12UL,
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   16UL,
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   32UL,
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   64UL,
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   128UL,
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   256UL
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** };
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** typedef struct
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t PrescalerValue;            /*!< Specifies the Prescaler to compute the communication bau
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PRESCA
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            function @ref LL_USART_SetPrescaler().*/
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
ARM GAS  /tmp/cc85dWdm.s 			page 594


  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            function @ref LL_USART_SetBaudRate().*/
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            function @ref LL_USART_SetDataWidth().*/
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            function @ref LL_USART_SetStopBitsLength().*/
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            function @ref LL_USART_SetParity().*/
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            function @ref LL_USART_SetTransferDirection().*/
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            function @ref LL_USART_SetHWFlowCtrl().*/
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            function @ref LL_USART_SetOverSampling().*/
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** } LL_USART_InitTypeDef;
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** typedef struct
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 595


 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPolarity().
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPhase().
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            functions @ref LL_USART_SetLastClkPulseOutput().
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error cle
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error cl
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_NECF                       USART_ICR_NECF                /*!< Noise error dete
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error cl
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_TXFECF                     USART_ICR_TXFECF              /*!< TX FIFO Empty cl
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_TCBGTCF                    USART_ICR_TCBGTCF             /*!< Transmission com
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS clear flag *
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block cle
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_UDRCF                      USART_ICR_UDRCF               /*!< SPI Slave Underr
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
ARM GAS  /tmp/cc85dWdm.s 			page 596


 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_RXNE_RXFNE                 USART_ISR_RXNE_RXFNE          /*!< Read data regist
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_TXE_TXFNF                  USART_ISR_TXE_TXFNF           /*!< Transmit data re
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_UDR                        USART_ISR_UDR                 /*!< SPI Slave underr
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_TXFE                       USART_ISR_TXFE                /*!< TX FIFO empty fl
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_RXFF                       USART_ISR_RXFF                /*!< RX FIFO full fla
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_TCBGT                      USART_ISR_TCBGT               /*!< Transmission com
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_RXFT                       USART_ISR_RXFT                /*!< RX FIFO threshol
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ISR_TXFT                       USART_ISR_TXFT                /*!< TX FIFO threshol
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE_RXFNEIE             USART_CR1_RXNEIE_RXFNEIE      /*!< Read data regist
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR1_TXEIE_TXFNFIE              USART_CR1_TXEIE_TXFNFIE       /*!< Transmit data re
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR1_TXFEIE                     USART_CR1_TXFEIE              /*!< TX FIFO empty in
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR1_RXFFIE                     USART_CR1_RXFFIE              /*!< RX FIFO full int
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR3_TXFTIE                     USART_CR3_TXFTIE              /*!< TX FIFO threshol
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR3_TCBGTIE                    USART_CR3_TCBGTIE             /*!< Transmission com
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CR3_RXFTIE                     USART_CR3_RXFTIE              /*!< RX FIFO threshol
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 597


 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_FIFOTHRESHOLD FIFO Threshold
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_8              0x00000000U /*!< FIFO reaches 1/8 of its depth */
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_4              0x00000001U /*!< FIFO reaches 1/4 of its depth */
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_2              0x00000002U /*!< FIFO reaches 1/2 of its depth */
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_3_4              0x00000003U /*!< FIFO reaches 3/4 of its depth */
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_7_8              0x00000004U /*!< FIFO reaches 7/8 of its depth */
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_8_8              0x00000005U /*!< FIFO becomes empty for TX and full
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 598


 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PRESCALER Clock Source Prescaler
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV1                 0x00000000U                                        
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV2                 (USART_PRESC_PRESCALER_0)                          
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV4                 (USART_PRESC_PRESCALER_1)                          
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV6                 (USART_PRESC_PRESCALER_1 | USART_PRESC_PRESCALER_0)
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV8                 (USART_PRESC_PRESCALER_2)                          
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV10                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_0)
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV12                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1)
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV16                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1 
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV32                (USART_PRESC_PRESCALER_3)                          
ARM GAS  /tmp/cc85dWdm.s 			page 599


 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV64                (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_0)
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV128               (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1)
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV256               (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1 
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  0x00000000U           /*!< TX/RX pins are used as d
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           0x00000000U           /*!< RX pin signal works usin
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           0x00000000U           /*!< TX pin signal works usin
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          0x00000000U           /*!< Logical data from the da
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 600


 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              0x00000000U           /*!< data is transmitted/rece
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    0x00000000U                                 /*!< Me
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              0x00000000U           /*!< 4-bit address detection 
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              0x00000000U                             /*!< Wake u
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
ARM GAS  /tmp/cc85dWdm.s 			page 601


 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               0x00000000U           /*!< DE signal is active high
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          0x00000000U          /*!< Get address of data regis
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           0x00000001U          /*!< Get address of data regis
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Write a value in USART register
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __REG__ Register to be written
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Read a value in USART register
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __REG__ Register to be read
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Register value
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
ARM GAS  /tmp/cc85dWdm.s 			page 602


 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) \
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   (((((__PERIPHCLK__)/(USART_PRESCALER_TAB[(__PRESCALER__)]))*2U)\
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     + ((__BAUDRATE__)/2U))/(__BAUDRATE__))
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) \
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ((((__PERIPHCLK__)/(USART_PRESCALER_TAB[(__PRESCALER__)]))\
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     + ((__BAUDRATE__)/2U))/(__BAUDRATE__))
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 603


 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  USART Enable
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  FIFO Mode Enable
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_EnableFIFO
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /tmp/cc85dWdm.s 			page 604


 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableFIFO(USART_TypeDef *USARTx)
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_FIFOEN);
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  FIFO Mode Disable
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_DisableFIFO
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableFIFO(USART_TypeDef *USARTx)
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_FIFOEN);
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if FIFO Mode is enabled
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_IsEnabledFIFO
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledFIFO(USART_TypeDef *USARTx)
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_FIFOEN) == (USART_CR1_FIFOEN)) ? 1UL : 0UL);
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure TX FIFO Threshold
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_SetTXFIFOThreshold
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Threshold This parameter can be one of the following values:
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
 5493              		.loc 14 712 22 view .LVU1845
 5494              	.L106:
 5495              	.LBE952:
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG, Threshold << USART_CR3_TXFTCFG_Pos);
 5496              		.loc 14 714 3 view .LVU1846
 5497              	.LBB958:
 5498              	.LBB953:
ARM GAS  /tmp/cc85dWdm.s 			page 605


 5499              		.loc 14 714 3 view .LVU1847
 5500              		.loc 14 714 3 view .LVU1848
 5501              		.loc 14 714 3 view .LVU1849
 5502 0132 1E4B     		ldr	r3, .L111+28
 5503              	.LVL350:
 5504              	.LBB954:
 5505              	.LBI954:
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1095:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1096:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1097:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1107:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1131:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1139:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1141:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1143:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 606


1144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 5506              		.loc 5 1151 31 view .LVU1850
 5507              	.LBB955:
1152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1153:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 5508              		.loc 5 1153 5 view .LVU1851
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 5509              		.loc 5 1155 4 view .LVU1852
 5510              		.syntax unified
 5511              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5512 0134 53E8002F 		ldrex r2, [r3]
 5513              	@ 0 "" 2
 5514              	.LVL351:
1156:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5515              		.loc 5 1156 4 view .LVU1853
 5516              		.loc 5 1156 4 is_stmt 0 view .LVU1854
 5517              		.thumb
 5518              		.syntax unified
 5519              	.LBE955:
 5520              	.LBE954:
 5521              		.loc 14 714 3 view .LVU1855
 5522 0138 22F06042 		bic	r2, r2, #-536870912
 5523              	.LVL352:
 5524              		.loc 14 714 3 is_stmt 1 view .LVU1856
 5525              	.LBB956:
 5526              	.LBI956:
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1170:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1174:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1177:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
ARM GAS  /tmp/cc85dWdm.s 			page 607


1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1184:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1185:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1187:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1188:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 5527              		.loc 5 1202 31 view .LVU1857
 5528              	.LBB957:
1203:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1204:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 5529              		.loc 5 1204 4 view .LVU1858
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 5530              		.loc 5 1206 4 view .LVU1859
 5531              		.syntax unified
 5532              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5533 013c 43E80021 		strex r1, r2, [r3]
 5534              	@ 0 "" 2
 5535              	.LVL353:
1207:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5536              		.loc 5 1207 4 view .LVU1860
 5537              		.loc 5 1207 4 is_stmt 0 view .LVU1861
 5538              		.thumb
 5539              		.syntax unified
 5540              	.LBE957:
 5541              	.LBE956:
 5542              		.loc 14 714 3 view .LVU1862
 5543 0140 0029     		cmp	r1, #0
 5544 0142 F6D1     		bne	.L106
 5545              	.LVL354:
 5546              	.L107:
 5547              		.loc 14 714 3 view .LVU1863
 5548              	.LBE953:
 5549              	.LBE958:
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return TX FIFO Threshold Configuration
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
ARM GAS  /tmp/cc85dWdm.s 			page 608


 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_GetTXFIFOThreshold
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXFIFOThreshold(USART_TypeDef *USARTx)
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure RX FIFO Threshold
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          RXFTCFG       LL_USART_SetRXFIFOThreshold
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Threshold This parameter can be one of the following values:
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_RXFTCFG, Threshold << USART_CR3_RXFTCFG_Pos);
 5550              		.loc 14 753 3 is_stmt 1 view .LVU1864
 5551              	.LBB959:
 5552              	.LBB960:
 5553              		.loc 14 753 3 view .LVU1865
 5554              		.loc 14 753 3 view .LVU1866
 5555              		.loc 14 753 3 view .LVU1867
 5556              	.LBB961:
 5557              	.LBI961:
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5558              		.loc 5 1151 31 view .LVU1868
 5559              	.LBB962:
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5560              		.loc 5 1153 5 view .LVU1869
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5561              		.loc 5 1155 4 view .LVU1870
 5562              		.syntax unified
 5563              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5564 0144 53E8002F 		ldrex r2, [r3]
 5565              	@ 0 "" 2
 5566              	.LVL355:
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5567              		.loc 5 1156 4 view .LVU1871
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5568              		.loc 5 1156 4 is_stmt 0 view .LVU1872
ARM GAS  /tmp/cc85dWdm.s 			page 609


 5569              		.thumb
 5570              		.syntax unified
 5571              	.LBE962:
 5572              	.LBE961:
 5573              		.loc 14 753 3 view .LVU1873
 5574 0148 22F06062 		bic	r2, r2, #234881024
 5575              	.LVL356:
 5576              		.loc 14 753 3 is_stmt 1 view .LVU1874
 5577              	.LBB963:
 5578              	.LBI963:
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5579              		.loc 5 1202 31 view .LVU1875
 5580              	.LBB964:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5581              		.loc 5 1204 4 view .LVU1876
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5582              		.loc 5 1206 4 view .LVU1877
 5583              		.syntax unified
 5584              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5585 014c 43E80021 		strex r1, r2, [r3]
 5586              	@ 0 "" 2
 5587              	.LVL357:
 5588              		.loc 5 1207 4 view .LVU1878
 5589              		.loc 5 1207 4 is_stmt 0 view .LVU1879
 5590              		.thumb
 5591              		.syntax unified
 5592              	.LBE964:
 5593              	.LBE963:
 5594              		.loc 14 753 3 view .LVU1880
 5595 0150 0029     		cmp	r1, #0
 5596 0152 F7D1     		bne	.L107
 5597              	.LBE960:
 5598              	.LBE959:
 5599              		.loc 14 753 3 is_stmt 1 view .LVU1881
 5600              	.LVL358:
1142:Src/main.c    ****   LL_USART_ConfigAsyncMode(USART2);
 5601              		.loc 1 1142 3 view .LVU1882
 5602              	.LBB965:
 5603              	.LBI965:
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 5604              		.loc 14 679 22 view .LVU1883
 5605              	.LBB966:
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 5606              		.loc 14 681 3 view .LVU1884
 5607 0154 144B     		ldr	r3, .L111+24
 5608 0156 1A68     		ldr	r2, [r3]
 5609 0158 22F00052 		bic	r2, r2, #536870912
 5610 015c 1A60     		str	r2, [r3]
 5611              	.LVL359:
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 5612              		.loc 14 681 3 is_stmt 0 view .LVU1885
 5613              	.LBE966:
 5614              	.LBE965:
1143:Src/main.c    **** 
 5615              		.loc 1 1143 3 is_stmt 1 view .LVU1886
 5616              	.LBB967:
 5617              	.LBI967:
ARM GAS  /tmp/cc85dWdm.s 			page 610


 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return RX FIFO Threshold Configuration
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          RXFTCFG       LL_USART_GetRXFIFOThreshold
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXFIFOThreshold(USART_TypeDef *USARTx)
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure TX and RX FIFOs Threshold
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_ConfigFIFOsThreshold\n
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          RXFTCFG       LL_USART_ConfigFIFOsThreshold
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  TXThreshold This parameter can be one of the following values:
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  RXThreshold This parameter can be one of the following values:
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigFIFOsThreshold(USART_TypeDef *USARTx, uint32_t TXThreshold, uin
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG | USART_CR3_RXFTCFG, (TXThreshold << USART_CR3_T
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                     (RXThreshold << USART_CR3_RXFTCFG_Pos));
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
ARM GAS  /tmp/cc85dWdm.s 			page 611


 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_UESM);
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(USART_TypeDef *USARTx)
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM)) ? 1UL : 0UL);
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RE);
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Receiver Disable
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 612


 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Transmitter Enable
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TE);
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Transmitter Disable
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         of Transmitter and Receiver
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 613


 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 614


 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_MME);
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 615


1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef *USARTx)
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME)) ? 1UL : 0UL);
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Oversampling mode
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  /tmp/cc85dWdm.s 			page 616


1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
ARM GAS  /tmp/cc85dWdm.s 			page 617


1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure Clock source prescaler for baudrate generator and oversampling
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll PRESC        PRESCALER     LL_USART_SetPrescaler
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
ARM GAS  /tmp/cc85dWdm.s 			page 618


1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->PRESC, USART_PRESC_PRESCALER, (uint16_t)PrescalerValue);
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Retrieve the Clock source prescaler for baudrate generator and oversampling
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll PRESC        PRESCALER     LL_USART_GetPrescaler
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetPrescaler(USART_TypeDef *USARTx)
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->PRESC, USART_PRESC_PRESCALER));
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
ARM GAS  /tmp/cc85dWdm.s 			page 619


1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN)) ? 1UL : 0UL);
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set the length of the stop bits
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
1323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
ARM GAS  /tmp/cc85dWdm.s 			page 620


1324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                               uint32_t StopBits)
1348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
1369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
1370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(USART_TypeDef *USARTx)
1376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
1378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 621


1381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(USART_TypeDef *USARTx)
1403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(USART_TypeDef *USARTx)
1430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
ARM GAS  /tmp/cc85dWdm.s 			page 622


1438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
1452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef *USARTx)
1459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
1468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
1484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef *USARTx)
1490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
1492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 623


1495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
1509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
1525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef *USARTx)
1529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN)) ? 1UL : 0UL);
1531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
1540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
1547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 624


1552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
1566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
1581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
1582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef *USARTx)
1597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN)) ? 1UL : 0UL);
1599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         for wake up with address mark detection.
1605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
ARM GAS  /tmp/cc85dWdm.s 			page 625


1609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
1610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         value and CMF flag is set on match)
1615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
1639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
1641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef *USARTx)
1654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 626


1666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
1695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
ARM GAS  /tmp/cc85dWdm.s 			page 627


1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT)) ? 1UL : 0UL);
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 628


1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable Overrun detection
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable Overrun detection
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef *USARTx)
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS) ? 1UL : 0UL);
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/cc85dWdm.s 			page 629


1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(USART_TypeDef *USARTx)
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (Baud rate value != 0)
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t Presc
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                           uint32_t OverSampling,
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                           uint32_t BaudRate)
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t usartdiv;
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t brrtemp;
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   if (PrescalerValue > LL_USART_PRESCALER_DIV256)
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   {
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     /* Do not overstep the size of USART_PRESCALER_TAB */
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   }
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   else if (BaudRate == 0U)
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   {
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     /* Can Not divide per 0 */
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   }
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   {
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, (uint8_t)PrescalerValue, BaudRate));
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
ARM GAS  /tmp/cc85dWdm.s 			page 630


1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     USARTx->BRR = brrtemp;
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   }
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   else
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   {
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, (uint8_t)PrescalerValue, BaudRate
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   }
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Baud Rate
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t P
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****                                               uint32_t OverSampling)
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t usartdiv;
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   uint32_t periphclkpresc = (uint32_t)(PeriphClk / (USART_PRESCALER_TAB[(uint8_t)PrescalerValue]));
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   if (usartdiv == 0U)
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   {
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     /* Do not perform a division by 0 */
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   }
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   {
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     if (usartdiv != 0U)
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     {
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****       brrresult = (periphclkpresc * 2U) / usartdiv;
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     }
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   }
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   else
ARM GAS  /tmp/cc85dWdm.s 			page 631


1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   {
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     {
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****       brrresult = periphclkpresc / usartdiv;
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****     }
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   }
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (brrresult);
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Receiver Time Out Value (expressed in nb of bits duration)
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_SetRxTimeout
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Timeout Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRxTimeout(USART_TypeDef *USARTx, uint32_t Timeout)
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_RTO, Timeout);
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Get Receiver Time Out Value (expressed in nb of bits duration)
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_GetRxTimeout
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRxTimeout(USART_TypeDef *USARTx)
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_RTO));
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Block Length value in reception
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_SetBlockLength
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  BlockLength Value between Min_Data=0x00 and Max_Data=0xFF
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBlockLength(USART_TypeDef *USARTx, uint32_t BlockLength)
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_BLEN, BlockLength << USART_RTOR_BLEN_Pos);
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Get Block Length value in reception
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_GetBlockLength
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBlockLength(USART_TypeDef *USARTx)
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_BLEN) >> USART_RTOR_BLEN_Pos);
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
ARM GAS  /tmp/cc85dWdm.s 			page 632


2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable IrDA mode
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable IrDA mode
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN)) ? 1UL : 0UL);
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
ARM GAS  /tmp/cc85dWdm.s 			page 633


2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, (uint16_t)PrescalerValue);
2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 634


2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK)) ? 1UL : 0UL);
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable Smartcard mode
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable Smartcard mode
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /tmp/cc85dWdm.s 			page 635


2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN)) ? 1UL : 0UL);
2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   This bit-field specifies the number of retries in transmit and receive, in Smartcard mo
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         In transmission mode, it specifies the number of automatic retransmission retries, befo
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         generating a transmission error (FE bit set).
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         In reception mode, it specifies the number or erroneous reception trials, before genera
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         reception error (RXNE and PE bits set)
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_SetSmartcardAutoRetryCount
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  AutoRetryCount Value between Min_Data=0 and Max_Data=7
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardAutoRetryCount(USART_TypeDef *USARTx, uint32_t AutoRetryC
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_SCARCNT, AutoRetryCount << USART_CR3_SCARCNT_Pos);
2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_GetSmartcardAutoRetryCount
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Smartcard Auto-Retry Count value (Value between Min_Data=0 and Max_Data=7)
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardAutoRetryCount(USART_TypeDef *USARTx)
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_SCARCNT) >> USART_CR3_SCARCNT_Pos);
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
ARM GAS  /tmp/cc85dWdm.s 			page 636


2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
2242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, (uint16_t)PrescalerValue);
2244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
2248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
2249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
2252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
2254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
2256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
2258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
2262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
2263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
2266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
2268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
2271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, (uint16_t)(GuardTime << USART_GTPR_GT_Pos));
2273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
2277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
2278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
2285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_GTPR_GT_Pos);
2287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
2291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 637


2293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
2294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
2295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
2299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
2302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
2306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
2312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
2315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
2319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
2325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
2328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
2332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL)) ? 1UL : 0UL);
2334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
2338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_SPI_SLAVE Configuration functions related to SPI Slave feat
2341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
2342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable SPI Synchronous Slave mode
2345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_EnableSPISlave
2348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
ARM GAS  /tmp/cc85dWdm.s 			page 638


2350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSPISlave(USART_TypeDef *USARTx)
2352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_SLVEN);
2354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable SPI Synchronous Slave mode
2358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_DisableSPISlave
2361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSPISlave(USART_TypeDef *USARTx)
2365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_SLVEN);
2367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if  SPI Synchronous Slave mode is enabled
2371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_IsEnabledSPISlave
2374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSPISlave(USART_TypeDef *USARTx)
2378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_SLVEN) == (USART_CR2_SLVEN)) ? 1UL : 0UL);
2380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable SPI Slave Selection using NSS input pin
2384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   SPI Slave Selection depends on NSS input pin
2387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (The slave is selected when NSS is low and deselected when NSS is high).
2388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_EnableSPISlaveSelect
2389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSPISlaveSelect(USART_TypeDef *USARTx)
2393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_DIS_NSS);
2395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable SPI Slave Selection using NSS input pin
2399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   SPI Slave will be always selected and NSS input pin will be ignored.
2402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_DisableSPISlaveSelect
2403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSPISlaveSelect(USART_TypeDef *USARTx)
ARM GAS  /tmp/cc85dWdm.s 			page 639


2407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_DIS_NSS);
2409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if  SPI Slave Selection depends on NSS input pin
2413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_IsEnabledSPISlaveSelect
2416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSPISlaveSelect(USART_TypeDef *USARTx)
2420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_DIS_NSS) != (USART_CR2_DIS_NSS)) ? 1UL : 0UL);
2422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
2426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
2429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
2430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
2434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
2437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
2439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
2444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
2446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
2450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
2453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
2459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
2461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 640


2464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable LIN mode
2465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
2468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
2472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable LIN mode
2478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
2481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
2485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
2487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
2491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
2494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
2498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN)) ? 1UL : 0UL);
2500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
2504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_DE Configuration functions related to Driver Enable feature
2507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
2508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set DEDT (Driver Enable De-Assertion Time), Time value expressed on 5 bits ([4:0] bits)
2512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_SetDEDeassertionTime
2515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEDeassertionTime(USART_TypeDef *USARTx, uint32_t Time)
2520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 641


2521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEDT, Time << USART_CR1_DEDT_Pos);
2522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return DEDT (Driver Enable De-Assertion Time)
2526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_GetDEDeassertionTime
2529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEDeassertionTime(USART_TypeDef *USARTx)
2533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEDT) >> USART_CR1_DEDT_Pos);
2535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Set DEAT (Driver Enable Assertion Time), Time value expressed on 5 bits ([4:0] bits).
2539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_SetDEAssertionTime
2542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEAssertionTime(USART_TypeDef *USARTx, uint32_t Time)
2547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEAT, Time << USART_CR1_DEAT_Pos);
2549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return DEAT (Driver Enable Assertion Time)
2553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_GetDEAssertionTime
2556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEAssertionTime(USART_TypeDef *USARTx)
2560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEAT) >> USART_CR1_DEAT_Pos);
2562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Enable Driver Enable (DE) Mode
2566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_EnableDEMode
2569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDEMode(USART_TypeDef *USARTx)
2573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DEM);
2575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 642


2578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Disable Driver Enable (DE) Mode
2579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_DisableDEMode
2582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDEMode(USART_TypeDef *USARTx)
2586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DEM);
2588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Indicate if Driver Enable (DE) Mode is enabled
2592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_IsEnabledDEMode
2595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDEMode(USART_TypeDef *USARTx)
2599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DEM) == (USART_CR3_DEM)) ? 1UL : 0UL);
2601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Select Driver Enable Polarity
2605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_SetDESignalPolarity
2608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
2610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDESignalPolarity(USART_TypeDef *USARTx, uint32_t Polarity)
2615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_DEP, Polarity);
2617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Return Driver Enable Polarity
2621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_GetDESignalPolarity
2624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDESignalPolarity(USART_TypeDef *USARTx)
2630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_DEP));
2632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 643


2635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
2636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
2639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
2640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
2644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
2645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
2657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         dedicated functions
2659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
2660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
2661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
2662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
2663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
2664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
 5618              		.loc 14 2667 22 view .LVU1887
 5619              	.LBB968:
2668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
2670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
2671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.
2672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 5620              		.loc 14 2673 3 view .LVU1888
 5621 015e 5A68     		ldr	r2, [r3, #4]
 5622 0160 22F49042 		bic	r2, r2, #18432
 5623 0164 5A60     		str	r2, [r3, #4]
2674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 5624              		.loc 14 2674 3 view .LVU1889
 5625 0166 9A68     		ldr	r2, [r3, #8]
 5626 0168 22F02A02 		bic	r2, r2, #42
 5627 016c 9A60     		str	r2, [r3, #8]
 5628              	.LVL360:
 5629              		.loc 14 2674 3 is_stmt 0 view .LVU1890
 5630              	.LBE968:
 5631              	.LBE967:
1149:Src/main.c    **** 
 5632              		.loc 1 1149 3 is_stmt 1 view .LVU1891
 5633              	.LBB969:
ARM GAS  /tmp/cc85dWdm.s 			page 644


 5634              	.LBI969:
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
 5635              		.loc 14 628 22 view .LVU1892
 5636              	.LBB970:
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 5637              		.loc 14 630 3 view .LVU1893
 5638 016e 1A68     		ldr	r2, [r3]
 5639 0170 42F00102 		orr	r2, r2, #1
 5640 0174 1A60     		str	r2, [r3]
 5641              	.LVL361:
 5642              	.L108:
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
 5643              		.loc 14 630 3 is_stmt 0 view .LVU1894
 5644              	.LBE970:
 5645              	.LBE969:
1154:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 5646              		.loc 1 1154 3 is_stmt 1 discriminator 3 view .LVU1895
1152:Src/main.c    ****   {
 5647              		.loc 1 1152 8 discriminator 3 view .LVU1896
 5648              	.LBB971:
 5649              	.LBI971:
2675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
2679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
2680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
2685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
2686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
2687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
2694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
2695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         dedicated functions
2696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
2697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
2698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
2699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
2700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
2701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
2705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
2707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
2708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.
2709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
ARM GAS  /tmp/cc85dWdm.s 			page 645


2711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
2712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
2713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
2714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
2718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
2719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
2724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
2733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
2734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
2735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         dedicated functions
2736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
2737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
2738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
2739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
2740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
2741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
2742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
2746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
2748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
2749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.
2750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
2752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
2753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
2754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
2759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
2760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
2765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
ARM GAS  /tmp/cc85dWdm.s 			page 646


2768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
2773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
2774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         dedicated functions
2776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
2777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
2778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
2779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
2780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
2781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
2785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
2787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
2788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - SCEN and IREN bits in the USART_CR3 register.
2789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
2792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
2793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
2798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
2799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
2803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
2804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
2805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
2814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
2815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         dedicated functions
2817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
2818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
2819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
2820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
2821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
2822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 647


2825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
2826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
2828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
2829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - IREN and HDSEL bits in the USART_CR3 register.
2830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
2834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* Synchronous mode is activated by default */
2835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
2836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
2837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
2838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
2842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
2843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
2848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
2857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
2858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
2859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         dedicated functions
2860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
2861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
2862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
2863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
2864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
2865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
2866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
2870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
2872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - LINEN, STOP and CLKEN bits in the USART_CR2 register,
2873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - SCEN and HDSEL bits in the USART_CR3 register.
2874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
2876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
2878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
2879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 648


2882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
2883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
2884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
2885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
2886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
2898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
2899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         dedicated functions
2900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
2901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
2902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
2903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
2904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
2905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval None
2907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
2909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
2911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
2912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.
2913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
2916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @}
2920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
2923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @{
2924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
2928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          PE            LL_USART_IsActiveFlag_PE
2929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef *USARTx)
2933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_PE) == (USART_ISR_PE)) ? 1UL : 0UL);
2935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
ARM GAS  /tmp/cc85dWdm.s 			page 649


2939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          FE            LL_USART_IsActiveFlag_FE
2940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef *USARTx)
2944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_FE) == (USART_ISR_FE)) ? 1UL : 0UL);
2946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
2950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          NE            LL_USART_IsActiveFlag_NE
2951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef *USARTx)
2955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_NE) == (USART_ISR_NE)) ? 1UL : 0UL);
2957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
2961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          ORE           LL_USART_IsActiveFlag_ORE
2962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef *USARTx)
2966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ORE) == (USART_ISR_ORE)) ? 1UL : 0UL);
2968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
2972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          IDLE          LL_USART_IsActiveFlag_IDLE
2973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef *USARTx)
2977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_IDLE) == (USART_ISR_IDLE)) ? 1UL : 0UL);
2979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
2980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Legacy define */
2982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_IsActiveFlag_RXNE  LL_USART_IsActiveFlag_RXNE_RXFNE
2983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register or USART RX FIFO Not Empty Flag is set or not
2986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
2987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
2988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          RXNE_RXFNE    LL_USART_IsActiveFlag_RXNE_RXFNE
2989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
2990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
2992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE_RXFNE(USART_TypeDef *USARTx)
2993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
2994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXNE_RXFNE) == (USART_ISR_RXNE_RXFNE)) ? 1UL : 0UL);
2995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 650


2996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
2997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
2998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Flag is set or not
2999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          TC            LL_USART_IsActiveFlag_TC
3000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef *USARTx)
3004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TC) == (USART_ISR_TC)) ? 1UL : 0UL);
3006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /* Legacy define */
3009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** #define LL_USART_IsActiveFlag_TXE  LL_USART_IsActiveFlag_TXE_TXFNF
3010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty or USART TX FIFO Not Full Flag is set o
3013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          TXE_TXFNF     LL_USART_IsActiveFlag_TXE_TXFNF
3016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE_TXFNF(USART_TypeDef *USARTx)
3020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXE_TXFNF) == (USART_ISR_TXE_TXFNF)) ? 1UL : 0UL);
3022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Flag is set or not
3026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          LBDF          LL_USART_IsActiveFlag_LBD
3029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_LBD(USART_TypeDef *USARTx)
3033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_LBDF) == (USART_ISR_LBDF)) ? 1UL : 0UL);
3035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART CTS interrupt Flag is set or not
3039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          CTSIF         LL_USART_IsActiveFlag_nCTS
3042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_nCTS(USART_TypeDef *USARTx)
3046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CTSIF) == (USART_ISR_CTSIF)) ? 1UL : 0UL);
3048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART CTS Flag is set or not
3052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  /tmp/cc85dWdm.s 			page 651


3053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          CTS           LL_USART_IsActiveFlag_CTS
3055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CTS(USART_TypeDef *USARTx)
3059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CTS) == (USART_ISR_CTS)) ? 1UL : 0UL);
3061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Receiver Time Out Flag is set or not
3065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          RTOF          LL_USART_IsActiveFlag_RTO
3066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RTO(USART_TypeDef *USARTx)
3070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RTOF) == (USART_ISR_RTOF)) ? 1UL : 0UL);
3072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART End Of Block Flag is set or not
3076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          EOBF          LL_USART_IsActiveFlag_EOB
3079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_EOB(USART_TypeDef *USARTx)
3083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_EOBF) == (USART_ISR_EOBF)) ? 1UL : 0UL);
3085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the SPI Slave Underrun error flag is set or not
3089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
3090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
3091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          UDR           LL_USART_IsActiveFlag_UDR
3092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_UDR(USART_TypeDef *USARTx)
3096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_UDR) == (USART_ISR_UDR)) ? 1UL : 0UL);
3098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Error Flag is set or not
3102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
3103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
3104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          ABRE          LL_USART_IsActiveFlag_ABRE
3105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABRE(USART_TypeDef *USARTx)
3109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 652


3110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ABRE) == (USART_ISR_ABRE)) ? 1UL : 0UL);
3111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Flag is set or not
3115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
3116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
3117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          ABRF          LL_USART_IsActiveFlag_ABR
3118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABR(USART_TypeDef *USARTx)
3122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ABRF) == (USART_ISR_ABRF)) ? 1UL : 0UL);
3124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Busy Flag is set or not
3128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          BUSY          LL_USART_IsActiveFlag_BUSY
3129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_BUSY(USART_TypeDef *USARTx)
3133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_BUSY) == (USART_ISR_BUSY)) ? 1UL : 0UL);
3135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Character Match Flag is set or not
3139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          CMF           LL_USART_IsActiveFlag_CM
3140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CM(USART_TypeDef *USARTx)
3144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CMF) == (USART_ISR_CMF)) ? 1UL : 0UL);
3146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Send Break Flag is set or not
3150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          SBKF          LL_USART_IsActiveFlag_SBK
3151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_SBK(USART_TypeDef *USARTx)
3155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_SBKF) == (USART_ISR_SBKF)) ? 1UL : 0UL);
3157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Receive Wake Up from mute mode Flag is set or not
3161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          RWU           LL_USART_IsActiveFlag_RWU
3162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RWU(USART_TypeDef *USARTx)
3166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 653


3167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RWU) == (USART_ISR_RWU)) ? 1UL : 0UL);
3168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Wake Up from stop mode Flag is set or not
3172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          WUF           LL_USART_IsActiveFlag_WKUP
3175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_WKUP(USART_TypeDef *USARTx)
3179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_WUF) == (USART_ISR_WUF)) ? 1UL : 0UL);
3181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Transmit Enable Acknowledge Flag is set or not
3185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          TEACK         LL_USART_IsActiveFlag_TEACK
3186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TEACK(USART_TypeDef *USARTx)
 5650              		.loc 14 3189 26 discriminator 3 view .LVU1897
 5651              	.LBB972:
3190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
 5652              		.loc 14 3191 3 discriminator 3 view .LVU1898
 5653              		.loc 14 3191 12 is_stmt 0 discriminator 3 view .LVU1899
 5654 0176 0C4B     		ldr	r3, .L111+24
 5655 0178 DB69     		ldr	r3, [r3, #28]
 5656              		.loc 14 3191 79 discriminator 3 view .LVU1900
 5657 017a 13F4001F 		tst	r3, #2097152
 5658 017e FAD0     		beq	.L108
 5659              	.LVL362:
 5660              		.loc 14 3191 79 discriminator 3 view .LVU1901
 5661              	.LBE972:
 5662              	.LBE971:
 5663              	.LBB973:
 5664              	.LBI973:
3192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** }
3193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** 
3194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** /**
3195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @brief  Check if the USART Receive Enable Acknowledge Flag is set or not
3196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @rmtoll ISR          REACK         LL_USART_IsActiveFlag_REACK
3197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @param  USARTx USART Instance
3198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   */
3200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_REACK(USART_TypeDef *USARTx)
 5665              		.loc 14 3200 26 is_stmt 1 view .LVU1902
 5666              	.LBB974:
3201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h **** {
3202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
 5667              		.loc 14 3202 3 view .LVU1903
 5668              		.loc 14 3202 12 is_stmt 0 view .LVU1904
 5669 0180 094B     		ldr	r3, .L111+24
 5670 0182 DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/cc85dWdm.s 			page 654


 5671              		.loc 14 3202 79 view .LVU1905
 5672 0184 13F4800F 		tst	r3, #4194304
 5673 0188 F5D0     		beq	.L108
 5674              	.LBE974:
 5675              	.LBE973:
1159:Src/main.c    **** 
 5676              		.loc 1 1159 1 view .LVU1906
 5677 018a 11B0     		add	sp, sp, #68
 5678              		.cfi_def_cfa_offset 20
 5679              		@ sp needed
 5680 018c F0BD     		pop	{r4, r5, r6, r7, pc}
 5681              	.L112:
 5682 018e 00BF     		.align	2
 5683              	.L111:
 5684 0190 00100240 		.word	1073876992
 5685 0194 00040048 		.word	1207960576
 5686 0198 00080240 		.word	1073874944
 5687 019c 08000240 		.word	1073872904
 5688 01a0 04080240 		.word	1073874948
 5689 01a4 1C000240 		.word	1073872924
 5690 01a8 00440040 		.word	1073759232
 5691 01ac 08440040 		.word	1073759240
 5692              		.cfi_endproc
 5693              	.LFE1637:
 5695              		.section	.text.Error_Handler,"ax",%progbits
 5696              		.align	1
 5697              		.global	Error_Handler
 5698              		.syntax unified
 5699              		.thumb
 5700              		.thumb_func
 5701              		.fpu fpv4-sp-d16
 5703              	Error_Handler:
 5704              	.LFB1640:
1226:Src/main.c    **** 
1227:Src/main.c    **** /* USER CODE BEGIN 4 */
1228:Src/main.c    **** 
1229:Src/main.c    **** /* USER CODE END 4 */
1230:Src/main.c    **** 
1231:Src/main.c    **** /**
1232:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1233:Src/main.c    ****   * @retval None
1234:Src/main.c    ****   */
1235:Src/main.c    **** void Error_Handler(void)
1236:Src/main.c    **** {
 5705              		.loc 1 1236 1 is_stmt 1 view -0
 5706              		.cfi_startproc
 5707              		@ Volatile: function does not return.
 5708              		@ args = 0, pretend = 0, frame = 0
 5709              		@ frame_needed = 0, uses_anonymous_args = 0
 5710              		@ link register save eliminated.
1237:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
1238:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
1239:Src/main.c    ****   __disable_irq();
 5711              		.loc 1 1239 3 view .LVU1908
 5712              	.LBB975:
 5713              	.LBI975:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 655


 5714              		.loc 5 207 27 view .LVU1909
 5715              	.LBB976:
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5716              		.loc 5 209 3 view .LVU1910
 5717              		.syntax unified
 5718              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5719 0000 72B6     		cpsid i
 5720              	@ 0 "" 2
 5721              		.thumb
 5722              		.syntax unified
 5723              	.L114:
 5724              	.LBE976:
 5725              	.LBE975:
1240:Src/main.c    ****   while (1)
 5726              		.loc 1 1240 3 discriminator 1 view .LVU1911
1241:Src/main.c    ****   {
1242:Src/main.c    ****   }
 5727              		.loc 1 1242 3 discriminator 1 view .LVU1912
1240:Src/main.c    ****   while (1)
 5728              		.loc 1 1240 9 discriminator 1 view .LVU1913
 5729 0002 FEE7     		b	.L114
 5730              		.cfi_endproc
 5731              	.LFE1640:
 5733              		.section	.text.SystemClock_Config,"ax",%progbits
 5734              		.align	1
 5735              		.global	SystemClock_Config
 5736              		.syntax unified
 5737              		.thumb
 5738              		.thumb_func
 5739              		.fpu fpv4-sp-d16
 5741              	SystemClock_Config:
 5742              	.LFB1623:
 159:Src/main.c    ****   LL_FLASH_SetLatency(LL_FLASH_LATENCY_4);
 5743              		.loc 1 159 1 view -0
 5744              		.cfi_startproc
 5745              		@ args = 0, pretend = 0, frame = 0
 5746              		@ frame_needed = 0, uses_anonymous_args = 0
 5747 0000 08B5     		push	{r3, lr}
 5748              		.cfi_def_cfa_offset 8
 5749              		.cfi_offset 3, -8
 5750              		.cfi_offset 14, -4
 160:Src/main.c    ****   while(LL_FLASH_GetLatency() != LL_FLASH_LATENCY_4)
 5751              		.loc 1 160 3 view .LVU1915
 5752              	.LVL363:
 5753              	.LBB977:
 5754              	.LBI977:
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get the configured defined for specific EXTI Line
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTIx         LL_SYSCFG_GetEXTISource\n
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTIx         LL_SYSCFG_GetEXTISource\n
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTIx         LL_SYSCFG_GetEXTISource\n
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTIx         LL_SYSCFG_GetEXTISource
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
ARM GAS  /tmp/cc85dWdm.s 			page 656


 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD
 746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE
 747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTF
 748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTG
 749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetEXTISource(uint32_t Line)
 753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->EXTICR[Line & 0x3U], (Line >> 16U)) >> (POSITION_VAL(Line >> 1
 755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable CCMSRAM Erase (starts a hardware CCMSRAM erase operation. This bit is
 759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * automatically cleared at the end of the CCMSRAM erase operation.)
 760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note This bit is write-protected: setting this bit is possible only after the
 761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *       correct key sequence is written in the SYSCFG_SKR register as described in
 762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *       the Reference Manual.
 763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_SCSR  CCMER       LL_SYSCFG_EnableCCMSRAMErase
 764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableCCMSRAMErase(void)
 767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   /* Starts a hardware CCMSRAM erase operation*/
 769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->SCSR, SYSCFG_SCSR_CCMER);
 770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if CCMSRAM erase operation is on going
 774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_SCSR  CCMBSY      LL_SYSCFG_IsCCMSRAMEraseOngoing
 775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsCCMSRAMEraseOngoing(void)
 778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->SCSR, SYSCFG_SCSR_CCMBSY) == (SYSCFG_SCSR_CCMBSY)) ? 1UL : 0UL);
 780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Set connections to TIM1/8/15/16/17 Break inputs
ARM GAS  /tmp/cc85dWdm.s 			page 657


 784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 CLL           LL_SYSCFG_SetTIMBreakInputs\n
 785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 SPL           LL_SYSCFG_SetTIMBreakInputs\n
 786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 PVDL          LL_SYSCFG_SetTIMBreakInputs\n
 787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 ECCL          LL_SYSCFG_SetTIMBreakInputs
 788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Break This parameter can be a combination of the following values:
 789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_ECC
 790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_PVD
 791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_SRAM_PARITY
 792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_LOCKUP
 793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetTIMBreakInputs(uint32_t Break)
 796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR2, SYSCFG_CFGR2_CLL | SYSCFG_CFGR2_SPL | SYSCFG_CFGR2_PVDL | SYSCFG_CFGR2_
 798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get connections to TIM1/8/15/16/17 Break inputs
 802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 CLL           LL_SYSCFG_GetTIMBreakInputs\n
 803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 SPL           LL_SYSCFG_GetTIMBreakInputs\n
 804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 PVDL          LL_SYSCFG_GetTIMBreakInputs\n
 805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         SYSCFG_CFGR2 ECCL          LL_SYSCFG_GetTIMBreakInputs
 806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be can be a combination of the following values:
 807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_ECC
 808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_PVD
 809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_SRAM_PARITY
 810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_LOCKUP
 811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetTIMBreakInputs(void)
 813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_CLL | SYSCFG_CFGR2_SPL | SYSCFG_CFGR2_PVDL
 815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if SRAM parity error detected
 819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 SPF           LL_SYSCFG_IsActiveFlag_SP
 820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
 821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_SP(void)
 823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_SPF) == (SYSCFG_CFGR2_SPF)) ? 1UL : 0UL);
 825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Clear SRAM parity error flag
 829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 SPF           LL_SYSCFG_ClearFlag_SP
 830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_ClearFlag_SP(void)
 833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_SPF);
 835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable CCMSRAM page write protection
 839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note Write protection is cleared only by a system reset
 840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_SWPR  PAGEx         LL_SYSCFG_EnableCCMSRAMPageWRP
ARM GAS  /tmp/cc85dWdm.s 			page 658


 841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  CCMSRAMWRP This parameter can be a combination of the following values:
 842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE0
 843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE1
 844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE2
 845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE3
 846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE4
 847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE5
 848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE6
 849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE7
 850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE8
 851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE9
 852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE10 (*)
 853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE11 (*)
 854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE12 (*)
 855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE13 (*)
 856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE14 (*)
 857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE15 (*)
 858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE16 (*)
 859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE17 (*)
 860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE18 (*)
 861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE19 (*)
 862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE20 (*)
 863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE21 (*)
 864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE22 (*)
 865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE23 (*)
 866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE24 (*)
 867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE25 (*)
 868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE26 (*)
 869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE27 (*)
 870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE28 (*)
 871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE29 (*)
 872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE30 (*)
 873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CCMSRAMWRP_PAGE31 (*)
 874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
 875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices
 876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableCCMSRAMPageWRP(uint32_t CCMSRAMWRP)
 879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(SYSCFG->SWPR, CCMSRAMWRP);
 881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  CCMSRAM page write protection lock prior to erase
 885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_SKR   KEY           LL_SYSCFG_LockCCMSRAMWRP
 886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_LockCCMSRAMWRP(void)
 889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   /* Writing a wrong key reactivates the write protection */
 891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   WRITE_REG(SYSCFG->SKR, 0x00);
 892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  CCMSRAM page write protection unlock prior to erase
 896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll SYSCFG_SKR   KEY           LL_SYSCFG_UnlockCCMSRAMWRP
 897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
ARM GAS  /tmp/cc85dWdm.s 			page 659


 898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_UnlockCCMSRAMWRP(void)
 900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   /* unlock the write protection of the CCMER bit */
 902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   WRITE_REG(SYSCFG->SKR, 0xCA);
 903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   WRITE_REG(SYSCFG->SKR, 0x53);
 904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
 908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_DBGMCU DBGMCU
 912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
 913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Return the device identifier
 917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE DEV_ID        LL_DBGMCU_GetDeviceID
 918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0x0FFF (ex: device ID is 0x6415)
 919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetDeviceID(void)
 921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_DEV_ID));
 923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Return the device revision identifier
 927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @note This field indicates the revision of the device.
 928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE REV_ID        LL_DBGMCU_GetRevisionID
 929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFFF
 930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetRevisionID(void)
 932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_REV_ID) >> (DBGMCU_REVID_POSITION & 0x1F
 934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable the Debug Module during SLEEP mode
 938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_EnableDBGSleepMode
 939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGSleepMode(void)
 942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable the Debug Module during SLEEP mode
 948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_DisableDBGSleepMode
 949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGSleepMode(void)
 952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 660


 955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable the Debug Module during STOP mode
 958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_EnableDBGStopMode
 959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStopMode(void)
 962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable the Debug Module during STOP mode
 968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_DisableDBGStopMode
 969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStopMode(void)
 972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable the Debug Module during STANDBY mode
 978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_EnableDBGStandbyMode
 979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStandbyMode(void)
 982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable the Debug Module during STANDBY mode
 988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_DisableDBGStandbyMode
 989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
 990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
 991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStandbyMode(void)
 992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
 993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
 995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
 996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
 997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Set Trace pin assignment control
 998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_SetTracePinAssignment\n
 999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_SetTracePinAssignment
1000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  PinAssignment This parameter can be one of the following values:
1001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
1002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
1003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
1004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
1005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
1006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_SetTracePinAssignment(uint32_t PinAssignment)
1009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE, PinAssignment);
1011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 661


1012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get Trace pin assignment control
1015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_GetTracePinAssignment\n
1016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_GetTracePinAssignment
1017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be one of the following values:
1018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
1019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
1020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
1021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
1022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
1023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetTracePinAssignment(void)
1025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE));
1027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group1 peripherals)
1031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZR1 DBG_xxxx_STOP  LL_DBGMCU_APB1_GRP1_FreezePeriph
1032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
1034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
1035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
1036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP (*)
1037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
1038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
1039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
1040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
1041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
1042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
1043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP
1044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C3_STOP
1045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_LPTIM1_STOP
1046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_FreezePeriph(uint32_t Periphs)
1051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->APB1FZR1, Periphs);
1053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group2 peripherals)
1057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZR2 DBG_xxxx_STOP  LL_DBGMCU_APB1_GRP2_FreezePeriph
1058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_I2C4_STOP (*)
1060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP2_FreezePeriph(uint32_t Periphs)
1065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->APB1FZR2, Periphs);
1067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 662


1069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group1 peripherals)
1071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZR1 DBG_xxxx_STOP  LL_DBGMCU_APB1_GRP1_UnFreezePeriph
1072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
1074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
1075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
1076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP (*)
1077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
1078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
1079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
1080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
1081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
1082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
1083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP
1084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C3_STOP
1085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_LPTIM1_STOP
1086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_UnFreezePeriph(uint32_t Periphs)
1091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB1FZR1, Periphs);
1093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group2 peripherals)
1097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZR2 DBG_xxxx_STOP  LL_DBGMCU_APB1_GRP2_UnFreezePeriph
1098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_I2C4_STOP (*)
1100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP2_UnFreezePeriph(uint32_t Periphs)
1105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB1FZR2, Periphs);
1107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Freeze APB2 peripherals
1111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB2FZ DBG_TIMx_STOP  LL_DBGMCU_APB2_GRP1_FreezePeriph
1112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
1114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP
1115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM15_STOP
1116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM16_STOP
1117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM17_STOP
1118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM20_STOP (*)
1119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_HRTIM1_STOP (*)
1120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_FreezePeriph(uint32_t Periphs)
1125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 663


1126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(DBGMCU->APB2FZ, Periphs);
1127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Unfreeze APB2 peripherals
1131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll DBGMCU_APB2FZ DBG_TIMx_STOP  LL_DBGMCU_APB2_GRP1_UnFreezePeriph
1132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
1134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP
1135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM15_STOP
1136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM16_STOP
1137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM17_STOP
1138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM20_STOP (*)
1139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_HRTIM1_STOP (*)
1140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_UnFreezePeriph(uint32_t Periphs)
1145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB2FZ, Periphs);
1147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
1151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #if defined(VREFBUF)
1154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_VREFBUF VREFBUF
1155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
1156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable Internal voltage reference
1160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll VREFBUF_CSR  ENVR          LL_VREFBUF_Enable
1161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_VREFBUF_Enable(void)
1164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
1166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable Internal voltage reference
1170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll VREFBUF_CSR  ENVR          LL_VREFBUF_Disable
1171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_VREFBUF_Disable(void)
1174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_ENVR);
1176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Enable high impedance (VREF+pin is high impedance)
1180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll VREFBUF_CSR  HIZ           LL_VREFBUF_EnableHIZ
1181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 664


1183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_VREFBUF_EnableHIZ(void)
1184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   SET_BIT(VREFBUF->CSR, VREFBUF_CSR_HIZ);
1186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Disable high impedance (VREF+pin is internally connected to the voltage reference buffe
1190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll VREFBUF_CSR  HIZ           LL_VREFBUF_DisableHIZ
1191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_VREFBUF_DisableHIZ(void)
1194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   CLEAR_BIT(VREFBUF->CSR, VREFBUF_CSR_HIZ);
1196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Set the Voltage reference scale
1200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll VREFBUF_CSR  VRS           LL_VREFBUF_SetVoltageScaling
1201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Scale This parameter can be one of the following values:
1202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_VREFBUF_VOLTAGE_SCALE0
1203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_VREFBUF_VOLTAGE_SCALE1
1204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_VREFBUF_VOLTAGE_SCALE2
1205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_VREFBUF_SetVoltageScaling(uint32_t Scale)
1208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(VREFBUF->CSR, VREFBUF_CSR_VRS, Scale);
1210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get the Voltage reference scale
1214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll VREFBUF_CSR  VRS           LL_VREFBUF_GetVoltageScaling
1215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be one of the following values:
1216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_VREFBUF_VOLTAGE_SCALE0
1217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_VREFBUF_VOLTAGE_SCALE1
1218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_VREFBUF_VOLTAGE_SCALE2
1219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_VREFBUF_GetVoltageScaling(void)
1221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRS));
1223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Check if Voltage reference buffer is ready
1227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll VREFBUF_CSR  VRR           LL_VREFBUF_IsVREFReady
1228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval State of bit (1 or 0).
1229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_VREFBUF_IsVREFReady(void)
1231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return ((READ_BIT(VREFBUF->CSR, VREFBUF_CSR_VRR) == (VREFBUF_CSR_VRR)) ? 1UL : 0UL);
1233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get the trimming code for VREFBUF calibration
1237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll VREFBUF_CCR  TRIM          LL_VREFBUF_GetTrimming
1238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Between 0 and 0x3F
1239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 665


1240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_VREFBUF_GetTrimming(void)
1241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(VREFBUF->CCR, VREFBUF_CCR_TRIM));
1243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Set the trimming code for VREFBUF calibration (Tune the internal reference buffer volta
1247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll VREFBUF_CCR  TRIM          LL_VREFBUF_SetTrimming
1248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Value Between 0 and 0x3F
1249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_VREFBUF_SetTrimming(uint32_t Value)
1252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   WRITE_REG(VREFBUF->CCR, Value);
1254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @}
1258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** #endif /* VREFBUF */
1260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_FLASH FLASH
1262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @{
1263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Set FLASH Latency
1267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_SetLatency
1268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @param  Latency This parameter can be one of the following values:
1269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
1270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
1271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_2
1272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_3
1273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_4
1274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_5 (*)
1275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_6 (*)
1276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_7 (*)
1277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_8 (*)
1278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_9 (*)
1279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_10 (*)
1280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_11 (*)
1281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_12 (*)
1282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_13 (*)
1283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_14 (*)
1284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_15 (*)
1285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval None
1288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
 5755              		.loc 4 1289 22 view .LVU1916
 5756              	.LBB978:
1290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 5757              		.loc 4 1291 3 view .LVU1917
 5758 0002 3B4A     		ldr	r2, .L124
 5759 0004 1368     		ldr	r3, [r2]
ARM GAS  /tmp/cc85dWdm.s 			page 666


 5760 0006 23F00F03 		bic	r3, r3, #15
 5761 000a 43F00403 		orr	r3, r3, #4
 5762 000e 1360     		str	r3, [r2]
 5763              	.LVL364:
 5764              	.L116:
 5765              		.loc 4 1291 3 is_stmt 0 view .LVU1918
 5766              	.LBE978:
 5767              	.LBE977:
 163:Src/main.c    ****   LL_PWR_EnableRange1BoostMode();
 5768              		.loc 1 163 3 is_stmt 1 discriminator 1 view .LVU1919
 161:Src/main.c    ****   {
 5769              		.loc 1 161 8 discriminator 1 view .LVU1920
 5770              	.LBB979:
 5771              	.LBI979:
1292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** }
1293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** 
1294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** /**
1295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @brief  Get FLASH Latency
1296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_GetLatency
1297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   * @retval Returned value can be one of the following values:
1298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
1299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
1300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_2
1301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_3
1302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_4
1303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_5 (*)
1304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_6 (*)
1305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_7 (*)
1306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_8 (*)
1307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_9 (*)
1308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_10 (*)
1309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_11 (*)
1310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_12 (*)
1311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_13 (*)
1312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_14 (*)
1313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_15 (*)
1314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *
1315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   *         (*) value not defined in all devices.
1316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   */
1317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** __STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
 5772              		.loc 4 1317 26 discriminator 1 view .LVU1921
 5773              	.LBB980:
1318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h **** {
1319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_system.h ****   return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 5774              		.loc 4 1319 3 discriminator 1 view .LVU1922
 5775              		.loc 4 1319 21 is_stmt 0 discriminator 1 view .LVU1923
 5776 0010 374B     		ldr	r3, .L124
 5777 0012 1B68     		ldr	r3, [r3]
 5778              		.loc 4 1319 10 discriminator 1 view .LVU1924
 5779 0014 03F00F03 		and	r3, r3, #15
 5780              	.LBE980:
 5781              	.LBE979:
 161:Src/main.c    ****   {
 5782              		.loc 1 161 8 discriminator 1 view .LVU1925
 5783 0018 042B     		cmp	r3, #4
 5784 001a F9D1     		bne	.L116
 164:Src/main.c    ****   LL_RCC_HSE_Enable();
ARM GAS  /tmp/cc85dWdm.s 			page 667


 5785              		.loc 1 164 3 is_stmt 1 view .LVU1926
 5786              	.LBB981:
 5787              	.LBI981:
 5788              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @file    stm32g4xx_ll_pwr.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief   Header file of PWR LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #ifndef STM32G4xx_LL_PWR_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define STM32G4xx_LL_PWR_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR)
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL PWR
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Private macros ------------------------------------------------------------*/
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Exported types ------------------------------------------------------------*/
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Exported constants --------------------------------------------------------*/
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Constants PWR Exported Constants
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_CLEAR_FLAG Clear Flags Defines
ARM GAS  /tmp/cc85dWdm.s 			page 668


  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_WriteReg function
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CSBF                    PWR_SCR_CSBF
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF                    PWR_SCR_CWUF
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF5                   PWR_SCR_CWUF5
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF4                   PWR_SCR_CWUF4
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF3                   PWR_SCR_CWUF3
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF2                   PWR_SCR_CWUF2
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SCR_CWUF1                   PWR_SCR_CWUF1
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GET_FLAG Get Flags Defines
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_ReadReg function
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUFI                    PWR_SR1_WUFI
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_SBF                     PWR_SR1_SBF
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUF5                    PWR_SR1_WUF5
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUF4                    PWR_SR1_WUF4
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUF3                    PWR_SR1_WUF3
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUF2                    PWR_SR1_WUF2
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR1_WUF1                    PWR_SR1_WUF1
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_SR2_PVMO4)
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_PVMO4                   PWR_SR2_PVMO4
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_SR2_PVMO4 */
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_SR2_PVMO3)
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_PVMO3                   PWR_SR2_PVMO3
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_SR2_PVMO3 */
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_SR2_PVMO2)
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_PVMO2                   PWR_SR2_PVMO2
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_SR2_PVMO2 */
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_SR2_PVMO1)
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_PVMO1                   PWR_SR2_PVMO1
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif /* PWR_SR2_PVMO1 */
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_PVDO                    PWR_SR2_PVDO
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_VOSF                    PWR_SR2_VOSF
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_REGLPF                  PWR_SR2_REGLPF
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_SR2_REGLPS                  PWR_SR2_REGLPS
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_VOLTAGE REGU VOLTAGE
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE1         (PWR_CR1_VOS_0)
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE2         (PWR_CR1_VOS_1)
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_MODE_PWR MODE PWR
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 669


 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_MODE_STOP0                  (PWR_CR1_LPMS_STOP0)
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_MODE_STOP1                  (PWR_CR1_LPMS_STOP1)
 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_MODE_STANDBY                (PWR_CR1_LPMS_STANDBY)
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_MODE_SHUTDOWN               (PWR_CR1_LPMS_SHUTDOWN)
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_PVM_VDDUSB_1 Peripheral voltage monitoring
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR2_PVME1)
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVM_VDDA_COMP               (PWR_CR2_PVME1)     /* Monitoring VDDA vs. x.xV */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR2_PVME2)
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVM_VDDA_FASTDAC            (PWR_CR2_PVME2)     /* Monitoring VDDA vs. x.xV */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR2_PVME3)
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVM_VDDA_ADC                (PWR_CR2_PVME3)     /* Monitoring VDDA vs. 1.62V  */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR2_PVME4)
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVM_VDDA_OPAMP_DAC          (PWR_CR2_PVME4)     /* Monitoring VDDA vs. 1x.xV   */
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #endif
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_PVDLEVEL PVDLEVEL
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_0                  (PWR_CR2_PLS_LEV0)  /* VPVD0 around 2.0 V */
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_1                  (PWR_CR2_PLS_LEV1)  /* VPVD1 around 2.2 V */
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_2                  (PWR_CR2_PLS_LEV2)  /* VPVD2 around 2.4 V */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_3                  (PWR_CR2_PLS_LEV3)  /* VPVD3 around 2.5 V */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_4                  (PWR_CR2_PLS_LEV4)  /* VPVD4 around 2.6 V */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_5                  (PWR_CR2_PLS_LEV5)  /* VPVD5 around 2.8 V */
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_6                  (PWR_CR2_PLS_LEV6)  /* VPVD6 around 2.9 V */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_7                  (PWR_CR2_PLS_LEV7)  /* External input analog voltage   (
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_WAKEUP WAKEUP
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN1                 (PWR_CR3_EWUP1)
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN2                 (PWR_CR3_EWUP2)
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN3                 (PWR_CR3_EWUP3)
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN4                 (PWR_CR3_EWUP4)
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN5                 (PWR_CR3_EWUP5)
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_BATT_CHARG_RESISTOR BATT CHARG RESISTOR
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
ARM GAS  /tmp/cc85dWdm.s 			page 670


 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_BATT_CHARG_RESISTOR_5K      ((uint32_t)0x00000000)
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_BATT_CHARGRESISTOR_1_5K     (PWR_CR4_VBRS)
 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GPIO GPIO
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_A                      ((uint32_t)(&(PWR->PUCRA)))
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_B                      ((uint32_t)(&(PWR->PUCRB)))
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_C                      ((uint32_t)(&(PWR->PUCRC)))
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_D                      ((uint32_t)(&(PWR->PUCRD)))
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_E                      ((uint32_t)(&(PWR->PUCRE)))
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_F                      ((uint32_t)(&(PWR->PUCRF)))
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_G                      ((uint32_t)(&(PWR->PUCRG)))
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GPIO_BIT GPIO BIT
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_0                  ((uint32_t)0x00000001)
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_1                  ((uint32_t)0x00000002)
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_2                  ((uint32_t)0x00000004)
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_3                  ((uint32_t)0x00000008)
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_4                  ((uint32_t)0x00000010)
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_5                  ((uint32_t)0x00000020)
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_6                  ((uint32_t)0x00000040)
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_7                  ((uint32_t)0x00000080)
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_8                  ((uint32_t)0x00000100)
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_9                  ((uint32_t)0x00000200)
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_10                 ((uint32_t)0x00000400)
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_11                 ((uint32_t)0x00000800)
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_12                 ((uint32_t)0x00001000)
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_13                 ((uint32_t)0x00002000)
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_14                 ((uint32_t)0x00004000)
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_15                 ((uint32_t)0x00008000)
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Exported macro ------------------------------------------------------------*/
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Macros PWR Exported Macros
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EM_WRITE_READ Common Write and read registers Macros
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 671


 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Write a value in PWR register
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  __REG__ Register to be written
 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  __VALUE__ Value to be written in the register
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_WriteReg(__REG__, __VALUE__) WRITE_REG(PWR->__REG__, (__VALUE__))
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Read a value in PWR register
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval Register value
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #define LL_PWR_ReadReg(__REG__) READ_REG(PWR->__REG__)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @}
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /* Exported functions --------------------------------------------------------*/
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Functions PWR Exported Functions
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration Configuration
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @{
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Switch the regulator from main mode to low-power mode
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_EnableLowPowerRunMode
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableLowPowerRunMode(void)
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   SET_BIT(PWR->CR1, PWR_CR1_LPR);
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Switch the regulator from low-power mode to main mode
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_DisableLowPowerRunMode
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableLowPowerRunMode(void)
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR);
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Check if the regulator is in low-power mode
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_IsEnabledLowPowerRunMode
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledLowPowerRunMode(void)
ARM GAS  /tmp/cc85dWdm.s 			page 672


 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   uint32_t temp;
 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   temp = READ_BIT(PWR->CR1, PWR_CR1_LPR);
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return ((temp == (PWR_CR1_LPR))?1U:0U);
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Switch from run main mode to run low-power mode.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_EnterLowPowerRunMode
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnterLowPowerRunMode(void)
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   LL_PWR_EnableLowPowerRunMode();
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Switch from run main mode to low-power mode.
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_ExitLowPowerRunMode
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_ExitLowPowerRunMode(void)
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   LL_PWR_DisableLowPowerRunMode();
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Set the main internal regulator output voltage
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          VOS           LL_PWR_SetRegulVoltageScaling
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @param  VoltageScaling This parameter can be one of the following values:
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRegulVoltageScaling(uint32_t VoltageScaling)
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Get the main internal regulator output voltage
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR1          VOS           LL_PWR_GetRegulVoltageScaling
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRegulVoltageScaling(void)
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR1, PWR_CR1_VOS));
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** }
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** 
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** #if defined(PWR_CR5_R1MODE)
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** /**
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @brief  Enable main regulator voltage range 1 boost mode
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @rmtoll CR5          R1MODE        LL_PWR_EnableRange1BoostMode
ARM GAS  /tmp/cc85dWdm.s 			page 673


 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   * @retval None
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   */
 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableRange1BoostMode(void)
 5789              		.loc 15 341 22 view .LVU1927
 5790              	.LBB982:
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h **** {
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 5791              		.loc 15 343 3 view .LVU1928
 5792 001c 354A     		ldr	r2, .L124+4
 5793 001e D2F88030 		ldr	r3, [r2, #128]
 5794 0022 23F48073 		bic	r3, r3, #256
 5795 0026 C2F88030 		str	r3, [r2, #128]
 5796              	.LBE982:
 5797              	.LBE981:
 165:Src/main.c    ****    /* Wait till HSE is ready */
 5798              		.loc 1 165 3 view .LVU1929
 5799              	.LBB983:
 5800              	.LBI983:
 944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 5801              		.loc 7 944 22 view .LVU1930
 5802              	.LBB984:
 946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5803              		.loc 7 946 3 view .LVU1931
 5804 002a 02F5D032 		add	r2, r2, #106496
 5805 002e 1368     		ldr	r3, [r2]
 5806 0030 43F48033 		orr	r3, r3, #65536
 5807 0034 1360     		str	r3, [r2]
 5808              	.L117:
 5809              	.LBE984:
 5810              	.LBE983:
 169:Src/main.c    **** 
 5811              		.loc 1 169 3 discriminator 1 view .LVU1932
 167:Src/main.c    ****   {
 5812              		.loc 1 167 8 discriminator 1 view .LVU1933
 5813              	.LBB985:
 5814              	.LBI985:
 964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 5815              		.loc 7 964 26 discriminator 1 view .LVU1934
 5816              	.LBB986:
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5817              		.loc 7 966 3 discriminator 1 view .LVU1935
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5818              		.loc 7 966 12 is_stmt 0 discriminator 1 view .LVU1936
 5819 0036 304B     		ldr	r3, .L124+8
 5820 0038 1B68     		ldr	r3, [r3]
 966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5821              		.loc 7 966 71 discriminator 1 view .LVU1937
 5822 003a 13F4003F 		tst	r3, #131072
 5823 003e FAD0     		beq	.L117
 5824              	.LBE986:
 5825              	.LBE985:
 171:Src/main.c    ****   LL_RCC_PLL_ConfigDomain_ADC(LL_RCC_PLLSOURCE_HSE, LL_RCC_PLLM_DIV_2, 85, LL_RCC_PLLP_DIV_8);
 5826              		.loc 1 171 3 is_stmt 1 view .LVU1938
 5827              	.LVL365:
 5828              	.LBB987:
 5829              	.LBI987:
1697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
ARM GAS  /tmp/cc85dWdm.s 			page 674


1698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(QUADSPI)
1700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure QUADSPI clock source
1702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR2         QSPISEL     LL_RCC_SetQUADSPIClockSource
1703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_QUADSPI_CLKSOURCE_SYSCLK
1705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_QUADSPI_CLKSOURCE_HSI
1706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_QUADSPI_CLKSOURCE_PLL
1707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetQUADSPIClockSource(uint32_t Source)
1710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR2, RCC_CCIPR2_QSPISEL, Source);
1712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* QUADSPI */
1714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get USARTx clock source
1717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        USARTxSEL     LL_RCC_GetUSARTClockSource
1718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  USARTx This parameter can be one of the following values:
1719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE
1720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE
1721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE
1722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK2
1724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK
1725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI
1726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE
1727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1
1728:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK
1729:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI
1730:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE
1731:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_PCLK1
1732:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_SYSCLK
1733:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_HSI
1734:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_LSE
1735:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1736:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSARTClockSource(uint32_t USARTx)
1737:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1738:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, USARTx) | (USARTx << 16U));
1739:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1740:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1741:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(UART4)
1742:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1743:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get UARTx clock source
1744:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        UARTxSEL      LL_RCC_GetUARTClockSource
1745:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  UARTx This parameter can be one of the following values:
1746:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE (*)
1747:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE (*)
1748:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1749:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_PCLK1 (*)
1750:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_SYSCLK (*)
1751:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_HSI (*)
1752:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART4_CLKSOURCE_LSE (*)
1753:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_PCLK1 (*)
1754:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_SYSCLK (*)
ARM GAS  /tmp/cc85dWdm.s 			page 675


1755:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_HSI (*)
1756:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_UART5_CLKSOURCE_LSE (*)
1757:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
1758:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1759:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1760:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUARTClockSource(uint32_t UARTx)
1761:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1762:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, UARTx) | (UARTx << 16U));
1763:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1764:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* UART4 */
1765:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1766:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1767:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get LPUARTx clock source
1768:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        LPUART1SEL    LL_RCC_GetLPUARTClockSource
1769:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  LPUARTx This parameter can be one of the following values:
1770:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE
1771:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1772:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_PCLK1
1773:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_SYSCLK
1774:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_HSI
1775:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPUART1_CLKSOURCE_LSE
1776:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1777:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetLPUARTClockSource(uint32_t LPUARTx)
1778:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1779:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, LPUARTx));
1780:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1781:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1782:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1783:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get I2Cx clock source
1784:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        I2CxSEL       LL_RCC_GetI2CClockSource
1785:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  I2Cx This parameter can be one of the following values:
1786:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE
1787:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE
1788:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE
1789:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE (*)
1790:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
1791:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1792:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1793:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_PCLK1
1794:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_SYSCLK
1795:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_HSI
1796:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_PCLK1
1797:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_SYSCLK
1798:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C2_CLKSOURCE_HSI
1799:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_PCLK1
1800:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_SYSCLK
1801:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C3_CLKSOURCE_HSI
1802:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_PCLK1 (*)
1803:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_SYSCLK (*)
1804:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C4_CLKSOURCE_HSI (*)
1805:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
1806:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1807:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****  */
1808:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetI2CClockSource(uint32_t I2Cx)
1809:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1810:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   __IO const uint32_t *reg = (__IO uint32_t *)(uint32_t)(RCC_BASE + 0x88U + (I2Cx >> 24U));
1811:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)((READ_BIT(*reg, 3UL << ((I2Cx & 0x001F0000U) >> 16U)) >> ((I2Cx & 0x001F0000U) 
ARM GAS  /tmp/cc85dWdm.s 			page 676


1812:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1813:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1814:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1815:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get LPTIMx clock source
1816:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        LPTIMxSEL     LL_RCC_GetLPTIMClockSource
1817:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  LPTIMx This parameter can be one of the following values:
1818:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE
1819:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1820:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_PCLK1
1821:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSI
1822:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_HSI
1823:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LPTIM1_CLKSOURCE_LSE
1824:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1825:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetLPTIMClockSource(uint32_t LPTIMx)
1826:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1827:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, LPTIMx));
1828:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1829:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1830:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1831:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get SAIx clock source
1832:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        SAI1SEL       LL_RCC_GetSAIClockSource
1833:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  SAIx This parameter can be one of the following values:
1834:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE
1835:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
1836:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1837:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1838:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_SYSCLK
1839:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PLL
1840:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_PIN
1841:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SAI1_CLKSOURCE_HSI
1842:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
1843:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1844:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1845:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSAIClockSource(uint32_t SAIx)
1846:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1847:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, SAIx));
1848:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1849:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1850:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1851:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get I2Sx clock source
1852:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        I2S23SEL      LL_RCC_GetI2SClockSource
1853:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  I2Sx This parameter can be one of the following values:
1854:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S_CLKSOURCE
1855:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1856:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S_CLKSOURCE_SYSCLK
1857:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S_CLKSOURCE_PLL
1858:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S_CLKSOURCE_PIN
1859:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S_CLKSOURCE_HSI
1860:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1861:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetI2SClockSource(uint32_t I2Sx)
1862:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1863:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, I2Sx));
1864:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1865:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1866:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(FDCAN1)
1867:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1868:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get FDCANx clock source
ARM GAS  /tmp/cc85dWdm.s 			page 677


1869:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        FDCANSEL      LL_RCC_GetFDCANClockSource
1870:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  FDCANx This parameter can be one of the following values:
1871:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_FDCAN_CLKSOURCE
1872:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1873:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_FDCAN_CLKSOURCE_HSE
1874:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_FDCAN_CLKSOURCE_PLL
1875:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_FDCAN_CLKSOURCE_PCLK1
1876:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1877:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1878:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetFDCANClockSource(uint32_t FDCANx)
1879:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1880:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, FDCANx));
1881:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1882:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* FDCAN1 */
1883:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1884:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1885:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get RNGx clock source
1886:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        CLK48SEL      LL_RCC_GetRNGClockSource
1887:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  RNGx This parameter can be one of the following values:
1888:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE
1889:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1890:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_HSI48
1891:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RNG_CLKSOURCE_PLL
1892:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1893:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRNGClockSource(uint32_t RNGx)
1894:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1895:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, RNGx));
1896:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1897:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1898:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1899:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get USBx clock source
1900:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        CLK48SEL      LL_RCC_GetUSBClockSource
1901:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  USBx This parameter can be one of the following values:
1902:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE
1903:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1904:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_HSI48
1905:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL
1906:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1907:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSBClockSource(uint32_t USBx)
1908:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1909:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR, USBx));
1910:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1911:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1912:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1913:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get ADCx clock source
1914:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR        ADCSEL        LL_RCC_GetADCClockSource
1915:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  ADCx This parameter can be one of the following values:
1916:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC12_CLKSOURCE
1917:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC345_CLKSOURCE        (*)
1918:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1919:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC12_CLKSOURCE_NONE
1920:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC12_CLKSOURCE_PLL
1921:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC12_CLKSOURCE_SYSCLK
1922:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC345_CLKSOURCE_NONE   (*)
1923:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC345_CLKSOURCE_PLL    (*)
1924:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC345_CLKSOURCE_SYSCLK (*)
1925:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *
ARM GAS  /tmp/cc85dWdm.s 			page 678


1926:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1927:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1928:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetADCClockSource(uint32_t ADCx)
1929:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1930:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)((READ_BIT(RCC->CCIPR, 3UL << ((ADCx & 0x001F0000U) >> 16U)) >> ((ADCx & 0x001F0
1931:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1932:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1933:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #if defined(QUADSPI)
1934:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1935:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get QUADSPI clock source
1936:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CCIPR2         QSPISEL     LL_RCC_GetQUADSPIClockSource
1937:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  QUADSPIx This parameter can be one of the following values:
1938:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_QUADSPI_CLKSOURCE
1939:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1940:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_QUADSPI_CLKSOURCE_SYSCLK
1941:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_QUADSPI_CLKSOURCE_HSI
1942:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_QUADSPI_CLKSOURCE_PLL
1943:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1944:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetQUADSPIClockSource(uint32_t QUADSPIx)
1945:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1946:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CCIPR2, QUADSPIx));
1947:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1948:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** #endif /* QUADSPI */
1949:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1950:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
1951:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1952:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1953:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_RTC RTC
1954:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
1955:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1956:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1957:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1958:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Set RTC Clock Source
1959:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note Once the RTC clock source has been selected, it cannot be changed anymore unless
1960:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       the Backup domain is reset, or unless a failure is detected on LSE (LSECSSD is
1961:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       set). The BDRST bit can be used to reset them.
1962:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_SetRTCClockSource
1963:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1964:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1965:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1966:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1967:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV32
1968:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1969:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1970:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTCClockSource(uint32_t Source)
1971:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1972:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_RTCSEL, Source);
1973:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1974:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1975:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1976:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get RTC Clock Source
1977:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_GetRTCClockSource
1978:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1979:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1980:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1981:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1982:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV32
ARM GAS  /tmp/cc85dWdm.s 			page 679


1983:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1984:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTCClockSource(void)
1985:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1986:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL));
1987:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1988:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1989:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
1990:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable RTC
1991:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_EnableRTC
1992:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
1993:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
1994:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_EnableRTC(void)
1995:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
1996:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
1997:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
1998:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
1999:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2000:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable RTC
2001:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_DisableRTC
2002:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2003:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2004:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_DisableRTC(void)
2005:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2006:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
2007:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2008:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2009:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2010:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Check if RTC has been enabled or not
2011:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_IsEnabledRTC
2012:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2014:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_IsEnabledRTC(void)
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2016:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return ((READ_BIT(RCC->BDCR, RCC_BDCR_RTCEN) == (RCC_BDCR_RTCEN)) ? 1UL : 0UL);
2017:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2018:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2019:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2020:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Force the Backup domain reset
2021:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ForceBackupDomainReset
2022:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2023:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2024:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ForceBackupDomainReset(void)
2025:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2026:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_BDRST);
2027:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2028:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2029:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2030:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Release the Backup domain reset
2031:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ReleaseBackupDomainReset
2032:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2033:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2034:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ReleaseBackupDomainReset(void)
2035:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2036:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_BDRST);
2037:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2038:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2039:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
ARM GAS  /tmp/cc85dWdm.s 			page 680


2040:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @}
2041:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2042:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2043:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2044:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_PLL PLL
2045:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @{
2046:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2047:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2048:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2049:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable PLL
2050:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Enable
2051:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2052:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Enable(void)
2054:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_PLLON);
2056:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2057:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2058:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2059:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable PLL
2060:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note Cannot be disabled if the PLL clock is used as the system clock
2061:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Disable
2062:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2063:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2064:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Disable(void)
2065:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2066:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
2067:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2068:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2069:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2070:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Check if PLL Ready
2071:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
2072:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2073:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
2075:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY)) ? 1UL : 0UL);
2077:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2078:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2079:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2080:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure PLL used for SYSCLK Domain
2081:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note PLL Source and PLLM Divider can be written only when PLL
2082:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       is disabled.
2083:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note PLLN/PLLR can be written only when PLL is disabled.
2084:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLL_ConfigDomain_SYS\n
2085:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         PLLCFGR      PLLM          LL_RCC_PLL_ConfigDomain_SYS\n
2086:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         PLLCFGR      PLLN          LL_RCC_PLL_ConfigDomain_SYS\n
2087:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         PLLCFGR      PLLR          LL_RCC_PLL_ConfigDomain_SYS
2088:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2089:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_NONE
2090:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
2091:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
2092:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  PLLM This parameter can be one of the following values:
2093:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
2094:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
2095:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
2096:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
ARM GAS  /tmp/cc85dWdm.s 			page 681


2097:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
2098:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
2099:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
2100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
2101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
2102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
2103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
2104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
2105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
2106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
2107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
2108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
2109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  PLLN Between Min_Data = 8 and Max_Data = 127
2110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  PLLR This parameter can be one of the following values:
2111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_2
2112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_4
2113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_6
2114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_8
2115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_SYS(uint32_t Source, uint32_t PLLM, uint32_t PLLN, uin
 5830              		.loc 7 2117 22 view .LVU1939
 5831              	.LBB988:
2118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_P
 5832              		.loc 7 2119 3 view .LVU1940
 5833 0040 2D4B     		ldr	r3, .L124+8
 5834 0042 D968     		ldr	r1, [r3, #12]
 5835 0044 2D4A     		ldr	r2, .L124+12
 5836 0046 0A40     		ands	r2, r2, r1
 5837 0048 42F4AA42 		orr	r2, r2, #21760
 5838 004c 42F01302 		orr	r2, r2, #19
 5839 0050 DA60     		str	r2, [r3, #12]
 5840              	.LVL366:
 5841              		.loc 7 2119 3 is_stmt 0 view .LVU1941
 5842              	.LBE988:
 5843              	.LBE987:
 172:Src/main.c    ****   LL_RCC_PLL_EnableDomain_SYS();
 5844              		.loc 1 172 3 is_stmt 1 view .LVU1942
 5845              	.LBB989:
 5846              	.LBI989:
2120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****              Source | PLLM | (PLLN << RCC_PLLCFGR_PLLN_Pos) | PLLR);
2121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure PLL used for ADC domain clock
2125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note PLL Source and PLLM Divider can be written only when PLL
2126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       is disabled.
2127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note PLLN/PLLP can be written only when PLL is disabled.
2128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLL_ConfigDomain_ADC\n
2129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         PLLCFGR      PLLM          LL_RCC_PLL_ConfigDomain_ADC\n
2130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         PLLCFGR      PLLN          LL_RCC_PLL_ConfigDomain_ADC\n
2131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         PLLCFGR      PLLPDIV       LL_RCC_PLL_ConfigDomain_ADC
2132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_NONE
2134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
2135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
ARM GAS  /tmp/cc85dWdm.s 			page 682


2136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  PLLM This parameter can be one of the following values:
2137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
2138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
2139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
2140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
2141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
2142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
2143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
2144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
2145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
2146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
2147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
2148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
2149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
2150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
2151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
2152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
2153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  PLLN Between Min_Data = 8 and Max_Data = 127
2154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  PLLP This parameter can be one of the following values:
2155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_2
2156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_3
2157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_4
2158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_5
2159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_6
2160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_7
2161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_8
2162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_9
2163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_10
2164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_11
2165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_12
2166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_13
2167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_14
2168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_15
2169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_16
2170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_17
2171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_18
2172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_19
2173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_20
2174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_21
2175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_22
2176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_23
2177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_24
2178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_25
2179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_26
2180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_27
2181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_28
2182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_29
2183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_30
2184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_31
2185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_ADC(uint32_t Source, uint32_t PLLM, uint32_t PLLN, uin
 5847              		.loc 7 2187 22 view .LVU1943
 5848              	.LBB990:
2188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_P
 5849              		.loc 7 2189 3 view .LVU1944
ARM GAS  /tmp/cc85dWdm.s 			page 683


 5850 0052 DA68     		ldr	r2, [r3, #12]
 5851 0054 2A49     		ldr	r1, .L124+16
 5852 0056 1140     		ands	r1, r1, r2
 5853 0058 2A4A     		ldr	r2, .L124+20
 5854 005a 0A43     		orrs	r2, r2, r1
 5855 005c DA60     		str	r2, [r3, #12]
 5856              	.LVL367:
 5857              		.loc 7 2189 3 is_stmt 0 view .LVU1945
 5858              	.LBE990:
 5859              	.LBE989:
 173:Src/main.c    ****   LL_RCC_PLL_EnableDomain_ADC();
 5860              		.loc 1 173 3 is_stmt 1 view .LVU1946
 5861              	.LBB991:
 5862              	.LBI991:
2190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****              Source | PLLM | (PLLN << RCC_PLLCFGR_PLLN_Pos) | PLLP);
2191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure PLL used for 48Mhz domain clock
2195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note PLL Source and PLLM Divider can be written only when PLL,
2196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       is disabled.
2197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note PLLN/PLLQ can be written only when PLL is disabled.
2198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note This  can be selected for USB, RNG
2199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLL_ConfigDomain_48M\n
2200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         PLLCFGR      PLLM          LL_RCC_PLL_ConfigDomain_48M\n
2201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         PLLCFGR      PLLN          LL_RCC_PLL_ConfigDomain_48M\n
2202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         PLLCFGR      PLLQ          LL_RCC_PLL_ConfigDomain_48M
2203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_NONE
2205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
2206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
2207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  PLLM This parameter can be one of the following values:
2208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
2209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
2210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
2211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
2212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
2213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
2214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
2215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
2216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
2217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
2218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
2219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
2220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
2221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
2222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
2223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
2224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  PLLN Between Min_Data = 8 and Max_Data = 127
2225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param  PLLQ This parameter can be one of the following values:
2226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_2
2227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_4
2228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_6
2229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_8
2230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_48M(uint32_t Source, uint32_t PLLM, uint32_t PLLN, uin
ARM GAS  /tmp/cc85dWdm.s 			page 684


2233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_P
2235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****              Source | PLLM | (PLLN << RCC_PLLCFGR_PLLN_Pos) | PLLQ);
2236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Configure PLL clock source
2240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLL_SetMainSource
2241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @param PLLSource This parameter can be one of the following values:
2242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_NONE
2243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
2244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
2245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_SetMainSource(uint32_t PLLSource)
2248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PLLSource);
2250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get the oscillator used as PLL clock source.
2254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLSRC        LL_RCC_PLL_GetMainSource
2255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_NONE
2257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
2258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
2259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetMainSource(void)
2261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC));
2263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get Main PLL multiplication factor for VCO
2267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLN          LL_RCC_PLL_GetN
2268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Between Min_Data = 8 and Max_Data = 127
2269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetN(void)
2271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >>  RCC_PLLCFGR_PLLN_Pos);
2273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get Main PLL division factor for PLLP
2277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note Used for PLLADCCLK (ADC clock)
2278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLPDIV       LL_RCC_PLL_GetP\n
2279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLP          LL_RCC_PLL_GetP
2280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_2
2282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_3
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_4
2284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_5
2285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_6
2286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_7
2287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_8
2288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_9
2289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_10
ARM GAS  /tmp/cc85dWdm.s 			page 685


2290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_11
2291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_12
2292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_13
2293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_14
2294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_15
2295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_16
2296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_17
2297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_18
2298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_19
2299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_20
2300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_21
2301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_22
2302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_23
2303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_24
2304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_25
2305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_26
2306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_27
2307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_28
2308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_29
2309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_30
2310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_31
2311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetP(void)
2313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t) ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) != 0U) ? READ_BIT(RCC->PLLCFGR, R
2315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get Main PLL division factor for PLLQ
2319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note Used for PLL48M1CLK selected for USB, RNG (48 MHz clock)
2320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLQ          LL_RCC_PLL_GetQ
2321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_2
2323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_4
2324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_6
2325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_8
2326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetQ(void)
2328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ));
2330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get Main PLL division factor for PLLR
2334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note Used for PLLCLK (system clock)
2335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLR          LL_RCC_PLL_GetR
2336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_2
2338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_4
2339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_6
2340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_8
2341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetR(void)
2343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR));
2345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
ARM GAS  /tmp/cc85dWdm.s 			page 686


2347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Get Division factor for the main PLL and other PLL
2349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLM          LL_RCC_PLL_GetDivider
2350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
2352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
2353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
2354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
2355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
2356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
2357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
2358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
2359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9
2360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10
2361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11
2362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12
2363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13
2364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14
2365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15
2366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16
2367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_GetDivider(void)
2369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM));
2371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable PLL output mapped on ADC domain clock
2375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLPEN        LL_RCC_PLL_EnableDomain_ADC
2376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_EnableDomain_ADC(void)
2379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPEN);
2381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable PLL output mapped on ADC domain clock
2385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note Cannot be disabled if the PLL clock is used as the system
2386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       clock
2387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note In order to save power, when the PLLCLK  of the PLL is
2388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       not used,  should be 0
2389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLPEN        LL_RCC_PLL_DisableDomain_ADC
2390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_DisableDomain_ADC(void)
2393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPEN);
2395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Check if PLL output mapped on ADC domain clock is enabled
2399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLPEN        LL_RCC_PLL_IsEnabledDomain_ADC
2400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_IsEnabledDomain_ADC(void)
2403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
ARM GAS  /tmp/cc85dWdm.s 			page 687


2404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPEN) == (RCC_PLLCFGR_PLLPEN)) ? 1UL : 0UL);
2405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable PLL output mapped on 48MHz domain clock
2409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLQEN        LL_RCC_PLL_EnableDomain_48M
2410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_EnableDomain_48M(void)
2413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQEN);
2415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Disable PLL output mapped on 48MHz domain clock
2419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note Cannot be disabled if the PLL clock is used as the system
2420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       clock
2421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @note In order to save power, when the PLLCLK  of the PLL is
2422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   *       not used,  should be 0
2423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLQEN        LL_RCC_PLL_DisableDomain_48M
2424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_DisableDomain_48M(void)
2427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   CLEAR_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQEN);
2429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Check if PLL output mapped on 48MHz domain clock is enabled
2433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLQEN        LL_RCC_PLL_IsEnabledDomain_48M
2434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_IsEnabledDomain_48M(void)
2437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   return ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQEN) == (RCC_PLLCFGR_PLLQEN)) ? 1UL : 0UL);
2439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
2440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** 
2441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** /**
2442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @brief  Enable PLL output mapped on SYSCLK domain
2443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @rmtoll PLLCFGR      PLLREN        LL_RCC_PLL_EnableDomain_SYS
2444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   * @retval None
2445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   */
2446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_EnableDomain_SYS(void)
 5863              		.loc 7 2446 22 view .LVU1947
 5864              	.LBB992:
2447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
2448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h ****   SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLREN);
 5865              		.loc 7 2448 3 view .LVU1948
 5866 005e DA68     		ldr	r2, [r3, #12]
 5867 0060 42F08072 		orr	r2, r2, #16777216
 5868 0064 DA60     		str	r2, [r3, #12]
 5869              	.LBE992:
 5870              	.LBE991:
 174:Src/main.c    ****   LL_RCC_PLL_Enable();
 5871              		.loc 1 174 3 view .LVU1949
 5872              	.LBB993:
 5873              	.LBI993:
ARM GAS  /tmp/cc85dWdm.s 			page 688


2378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 5874              		.loc 7 2378 22 view .LVU1950
 5875              	.LBB994:
2380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5876              		.loc 7 2380 3 view .LVU1951
 5877 0066 DA68     		ldr	r2, [r3, #12]
 5878 0068 42F48032 		orr	r2, r2, #65536
 5879 006c DA60     		str	r2, [r3, #12]
 5880              	.LBE994:
 5881              	.LBE993:
 175:Src/main.c    ****    /* Wait till PLL is ready */
 5882              		.loc 1 175 3 view .LVU1952
 5883              	.LBB995:
 5884              	.LBI995:
2053:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 5885              		.loc 7 2053 22 view .LVU1953
 5886              	.LBB996:
2055:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5887              		.loc 7 2055 3 view .LVU1954
 5888 006e 1A68     		ldr	r2, [r3]
 5889 0070 42F08072 		orr	r2, r2, #16777216
 5890 0074 1A60     		str	r2, [r3]
 5891              	.L118:
 5892              	.LBE996:
 5893              	.LBE995:
 179:Src/main.c    **** 
 5894              		.loc 1 179 3 discriminator 1 view .LVU1955
 177:Src/main.c    ****   {
 5895              		.loc 1 177 8 discriminator 1 view .LVU1956
 5896              	.LBB997:
 5897              	.LBI997:
2074:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 5898              		.loc 7 2074 26 discriminator 1 view .LVU1957
 5899              	.LBB998:
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5900              		.loc 7 2076 3 discriminator 1 view .LVU1958
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5901              		.loc 7 2076 12 is_stmt 0 discriminator 1 view .LVU1959
 5902 0076 204B     		ldr	r3, .L124+8
 5903 0078 1B68     		ldr	r3, [r3]
2076:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5904              		.loc 7 2076 71 discriminator 1 view .LVU1960
 5905 007a 13F0007F 		tst	r3, #33554432
 5906 007e FAD0     		beq	.L118
 5907              	.LBE998:
 5908              	.LBE997:
 181:Src/main.c    ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_2);
 5909              		.loc 1 181 3 is_stmt 1 view .LVU1961
 5910              	.LVL368:
 5911              	.LBB999:
 5912              	.LBI999:
1340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 5913              		.loc 7 1340 22 view .LVU1962
 5914              	.LBB1000:
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5915              		.loc 7 1342 3 view .LVU1963
 5916 0080 1D4A     		ldr	r2, .L124+8
ARM GAS  /tmp/cc85dWdm.s 			page 689


 5917 0082 9368     		ldr	r3, [r2, #8]
 5918 0084 43F00303 		orr	r3, r3, #3
 5919 0088 9360     		str	r3, [r2, #8]
 5920              	.LVL369:
1342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5921              		.loc 7 1342 3 is_stmt 0 view .LVU1964
 5922              	.LBE1000:
 5923              	.LBE999:
 182:Src/main.c    ****    /* Wait till System clock is ready */
 5924              		.loc 1 182 3 is_stmt 1 view .LVU1965
 5925              	.LBB1001:
 5926              	.LBI1001:
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 5927              		.loc 7 1373 22 view .LVU1966
 5928              	.LBB1002:
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5929              		.loc 7 1375 3 view .LVU1967
 5930 008a 9368     		ldr	r3, [r2, #8]
 5931 008c 23F0F003 		bic	r3, r3, #240
 5932 0090 43F08003 		orr	r3, r3, #128
 5933 0094 9360     		str	r3, [r2, #8]
 5934              	.LVL370:
 5935              	.L119:
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5936              		.loc 7 1375 3 is_stmt 0 view .LVU1968
 5937              	.LBE1002:
 5938              	.LBE1001:
 186:Src/main.c    **** 
 5939              		.loc 1 186 3 is_stmt 1 discriminator 1 view .LVU1969
 184:Src/main.c    ****   {
 5940              		.loc 1 184 8 discriminator 1 view .LVU1970
 5941              	.LBB1003:
 5942              	.LBI1003:
1353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 5943              		.loc 7 1353 26 discriminator 1 view .LVU1971
 5944              	.LBB1004:
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5945              		.loc 7 1355 3 discriminator 1 view .LVU1972
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5946              		.loc 7 1355 21 is_stmt 0 discriminator 1 view .LVU1973
 5947 0096 184B     		ldr	r3, .L124+8
 5948 0098 9B68     		ldr	r3, [r3, #8]
1355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5949              		.loc 7 1355 10 discriminator 1 view .LVU1974
 5950 009a 03F00C03 		and	r3, r3, #12
 5951              	.LBE1004:
 5952              	.LBE1003:
 184:Src/main.c    ****   {
 5953              		.loc 1 184 8 discriminator 1 view .LVU1975
 5954 009e 0C2B     		cmp	r3, #12
 5955 00a0 F9D1     		bne	.L119
 189:Src/main.c    ****   DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 5956              		.loc 1 189 3 is_stmt 1 view .LVU1976
 189:Src/main.c    ****   DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 5957              		.loc 1 189 20 is_stmt 0 view .LVU1977
 5958 00a2 194A     		ldr	r2, .L124+24
 5959 00a4 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/cc85dWdm.s 			page 690


 5960 00a6 43F08073 		orr	r3, r3, #16777216
 5961 00aa D360     		str	r3, [r2, #12]
 190:Src/main.c    ****   DWT->CYCCNT = 0;
 5962              		.loc 1 190 3 is_stmt 1 view .LVU1978
 190:Src/main.c    ****   DWT->CYCCNT = 0;
 5963              		.loc 1 190 13 is_stmt 0 view .LVU1979
 5964 00ac 174B     		ldr	r3, .L124+28
 5965 00ae 1A68     		ldr	r2, [r3]
 5966 00b0 42F00102 		orr	r2, r2, #1
 5967 00b4 1A60     		str	r2, [r3]
 191:Src/main.c    ****   while(DWT->CYCCNT < 100);
 5968              		.loc 1 191 3 is_stmt 1 view .LVU1980
 191:Src/main.c    ****   while(DWT->CYCCNT < 100);
 5969              		.loc 1 191 15 is_stmt 0 view .LVU1981
 5970 00b6 0022     		movs	r2, #0
 5971 00b8 5A60     		str	r2, [r3, #4]
 192:Src/main.c    ****   /* Set AHB prescaler*/
 5972              		.loc 1 192 3 is_stmt 1 view .LVU1982
 5973              	.L120:
 192:Src/main.c    ****   /* Set AHB prescaler*/
 5974              		.loc 1 192 27 discriminator 1 view .LVU1983
 192:Src/main.c    ****   /* Set AHB prescaler*/
 5975              		.loc 1 192 8 discriminator 1 view .LVU1984
 192:Src/main.c    ****   /* Set AHB prescaler*/
 5976              		.loc 1 192 12 is_stmt 0 discriminator 1 view .LVU1985
 5977 00ba 144B     		ldr	r3, .L124+28
 5978 00bc 5B68     		ldr	r3, [r3, #4]
 192:Src/main.c    ****   /* Set AHB prescaler*/
 5979              		.loc 1 192 8 discriminator 1 view .LVU1986
 5980 00be 632B     		cmp	r3, #99
 5981 00c0 FBD9     		bls	.L120
 194:Src/main.c    ****   LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);
 5982              		.loc 1 194 3 is_stmt 1 view .LVU1987
 5983              	.LVL371:
 5984              	.LBB1005:
 5985              	.LBI1005:
1373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 5986              		.loc 7 1373 22 view .LVU1988
 5987              	.LBB1006:
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5988              		.loc 7 1375 3 view .LVU1989
 5989 00c2 0D4B     		ldr	r3, .L124+8
 5990 00c4 9A68     		ldr	r2, [r3, #8]
 5991 00c6 22F0F002 		bic	r2, r2, #240
 5992 00ca 9A60     		str	r2, [r3, #8]
 5993              	.LVL372:
1375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 5994              		.loc 7 1375 3 is_stmt 0 view .LVU1990
 5995              	.LBE1006:
 5996              	.LBE1005:
 195:Src/main.c    ****   LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
 5997              		.loc 1 195 3 is_stmt 1 view .LVU1991
 5998              	.LBB1007:
 5999              	.LBI1007:
1389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 6000              		.loc 7 1389 22 view .LVU1992
 6001              	.LBB1008:
ARM GAS  /tmp/cc85dWdm.s 			page 691


1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 6002              		.loc 7 1391 3 view .LVU1993
 6003 00cc 9A68     		ldr	r2, [r3, #8]
 6004 00ce 22F4E062 		bic	r2, r2, #1792
 6005 00d2 9A60     		str	r2, [r3, #8]
 6006              	.LVL373:
1391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 6007              		.loc 7 1391 3 is_stmt 0 view .LVU1994
 6008              	.LBE1008:
 6009              	.LBE1007:
 196:Src/main.c    ****   LL_SetSystemCoreClock(170000000);
 6010              		.loc 1 196 3 is_stmt 1 view .LVU1995
 6011              	.LBB1009:
 6012              	.LBI1009:
1405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** {
 6013              		.loc 7 1405 22 view .LVU1996
 6014              	.LBB1010:
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 6015              		.loc 7 1407 3 view .LVU1997
 6016 00d4 9A68     		ldr	r2, [r3, #8]
 6017 00d6 22F46052 		bic	r2, r2, #14336
 6018 00da 9A60     		str	r2, [r3, #8]
 6019              	.LVL374:
1407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_rcc.h **** }
 6020              		.loc 7 1407 3 is_stmt 0 view .LVU1998
 6021              	.LBE1010:
 6022              	.LBE1009:
 197:Src/main.c    **** 
 6023              		.loc 1 197 3 is_stmt 1 view .LVU1999
 6024 00dc 0C48     		ldr	r0, .L124+32
 6025 00de FFF7FEFF 		bl	LL_SetSystemCoreClock
 6026              	.LVL375:
 200:Src/main.c    ****   {
 6027              		.loc 1 200 3 view .LVU2000
 200:Src/main.c    ****   {
 6028              		.loc 1 200 7 is_stmt 0 view .LVU2001
 6029 00e2 0420     		movs	r0, #4
 6030 00e4 FFF7FEFF 		bl	HAL_InitTick
 6031              	.LVL376:
 200:Src/main.c    ****   {
 6032              		.loc 1 200 6 view .LVU2002
 6033 00e8 00B9     		cbnz	r0, .L123
 204:Src/main.c    **** 
 6034              		.loc 1 204 1 view .LVU2003
 6035 00ea 08BD     		pop	{r3, pc}
 6036              	.L123:
 202:Src/main.c    ****   }
 6037              		.loc 1 202 5 is_stmt 1 view .LVU2004
 6038 00ec FFF7FEFF 		bl	Error_Handler
 6039              	.LVL377:
 6040              	.L125:
 6041              		.align	2
 6042              	.L124:
 6043 00f0 00200240 		.word	1073881088
 6044 00f4 00700040 		.word	1073770496
 6045 00f8 00100240 		.word	1073876992
 6046 00fc 0C80FFF9 		.word	-100696052
ARM GAS  /tmp/cc85dWdm.s 			page 692


 6047 0100 0C80FF07 		.word	134184972
 6048 0104 13550040 		.word	1073763603
 6049 0108 F0ED00E0 		.word	-536810000
 6050 010c 001000E0 		.word	-536866816
 6051 0110 80FE210A 		.word	170000000
 6052              		.cfi_endproc
 6053              	.LFE1623:
 6055              		.section	.text.main,"ax",%progbits
 6056              		.align	1
 6057              		.global	main
 6058              		.syntax unified
 6059              		.thumb
 6060              		.thumb_func
 6061              		.fpu fpv4-sp-d16
 6063              	main:
 6064              	.LFB1622:
  83:Src/main.c    ****   /* USER CODE BEGIN 1 */
 6065              		.loc 1 83 1 view -0
 6066              		.cfi_startproc
 6067              		@ args = 0, pretend = 0, frame = 0
 6068              		@ frame_needed = 0, uses_anonymous_args = 0
 6069 0000 08B5     		push	{r3, lr}
 6070              		.cfi_def_cfa_offset 8
 6071              		.cfi_offset 3, -8
 6072              		.cfi_offset 14, -4
  91:Src/main.c    **** 
 6073              		.loc 1 91 3 view .LVU2006
 6074 0002 FFF7FEFF 		bl	HAL_Init
 6075              	.LVL378:
  98:Src/main.c    **** 
 6076              		.loc 1 98 3 view .LVU2007
 6077 0006 FFF7FEFF 		bl	SystemClock_Config
 6078              	.LVL379:
 105:Src/main.c    ****   MX_DMA_Init();
 6079              		.loc 1 105 3 view .LVU2008
 6080 000a FFF7FEFF 		bl	MX_GPIO_Init
 6081              	.LVL380:
 106:Src/main.c    ****   MX_ADC1_Init();
 6082              		.loc 1 106 3 view .LVU2009
 6083 000e FFF7FEFF 		bl	MX_DMA_Init
 6084              	.LVL381:
 107:Src/main.c    ****   MX_ADC2_Init();
 6085              		.loc 1 107 3 view .LVU2010
 6086 0012 FFF7FEFF 		bl	MX_ADC1_Init
 6087              	.LVL382:
 108:Src/main.c    ****   MX_COMP1_Init();
 6088              		.loc 1 108 3 view .LVU2011
 6089 0016 FFF7FEFF 		bl	MX_ADC2_Init
 6090              	.LVL383:
 109:Src/main.c    ****   MX_COMP2_Init();
 6091              		.loc 1 109 3 view .LVU2012
 6092 001a FFF7FEFF 		bl	MX_COMP1_Init
 6093              	.LVL384:
 110:Src/main.c    ****   MX_COMP4_Init();
 6094              		.loc 1 110 3 view .LVU2013
 6095 001e FFF7FEFF 		bl	MX_COMP2_Init
 6096              	.LVL385:
ARM GAS  /tmp/cc85dWdm.s 			page 693


 111:Src/main.c    ****   MX_CORDIC_Init();
 6097              		.loc 1 111 3 view .LVU2014
 6098 0022 FFF7FEFF 		bl	MX_COMP4_Init
 6099              	.LVL386:
 112:Src/main.c    ****   MX_DAC3_Init();
 6100              		.loc 1 112 3 view .LVU2015
 6101 0026 FFF7FEFF 		bl	MX_CORDIC_Init
 6102              	.LVL387:
 113:Src/main.c    ****   MX_OPAMP1_Init();
 6103              		.loc 1 113 3 view .LVU2016
 6104 002a FFF7FEFF 		bl	MX_DAC3_Init
 6105              	.LVL388:
 114:Src/main.c    ****   MX_OPAMP2_Init();
 6106              		.loc 1 114 3 view .LVU2017
 6107 002e FFF7FEFF 		bl	MX_OPAMP1_Init
 6108              	.LVL389:
 115:Src/main.c    ****   MX_OPAMP3_Init();
 6109              		.loc 1 115 3 view .LVU2018
 6110 0032 FFF7FEFF 		bl	MX_OPAMP2_Init
 6111              	.LVL390:
 116:Src/main.c    ****   MX_TIM1_Init();
 6112              		.loc 1 116 3 view .LVU2019
 6113 0036 FFF7FEFF 		bl	MX_OPAMP3_Init
 6114              	.LVL391:
 117:Src/main.c    ****   MX_TIM4_Init();
 6115              		.loc 1 117 3 view .LVU2020
 6116 003a FFF7FEFF 		bl	MX_TIM1_Init
 6117              	.LVL392:
 118:Src/main.c    ****   MX_USART2_UART_Init();
 6118              		.loc 1 118 3 view .LVU2021
 6119 003e FFF7FEFF 		bl	MX_TIM4_Init
 6120              	.LVL393:
 119:Src/main.c    ****   MX_MotorControl_Init();
 6121              		.loc 1 119 3 view .LVU2022
 6122 0042 FFF7FEFF 		bl	MX_USART2_UART_Init
 6123              	.LVL394:
 120:Src/main.c    **** 
 6124              		.loc 1 120 3 view .LVU2023
 6125 0046 FFF7FEFF 		bl	MX_MotorControl_Init
 6126              	.LVL395:
 123:Src/main.c    ****   /* USER CODE BEGIN 2 */
 6127              		.loc 1 123 3 view .LVU2024
 6128 004a FFF7FEFF 		bl	MX_NVIC_Init
 6129              	.LVL396:
 127:Src/main.c    ****   /* Infinite loop */
 6130              		.loc 1 127 3 view .LVU2025
 6131              	.LBB1011:
 6132              	.LBI1011:
2013:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 6133              		.loc 12 2013 22 view .LVU2026
 6134              	.LBB1012:
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 6135              		.loc 12 2015 3 view .LVU2027
 6136 004e 064A     		ldr	r2, .L129
 6137 0050 1368     		ldr	r3, [r2]
 6138 0052 43F00103 		orr	r3, r3, #1
 6139 0056 1360     		str	r3, [r2]
ARM GAS  /tmp/cc85dWdm.s 			page 694


 6140              	.LVL397:
 6141              	.L127:
2015:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 6142              		.loc 12 2015 3 is_stmt 0 view .LVU2028
 6143              	.LBE1012:
 6144              	.LBE1011:
 132:Src/main.c    ****   while (1)
 6145              		.loc 1 132 3 is_stmt 1 discriminator 1 view .LVU2029
 133:Src/main.c    ****   {
 6146              		.loc 1 133 3 discriminator 1 view .LVU2030
 135:Src/main.c    ****     counter++;
 6147              		.loc 1 135 5 discriminator 1 view .LVU2031
 6148              	.LBB1013:
 6149              	.LBI1013:
2281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** {
 6150              		.loc 12 2281 26 discriminator 1 view .LVU2032
 6151              	.LBB1014:
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 6152              		.loc 12 2283 3 discriminator 1 view .LVU2033
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 6153              		.loc 12 2283 10 is_stmt 0 discriminator 1 view .LVU2034
 6154 0058 034B     		ldr	r3, .L129
 6155 005a 5A6A     		ldr	r2, [r3, #36]
 6156              	.LVL398:
2283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h **** }
 6157              		.loc 12 2283 10 discriminator 1 view .LVU2035
 6158              	.LBE1014:
 6159              	.LBE1013:
 135:Src/main.c    ****     counter++;
 6160              		.loc 1 135 13 discriminator 1 view .LVU2036
 6161 005c 034B     		ldr	r3, .L129+4
 6162 005e 1A60     		str	r2, [r3]
 136:Src/main.c    ****     LL_mDelay(1);
 6163              		.loc 1 136 5 is_stmt 1 discriminator 1 view .LVU2037
 137:Src/main.c    ****     /* USER CODE END WHILE */
 6164              		.loc 1 137 5 discriminator 1 view .LVU2038
 6165 0060 0120     		movs	r0, #1
 6166 0062 FFF7FEFF 		bl	LL_mDelay
 6167              	.LVL399:
 133:Src/main.c    ****   {
 6168              		.loc 1 133 9 discriminator 1 view .LVU2039
 6169 0066 F7E7     		b	.L127
 6170              	.L130:
 6171              		.align	2
 6172              	.L129:
 6173 0068 00080040 		.word	1073743872
 6174 006c 00000000 		.word	.LANCHOR0
 6175              		.cfi_endproc
 6176              	.LFE1622:
 6178              		.comm	htim4,76,4
 6179              		.global	encoder
 6180              		.section	.bss.encoder,"aw",%nobits
 6181              		.align	2
 6182              		.set	.LANCHOR0,. + 0
 6185              	encoder:
 6186 0000 00000000 		.space	4
 6187              		.text
ARM GAS  /tmp/cc85dWdm.s 			page 695


 6188              	.Letext0:
 6189              		.file 16 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 6190              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 6191              		.file 18 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 6192              		.file 19 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 6193              		.file 20 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 6194              		.file 21 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 6195              		.file 22 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 6196              		.file 23 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 6197              		.file 24 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 6198              		.file 25 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_comp.h"
 6199              		.file 26 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/mc_type.h"
 6200              		.file 27 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/pid_regulator.h"
 6201              		.file 28 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h"
 6202              		.file 29 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_torq_ctrl.h"
 6203              		.file 30 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/virtual_speed_sensor.h"
 6204              		.file 31 "Inc/regular_conversion_manager.h"
 6205              		.file 32 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/ntc_temperature_sensor.h"
 6206              		.file 33 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_speed_pos_fdbk.h"
 6207              		.file 34 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/pwm_curr_fdbk.h"
 6208              		.file 35 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h"
 6209              		.file 36 "Inc/mc_interface.h"
 6210              		.file 37 "Inc/mc_configuration_registers.h"
 6211              		.file 38 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/bus_voltage_sensor.h"
 6212              		.file 39 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/r_divider_bus_voltage_sensor.h"
 6213              		.file 40 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/feed_forward_ctrl.h"
 6214              		.file 41 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/pqd_motor_power_measurement.h"
 6215              		.file 42 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/G4xx/Inc/r3_2_g4xx_pwm_curr_fdbk.h"
 6216              		.file 43 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/encoder_speed_pos_fdbk.h"
 6217              		.file 44 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/enc_align_ctrl.h"
 6218              		.file 45 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/ramp_ext_mngr.h"
 6219              		.file 46 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/circle_limitation.h"
 6220              		.file 47 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h"
 6221              		.file 48 "Inc/mc_config.h"
 6222              		.file 49 "Inc/debug_scope.h"
 6223              		.file 50 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_utils.h"
 6224              		.file 51 "Inc/motorcontrol.h"
 6225              		.file 52 "<built-in>"
ARM GAS  /tmp/cc85dWdm.s 			page 696


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc85dWdm.s:18     .text.MX_NVIC_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:25     .text.MX_NVIC_Init:0000000000000000 MX_NVIC_Init
     /tmp/cc85dWdm.s:696    .text.MX_NVIC_Init:000000000000019c $d
     /tmp/cc85dWdm.s:704    .text.MX_CORDIC_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:710    .text.MX_CORDIC_Init:0000000000000000 MX_CORDIC_Init
     /tmp/cc85dWdm.s:752    .text.MX_CORDIC_Init:000000000000001c $d
     /tmp/cc85dWdm.s:757    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:763    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cc85dWdm.s:826    .text.MX_DMA_Init:000000000000002c $d
     /tmp/cc85dWdm.s:831    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:837    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc85dWdm.s:1554   .text.MX_GPIO_Init:00000000000001b8 $d
     /tmp/cc85dWdm.s:1567   .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:1573   .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cc85dWdm.s:2141   .text.MX_ADC1_Init:0000000000000228 $d
     /tmp/cc85dWdm.s:2152   .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:2158   .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/cc85dWdm.s:2547   .text.MX_ADC2_Init:000000000000017c $d
     /tmp/cc85dWdm.s:2557   .text.MX_COMP1_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:2563   .text.MX_COMP1_Init:0000000000000000 MX_COMP1_Init
     /tmp/cc85dWdm.s:2717   .text.MX_COMP1_Init:0000000000000094 $d
     /tmp/cc85dWdm.s:2725   .text.MX_COMP2_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:2731   .text.MX_COMP2_Init:0000000000000000 MX_COMP2_Init
     /tmp/cc85dWdm.s:2884   .text.MX_COMP2_Init:0000000000000094 $d
     /tmp/cc85dWdm.s:2892   .text.MX_COMP4_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:2898   .text.MX_COMP4_Init:0000000000000000 MX_COMP4_Init
     /tmp/cc85dWdm.s:3051   .text.MX_COMP4_Init:0000000000000090 $d
     /tmp/cc85dWdm.s:3060   .text.MX_DAC3_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:3066   .text.MX_DAC3_Init:0000000000000000 MX_DAC3_Init
     /tmp/cc85dWdm.s:3226   .text.MX_DAC3_Init:0000000000000078 $d
     /tmp/cc85dWdm.s:3234   .text.MX_OPAMP1_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:3240   .text.MX_OPAMP1_Init:0000000000000000 MX_OPAMP1_Init
     /tmp/cc85dWdm.s:3414   .text.MX_OPAMP1_Init:00000000000000a0 $d
     /tmp/cc85dWdm.s:3421   .text.MX_OPAMP2_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:3427   .text.MX_OPAMP2_Init:0000000000000000 MX_OPAMP2_Init
     /tmp/cc85dWdm.s:3600   .text.MX_OPAMP2_Init:000000000000009c $d
     /tmp/cc85dWdm.s:3607   .text.MX_OPAMP3_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:3613   .text.MX_OPAMP3_Init:0000000000000000 MX_OPAMP3_Init
     /tmp/cc85dWdm.s:3788   .text.MX_OPAMP3_Init:0000000000000098 $d
     /tmp/cc85dWdm.s:3796   .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:3802   .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/cc85dWdm.s:4124   .text.MX_TIM4_Init:00000000000000f8 $d
     /tmp/cc85dWdm.s:4131   .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:4137   .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cc85dWdm.s:5071   .text.MX_TIM1_Init:00000000000002f4 $d
     /tmp/cc85dWdm.s:5085   .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc85dWdm.s:5091   .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc85dWdm.s:5684   .text.MX_USART2_UART_Init:0000000000000190 $d
     /tmp/cc85dWdm.s:5696   .text.Error_Handler:0000000000000000 $t
     /tmp/cc85dWdm.s:5703   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc85dWdm.s:5734   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc85dWdm.s:5741   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc85dWdm.s:6043   .text.SystemClock_Config:00000000000000f0 $d
     /tmp/cc85dWdm.s:6056   .text.main:0000000000000000 $t
     /tmp/cc85dWdm.s:6063   .text.main:0000000000000000 main
ARM GAS  /tmp/cc85dWdm.s 			page 697


     /tmp/cc85dWdm.s:6173   .text.main:0000000000000068 $d
                            *COM*:000000000000004c htim4
     /tmp/cc85dWdm.s:6185   .bss.encoder:0000000000000000 encoder
     /tmp/cc85dWdm.s:6181   .bss.encoder:0000000000000000 $d

UNDEFINED SYMBOLS
LL_EXTI_Init
LL_GPIO_Init
LL_ADC_Init
LL_ADC_REG_Init
LL_ADC_CommonInit
LL_ADC_INJ_Init
SystemCoreClock
LL_COMP_Init
LL_DAC_Init
LL_OPAMP_Init
LL_TIM_Init
memset
LL_TIM_OC_Init
LL_TIM_BDTR_Init
LL_USART_Init
LL_SetSystemCoreClock
HAL_InitTick
HAL_Init
MX_MotorControl_Init
LL_mDelay
