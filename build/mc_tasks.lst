ARM GAS  /tmp/ccJda0bK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mc_tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.mechanicalAngleCalculation,"ax",%progbits
  18              		.align	1
  19              		.global	mechanicalAngleCalculation
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	mechanicalAngleCalculation:
  27              	.LVL0:
  28              	.LFB1626:
  29              		.file 1 "Src/mc_tasks.c"
   1:Src/mc_tasks.c **** 
   2:Src/mc_tasks.c **** /**
   3:Src/mc_tasks.c ****   ******************************************************************************
   4:Src/mc_tasks.c ****   * @file    mc_tasks.c
   5:Src/mc_tasks.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   6:Src/mc_tasks.c ****   * @brief   This file implements tasks definition
   7:Src/mc_tasks.c ****   *
   8:Src/mc_tasks.c ****   ******************************************************************************
   9:Src/mc_tasks.c ****   * @attention
  10:Src/mc_tasks.c ****   *
  11:Src/mc_tasks.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  12:Src/mc_tasks.c ****   * All rights reserved.</center></h2>
  13:Src/mc_tasks.c ****   *
  14:Src/mc_tasks.c ****   * This software component is licensed by ST under Ultimate Liberty license
  15:Src/mc_tasks.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  16:Src/mc_tasks.c ****   * the License. You may obtain a copy of the License at:
  17:Src/mc_tasks.c ****   *                             www.st.com/SLA0044
  18:Src/mc_tasks.c ****   *
  19:Src/mc_tasks.c ****   ******************************************************************************
  20:Src/mc_tasks.c ****   */
  21:Src/mc_tasks.c **** 
  22:Src/mc_tasks.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/mc_tasks.c **** //cstat -MISRAC2012-Rule-21.1
  24:Src/mc_tasks.c **** #include "main.h"
  25:Src/mc_tasks.c **** //cstat +MISRAC2012-Rule-21.1
  26:Src/mc_tasks.c **** #include "mc_type.h"
  27:Src/mc_tasks.c **** #include "mc_math.h"
  28:Src/mc_tasks.c **** #include "motorcontrol.h"
  29:Src/mc_tasks.c **** #include "regular_conversion_manager.h"
ARM GAS  /tmp/ccJda0bK.s 			page 2


  30:Src/mc_tasks.c **** #include "mc_interface.h"
  31:Src/mc_tasks.c **** #include "digital_output.h"
  32:Src/mc_tasks.c **** #include "pwm_common.h"
  33:Src/mc_tasks.c **** 
  34:Src/mc_tasks.c **** #include "mc_tasks.h"
  35:Src/mc_tasks.c **** #include "parameters_conversion.h"
  36:Src/mc_tasks.c **** #include "mcp_config.h"
  37:Src/mc_tasks.c **** #include "mc_app_hooks.h"
  38:Src/mc_tasks.c **** 
  39:Src/mc_tasks.c **** /* USER CODE BEGIN Includes */
  40:Src/mc_tasks.c **** #include "debug_scope.h"
  41:Src/mc_tasks.c **** /* USER CODE END Includes */
  42:Src/mc_tasks.c **** 
  43:Src/mc_tasks.c **** /* USER CODE BEGIN Private define */
  44:Src/mc_tasks.c **** 
  45:Src/mc_tasks.c **** /* Private define ------------------------------------------------------------*/
  46:Src/mc_tasks.c **** /* Un-Comment this macro define in order to activate the smooth
  47:Src/mc_tasks.c ****    braking action on over voltage */
  48:Src/mc_tasks.c **** /* #define  MC.SMOOTH_BRAKING_ACTION_ON_OVERVOLTAGE */
  49:Src/mc_tasks.c **** 
  50:Src/mc_tasks.c **** #define STOPPERMANENCY_MS   ((uint16_t)400)
  51:Src/mc_tasks.c **** #define STOPPERMANENCY_MS2  ((uint16_t)400)
  52:Src/mc_tasks.c **** #define CHARGE_BOOT_CAP_TICKS  (uint16_t)((SYS_TICK_FREQUENCY * 10) / ((uint16_t)1000))
  53:Src/mc_tasks.c **** #define CHARGE_BOOT_CAP_TICKS2 (uint16_t)((SYS_TICK_FREQUENCY * 10)/ ((uint16_t)1000))
  54:Src/mc_tasks.c **** #define M1_CHARGE_BOOT_CAP_DUTY_CYCLES  (uint32_t)(0.000*(PWM_PERIOD_CYCLES/2))
  55:Src/mc_tasks.c **** #define M2_CHARGE_BOOT_CAP_DUTY_CYCLES (uint32_t)(0*(PWM_PERIOD_CYCLES2/2))
  56:Src/mc_tasks.c **** #define STOPPERMANENCY_TICKS   (uint16_t)((SYS_TICK_FREQUENCY * STOPPERMANENCY_MS)  / ((uint16_t)10
  57:Src/mc_tasks.c **** #define STOPPERMANENCY_TICKS2  (uint16_t)((SYS_TICK_FREQUENCY * STOPPERMANENCY_MS2) / ((uint16_t)10
  58:Src/mc_tasks.c **** 
  59:Src/mc_tasks.c **** /* USER CODE END Private define */
  60:Src/mc_tasks.c **** #define VBUS_TEMP_ERR_MASK (MC_OVER_VOLT| MC_UNDER_VOLT| MC_OVER_TEMP)
  61:Src/mc_tasks.c **** /* Private variables----------------------------------------------------------*/
  62:Src/mc_tasks.c **** 
  63:Src/mc_tasks.c **** static FOCVars_t FOCVars[NBR_OF_MOTORS];
  64:Src/mc_tasks.c **** static EncAlign_Handle_t *pEAC[NBR_OF_MOTORS];
  65:Src/mc_tasks.c **** 
  66:Src/mc_tasks.c **** static PWMC_Handle_t *pwmcHandle[NBR_OF_MOTORS];
  67:Src/mc_tasks.c **** //cstat !MISRAC2012-Rule-8.9_a
  68:Src/mc_tasks.c **** static RampExtMngr_Handle_t *pREMNG[NBR_OF_MOTORS];   /*!< Ramp manager used to modify the Iq ref
  69:Src/mc_tasks.c ****                                                     during the start-up switch over.*/
  70:Src/mc_tasks.c **** 
  71:Src/mc_tasks.c **** static uint16_t hMFTaskCounterM1 = 0; //cstat !MISRAC2012-Rule-8.9_a
  72:Src/mc_tasks.c **** static volatile uint16_t hBootCapDelayCounterM1 = ((uint16_t)0);
  73:Src/mc_tasks.c **** static volatile uint16_t hStopPermanencyCounterM1 = ((uint16_t)0);
  74:Src/mc_tasks.c **** 
  75:Src/mc_tasks.c **** static volatile uint8_t bMCBootCompleted = ((uint8_t)0);
  76:Src/mc_tasks.c **** 
  77:Src/mc_tasks.c **** /* USER CODE BEGIN Private Variables */
  78:Src/mc_tasks.c **** extern EncoderReference_Handle_t EncRefM1;
  79:Src/mc_tasks.c **** /* USER CODE END Private Variables */
  80:Src/mc_tasks.c **** 
  81:Src/mc_tasks.c **** /* Private functions ---------------------------------------------------------*/
  82:Src/mc_tasks.c **** void TSK_MediumFrequencyTaskM1(void);
  83:Src/mc_tasks.c **** void FOC_Clear(uint8_t bMotor);
  84:Src/mc_tasks.c **** void FOC_InitAdditionalMethods(uint8_t bMotor);
  85:Src/mc_tasks.c **** void FOC_CalcCurrRef(uint8_t bMotor);
  86:Src/mc_tasks.c **** void TSK_MF_StopProcessing(  MCI_Handle_t * pHandle, uint8_t motor);
ARM GAS  /tmp/ccJda0bK.s 			page 3


  87:Src/mc_tasks.c **** MCI_Handle_t * GetMCI(uint8_t bMotor);
  88:Src/mc_tasks.c **** static uint16_t FOC_CurrControllerM1(void);
  89:Src/mc_tasks.c **** void TSK_SetChargeBootCapDelayM1(uint16_t hTickCount);
  90:Src/mc_tasks.c **** bool TSK_ChargeBootCapDelayHasElapsedM1(void);
  91:Src/mc_tasks.c **** void TSK_SetStopPermanencyTimeM1(uint16_t hTickCount);
  92:Src/mc_tasks.c **** bool TSK_StopPermanencyTimeHasElapsedM1(void);
  93:Src/mc_tasks.c **** void TSK_SafetyTask_PWMOFF(uint8_t motor);
  94:Src/mc_tasks.c **** 
  95:Src/mc_tasks.c **** /* USER CODE BEGIN Private Functions */
  96:Src/mc_tasks.c **** 
  97:Src/mc_tasks.c **** /* USER CODE END Private Functions */
  98:Src/mc_tasks.c **** /**
  99:Src/mc_tasks.c ****   * @brief  It initializes the whole MC core according to user defined
 100:Src/mc_tasks.c ****   *         parameters.
 101:Src/mc_tasks.c ****   * @param  pMCIList pointer to the vector of MCInterface objects that will be
 102:Src/mc_tasks.c ****   *         created and initialized. The vector must have length equal to the
 103:Src/mc_tasks.c ****   *         number of motor drives.
 104:Src/mc_tasks.c ****   * @retval None
 105:Src/mc_tasks.c ****   */
 106:Src/mc_tasks.c **** __weak void MCboot( MCI_Handle_t* pMCIList[NBR_OF_MOTORS] )
 107:Src/mc_tasks.c **** {
 108:Src/mc_tasks.c ****   /* USER CODE BEGIN MCboot 0 */
 109:Src/mc_tasks.c **** 
 110:Src/mc_tasks.c ****   /* USER CODE END MCboot 0 */
 111:Src/mc_tasks.c **** 
 112:Src/mc_tasks.c ****   if (MC_NULL == pMCIList)
 113:Src/mc_tasks.c ****   {
 114:Src/mc_tasks.c ****     /* Nothing to do */
 115:Src/mc_tasks.c ****   }
 116:Src/mc_tasks.c ****   else
 117:Src/mc_tasks.c ****   {
 118:Src/mc_tasks.c **** 
 119:Src/mc_tasks.c ****     bMCBootCompleted = (uint8_t )0;
 120:Src/mc_tasks.c **** 
 121:Src/mc_tasks.c ****     /**********************************************************/
 122:Src/mc_tasks.c ****     /*    PWM and current sensing component initialization    */
 123:Src/mc_tasks.c ****     /**********************************************************/
 124:Src/mc_tasks.c ****     pwmcHandle[M1] = &PWM_Handle_M1._Super;
 125:Src/mc_tasks.c ****     R3_2_Init(&PWM_Handle_M1);
 126:Src/mc_tasks.c ****     ASPEP_start(&aspepOverUartA);
 127:Src/mc_tasks.c **** 
 128:Src/mc_tasks.c ****     /* USER CODE BEGIN MCboot 1 */
 129:Src/mc_tasks.c **** 
 130:Src/mc_tasks.c ****     /* USER CODE END MCboot 1 */
 131:Src/mc_tasks.c ****     /**************************************/
 132:Src/mc_tasks.c ****     /*    Start timers synchronously      */
 133:Src/mc_tasks.c ****     /**************************************/
 134:Src/mc_tasks.c ****     startTimers();
 135:Src/mc_tasks.c **** 
 136:Src/mc_tasks.c ****     /******************************************************/
 137:Src/mc_tasks.c ****     /*   PID component initialization: speed regulation   */
 138:Src/mc_tasks.c ****     /******************************************************/
 139:Src/mc_tasks.c ****     PID_HandleInit(&PIDSpeedHandle_M1);
 140:Src/mc_tasks.c **** 
 141:Src/mc_tasks.c ****     /******************************************************/
 142:Src/mc_tasks.c ****     /*   Main speed sensor component initialization       */
 143:Src/mc_tasks.c ****     /******************************************************/
ARM GAS  /tmp/ccJda0bK.s 			page 4


 144:Src/mc_tasks.c ****     STO_PLL_Init (&STO_PLL_M1);
 145:Src/mc_tasks.c **** 
 146:Src/mc_tasks.c ****     /******************************************************/
 147:Src/mc_tasks.c ****     /*   Speed & torque component initialization          */
 148:Src/mc_tasks.c ****     /******************************************************/
 149:Src/mc_tasks.c ****     STC_Init(pSTC[M1],&PIDSpeedHandle_M1, &STO_PLL_M1._Super);
 150:Src/mc_tasks.c **** 
 151:Src/mc_tasks.c ****     /******************************************************/
 152:Src/mc_tasks.c ****     /*   Auxiliary speed sensor component initialization  */
 153:Src/mc_tasks.c ****     /******************************************************/
 154:Src/mc_tasks.c ****     ENC_Init (&ENCODER_M1);
 155:Src/mc_tasks.c **** 
 156:Src/mc_tasks.c ****     /***********************************************************/
 157:Src/mc_tasks.c ****     /*   Auxiliary encoder alignment component initialization  */
 158:Src/mc_tasks.c ****     /***********************************************************/
 159:Src/mc_tasks.c ****     EAC_Init(&EncAlignCtrlM1,pSTC[M1],&VirtualSpeedSensorM1,&ENCODER_M1);
 160:Src/mc_tasks.c ****     pEAC[M1] = &EncAlignCtrlM1;
 161:Src/mc_tasks.c **** 
 162:Src/mc_tasks.c ****     /****************************************************/
 163:Src/mc_tasks.c ****     /*   Virtual speed sensor component initialization  */
 164:Src/mc_tasks.c ****     /****************************************************/
 165:Src/mc_tasks.c ****     VSS_Init(&VirtualSpeedSensorM1);
 166:Src/mc_tasks.c **** 
 167:Src/mc_tasks.c ****     /**************************************/
 168:Src/mc_tasks.c ****     /*   Rev-up component initialization  */
 169:Src/mc_tasks.c ****     /**************************************/
 170:Src/mc_tasks.c ****     RUC_Init(&RevUpControlM1, pSTC[M1], &VirtualSpeedSensorM1, &STO_M1, pwmcHandle[M1]);
 171:Src/mc_tasks.c **** 
 172:Src/mc_tasks.c ****     /********************************************************/
 173:Src/mc_tasks.c ****     /*   PID component initialization: current regulation   */
 174:Src/mc_tasks.c ****     /********************************************************/
 175:Src/mc_tasks.c ****     PID_HandleInit(&PIDIqHandle_M1);
 176:Src/mc_tasks.c ****     PID_HandleInit(&PIDIdHandle_M1);
 177:Src/mc_tasks.c **** 
 178:Src/mc_tasks.c ****     /********************************************************/
 179:Src/mc_tasks.c ****     /*   Bus voltage sensor component initialization        */
 180:Src/mc_tasks.c ****     /********************************************************/
 181:Src/mc_tasks.c ****     RVBS_Init(&BusVoltageSensor_M1);
 182:Src/mc_tasks.c **** 
 183:Src/mc_tasks.c ****     /*************************************************/
 184:Src/mc_tasks.c ****     /*   Power measurement component initialization  */
 185:Src/mc_tasks.c ****     /*************************************************/
 186:Src/mc_tasks.c ****     pMPM[M1]->pVBS = &(BusVoltageSensor_M1._Super);
 187:Src/mc_tasks.c ****     pMPM[M1]->pFOCVars = &FOCVars[M1];
 188:Src/mc_tasks.c **** 
 189:Src/mc_tasks.c ****     /*******************************************************/
 190:Src/mc_tasks.c ****     /*   Temperature measurement component initialization  */
 191:Src/mc_tasks.c ****     /*******************************************************/
 192:Src/mc_tasks.c ****     NTC_Init(&TempSensor_M1);
 193:Src/mc_tasks.c **** 
 194:Src/mc_tasks.c ****     /*******************************************************/
 195:Src/mc_tasks.c ****     /*   Feed forward component initialization             */
 196:Src/mc_tasks.c ****     /*******************************************************/
 197:Src/mc_tasks.c ****     FF_Init(pFF[M1],&(BusVoltageSensor_M1._Super),pPIDId[M1],pPIDIq[M1]);
 198:Src/mc_tasks.c **** 
 199:Src/mc_tasks.c ****     pREMNG[M1] = &RampExtMngrHFParamsM1;
 200:Src/mc_tasks.c ****     REMNG_Init(pREMNG[M1]);
ARM GAS  /tmp/ccJda0bK.s 			page 5


 201:Src/mc_tasks.c **** 
 202:Src/mc_tasks.c ****     FOC_Clear(M1);
 203:Src/mc_tasks.c ****     FOCVars[M1].bDriveInput = EXTERNAL;
 204:Src/mc_tasks.c ****     FOCVars[M1].Iqdref = STC_GetDefaultIqdref(pSTC[M1]);
 205:Src/mc_tasks.c ****     FOCVars[M1].UserIdref = STC_GetDefaultIqdref(pSTC[M1]).d;
 206:Src/mc_tasks.c ****     MCI_Init(&Mci[M1], pSTC[M1], &FOCVars[M1],pwmcHandle[M1] );
 207:Src/mc_tasks.c ****     // MCI_ExecSpeedRamp(&Mci[M1],
 208:Src/mc_tasks.c ****     // STC_GetMecSpeedRefUnitDefault(pSTC[M1]),0); /*First command to STC*/
 209:Src/mc_tasks.c ****     MCI_ExecTorqueRamp(&Mci[M1], STC_GetDefaultIqdref(pSTC[M1]).q, 0);
 210:Src/mc_tasks.c ****     pMCIList[M1] = &Mci[M1];
 211:Src/mc_tasks.c **** 
 212:Src/mc_tasks.c ****     /* Applicative hook in MCBoot() */
 213:Src/mc_tasks.c ****     MC_APP_BootHook();
 214:Src/mc_tasks.c **** 
 215:Src/mc_tasks.c ****     /* USER CODE BEGIN MCboot 2 */
 216:Src/mc_tasks.c **** 
 217:Src/mc_tasks.c ****     /* USER CODE END MCboot 2 */
 218:Src/mc_tasks.c **** 
 219:Src/mc_tasks.c ****     bMCBootCompleted = 1U;
 220:Src/mc_tasks.c ****   }
 221:Src/mc_tasks.c **** }
 222:Src/mc_tasks.c **** 
 223:Src/mc_tasks.c **** /**
 224:Src/mc_tasks.c ****  * @brief Runs all the Tasks of the Motor Control cockpit
 225:Src/mc_tasks.c ****  *
 226:Src/mc_tasks.c ****  * This function is to be called periodically at least at the Medium Frequency task
 227:Src/mc_tasks.c ****  * rate (It is typically called on the Systick interrupt). Exact invokation rate is
 228:Src/mc_tasks.c ****  * the Speed regulator execution rate set in the Motor Contorl Workbench.
 229:Src/mc_tasks.c ****  *
 230:Src/mc_tasks.c ****  * The following tasks are executed in this order:
 231:Src/mc_tasks.c ****  *
 232:Src/mc_tasks.c ****  * - Medium Frequency Tasks of each motors
 233:Src/mc_tasks.c ****  * - Safety Task
 234:Src/mc_tasks.c ****  * - Power Factor Correction Task (if enabled)
 235:Src/mc_tasks.c ****  * - User Interface task.
 236:Src/mc_tasks.c ****  */
 237:Src/mc_tasks.c **** __weak void MC_RunMotorControlTasks(void)
 238:Src/mc_tasks.c **** {
 239:Src/mc_tasks.c ****   if (0U == bMCBootCompleted)
 240:Src/mc_tasks.c ****   {
 241:Src/mc_tasks.c ****     /* Nothing to do */
 242:Src/mc_tasks.c ****   }
 243:Src/mc_tasks.c ****   else
 244:Src/mc_tasks.c ****   {
 245:Src/mc_tasks.c ****     /* ** Medium Frequency Tasks ** */
 246:Src/mc_tasks.c ****     MC_Scheduler();
 247:Src/mc_tasks.c **** 
 248:Src/mc_tasks.c ****     /* Safety task is run after Medium Frequency task so that
 249:Src/mc_tasks.c ****      * it can overcome actions they initiated if needed. */
 250:Src/mc_tasks.c ****     TSK_SafetyTask();
 251:Src/mc_tasks.c **** 
 252:Src/mc_tasks.c ****   }
 253:Src/mc_tasks.c **** }
 254:Src/mc_tasks.c **** 
 255:Src/mc_tasks.c **** /**
 256:Src/mc_tasks.c ****  * @brief Performs stop process and update the state machine.This function
 257:Src/mc_tasks.c ****  *        shall be called only during medium frequency task
ARM GAS  /tmp/ccJda0bK.s 			page 6


 258:Src/mc_tasks.c ****  */
 259:Src/mc_tasks.c **** void TSK_MF_StopProcessing(  MCI_Handle_t * pHandle, uint8_t motor)
 260:Src/mc_tasks.c **** {
 261:Src/mc_tasks.c ****   R3_2_SwitchOffPWM(pwmcHandle[motor]);
 262:Src/mc_tasks.c **** 
 263:Src/mc_tasks.c ****   FOC_Clear(motor);
 264:Src/mc_tasks.c ****   PQD_Clear(pMPM[motor]);
 265:Src/mc_tasks.c ****   TSK_SetStopPermanencyTimeM1(STOPPERMANENCY_TICKS);
 266:Src/mc_tasks.c ****   Mci[motor].State = STOP;
 267:Src/mc_tasks.c ****   return;
 268:Src/mc_tasks.c **** }
 269:Src/mc_tasks.c **** 
 270:Src/mc_tasks.c **** /**
 271:Src/mc_tasks.c ****  * @brief  Executes the Medium Frequency Task functions for each drive instance.
 272:Src/mc_tasks.c ****  *
 273:Src/mc_tasks.c ****  * It is to be clocked at the Systick frequency.
 274:Src/mc_tasks.c ****  */
 275:Src/mc_tasks.c **** __weak void MC_Scheduler(void)
 276:Src/mc_tasks.c **** {
 277:Src/mc_tasks.c **** /* USER CODE BEGIN MC_Scheduler 0 */
 278:Src/mc_tasks.c **** 
 279:Src/mc_tasks.c **** /* USER CODE END MC_Scheduler 0 */
 280:Src/mc_tasks.c **** 
 281:Src/mc_tasks.c ****   if (((uint8_t)1) == bMCBootCompleted)
 282:Src/mc_tasks.c ****   {
 283:Src/mc_tasks.c ****     if(hMFTaskCounterM1 > 0u)
 284:Src/mc_tasks.c ****     {
 285:Src/mc_tasks.c ****       hMFTaskCounterM1--;
 286:Src/mc_tasks.c ****     }
 287:Src/mc_tasks.c ****     else
 288:Src/mc_tasks.c ****     {
 289:Src/mc_tasks.c ****       TSK_MediumFrequencyTaskM1();
 290:Src/mc_tasks.c **** 
 291:Src/mc_tasks.c ****       /* Applicative hook at end of Medium Frequency for Motor 1 */
 292:Src/mc_tasks.c ****       MC_APP_PostMediumFrequencyHook_M1();
 293:Src/mc_tasks.c **** 
 294:Src/mc_tasks.c ****       MCP_Over_UartA.rxBuffer = MCP_Over_UartA.pTransportLayer->fRXPacketProcess(MCP_Over_UartA.pTr
 295:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 296:Src/mc_tasks.c ****       if ( 0U == MCP_Over_UartA.rxBuffer)
 297:Src/mc_tasks.c ****       {
 298:Src/mc_tasks.c ****         /* Nothing to do */
 299:Src/mc_tasks.c ****       }
 300:Src/mc_tasks.c ****       else
 301:Src/mc_tasks.c ****       {
 302:Src/mc_tasks.c ****         /* Synchronous answer */
 303:Src/mc_tasks.c ****         if (0U == MCP_Over_UartA.pTransportLayer->fGetBuffer(MCP_Over_UartA.pTransportLayer,
 304:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 305:Src/mc_tasks.c ****                                                      MCTL_SYNC))
 306:Src/mc_tasks.c ****         {
 307:Src/mc_tasks.c ****           /* no buffer available to build the answer ... should not occur */
 308:Src/mc_tasks.c ****         }
 309:Src/mc_tasks.c ****         else
 310:Src/mc_tasks.c ****         {
 311:Src/mc_tasks.c ****           MCP_ReceivedPacket(&MCP_Over_UartA);
 312:Src/mc_tasks.c ****           MCP_Over_UartA.pTransportLayer->fSendPacket(MCP_Over_UartA.pTransportLayer, MCP_Over_Uart
 313:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 314:Src/mc_tasks.c ****           /* no buffer available to build the answer ... should not occur */
ARM GAS  /tmp/ccJda0bK.s 			page 7


 315:Src/mc_tasks.c ****         }
 316:Src/mc_tasks.c ****       }
 317:Src/mc_tasks.c **** 
 318:Src/mc_tasks.c ****       /* USER CODE BEGIN MC_Scheduler 1 */
 319:Src/mc_tasks.c **** 
 320:Src/mc_tasks.c ****       /* USER CODE END MC_Scheduler 1 */
 321:Src/mc_tasks.c ****       hMFTaskCounterM1 = (uint16_t)MF_TASK_OCCURENCE_TICKS;
 322:Src/mc_tasks.c ****     }
 323:Src/mc_tasks.c ****     if(hBootCapDelayCounterM1 > 0U)
 324:Src/mc_tasks.c ****     {
 325:Src/mc_tasks.c ****       hBootCapDelayCounterM1--;
 326:Src/mc_tasks.c ****     }
 327:Src/mc_tasks.c ****     if(hStopPermanencyCounterM1 > 0U)
 328:Src/mc_tasks.c ****     {
 329:Src/mc_tasks.c ****       hStopPermanencyCounterM1--;
 330:Src/mc_tasks.c ****     }
 331:Src/mc_tasks.c ****   }
 332:Src/mc_tasks.c ****   else
 333:Src/mc_tasks.c ****   {
 334:Src/mc_tasks.c ****     /* Nothing to do */
 335:Src/mc_tasks.c ****   }
 336:Src/mc_tasks.c ****   /* USER CODE BEGIN MC_Scheduler 2 */
 337:Src/mc_tasks.c **** 
 338:Src/mc_tasks.c ****   /* USER CODE END MC_Scheduler 2 */
 339:Src/mc_tasks.c **** }
 340:Src/mc_tasks.c **** 
 341:Src/mc_tasks.c **** mechanicalAngleCalculation(MCI_Handle_t *pHandle)
 342:Src/mc_tasks.c **** {
  30              		.loc 1 342 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 342 1 is_stmt 0 view .LVU1
  36 0000 10B4     		push	{r4}
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
 343:Src/mc_tasks.c ****     //const int16_t hElAngle = pHandle->pFOCVars->hElAngle;
 344:Src/mc_tasks.c ****     const int16_t hElAngle = *(EncRefM1.pRefElAngle);
  39              		.loc 1 344 5 is_stmt 1 view .LVU2
  40              		.loc 1 344 40 is_stmt 0 view .LVU3
  41 0002 244B     		ldr	r3, .L9
  42 0004 9A68     		ldr	r2, [r3, #8]
  43              		.loc 1 344 19 view .LVU4
  44 0006 B2F90020 		ldrsh	r2, [r2]
  45              	.LVL1:
 345:Src/mc_tasks.c ****     const int16_t encPhase = EncRefM1.enc_I_angle;
  46              		.loc 1 345 5 is_stmt 1 view .LVU5
  47              		.loc 1 345 19 is_stmt 0 view .LVU6
  48 000a B3F90000 		ldrsh	r0, [r3]
  49              	.LVL2:
 346:Src/mc_tasks.c ****     static int16_t prevAngle = 0;
  50              		.loc 1 346 5 is_stmt 1 view .LVU7
 347:Src/mc_tasks.c ****     static int16_t sectionCounter = 0;
  51              		.loc 1 347 5 view .LVU8
 348:Src/mc_tasks.c ****      
 349:Src/mc_tasks.c ****     sectionCounter += (prevAngle > hElAngle)?1:0;
ARM GAS  /tmp/ccJda0bK.s 			page 8


  52              		.loc 1 349 5 view .LVU9
  53              		.loc 1 349 47 is_stmt 0 view .LVU10
  54 000e 224B     		ldr	r3, .L9+4
  55 0010 B3F90040 		ldrsh	r4, [r3]
  56              		.loc 1 349 20 view .LVU11
  57 0014 214B     		ldr	r3, .L9+8
  58 0016 1988     		ldrh	r1, [r3]
  59 0018 9442     		cmp	r4, r2
  60 001a C8BF     		it	gt
  61 001c 0131     		addgt	r1, r1, #1
  62 001e 09B2     		sxth	r1, r1
  63 0020 1980     		strh	r1, [r3]	@ movhi
 350:Src/mc_tasks.c ****     if (sectionCounter == POLE_PAIR_NUM)
  64              		.loc 1 350 5 is_stmt 1 view .LVU12
  65              		.loc 1 350 8 is_stmt 0 view .LVU13
  66 0022 0729     		cmp	r1, #7
  67 0024 24D0     		beq	.L8
  68              	.L2:
 351:Src/mc_tasks.c ****       sectionCounter = 0; 
 352:Src/mc_tasks.c ****     prevAngle = hElAngle;
  69              		.loc 1 352 5 is_stmt 1 view .LVU14
  70              		.loc 1 352 15 is_stmt 0 view .LVU15
  71 0026 1C4B     		ldr	r3, .L9+4
  72 0028 1A80     		strh	r2, [r3]	@ movhi
 353:Src/mc_tasks.c ****     int32_t localElAngle =  (hElAngle - INT16_MIN);
  73              		.loc 1 353 5 is_stmt 1 view .LVU16
  74              		.loc 1 353 13 is_stmt 0 view .LVU17
  75 002a 02F50041 		add	r1, r2, #32768
  76              	.LVL3:
 354:Src/mc_tasks.c ****     int32_t angle = (localElAngle+UINT16_MAX*sectionCounter)/POLE_PAIR_NUM;
  77              		.loc 1 354 5 is_stmt 1 view .LVU18
  78              		.loc 1 354 45 is_stmt 0 view .LVU19
  79 002e 1B4B     		ldr	r3, .L9+8
  80 0030 B3F90020 		ldrsh	r2, [r3]
  81              	.LVL4:
  82              		.loc 1 354 45 view .LVU20
  83 0034 C2EB0242 		rsb	r2, r2, r2, lsl #16
  84              		.loc 1 354 34 view .LVU21
  85 0038 0A44     		add	r2, r2, r1
  86              		.loc 1 354 13 view .LVU22
  87 003a 194B     		ldr	r3, .L9+12
  88 003c 83FB0213 		smull	r1, r3, r3, r2
  89              	.LVL5:
  90              		.loc 1 354 13 view .LVU23
  91 0040 9918     		adds	r1, r3, r2
  92 0042 D317     		asrs	r3, r2, #31
  93 0044 C3EBA103 		rsb	r3, r3, r1, asr #2
  94              	.LVL6:
 355:Src/mc_tasks.c ****     if (angle > INT16_MAX)      angle -= UINT16_MAX;
  95              		.loc 1 355 5 is_stmt 1 view .LVU24
  96              		.loc 1 355 8 is_stmt 0 view .LVU25
  97 0048 B2F5603F 		cmp	r2, #229376
  98 004c 13DB     		blt	.L3
  99              		.loc 1 355 33 is_stmt 1 discriminator 1 view .LVU26
 100              		.loc 1 355 39 is_stmt 0 discriminator 1 view .LVU27
 101 004e A3F57F43 		sub	r3, r3, #65280
 102              	.LVL7:
ARM GAS  /tmp/ccJda0bK.s 			page 9


 103              		.loc 1 355 39 discriminator 1 view .LVU28
 104 0052 FF3B     		subs	r3, r3, #255
 105              	.LVL8:
 106              	.L4:
 356:Src/mc_tasks.c ****     else if (angle < INT16_MIN) angle += UINT16_MAX;
 357:Src/mc_tasks.c ****     EncRefM1.hMechAngle = angle;
 107              		.loc 1 357 5 is_stmt 1 view .LVU29
 108              		.loc 1 357 25 is_stmt 0 view .LVU30
 109 0054 0F4A     		ldr	r2, .L9
 110              	.LVL9:
 111              		.loc 1 357 25 view .LVU31
 112 0056 9381     		strh	r3, [r2, #12]	@ movhi
 113              	.LVL10:
 358:Src/mc_tasks.c **** 
 359:Src/mc_tasks.c ****     int32_t totalAngle = (int32_t)angle - encPhase;
 114              		.loc 1 359 5 is_stmt 1 view .LVU32
 115              		.loc 1 359 13 is_stmt 0 view .LVU33
 116 0058 1B1A     		subs	r3, r3, r0
 117              	.LVL11:
 360:Src/mc_tasks.c ****     if (totalAngle > INT16_MAX)      totalAngle -= UINT16_MAX;
 118              		.loc 1 360 5 is_stmt 1 view .LVU34
 119              		.loc 1 360 8 is_stmt 0 view .LVU35
 120 005a B3F5004F 		cmp	r3, #32768
 121 005e 11DB     		blt	.L5
 122              		.loc 1 360 38 is_stmt 1 discriminator 1 view .LVU36
 123              		.loc 1 360 49 is_stmt 0 discriminator 1 view .LVU37
 124 0060 A3F57F43 		sub	r3, r3, #65280
 125              	.LVL12:
 126              		.loc 1 360 49 discriminator 1 view .LVU38
 127 0064 FF3B     		subs	r3, r3, #255
 128              	.LVL13:
 129              	.L6:
 361:Src/mc_tasks.c ****     else if (totalAngle < INT16_MIN) totalAngle += UINT16_MAX;
 362:Src/mc_tasks.c ****     EncRefM1.hMechAngleWithPhase = totalAngle;
 130              		.loc 1 362 5 is_stmt 1 view .LVU39
 131              		.loc 1 362 34 is_stmt 0 view .LVU40
 132 0066 0B4A     		ldr	r2, .L9
 133 0068 D381     		strh	r3, [r2, #14]	@ movhi
 134              	.LVL14:
 363:Src/mc_tasks.c **** }
 135              		.loc 1 363 1 view .LVU41
 136 006a 5DF8044B 		ldr	r4, [sp], #4
 137              		.cfi_remember_state
 138              		.cfi_restore 4
 139              		.cfi_def_cfa_offset 0
 140 006e 7047     		bx	lr
 141              	.LVL15:
 142              	.L8:
 143              		.cfi_restore_state
 351:Src/mc_tasks.c ****     prevAngle = hElAngle;
 144              		.loc 1 351 7 is_stmt 1 view .LVU42
 351:Src/mc_tasks.c ****     prevAngle = hElAngle;
 145              		.loc 1 351 22 is_stmt 0 view .LVU43
 146 0070 0021     		movs	r1, #0
 147 0072 1980     		strh	r1, [r3]	@ movhi
 148 0074 D7E7     		b	.L2
 149              	.LVL16:
ARM GAS  /tmp/ccJda0bK.s 			page 10


 150              	.L3:
 356:Src/mc_tasks.c ****     EncRefM1.hMechAngle = angle;
 151              		.loc 1 356 10 is_stmt 1 view .LVU44
 356:Src/mc_tasks.c ****     EncRefM1.hMechAngle = angle;
 152              		.loc 1 356 13 is_stmt 0 view .LVU45
 153 0076 0B49     		ldr	r1, .L9+16
 154 0078 8A42     		cmp	r2, r1
 155 007a EBDA     		bge	.L4
 356:Src/mc_tasks.c ****     EncRefM1.hMechAngle = angle;
 156              		.loc 1 356 33 is_stmt 1 discriminator 1 view .LVU46
 356:Src/mc_tasks.c ****     EncRefM1.hMechAngle = angle;
 157              		.loc 1 356 39 is_stmt 0 discriminator 1 view .LVU47
 158 007c 03F57F43 		add	r3, r3, #65280
 159              	.LVL17:
 356:Src/mc_tasks.c ****     EncRefM1.hMechAngle = angle;
 160              		.loc 1 356 39 discriminator 1 view .LVU48
 161 0080 FF33     		adds	r3, r3, #255
 162              	.LVL18:
 356:Src/mc_tasks.c ****     EncRefM1.hMechAngle = angle;
 163              		.loc 1 356 39 discriminator 1 view .LVU49
 164 0082 E7E7     		b	.L4
 165              	.LVL19:
 166              	.L5:
 361:Src/mc_tasks.c ****     EncRefM1.hMechAngleWithPhase = totalAngle;
 167              		.loc 1 361 10 is_stmt 1 view .LVU50
 361:Src/mc_tasks.c ****     EncRefM1.hMechAngleWithPhase = totalAngle;
 168              		.loc 1 361 13 is_stmt 0 view .LVU51
 169 0084 13F5004F 		cmn	r3, #32768
 170 0088 EDDA     		bge	.L6
 361:Src/mc_tasks.c ****     EncRefM1.hMechAngleWithPhase = totalAngle;
 171              		.loc 1 361 38 is_stmt 1 discriminator 1 view .LVU52
 361:Src/mc_tasks.c ****     EncRefM1.hMechAngleWithPhase = totalAngle;
 172              		.loc 1 361 49 is_stmt 0 discriminator 1 view .LVU53
 173 008a 03F57F43 		add	r3, r3, #65280
 174              	.LVL20:
 361:Src/mc_tasks.c ****     EncRefM1.hMechAngleWithPhase = totalAngle;
 175              		.loc 1 361 49 discriminator 1 view .LVU54
 176 008e FF33     		adds	r3, r3, #255
 177              	.LVL21:
 361:Src/mc_tasks.c ****     EncRefM1.hMechAngleWithPhase = totalAngle;
 178              		.loc 1 361 49 discriminator 1 view .LVU55
 179 0090 E9E7     		b	.L6
 180              	.L10:
 181 0092 00BF     		.align	2
 182              	.L9:
 183 0094 00000000 		.word	EncRefM1
 184 0098 00000000 		.word	.LANCHOR0
 185 009c 00000000 		.word	.LANCHOR1
 186 00a0 93244992 		.word	-1840700269
 187 00a4 FA7FFCFF 		.word	-229382
 188              		.cfi_endproc
 189              	.LFE1626:
 191              		.section	.text.FOC_Clear,"ax",%progbits
 192              		.align	1
 193              		.weak	FOC_Clear
 194              		.syntax unified
 195              		.thumb
ARM GAS  /tmp/ccJda0bK.s 			page 11


 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	FOC_Clear:
 200              	.LVL22:
 201              	.LFB1628:
 364:Src/mc_tasks.c **** 
 365:Src/mc_tasks.c **** /**
 366:Src/mc_tasks.c ****   * @brief Executes medium frequency periodic Motor Control tasks
 367:Src/mc_tasks.c ****   *
 368:Src/mc_tasks.c ****   * This function performs some of the control duties on Motor 1 according to the
 369:Src/mc_tasks.c ****   * present state of its state machine. In particular, duties requiring a periodic
 370:Src/mc_tasks.c ****   * execution at a medium frequency rate (such as the speed controller for instance)
 371:Src/mc_tasks.c ****   * are executed here.
 372:Src/mc_tasks.c ****   */
 373:Src/mc_tasks.c **** __weak void TSK_MediumFrequencyTaskM1(void)
 374:Src/mc_tasks.c **** {
 375:Src/mc_tasks.c ****   /* USER CODE BEGIN MediumFrequencyTask M1 0 */
 376:Src/mc_tasks.c **** 
 377:Src/mc_tasks.c ****   /* USER CODE END MediumFrequencyTask M1 0 */
 378:Src/mc_tasks.c **** 
 379:Src/mc_tasks.c ****   int16_t wAux = 0;
 380:Src/mc_tasks.c ****   (void)ENC_CalcAvrgMecSpeedUnit(&ENCODER_M1, &wAux);
 381:Src/mc_tasks.c ****   bool IsSpeedReliable = STO_PLL_CalcAvrgMecSpeedUnit(&STO_PLL_M1, &wAux);
 382:Src/mc_tasks.c ****   PQD_CalcElMotorPower(pMPM[M1]);
 383:Src/mc_tasks.c **** 
 384:Src/mc_tasks.c ****   if (MCI_GetCurrentFaults(&Mci[M1]) == MC_NO_FAULTS)
 385:Src/mc_tasks.c ****   {
 386:Src/mc_tasks.c ****     if (MCI_GetOccurredFaults(&Mci[M1]) == MC_NO_FAULTS)
 387:Src/mc_tasks.c ****     {
 388:Src/mc_tasks.c ****       switch (Mci[M1].State)
 389:Src/mc_tasks.c ****       {
 390:Src/mc_tasks.c ****         case IDLE:
 391:Src/mc_tasks.c ****         {
 392:Src/mc_tasks.c ****           if ((MCI_START == Mci[M1].DirectCommand) || (MCI_MEASURE_OFFSETS == Mci[M1].DirectCommand
 393:Src/mc_tasks.c ****           {
 394:Src/mc_tasks.c ****             {
 395:Src/mc_tasks.c ****               RUC_Clear(&RevUpControlM1, MCI_GetImposedMotorDirection(&Mci[M1]));
 396:Src/mc_tasks.c ****             }
 397:Src/mc_tasks.c **** 
 398:Src/mc_tasks.c ****            if (pwmcHandle[M1]->offsetCalibStatus == false)
 399:Src/mc_tasks.c ****            {
 400:Src/mc_tasks.c ****              PWMC_CurrentReadingCalibr(pwmcHandle[M1], CRC_START);
 401:Src/mc_tasks.c ****              Mci[M1].State = OFFSET_CALIB;
 402:Src/mc_tasks.c ****            }
 403:Src/mc_tasks.c ****            else
 404:Src/mc_tasks.c ****            {
 405:Src/mc_tasks.c ****              /* calibration already done. Enables only TIM channels */
 406:Src/mc_tasks.c ****              pwmcHandle[M1]->OffCalibrWaitTimeCounter = 1u;
 407:Src/mc_tasks.c ****              PWMC_CurrentReadingCalibr(pwmcHandle[M1], CRC_EXEC);
 408:Src/mc_tasks.c ****              R3_2_TurnOnLowSides(pwmcHandle[M1],M1_CHARGE_BOOT_CAP_DUTY_CYCLES);
 409:Src/mc_tasks.c ****              TSK_SetChargeBootCapDelayM1(CHARGE_BOOT_CAP_TICKS);
 410:Src/mc_tasks.c ****              Mci[M1].State = CHARGE_BOOT_CAP;
 411:Src/mc_tasks.c **** 
 412:Src/mc_tasks.c ****            }
 413:Src/mc_tasks.c **** 
 414:Src/mc_tasks.c ****           }
 415:Src/mc_tasks.c ****           else
ARM GAS  /tmp/ccJda0bK.s 			page 12


 416:Src/mc_tasks.c ****           {
 417:Src/mc_tasks.c ****             /* nothing to be done, FW stays in IDLE state */
 418:Src/mc_tasks.c ****           }
 419:Src/mc_tasks.c ****           break;
 420:Src/mc_tasks.c ****         }
 421:Src/mc_tasks.c **** 
 422:Src/mc_tasks.c ****         case OFFSET_CALIB:
 423:Src/mc_tasks.c ****           {
 424:Src/mc_tasks.c ****             if (MCI_STOP == Mci[M1].DirectCommand)
 425:Src/mc_tasks.c ****             {
 426:Src/mc_tasks.c ****               TSK_MF_StopProcessing(&Mci[M1], M1);
 427:Src/mc_tasks.c ****             }
 428:Src/mc_tasks.c ****             else
 429:Src/mc_tasks.c ****             {
 430:Src/mc_tasks.c ****               if (PWMC_CurrentReadingCalibr(pwmcHandle[M1], CRC_EXEC))
 431:Src/mc_tasks.c ****               {
 432:Src/mc_tasks.c ****                 if (MCI_MEASURE_OFFSETS == Mci[M1].DirectCommand)
 433:Src/mc_tasks.c ****                 {
 434:Src/mc_tasks.c ****                   FOC_Clear(M1);
 435:Src/mc_tasks.c ****                   PQD_Clear(pMPM[M1]);
 436:Src/mc_tasks.c ****                   Mci[M1].DirectCommand = MCI_NO_COMMAND;
 437:Src/mc_tasks.c ****                   Mci[M1].State = IDLE;
 438:Src/mc_tasks.c ****                 }
 439:Src/mc_tasks.c ****                 else
 440:Src/mc_tasks.c ****                 {
 441:Src/mc_tasks.c ****                   R3_2_TurnOnLowSides(pwmcHandle[M1],M1_CHARGE_BOOT_CAP_DUTY_CYCLES);
 442:Src/mc_tasks.c ****                   TSK_SetChargeBootCapDelayM1(CHARGE_BOOT_CAP_TICKS);
 443:Src/mc_tasks.c ****                   Mci[M1].State = CHARGE_BOOT_CAP;
 444:Src/mc_tasks.c **** 
 445:Src/mc_tasks.c ****                 }
 446:Src/mc_tasks.c ****               }
 447:Src/mc_tasks.c ****               else
 448:Src/mc_tasks.c ****               {
 449:Src/mc_tasks.c ****                 /* nothing to be done, FW waits for offset calibration to finish */
 450:Src/mc_tasks.c ****               }
 451:Src/mc_tasks.c ****             }
 452:Src/mc_tasks.c ****             break;
 453:Src/mc_tasks.c ****           }
 454:Src/mc_tasks.c **** 
 455:Src/mc_tasks.c ****         case CHARGE_BOOT_CAP:
 456:Src/mc_tasks.c ****         {
 457:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
 458:Src/mc_tasks.c ****           {
 459:Src/mc_tasks.c ****             TSK_MF_StopProcessing(&Mci[M1], M1);
 460:Src/mc_tasks.c ****           }
 461:Src/mc_tasks.c ****           else
 462:Src/mc_tasks.c ****           {
 463:Src/mc_tasks.c ****             if (TSK_ChargeBootCapDelayHasElapsedM1())
 464:Src/mc_tasks.c ****             {
 465:Src/mc_tasks.c ****               R3_2_SwitchOffPWM(pwmcHandle[M1]);
 466:Src/mc_tasks.c ****               FOCVars[M1].bDriveInput = EXTERNAL;
 467:Src/mc_tasks.c ****               STC_SetSpeedSensor( pSTC[M1], &VirtualSpeedSensorM1._Super );
 468:Src/mc_tasks.c ****               STO_PLL_Clear(&STO_PLL_M1);
 469:Src/mc_tasks.c ****               ENC_Clear(&ENCODER_M1);
 470:Src/mc_tasks.c ****               FOC_Clear( M1 );
 471:Src/mc_tasks.c **** 
 472:Src/mc_tasks.c ****               if (EAC_IsAligned(&EncAlignCtrlM1) == false )
ARM GAS  /tmp/ccJda0bK.s 			page 13


 473:Src/mc_tasks.c ****               {
 474:Src/mc_tasks.c ****                 EAC_StartAlignment(&EncAlignCtrlM1);
 475:Src/mc_tasks.c ****                 Mci[M1].State = ALIGNMENT;
 476:Src/mc_tasks.c ****               }
 477:Src/mc_tasks.c ****               else
 478:Src/mc_tasks.c ****               {
 479:Src/mc_tasks.c **** 
 480:Src/mc_tasks.c ****                 VSS_Clear(&VirtualSpeedSensorM1); /* Reset measured speed in IDLE */
 481:Src/mc_tasks.c ****                 FOC_Clear(M1);
 482:Src/mc_tasks.c ****                 Mci[M1].State = START;
 483:Src/mc_tasks.c ****               }
 484:Src/mc_tasks.c **** 
 485:Src/mc_tasks.c ****               PWMC_SwitchOnPWM(pwmcHandle[M1]);
 486:Src/mc_tasks.c ****             }
 487:Src/mc_tasks.c ****             else
 488:Src/mc_tasks.c ****             {
 489:Src/mc_tasks.c ****               /* nothing to be done, FW waits for bootstrap capacitor to charge */
 490:Src/mc_tasks.c ****             }
 491:Src/mc_tasks.c ****           }
 492:Src/mc_tasks.c ****           break;
 493:Src/mc_tasks.c ****         }
 494:Src/mc_tasks.c **** 
 495:Src/mc_tasks.c ****         case ALIGNMENT:
 496:Src/mc_tasks.c ****         {
 497:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
 498:Src/mc_tasks.c ****           {
 499:Src/mc_tasks.c ****             TSK_MF_StopProcessing(&Mci[M1], M1);
 500:Src/mc_tasks.c ****           }
 501:Src/mc_tasks.c ****           else
 502:Src/mc_tasks.c ****           {
 503:Src/mc_tasks.c ****             bool isAligned = EAC_IsAligned(&EncAlignCtrlM1);
 504:Src/mc_tasks.c ****             bool EACDone = EAC_Exec(&EncAlignCtrlM1);
 505:Src/mc_tasks.c ****             if ((isAligned == false)  && (EACDone == false))
 506:Src/mc_tasks.c ****             {
 507:Src/mc_tasks.c ****                 qd_t IqdRef;
 508:Src/mc_tasks.c ****                 IqdRef.q = 0;
 509:Src/mc_tasks.c ****                 IqdRef.d = STC_CalcTorqueReference(pSTC[M1]);
 510:Src/mc_tasks.c ****                 FOCVars[M1].Iqdref = IqdRef;
 511:Src/mc_tasks.c ****             }
 512:Src/mc_tasks.c ****             else
 513:Src/mc_tasks.c ****             {
 514:Src/mc_tasks.c ****               R3_2_SwitchOffPWM( pwmcHandle[M1] );
 515:Src/mc_tasks.c **** 
 516:Src/mc_tasks.c ****               FOC_Clear(M1);
 517:Src/mc_tasks.c ****               TSK_SetStopPermanencyTimeM1(STOPPERMANENCY_TICKS);
 518:Src/mc_tasks.c ****               Mci[M1].State = WAIT_STOP_MOTOR;
 519:Src/mc_tasks.c **** 
 520:Src/mc_tasks.c ****               /* USER CODE BEGIN MediumFrequencyTask M1 EndOfEncAlignment */
 521:Src/mc_tasks.c **** 
 522:Src/mc_tasks.c ****               /* USER CODE END MediumFrequencyTask M1 EndOfEncAlignment */
 523:Src/mc_tasks.c ****             }
 524:Src/mc_tasks.c ****           }
 525:Src/mc_tasks.c ****           break;
 526:Src/mc_tasks.c ****         }
 527:Src/mc_tasks.c **** 
 528:Src/mc_tasks.c ****         case START:
 529:Src/mc_tasks.c ****         {
ARM GAS  /tmp/ccJda0bK.s 			page 14


 530:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
 531:Src/mc_tasks.c ****           {
 532:Src/mc_tasks.c ****             TSK_MF_StopProcessing(&Mci[M1], M1);
 533:Src/mc_tasks.c ****           }
 534:Src/mc_tasks.c ****           else
 535:Src/mc_tasks.c ****           {
 536:Src/mc_tasks.c ****             /* Mechanical speed as imposed by the Virtual Speed Sensor during the Rev Up phase. */
 537:Src/mc_tasks.c ****             int16_t hForcedMecSpeedUnit;
 538:Src/mc_tasks.c ****             qd_t IqdRef;
 539:Src/mc_tasks.c ****             bool ObserverConverged = false;
 540:Src/mc_tasks.c **** 
 541:Src/mc_tasks.c ****             /* Execute the Rev Up procedure */
 542:Src/mc_tasks.c ****             if(! RUC_Exec(&RevUpControlM1))
 543:Src/mc_tasks.c **** 
 544:Src/mc_tasks.c ****             {
 545:Src/mc_tasks.c ****             /* The time allowed for the startup sequence has expired */
 546:Src/mc_tasks.c ****               MCI_FaultProcessing(&Mci[M1], MC_START_UP, 0);
 547:Src/mc_tasks.c **** 
 548:Src/mc_tasks.c ****            }
 549:Src/mc_tasks.c ****            else
 550:Src/mc_tasks.c ****            {
 551:Src/mc_tasks.c ****              /* Execute the torque open loop current start-up ramp:
 552:Src/mc_tasks.c ****               * Compute the Iq reference current as configured in the Rev Up sequence */
 553:Src/mc_tasks.c ****              IqdRef.q = STC_CalcTorqueReference( pSTC[M1] );
 554:Src/mc_tasks.c ****              IqdRef.d = FOCVars[M1].UserIdref;
 555:Src/mc_tasks.c ****              /* Iqd reference current used by the High Frequency Loop to generate the PWM output */
 556:Src/mc_tasks.c ****              FOCVars[M1].Iqdref = IqdRef;
 557:Src/mc_tasks.c ****            }
 558:Src/mc_tasks.c **** 
 559:Src/mc_tasks.c ****            (void) VSS_CalcAvrgMecSpeedUnit(&VirtualSpeedSensorM1, &hForcedMecSpeedUnit);
 560:Src/mc_tasks.c **** 
 561:Src/mc_tasks.c ****            /* check that startup stage where the observer has to be used has been reached */
 562:Src/mc_tasks.c ****            if (true == RUC_FirstAccelerationStageReached(&RevUpControlM1))
 563:Src/mc_tasks.c **** 
 564:Src/mc_tasks.c ****             {
 565:Src/mc_tasks.c ****              ObserverConverged = STO_PLL_IsObserverConverged(&STO_PLL_M1, &hForcedMecSpeedUnit);
 566:Src/mc_tasks.c ****              STO_SetDirection(&STO_PLL_M1, (int8_t)MCI_GetImposedMotorDirection(&Mci[M1]));
 567:Src/mc_tasks.c **** 
 568:Src/mc_tasks.c ****               (void)VSS_SetStartTransition(&VirtualSpeedSensorM1, ObserverConverged);
 569:Src/mc_tasks.c ****             }
 570:Src/mc_tasks.c **** 
 571:Src/mc_tasks.c ****             if (ObserverConverged)
 572:Src/mc_tasks.c ****             {
 573:Src/mc_tasks.c ****               qd_t StatorCurrent = MCM_Park(FOCVars[M1].Ialphabeta, SPD_GetElAngle(&STO_PLL_M1._Sup
 574:Src/mc_tasks.c **** 
 575:Src/mc_tasks.c ****               /* Start switch over ramp. This ramp will transition from the revup to the closed loo
 576:Src/mc_tasks.c ****               REMNG_Init(pREMNG[M1]);
 577:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], FOCVars[M1].Iqdref.q, 0);
 578:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], StatorCurrent.q, TRANSITION_DURATION);
 579:Src/mc_tasks.c ****               Mci[M1].State = SWITCH_OVER;
 580:Src/mc_tasks.c ****             }
 581:Src/mc_tasks.c ****           }
 582:Src/mc_tasks.c ****           break;
 583:Src/mc_tasks.c ****         }
 584:Src/mc_tasks.c **** 
 585:Src/mc_tasks.c ****         case SWITCH_OVER:
 586:Src/mc_tasks.c ****         {
ARM GAS  /tmp/ccJda0bK.s 			page 15


 587:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
 588:Src/mc_tasks.c ****           {
 589:Src/mc_tasks.c ****             TSK_MF_StopProcessing(&Mci[M1], M1);
 590:Src/mc_tasks.c ****           }
 591:Src/mc_tasks.c ****           else
 592:Src/mc_tasks.c ****           {
 593:Src/mc_tasks.c ****             bool LoopClosed;
 594:Src/mc_tasks.c ****             int16_t hForcedMecSpeedUnit;
 595:Src/mc_tasks.c **** 
 596:Src/mc_tasks.c ****             if(! RUC_Exec(&RevUpControlM1))
 597:Src/mc_tasks.c **** 
 598:Src/mc_tasks.c ****             {
 599:Src/mc_tasks.c ****               /* The time allowed for the startup sequence has expired */
 600:Src/mc_tasks.c ****               MCI_FaultProcessing(&Mci[M1], MC_START_UP, 0);
 601:Src/mc_tasks.c **** 
 602:Src/mc_tasks.c ****             }
 603:Src/mc_tasks.c ****             else
 604:Src/mc_tasks.c **** 
 605:Src/mc_tasks.c ****             {
 606:Src/mc_tasks.c ****               /* Compute the virtual speed and positions of the rotor.
 607:Src/mc_tasks.c ****                  The function returns true if the virtual speed is in the reliability range */
 608:Src/mc_tasks.c ****               LoopClosed = VSS_CalcAvrgMecSpeedUnit(&VirtualSpeedSensorM1, &hForcedMecSpeedUnit);
 609:Src/mc_tasks.c ****               /* Check if the transition ramp has completed. */
 610:Src/mc_tasks.c ****               bool tempBool;
 611:Src/mc_tasks.c ****               tempBool = VSS_TransitionEnded(&VirtualSpeedSensorM1);
 612:Src/mc_tasks.c ****               LoopClosed = LoopClosed || tempBool;
 613:Src/mc_tasks.c **** 
 614:Src/mc_tasks.c ****               /* If any of the above conditions is true, the loop is considered closed.
 615:Src/mc_tasks.c ****                  The state machine transitions to the START_RUN state. */
 616:Src/mc_tasks.c ****               if (true ==  LoopClosed)
 617:Src/mc_tasks.c ****               {
 618:Src/mc_tasks.c ****                 #if ( PID_SPEED_INTEGRAL_INIT_DIV == 0 )
 619:Src/mc_tasks.c ****                 PID_SetIntegralTerm(&PIDSpeedHandle_M1, 0);
 620:Src/mc_tasks.c ****                 #else
 621:Src/mc_tasks.c ****                 PID_SetIntegralTerm(&PIDSpeedHandle_M1,
 622:Src/mc_tasks.c ****                                     (((int32_t)FOCVars[M1].Iqdref.q * (int16_t)PID_GetKIDivisor(&PI
 623:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 624:Src/mc_tasks.c **** 				#endif
 625:Src/mc_tasks.c **** 
 626:Src/mc_tasks.c ****                 /* USER CODE BEGIN MediumFrequencyTask M1 1 */
 627:Src/mc_tasks.c ****                 NVIC_EnableIRQ(M1_ENCODER_I_EXTI_IRQn);
 628:Src/mc_tasks.c ****                 /* USER CODE END MediumFrequencyTask M1 1 */
 629:Src/mc_tasks.c ****                 STC_SetSpeedSensor(pSTC[M1], &STO_PLL_M1._Super); /*Observer has converged*/
 630:Src/mc_tasks.c ****                 FOC_InitAdditionalMethods(M1);
 631:Src/mc_tasks.c ****                 FOC_CalcCurrRef( M1 );
 632:Src/mc_tasks.c ****                 STC_ForceSpeedReferenceToCurrentSpeed(pSTC[M1]); /* Init the reference speed to cur
 633:Src/mc_tasks.c ****                 MCI_ExecBufferedCommands(&Mci[M1]); /* Exec the speed ramp after changing of the sp
 634:Src/mc_tasks.c ****                 Mci[M1].State = RUN;
 635:Src/mc_tasks.c ****               }
 636:Src/mc_tasks.c ****             }
 637:Src/mc_tasks.c ****           }
 638:Src/mc_tasks.c ****           break;
 639:Src/mc_tasks.c ****         }
 640:Src/mc_tasks.c **** 
 641:Src/mc_tasks.c ****         case RUN:
 642:Src/mc_tasks.c ****         {
 643:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
ARM GAS  /tmp/ccJda0bK.s 			page 16


 644:Src/mc_tasks.c ****           {
 645:Src/mc_tasks.c ****             TSK_MF_StopProcessing(&Mci[M1], M1);
 646:Src/mc_tasks.c ****           }
 647:Src/mc_tasks.c ****           else
 648:Src/mc_tasks.c ****           {
 649:Src/mc_tasks.c ****             /* USER CODE BEGIN MediumFrequencyTask M1 2 */
 650:Src/mc_tasks.c ****               int8_t lastCommand = Mci[M1].lastCommand ;
 651:Src/mc_tasks.c ****               lastCommand++;
 652:Src/mc_tasks.c ****               lastCommand--;
 653:Src/mc_tasks.c ****               if (Mci[M1].lastCommand == MCI_CMD_EXECSPEEDSIN || Mci[M1].lastCommand ==MCI_CMD_EXEC
 654:Src/mc_tasks.c ****                 Mci[M1].CommandState = MCI_COMMAND_NOT_ALREADY_EXECUTED;
 655:Src/mc_tasks.c ****               mechanicalAngleCalculation(&Mci[M1]);
 656:Src/mc_tasks.c ****             /* USER CODE END MediumFrequencyTask M1 2 */
 657:Src/mc_tasks.c **** 
 658:Src/mc_tasks.c ****             MCI_ExecBufferedCommands(&Mci[M1]);
 659:Src/mc_tasks.c **** 
 660:Src/mc_tasks.c ****               FOC_CalcCurrRef(M1);
 661:Src/mc_tasks.c **** 
 662:Src/mc_tasks.c ****               if(!IsSpeedReliable)
 663:Src/mc_tasks.c ****               {
 664:Src/mc_tasks.c ****                 MCI_FaultProcessing(&Mci[M1], MC_SPEED_FDBK, 0);
 665:Src/mc_tasks.c ****               }
 666:Src/mc_tasks.c **** 
 667:Src/mc_tasks.c ****           }
 668:Src/mc_tasks.c ****           break;
 669:Src/mc_tasks.c ****         }
 670:Src/mc_tasks.c **** 
 671:Src/mc_tasks.c ****         case STOP:
 672:Src/mc_tasks.c ****         {
 673:Src/mc_tasks.c ****           if (TSK_StopPermanencyTimeHasElapsedM1())
 674:Src/mc_tasks.c ****           {
 675:Src/mc_tasks.c **** 
 676:Src/mc_tasks.c ****             STC_SetSpeedSensor(pSTC[M1], &VirtualSpeedSensorM1._Super);  	/*  sensor-less */
 677:Src/mc_tasks.c ****             VSS_Clear(&VirtualSpeedSensorM1); /* Reset measured speed in IDLE */
 678:Src/mc_tasks.c **** 
 679:Src/mc_tasks.c ****             /* USER CODE BEGIN MediumFrequencyTask M1 5 */
 680:Src/mc_tasks.c **** 
 681:Src/mc_tasks.c ****             /* USER CODE END MediumFrequencyTask M1 5 */
 682:Src/mc_tasks.c ****             Mci[M1].DirectCommand = MCI_NO_COMMAND;
 683:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 684:Src/mc_tasks.c ****           }
 685:Src/mc_tasks.c ****           else
 686:Src/mc_tasks.c ****           {
 687:Src/mc_tasks.c ****             /* nothing to do, FW waits for to stop */
 688:Src/mc_tasks.c ****           }
 689:Src/mc_tasks.c ****           break;
 690:Src/mc_tasks.c ****         }
 691:Src/mc_tasks.c **** 
 692:Src/mc_tasks.c ****         case FAULT_OVER:
 693:Src/mc_tasks.c ****         {
 694:Src/mc_tasks.c ****           if (MCI_ACK_FAULTS == Mci[M1].DirectCommand)
 695:Src/mc_tasks.c ****           {
 696:Src/mc_tasks.c ****             Mci[M1].DirectCommand = MCI_NO_COMMAND;
 697:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 698:Src/mc_tasks.c ****           }
 699:Src/mc_tasks.c ****           else
 700:Src/mc_tasks.c ****           {
ARM GAS  /tmp/ccJda0bK.s 			page 17


 701:Src/mc_tasks.c ****             /* nothing to do, FW stays in FAULT_OVER state until acknowledgement */
 702:Src/mc_tasks.c ****           }
 703:Src/mc_tasks.c ****         }
 704:Src/mc_tasks.c ****         break;
 705:Src/mc_tasks.c **** 
 706:Src/mc_tasks.c ****         case FAULT_NOW:
 707:Src/mc_tasks.c ****         {
 708:Src/mc_tasks.c ****           Mci[M1].State = FAULT_OVER;
 709:Src/mc_tasks.c ****         }
 710:Src/mc_tasks.c ****         break;
 711:Src/mc_tasks.c **** 
 712:Src/mc_tasks.c ****         case WAIT_STOP_MOTOR:
 713:Src/mc_tasks.c ****         {
 714:Src/mc_tasks.c ****           if (MCI_STOP == Mci[M1].DirectCommand)
 715:Src/mc_tasks.c ****           {
 716:Src/mc_tasks.c ****             TSK_MF_StopProcessing(&Mci[M1], M1);
 717:Src/mc_tasks.c ****           }
 718:Src/mc_tasks.c ****           else
 719:Src/mc_tasks.c ****           {
 720:Src/mc_tasks.c ****             if (TSK_StopPermanencyTimeHasElapsedM1())
 721:Src/mc_tasks.c ****             {
 722:Src/mc_tasks.c ****               RUC_Clear(&RevUpControlM1, MCI_GetImposedMotorDirection(&Mci[M1]));
 723:Src/mc_tasks.c ****               STO_PLL_Clear( &STO_PLL_M1 );
 724:Src/mc_tasks.c ****               ENC_Clear(&ENCODER_M1);
 725:Src/mc_tasks.c ****               VSS_Clear(&VirtualSpeedSensorM1);
 726:Src/mc_tasks.c ****               R3_2_SwitchOnPWM( pwmcHandle[M1] );
 727:Src/mc_tasks.c ****               Mci[M1].State = START;
 728:Src/mc_tasks.c ****             }
 729:Src/mc_tasks.c ****             else
 730:Src/mc_tasks.c ****             {
 731:Src/mc_tasks.c ****               /* nothing to do */
 732:Src/mc_tasks.c ****             }
 733:Src/mc_tasks.c **** 
 734:Src/mc_tasks.c ****           }
 735:Src/mc_tasks.c ****         }
 736:Src/mc_tasks.c ****         break;
 737:Src/mc_tasks.c **** 
 738:Src/mc_tasks.c ****         default:
 739:Src/mc_tasks.c ****           break;
 740:Src/mc_tasks.c ****        }
 741:Src/mc_tasks.c ****     }
 742:Src/mc_tasks.c ****     else
 743:Src/mc_tasks.c ****     {
 744:Src/mc_tasks.c ****       Mci[M1].State = FAULT_OVER;
 745:Src/mc_tasks.c ****     }
 746:Src/mc_tasks.c ****   }
 747:Src/mc_tasks.c ****   else
 748:Src/mc_tasks.c ****   {
 749:Src/mc_tasks.c ****     Mci[M1].State = FAULT_NOW;
 750:Src/mc_tasks.c ****   }
 751:Src/mc_tasks.c **** 
 752:Src/mc_tasks.c ****   /* USER CODE BEGIN MediumFrequencyTask M1 6 */
 753:Src/mc_tasks.c **** 
 754:Src/mc_tasks.c ****   /* USER CODE END MediumFrequencyTask M1 6 */
 755:Src/mc_tasks.c **** }
 756:Src/mc_tasks.c **** 
 757:Src/mc_tasks.c **** /**
ARM GAS  /tmp/ccJda0bK.s 			page 18


 758:Src/mc_tasks.c ****   * @brief  It re-initializes the current and voltage variables. Moreover
 759:Src/mc_tasks.c ****   *         it clears qd currents PI controllers, voltage sensor and SpeednTorque
 760:Src/mc_tasks.c ****   *         controller. It must be called before each motor restart.
 761:Src/mc_tasks.c ****   *         It does not clear speed sensor.
 762:Src/mc_tasks.c ****   * @param  bMotor related motor it can be M1 or M2
 763:Src/mc_tasks.c ****   * @retval none
 764:Src/mc_tasks.c ****   */
 765:Src/mc_tasks.c **** __weak void FOC_Clear(uint8_t bMotor)
 766:Src/mc_tasks.c **** {
 202              		.loc 1 766 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 16
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		.loc 1 766 1 is_stmt 0 view .LVU57
 207 0000 30B5     		push	{r4, r5, lr}
 208              		.cfi_def_cfa_offset 12
 209              		.cfi_offset 4, -12
 210              		.cfi_offset 5, -8
 211              		.cfi_offset 14, -4
 212 0002 85B0     		sub	sp, sp, #20
 213              		.cfi_def_cfa_offset 32
 214 0004 0546     		mov	r5, r0
 767:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_Clear 0 */
 768:Src/mc_tasks.c **** 
 769:Src/mc_tasks.c ****   /* USER CODE END FOC_Clear 0 */
 770:Src/mc_tasks.c **** 
 771:Src/mc_tasks.c ****   ab_t NULL_ab = {((int16_t)0), ((int16_t)0)};
 215              		.loc 1 771 3 is_stmt 1 view .LVU58
 216              		.loc 1 771 8 is_stmt 0 view .LVU59
 217 0006 0024     		movs	r4, #0
 218 0008 ADF80C40 		strh	r4, [sp, #12]	@ movhi
 219 000c ADF80E40 		strh	r4, [sp, #14]	@ movhi
 772:Src/mc_tasks.c ****   qd_t NULL_qd = {((int16_t)0), ((int16_t)0)};
 220              		.loc 1 772 3 is_stmt 1 view .LVU60
 221              		.loc 1 772 8 is_stmt 0 view .LVU61
 222 0010 ADF80840 		strh	r4, [sp, #8]	@ movhi
 223 0014 ADF80A40 		strh	r4, [sp, #10]	@ movhi
 773:Src/mc_tasks.c ****   alphabeta_t NULL_alphabeta = {((int16_t)0), ((int16_t)0)};
 224              		.loc 1 773 3 is_stmt 1 view .LVU62
 225              		.loc 1 773 15 is_stmt 0 view .LVU63
 226 0018 ADF80440 		strh	r4, [sp, #4]	@ movhi
 227 001c ADF80640 		strh	r4, [sp, #6]	@ movhi
 774:Src/mc_tasks.c **** 
 775:Src/mc_tasks.c ****   FOCVars[bMotor].Iab = NULL_ab;
 228              		.loc 1 775 3 is_stmt 1 view .LVU64
 229              		.loc 1 775 23 is_stmt 0 view .LVU65
 230 0020 1849     		ldr	r1, .L14
 231 0022 2622     		movs	r2, #38
 232 0024 02FB00F2 		mul	r2, r2, r0
 233 0028 8B18     		adds	r3, r1, r2
 234 002a 0398     		ldr	r0, [sp, #12]
 235              	.LVL23:
 236              		.loc 1 775 23 view .LVU66
 237 002c 8850     		str	r0, [r1, r2]	@ unaligned
 776:Src/mc_tasks.c ****   FOCVars[bMotor].Ialphabeta = NULL_alphabeta;
 238              		.loc 1 776 3 is_stmt 1 view .LVU67
 239              		.loc 1 776 30 is_stmt 0 view .LVU68
ARM GAS  /tmp/ccJda0bK.s 			page 19


 240 002e 0198     		ldr	r0, [sp, #4]
 241 0030 5860     		str	r0, [r3, #4]	@ unaligned
 777:Src/mc_tasks.c ****   FOCVars[bMotor].Iqd = NULL_qd;
 242              		.loc 1 777 3 is_stmt 1 view .LVU69
 243              		.loc 1 777 23 is_stmt 0 view .LVU70
 244 0032 0298     		ldr	r0, [sp, #8]
 245 0034 D860     		str	r0, [r3, #12]	@ unaligned
 778:Src/mc_tasks.c ****   {
 779:Src/mc_tasks.c ****     FOCVars[bMotor].Iqdref = NULL_qd;
 246              		.loc 1 779 5 is_stmt 1 view .LVU71
 247              		.loc 1 779 28 is_stmt 0 view .LVU72
 248 0036 1861     		str	r0, [r3, #16]	@ unaligned
 780:Src/mc_tasks.c ****   }
 781:Src/mc_tasks.c ****   FOCVars[bMotor].hTeref = (int16_t)0;
 249              		.loc 1 781 3 is_stmt 1 view .LVU73
 250              		.loc 1 781 26 is_stmt 0 view .LVU74
 251 0038 DC83     		strh	r4, [r3, #30]	@ movhi
 782:Src/mc_tasks.c ****   FOCVars[bMotor].Vqd = NULL_qd;
 252              		.loc 1 782 3 is_stmt 1 view .LVU75
 253              		.loc 1 782 23 is_stmt 0 view .LVU76
 254 003a C3F81600 		str	r0, [r3, #22]	@ unaligned
 783:Src/mc_tasks.c ****   FOCVars[bMotor].Valphabeta = NULL_alphabeta;
 255              		.loc 1 783 3 is_stmt 1 view .LVU77
 256              		.loc 1 783 30 is_stmt 0 view .LVU78
 257 003e 0198     		ldr	r0, [sp, #4]
 258 0040 C3F81A00 		str	r0, [r3, #26]	@ unaligned
 784:Src/mc_tasks.c ****   FOCVars[bMotor].hElAngle = (int16_t)0;
 259              		.loc 1 784 3 is_stmt 1 view .LVU79
 260              		.loc 1 784 28 is_stmt 0 view .LVU80
 261 0044 1C84     		strh	r4, [r3, #32]	@ movhi
 785:Src/mc_tasks.c **** 
 786:Src/mc_tasks.c ****   PID_SetIntegralTerm(pPIDIq[bMotor], ((int32_t)0));
 262              		.loc 1 786 3 is_stmt 1 view .LVU81
 263 0046 2146     		mov	r1, r4
 264 0048 0F4B     		ldr	r3, .L14+4
 265 004a 53F82500 		ldr	r0, [r3, r5, lsl #2]
 266 004e FFF7FEFF 		bl	PID_SetIntegralTerm
 267              	.LVL24:
 787:Src/mc_tasks.c ****   PID_SetIntegralTerm(pPIDId[bMotor], ((int32_t)0));
 268              		.loc 1 787 3 view .LVU82
 269 0052 2146     		mov	r1, r4
 270 0054 0D4B     		ldr	r3, .L14+8
 271 0056 53F82500 		ldr	r0, [r3, r5, lsl #2]
 272 005a FFF7FEFF 		bl	PID_SetIntegralTerm
 273              	.LVL25:
 788:Src/mc_tasks.c **** 
 789:Src/mc_tasks.c ****   STC_Clear(pSTC[bMotor]);
 274              		.loc 1 789 3 view .LVU83
 275 005e 0C4B     		ldr	r3, .L14+12
 276 0060 53F82500 		ldr	r0, [r3, r5, lsl #2]
 277 0064 FFF7FEFF 		bl	STC_Clear
 278              	.LVL26:
 790:Src/mc_tasks.c **** 
 791:Src/mc_tasks.c ****   PWMC_SwitchOffPWM(pwmcHandle[bMotor]);
 279              		.loc 1 791 3 view .LVU84
 280 0068 0A4B     		ldr	r3, .L14+16
 281 006a 53F82500 		ldr	r0, [r3, r5, lsl #2]
ARM GAS  /tmp/ccJda0bK.s 			page 20


 282 006e FFF7FEFF 		bl	PWMC_SwitchOffPWM
 283              	.LVL27:
 792:Src/mc_tasks.c **** 
 793:Src/mc_tasks.c ****   if (NULL == pFF[bMotor])
 284              		.loc 1 793 3 view .LVU85
 285              		.loc 1 793 18 is_stmt 0 view .LVU86
 286 0072 094B     		ldr	r3, .L14+20
 287 0074 53F82500 		ldr	r0, [r3, r5, lsl #2]
 288              		.loc 1 793 6 view .LVU87
 289 0078 08B1     		cbz	r0, .L11
 794:Src/mc_tasks.c ****   {
 795:Src/mc_tasks.c ****     /* Nothing to do */
 796:Src/mc_tasks.c ****   }
 797:Src/mc_tasks.c ****   else
 798:Src/mc_tasks.c ****   {
 799:Src/mc_tasks.c ****     FF_Clear(pFF[bMotor]);
 290              		.loc 1 799 5 is_stmt 1 view .LVU88
 291 007a FFF7FEFF 		bl	FF_Clear
 292              	.LVL28:
 293              	.L11:
 800:Src/mc_tasks.c ****   }
 801:Src/mc_tasks.c **** 
 802:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_Clear 1 */
 803:Src/mc_tasks.c **** 
 804:Src/mc_tasks.c ****   /* USER CODE END FOC_Clear 1 */
 805:Src/mc_tasks.c **** }
 294              		.loc 1 805 1 is_stmt 0 view .LVU89
 295 007e 05B0     		add	sp, sp, #20
 296              		.cfi_def_cfa_offset 12
 297              		@ sp needed
 298 0080 30BD     		pop	{r4, r5, pc}
 299              	.L15:
 300 0082 00BF     		.align	2
 301              	.L14:
 302 0084 00000000 		.word	.LANCHOR2
 303 0088 00000000 		.word	pPIDIq
 304 008c 00000000 		.word	pPIDId
 305 0090 00000000 		.word	pSTC
 306 0094 00000000 		.word	.LANCHOR3
 307 0098 00000000 		.word	pFF
 308              		.cfi_endproc
 309              	.LFE1628:
 311              		.section	.text.MCboot,"ax",%progbits
 312              		.align	1
 313              		.weak	MCboot
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu fpv4-sp-d16
 319              	MCboot:
 320              	.LVL29:
 321              	.LFB1622:
 107:Src/mc_tasks.c ****   /* USER CODE BEGIN MCboot 0 */
 322              		.loc 1 107 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 8
 325              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccJda0bK.s 			page 21


 112:Src/mc_tasks.c ****   {
 326              		.loc 1 112 3 view .LVU91
 112:Src/mc_tasks.c ****   {
 327              		.loc 1 112 6 is_stmt 0 view .LVU92
 328 0000 0028     		cmp	r0, #0
 329 0002 00F08780 		beq	.L19
 107:Src/mc_tasks.c ****   /* USER CODE BEGIN MCboot 0 */
 330              		.loc 1 107 1 view .LVU93
 331 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 332              		.cfi_def_cfa_offset 36
 333              		.cfi_offset 4, -36
 334              		.cfi_offset 5, -32
 335              		.cfi_offset 6, -28
 336              		.cfi_offset 7, -24
 337              		.cfi_offset 8, -20
 338              		.cfi_offset 9, -16
 339              		.cfi_offset 10, -12
 340              		.cfi_offset 11, -8
 341              		.cfi_offset 14, -4
 342 000a 85B0     		sub	sp, sp, #20
 343              		.cfi_def_cfa_offset 56
 344 000c 8246     		mov	r10, r0
 119:Src/mc_tasks.c **** 
 345              		.loc 1 119 5 is_stmt 1 view .LVU94
 119:Src/mc_tasks.c **** 
 346              		.loc 1 119 22 is_stmt 0 view .LVU95
 347 000e DFF86091 		ldr	r9, .L22+88
 348 0012 0027     		movs	r7, #0
 349 0014 89F80070 		strb	r7, [r9]
 124:Src/mc_tasks.c ****     R3_2_Init(&PWM_Handle_M1);
 350              		.loc 1 124 5 is_stmt 1 view .LVU96
 124:Src/mc_tasks.c ****     R3_2_Init(&PWM_Handle_M1);
 351              		.loc 1 124 20 is_stmt 0 view .LVU97
 352 0018 DFF85881 		ldr	r8, .L22+92
 353 001c 3E48     		ldr	r0, .L22
 354              	.LVL30:
 124:Src/mc_tasks.c ****     R3_2_Init(&PWM_Handle_M1);
 355              		.loc 1 124 20 view .LVU98
 356 001e C8F80000 		str	r0, [r8]
 125:Src/mc_tasks.c ****     ASPEP_start(&aspepOverUartA);
 357              		.loc 1 125 5 is_stmt 1 view .LVU99
 358 0022 FFF7FEFF 		bl	R3_2_Init
 359              	.LVL31:
 126:Src/mc_tasks.c **** 
 360              		.loc 1 126 5 view .LVU100
 361 0026 3D48     		ldr	r0, .L22+4
 362 0028 FFF7FEFF 		bl	ASPEP_start
 363              	.LVL32:
 134:Src/mc_tasks.c **** 
 364              		.loc 1 134 5 view .LVU101
 365 002c FFF7FEFF 		bl	startTimers
 366              	.LVL33:
 139:Src/mc_tasks.c **** 
 367              		.loc 1 139 5 view .LVU102
 368 0030 3B4D     		ldr	r5, .L22+8
 369 0032 2846     		mov	r0, r5
 370 0034 FFF7FEFF 		bl	PID_HandleInit
ARM GAS  /tmp/ccJda0bK.s 			page 22


 371              	.LVL34:
 144:Src/mc_tasks.c **** 
 372              		.loc 1 144 5 view .LVU103
 373 0038 3A4E     		ldr	r6, .L22+12
 374 003a 3046     		mov	r0, r6
 375 003c FFF7FEFF 		bl	STO_PLL_Init
 376              	.LVL35:
 149:Src/mc_tasks.c **** 
 377              		.loc 1 149 5 view .LVU104
 378 0040 394C     		ldr	r4, .L22+16
 379 0042 3246     		mov	r2, r6
 380 0044 2946     		mov	r1, r5
 381 0046 2068     		ldr	r0, [r4]
 382 0048 FFF7FEFF 		bl	STC_Init
 383              	.LVL36:
 154:Src/mc_tasks.c **** 
 384              		.loc 1 154 5 view .LVU105
 385 004c DFF828B1 		ldr	fp, .L22+96
 386 0050 5846     		mov	r0, fp
 387 0052 FFF7FEFF 		bl	ENC_Init
 388              	.LVL37:
 159:Src/mc_tasks.c ****     pEAC[M1] = &EncAlignCtrlM1;
 389              		.loc 1 159 5 view .LVU106
 390 0056 354D     		ldr	r5, .L22+20
 391 0058 354E     		ldr	r6, .L22+24
 392 005a 5B46     		mov	r3, fp
 393 005c 2A46     		mov	r2, r5
 394 005e 2168     		ldr	r1, [r4]
 395 0060 3046     		mov	r0, r6
 396 0062 FFF7FEFF 		bl	EAC_Init
 397              	.LVL38:
 160:Src/mc_tasks.c **** 
 398              		.loc 1 160 5 view .LVU107
 160:Src/mc_tasks.c **** 
 399              		.loc 1 160 14 is_stmt 0 view .LVU108
 400 0066 334B     		ldr	r3, .L22+28
 401 0068 1E60     		str	r6, [r3]
 165:Src/mc_tasks.c **** 
 402              		.loc 1 165 5 is_stmt 1 view .LVU109
 403 006a 2846     		mov	r0, r5
 404 006c FFF7FEFF 		bl	VSS_Init
 405              	.LVL39:
 170:Src/mc_tasks.c **** 
 406              		.loc 1 170 5 view .LVU110
 407 0070 D8F80030 		ldr	r3, [r8]
 408 0074 0093     		str	r3, [sp]
 409 0076 304B     		ldr	r3, .L22+32
 410 0078 2A46     		mov	r2, r5
 411 007a 2168     		ldr	r1, [r4]
 412 007c 2F48     		ldr	r0, .L22+36
 413 007e FFF7FEFF 		bl	RUC_Init
 414              	.LVL40:
 175:Src/mc_tasks.c ****     PID_HandleInit(&PIDIdHandle_M1);
 415              		.loc 1 175 5 view .LVU111
 416 0082 2F48     		ldr	r0, .L22+40
 417 0084 FFF7FEFF 		bl	PID_HandleInit
 418              	.LVL41:
ARM GAS  /tmp/ccJda0bK.s 			page 23


 176:Src/mc_tasks.c **** 
 419              		.loc 1 176 5 view .LVU112
 420 0088 2E48     		ldr	r0, .L22+44
 421 008a FFF7FEFF 		bl	PID_HandleInit
 422              	.LVL42:
 181:Src/mc_tasks.c **** 
 423              		.loc 1 181 5 view .LVU113
 424 008e 2E4E     		ldr	r6, .L22+48
 425 0090 3046     		mov	r0, r6
 426 0092 FFF7FEFF 		bl	RVBS_Init
 427              	.LVL43:
 186:Src/mc_tasks.c ****     pMPM[M1]->pFOCVars = &FOCVars[M1];
 428              		.loc 1 186 5 view .LVU114
 186:Src/mc_tasks.c ****     pMPM[M1]->pFOCVars = &FOCVars[M1];
 429              		.loc 1 186 9 is_stmt 0 view .LVU115
 430 0096 2D4B     		ldr	r3, .L22+52
 431 0098 1B68     		ldr	r3, [r3]
 186:Src/mc_tasks.c ****     pMPM[M1]->pFOCVars = &FOCVars[M1];
 432              		.loc 1 186 20 view .LVU116
 433 009a DE60     		str	r6, [r3, #12]
 187:Src/mc_tasks.c **** 
 434              		.loc 1 187 5 is_stmt 1 view .LVU117
 187:Src/mc_tasks.c **** 
 435              		.loc 1 187 24 is_stmt 0 view .LVU118
 436 009c 2C4D     		ldr	r5, .L22+56
 437 009e 9D60     		str	r5, [r3, #8]
 192:Src/mc_tasks.c **** 
 438              		.loc 1 192 5 is_stmt 1 view .LVU119
 439 00a0 2C48     		ldr	r0, .L22+60
 440 00a2 FFF7FEFF 		bl	NTC_Init
 441              	.LVL44:
 197:Src/mc_tasks.c **** 
 442              		.loc 1 197 5 view .LVU120
 443 00a6 2C4B     		ldr	r3, .L22+64
 444 00a8 1B68     		ldr	r3, [r3]
 445 00aa 2C4A     		ldr	r2, .L22+68
 446 00ac 1268     		ldr	r2, [r2]
 447 00ae 3146     		mov	r1, r6
 448 00b0 2B48     		ldr	r0, .L22+72
 449 00b2 0068     		ldr	r0, [r0]
 450 00b4 FFF7FEFF 		bl	FF_Init
 451              	.LVL45:
 199:Src/mc_tasks.c ****     REMNG_Init(pREMNG[M1]);
 452              		.loc 1 199 5 view .LVU121
 199:Src/mc_tasks.c ****     REMNG_Init(pREMNG[M1]);
 453              		.loc 1 199 16 is_stmt 0 view .LVU122
 454 00b8 2A48     		ldr	r0, .L22+76
 455 00ba 2B4B     		ldr	r3, .L22+80
 456 00bc 1860     		str	r0, [r3]
 200:Src/mc_tasks.c **** 
 457              		.loc 1 200 5 is_stmt 1 view .LVU123
 458 00be FFF7FEFF 		bl	REMNG_Init
 459              	.LVL46:
 202:Src/mc_tasks.c ****     FOCVars[M1].bDriveInput = EXTERNAL;
 460              		.loc 1 202 5 view .LVU124
 461 00c2 3846     		mov	r0, r7
 462 00c4 FFF7FEFF 		bl	FOC_Clear
ARM GAS  /tmp/ccJda0bK.s 			page 24


 463              	.LVL47:
 203:Src/mc_tasks.c ****     FOCVars[M1].Iqdref = STC_GetDefaultIqdref(pSTC[M1]);
 464              		.loc 1 203 5 view .LVU125
 203:Src/mc_tasks.c ****     FOCVars[M1].Iqdref = STC_GetDefaultIqdref(pSTC[M1]);
 465              		.loc 1 203 29 is_stmt 0 view .LVU126
 466 00c8 4FF0010B 		mov	fp, #1
 467 00cc 85F824B0 		strb	fp, [r5, #36]
 204:Src/mc_tasks.c ****     FOCVars[M1].UserIdref = STC_GetDefaultIqdref(pSTC[M1]).d;
 468              		.loc 1 204 5 is_stmt 1 view .LVU127
 204:Src/mc_tasks.c ****     FOCVars[M1].UserIdref = STC_GetDefaultIqdref(pSTC[M1]).d;
 469              		.loc 1 204 26 is_stmt 0 view .LVU128
 470 00d0 2068     		ldr	r0, [r4]
 471 00d2 FFF7FEFF 		bl	STC_GetDefaultIqdref
 472              	.LVL48:
 473 00d6 2861     		str	r0, [r5, #16]
 205:Src/mc_tasks.c ****     MCI_Init(&Mci[M1], pSTC[M1], &FOCVars[M1],pwmcHandle[M1] );
 474              		.loc 1 205 5 is_stmt 1 view .LVU129
 205:Src/mc_tasks.c ****     MCI_Init(&Mci[M1], pSTC[M1], &FOCVars[M1],pwmcHandle[M1] );
 475              		.loc 1 205 29 is_stmt 0 view .LVU130
 476 00d8 2068     		ldr	r0, [r4]
 477 00da FFF7FEFF 		bl	STC_GetDefaultIqdref
 478              	.LVL49:
 205:Src/mc_tasks.c ****     MCI_Init(&Mci[M1], pSTC[M1], &FOCVars[M1],pwmcHandle[M1] );
 479              		.loc 1 205 59 view .LVU131
 480 00de 0014     		asrs	r0, r0, #16
 205:Src/mc_tasks.c ****     MCI_Init(&Mci[M1], pSTC[M1], &FOCVars[M1],pwmcHandle[M1] );
 481              		.loc 1 205 27 view .LVU132
 482 00e0 A882     		strh	r0, [r5, #20]	@ movhi
 206:Src/mc_tasks.c ****     // MCI_ExecSpeedRamp(&Mci[M1],
 483              		.loc 1 206 5 is_stmt 1 view .LVU133
 484 00e2 224E     		ldr	r6, .L22+84
 485 00e4 D8F80030 		ldr	r3, [r8]
 486 00e8 2A46     		mov	r2, r5
 487 00ea 2168     		ldr	r1, [r4]
 488 00ec 3046     		mov	r0, r6
 489 00ee FFF7FEFF 		bl	MCI_Init
 490              	.LVL50:
 209:Src/mc_tasks.c ****     pMCIList[M1] = &Mci[M1];
 491              		.loc 1 209 5 view .LVU134
 209:Src/mc_tasks.c ****     pMCIList[M1] = &Mci[M1];
 492              		.loc 1 209 34 is_stmt 0 view .LVU135
 493 00f2 2068     		ldr	r0, [r4]
 494 00f4 FFF7FEFF 		bl	STC_GetDefaultIqdref
 495              	.LVL51:
 209:Src/mc_tasks.c ****     pMCIList[M1] = &Mci[M1];
 496              		.loc 1 209 5 view .LVU136
 497 00f8 3A46     		mov	r2, r7
 498 00fa 01B2     		sxth	r1, r0
 499 00fc 3046     		mov	r0, r6
 500 00fe FFF7FEFF 		bl	MCI_ExecTorqueRamp
 501              	.LVL52:
 210:Src/mc_tasks.c **** 
 502              		.loc 1 210 5 is_stmt 1 view .LVU137
 210:Src/mc_tasks.c **** 
 503              		.loc 1 210 18 is_stmt 0 view .LVU138
 504 0102 CAF80060 		str	r6, [r10]
 213:Src/mc_tasks.c **** 
ARM GAS  /tmp/ccJda0bK.s 			page 25


 505              		.loc 1 213 5 is_stmt 1 view .LVU139
 506 0106 FFF7FEFF 		bl	MC_APP_BootHook
 507              	.LVL53:
 219:Src/mc_tasks.c ****   }
 508              		.loc 1 219 5 view .LVU140
 219:Src/mc_tasks.c ****   }
 509              		.loc 1 219 22 is_stmt 0 view .LVU141
 510 010a 89F800B0 		strb	fp, [r9]
 221:Src/mc_tasks.c **** 
 511              		.loc 1 221 1 view .LVU142
 512 010e 05B0     		add	sp, sp, #20
 513              		.cfi_def_cfa_offset 36
 514              		@ sp needed
 515 0110 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 516              	.LVL54:
 517              	.L19:
 518              		.cfi_def_cfa_offset 0
 519              		.cfi_restore 4
 520              		.cfi_restore 5
 521              		.cfi_restore 6
 522              		.cfi_restore 7
 523              		.cfi_restore 8
 524              		.cfi_restore 9
 525              		.cfi_restore 10
 526              		.cfi_restore 11
 527              		.cfi_restore 14
 221:Src/mc_tasks.c **** 
 528              		.loc 1 221 1 view .LVU143
 529 0114 7047     		bx	lr
 530              	.L23:
 531 0116 00BF     		.align	2
 532              	.L22:
 533 0118 00000000 		.word	PWM_Handle_M1
 534 011c 00000000 		.word	aspepOverUartA
 535 0120 00000000 		.word	PIDSpeedHandle_M1
 536 0124 00000000 		.word	STO_PLL_M1
 537 0128 00000000 		.word	pSTC
 538 012c 00000000 		.word	VirtualSpeedSensorM1
 539 0130 00000000 		.word	EncAlignCtrlM1
 540 0134 00000000 		.word	.LANCHOR5
 541 0138 00000000 		.word	STO_M1
 542 013c 00000000 		.word	RevUpControlM1
 543 0140 00000000 		.word	PIDIqHandle_M1
 544 0144 00000000 		.word	PIDIdHandle_M1
 545 0148 00000000 		.word	BusVoltageSensor_M1
 546 014c 00000000 		.word	pMPM
 547 0150 00000000 		.word	.LANCHOR2
 548 0154 00000000 		.word	TempSensor_M1
 549 0158 00000000 		.word	pPIDIq
 550 015c 00000000 		.word	pPIDId
 551 0160 00000000 		.word	pFF
 552 0164 00000000 		.word	RampExtMngrHFParamsM1
 553 0168 00000000 		.word	.LANCHOR6
 554 016c 00000000 		.word	Mci
 555 0170 00000000 		.word	.LANCHOR4
 556 0174 00000000 		.word	.LANCHOR3
 557 0178 00000000 		.word	ENCODER_M1
ARM GAS  /tmp/ccJda0bK.s 			page 26


 558              		.cfi_endproc
 559              	.LFE1622:
 561              		.section	.text.FOC_InitAdditionalMethods,"ax",%progbits
 562              		.align	1
 563              		.weak	FOC_InitAdditionalMethods
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu fpv4-sp-d16
 569              	FOC_InitAdditionalMethods:
 570              	.LVL55:
 571              	.LFB1629:
 806:Src/mc_tasks.c **** 
 807:Src/mc_tasks.c **** /**
 808:Src/mc_tasks.c ****   * @brief  Use this method to initialize additional methods (if any) in
 809:Src/mc_tasks.c ****   *         START_TO_RUN state
 810:Src/mc_tasks.c ****   * @param  bMotor related motor it can be M1 or M2
 811:Src/mc_tasks.c ****   * @retval none
 812:Src/mc_tasks.c ****   */
 813:Src/mc_tasks.c **** __weak void FOC_InitAdditionalMethods(uint8_t bMotor) //cstat !RED-func-no-effect
 814:Src/mc_tasks.c **** {
 572              		.loc 1 814 1 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 815:Src/mc_tasks.c ****     if (M_NONE == bMotor)
 576              		.loc 1 815 5 view .LVU145
 577              		.loc 1 815 8 is_stmt 0 view .LVU146
 578 0000 FF28     		cmp	r0, #255
 579 0002 07D0     		beq	.L27
 814:Src/mc_tasks.c ****     if (M_NONE == bMotor)
 580              		.loc 1 814 1 view .LVU147
 581 0004 08B5     		push	{r3, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 3, -8
 584              		.cfi_offset 14, -4
 816:Src/mc_tasks.c ****     {
 817:Src/mc_tasks.c ****       /* Nothing to do */
 818:Src/mc_tasks.c ****     }
 819:Src/mc_tasks.c ****     else
 820:Src/mc_tasks.c ****     {
 821:Src/mc_tasks.c ****       if (NULL == pFF[bMotor])
 585              		.loc 1 821 7 is_stmt 1 view .LVU148
 586              		.loc 1 821 22 is_stmt 0 view .LVU149
 587 0006 044B     		ldr	r3, .L30
 588 0008 53F82000 		ldr	r0, [r3, r0, lsl #2]
 589              	.LVL56:
 590              		.loc 1 821 10 view .LVU150
 591 000c 08B1     		cbz	r0, .L24
 822:Src/mc_tasks.c ****       {
 823:Src/mc_tasks.c ****         /* Nothing to do */
 824:Src/mc_tasks.c ****       }
 825:Src/mc_tasks.c ****       else
 826:Src/mc_tasks.c ****       {
 827:Src/mc_tasks.c ****         FF_InitFOCAdditionalMethods(pFF[bMotor]);
 592              		.loc 1 827 9 is_stmt 1 view .LVU151
 593 000e FFF7FEFF 		bl	FF_InitFOCAdditionalMethods
ARM GAS  /tmp/ccJda0bK.s 			page 27


 594              	.LVL57:
 595              	.L24:
 828:Src/mc_tasks.c ****       }
 829:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_InitAdditionalMethods 0 */
 830:Src/mc_tasks.c **** 
 831:Src/mc_tasks.c ****   /* USER CODE END FOC_InitAdditionalMethods 0 */
 832:Src/mc_tasks.c ****     }
 833:Src/mc_tasks.c **** }
 596              		.loc 1 833 1 is_stmt 0 view .LVU152
 597 0012 08BD     		pop	{r3, pc}
 598              	.LVL58:
 599              	.L27:
 600              		.cfi_def_cfa_offset 0
 601              		.cfi_restore 3
 602              		.cfi_restore 14
 603              		.loc 1 833 1 view .LVU153
 604 0014 7047     		bx	lr
 605              	.L31:
 606 0016 00BF     		.align	2
 607              	.L30:
 608 0018 00000000 		.word	pFF
 609              		.cfi_endproc
 610              	.LFE1629:
 612              		.section	.text.FOC_CalcCurrRef,"ax",%progbits
 613              		.align	1
 614              		.weak	FOC_CalcCurrRef
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu fpv4-sp-d16
 620              	FOC_CalcCurrRef:
 621              	.LVL59:
 622              	.LFB1630:
 834:Src/mc_tasks.c **** 
 835:Src/mc_tasks.c **** /**
 836:Src/mc_tasks.c ****   * @brief  It computes the new values of Iqdref (current references on qd
 837:Src/mc_tasks.c ****   *         reference frame) based on the required electrical torque information
 838:Src/mc_tasks.c ****   *         provided by oTSC object (internally clocked).
 839:Src/mc_tasks.c ****   *         If implemented in the derived class it executes flux weakening and/or
 840:Src/mc_tasks.c ****   *         MTPA algorithm(s). It must be called with the periodicity specified
 841:Src/mc_tasks.c ****   *         in oTSC parameters
 842:Src/mc_tasks.c ****   * @param  bMotor related motor it can be M1 or M2
 843:Src/mc_tasks.c ****   * @retval none
 844:Src/mc_tasks.c ****   */
 845:Src/mc_tasks.c **** __weak void FOC_CalcCurrRef(uint8_t bMotor)
 846:Src/mc_tasks.c **** {
 623              		.loc 1 846 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 847:Src/mc_tasks.c **** 
 848:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_CalcCurrRef 0 */
 849:Src/mc_tasks.c **** 
 850:Src/mc_tasks.c ****   /* USER CODE END FOC_CalcCurrRef 0 */
 851:Src/mc_tasks.c ****   if (INTERNAL == FOCVars[bMotor].bDriveInput)
 627              		.loc 1 851 3 view .LVU155
 628              		.loc 1 851 34 is_stmt 0 view .LVU156
ARM GAS  /tmp/ccJda0bK.s 			page 28


 629 0000 114A     		ldr	r2, .L39
 630 0002 2623     		movs	r3, #38
 631 0004 03FB0023 		mla	r3, r3, r0, r2
 632 0008 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 633              		.loc 1 851 6 view .LVU157
 634 000c 03B1     		cbz	r3, .L38
 635 000e 7047     		bx	lr
 636              	.L38:
 846:Src/mc_tasks.c **** 
 637              		.loc 1 846 1 view .LVU158
 638 0010 10B5     		push	{r4, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 4, -8
 641              		.cfi_offset 14, -4
 642 0012 0446     		mov	r4, r0
 852:Src/mc_tasks.c ****   {
 853:Src/mc_tasks.c ****     FOCVars[bMotor].hTeref = STC_CalcTorqueReference(pSTC[bMotor]);
 643              		.loc 1 853 5 is_stmt 1 view .LVU159
 644              		.loc 1 853 30 is_stmt 0 view .LVU160
 645 0014 0D4B     		ldr	r3, .L39+4
 646 0016 53F82000 		ldr	r0, [r3, r0, lsl #2]
 647              	.LVL60:
 648              		.loc 1 853 30 view .LVU161
 649 001a FFF7FEFF 		bl	STC_CalcTorqueReference
 650              	.LVL61:
 651              		.loc 1 853 28 view .LVU162
 652 001e 0A4A     		ldr	r2, .L39
 653 0020 2623     		movs	r3, #38
 654 0022 03FB0423 		mla	r3, r3, r4, r2
 655 0026 D883     		strh	r0, [r3, #30]	@ movhi
 854:Src/mc_tasks.c ****     FOCVars[bMotor].Iqdref.q = FOCVars[bMotor].hTeref;
 656              		.loc 1 854 5 is_stmt 1 view .LVU163
 657              		.loc 1 854 30 is_stmt 0 view .LVU164
 658 0028 1882     		strh	r0, [r3, #16]	@ movhi
 855:Src/mc_tasks.c **** 
 856:Src/mc_tasks.c ****     if (NULL == pFF[bMotor])
 659              		.loc 1 856 5 is_stmt 1 view .LVU165
 660              		.loc 1 856 20 is_stmt 0 view .LVU166
 661 002a 094B     		ldr	r3, .L39+8
 662 002c 53F82400 		ldr	r0, [r3, r4, lsl #2]
 663              		.loc 1 856 8 view .LVU167
 664 0030 40B1     		cbz	r0, .L32
 857:Src/mc_tasks.c ****     {
 858:Src/mc_tasks.c ****       /* Nothing to do */
 859:Src/mc_tasks.c ****     }
 860:Src/mc_tasks.c ****     else
 861:Src/mc_tasks.c ****     {
 862:Src/mc_tasks.c ****       FF_VqdffComputation(pFF[bMotor], FOCVars[bMotor].Iqdref, pSTC[bMotor]);
 665              		.loc 1 862 7 is_stmt 1 view .LVU168
 666 0032 2623     		movs	r3, #38
 667 0034 03FB0423 		mla	r3, r3, r4, r2
 668 0038 044A     		ldr	r2, .L39+4
 669 003a 52F82420 		ldr	r2, [r2, r4, lsl #2]
 670 003e 1969     		ldr	r1, [r3, #16]	@ unaligned
 671 0040 FFF7FEFF 		bl	FF_VqdffComputation
 672              	.LVL62:
 863:Src/mc_tasks.c ****     }
ARM GAS  /tmp/ccJda0bK.s 			page 29


 864:Src/mc_tasks.c ****   }
 865:Src/mc_tasks.c ****   else
 866:Src/mc_tasks.c ****   {
 867:Src/mc_tasks.c ****     /* Nothing to do */
 868:Src/mc_tasks.c ****   }
 673              		.loc 1 868 3 view .LVU169
 674              	.L32:
 869:Src/mc_tasks.c ****   /* USER CODE BEGIN FOC_CalcCurrRef 1 */
 870:Src/mc_tasks.c **** 
 871:Src/mc_tasks.c ****   /* USER CODE END FOC_CalcCurrRef 1 */
 872:Src/mc_tasks.c **** }
 675              		.loc 1 872 1 is_stmt 0 view .LVU170
 676 0044 10BD     		pop	{r4, pc}
 677              	.L40:
 678 0046 00BF     		.align	2
 679              	.L39:
 680 0048 00000000 		.word	.LANCHOR2
 681 004c 00000000 		.word	pSTC
 682 0050 00000000 		.word	pFF
 683              		.cfi_endproc
 684              	.LFE1630:
 686              		.section	.text.TSK_SetChargeBootCapDelayM1,"ax",%progbits
 687              		.align	1
 688              		.weak	TSK_SetChargeBootCapDelayM1
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	TSK_SetChargeBootCapDelayM1:
 695              	.LVL63:
 696              	.LFB1631:
 873:Src/mc_tasks.c **** 
 874:Src/mc_tasks.c **** /**
 875:Src/mc_tasks.c ****   * @brief  It set a counter intended to be used for counting the delay required
 876:Src/mc_tasks.c ****   *         for drivers boot capacitors charging of motor 1
 877:Src/mc_tasks.c ****   * @param  hTickCount number of ticks to be counted
 878:Src/mc_tasks.c ****   * @retval void
 879:Src/mc_tasks.c ****   */
 880:Src/mc_tasks.c **** __weak void TSK_SetChargeBootCapDelayM1(uint16_t hTickCount)
 881:Src/mc_tasks.c **** {
 697              		.loc 1 881 1 is_stmt 1 view -0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 882:Src/mc_tasks.c ****    hBootCapDelayCounterM1 = hTickCount;
 702              		.loc 1 882 4 view .LVU172
 703              		.loc 1 882 27 is_stmt 0 view .LVU173
 704 0000 014B     		ldr	r3, .L42
 705 0002 1880     		strh	r0, [r3]	@ movhi
 883:Src/mc_tasks.c **** }
 706              		.loc 1 883 1 view .LVU174
 707 0004 7047     		bx	lr
 708              	.L43:
 709 0006 00BF     		.align	2
 710              	.L42:
 711 0008 00000000 		.word	.LANCHOR7
ARM GAS  /tmp/ccJda0bK.s 			page 30


 712              		.cfi_endproc
 713              	.LFE1631:
 715              		.section	.text.TSK_ChargeBootCapDelayHasElapsedM1,"ax",%progbits
 716              		.align	1
 717              		.weak	TSK_ChargeBootCapDelayHasElapsedM1
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	TSK_ChargeBootCapDelayHasElapsedM1:
 724              	.LFB1632:
 884:Src/mc_tasks.c **** 
 885:Src/mc_tasks.c **** /**
 886:Src/mc_tasks.c ****   * @brief  Use this function to know whether the time required to charge boot
 887:Src/mc_tasks.c ****   *         capacitors of motor 1 has elapsed
 888:Src/mc_tasks.c ****   * @param  none
 889:Src/mc_tasks.c ****   * @retval bool true if time has elapsed, false otherwise
 890:Src/mc_tasks.c ****   */
 891:Src/mc_tasks.c **** __weak bool TSK_ChargeBootCapDelayHasElapsedM1(void)
 892:Src/mc_tasks.c **** {
 725              		.loc 1 892 1 is_stmt 1 view -0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 893:Src/mc_tasks.c ****   bool retVal = false;
 730              		.loc 1 893 3 view .LVU176
 731              	.LVL64:
 894:Src/mc_tasks.c ****   if (((uint16_t)0) == hBootCapDelayCounterM1)
 732              		.loc 1 894 3 view .LVU177
 733              		.loc 1 894 21 is_stmt 0 view .LVU178
 734 0000 034B     		ldr	r3, .L47
 735 0002 1B88     		ldrh	r3, [r3]
 736 0004 9BB2     		uxth	r3, r3
 737              		.loc 1 894 6 view .LVU179
 738 0006 0BB1     		cbz	r3, .L46
 893:Src/mc_tasks.c ****   bool retVal = false;
 739              		.loc 1 893 8 view .LVU180
 740 0008 0020     		movs	r0, #0
 741 000a 7047     		bx	lr
 742              	.L46:
 895:Src/mc_tasks.c ****   {
 896:Src/mc_tasks.c ****     retVal = true;
 743              		.loc 1 896 12 view .LVU181
 744 000c 0120     		movs	r0, #1
 745              	.LVL65:
 897:Src/mc_tasks.c ****   }
 898:Src/mc_tasks.c ****   return (retVal);
 746              		.loc 1 898 3 is_stmt 1 view .LVU182
 899:Src/mc_tasks.c **** }
 747              		.loc 1 899 1 is_stmt 0 view .LVU183
 748 000e 7047     		bx	lr
 749              	.L48:
 750              		.align	2
 751              	.L47:
 752 0010 00000000 		.word	.LANCHOR7
 753              		.cfi_endproc
ARM GAS  /tmp/ccJda0bK.s 			page 31


 754              	.LFE1632:
 756              		.section	.text.TSK_SetStopPermanencyTimeM1,"ax",%progbits
 757              		.align	1
 758              		.weak	TSK_SetStopPermanencyTimeM1
 759              		.syntax unified
 760              		.thumb
 761              		.thumb_func
 762              		.fpu fpv4-sp-d16
 764              	TSK_SetStopPermanencyTimeM1:
 765              	.LVL66:
 766              	.LFB1633:
 900:Src/mc_tasks.c **** 
 901:Src/mc_tasks.c **** /**
 902:Src/mc_tasks.c ****   * @brief  It set a counter intended to be used for counting the permanency
 903:Src/mc_tasks.c ****   *         time in STOP state of motor 1
 904:Src/mc_tasks.c ****   * @param  hTickCount number of ticks to be counted
 905:Src/mc_tasks.c ****   * @retval void
 906:Src/mc_tasks.c ****   */
 907:Src/mc_tasks.c **** __weak void TSK_SetStopPermanencyTimeM1(uint16_t hTickCount)
 908:Src/mc_tasks.c **** {
 767              		.loc 1 908 1 is_stmt 1 view -0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 909:Src/mc_tasks.c ****   hStopPermanencyCounterM1 = hTickCount;
 772              		.loc 1 909 3 view .LVU185
 773              		.loc 1 909 28 is_stmt 0 view .LVU186
 774 0000 014B     		ldr	r3, .L50
 775 0002 1880     		strh	r0, [r3]	@ movhi
 910:Src/mc_tasks.c **** }
 776              		.loc 1 910 1 view .LVU187
 777 0004 7047     		bx	lr
 778              	.L51:
 779 0006 00BF     		.align	2
 780              	.L50:
 781 0008 00000000 		.word	.LANCHOR8
 782              		.cfi_endproc
 783              	.LFE1633:
 785              		.section	.text.TSK_MF_StopProcessing,"ax",%progbits
 786              		.align	1
 787              		.global	TSK_MF_StopProcessing
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 791              		.fpu fpv4-sp-d16
 793              	TSK_MF_StopProcessing:
 794              	.LVL67:
 795              	.LFB1624:
 260:Src/mc_tasks.c ****   R3_2_SwitchOffPWM(pwmcHandle[motor]);
 796              		.loc 1 260 1 is_stmt 1 view -0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 260:Src/mc_tasks.c ****   R3_2_SwitchOffPWM(pwmcHandle[motor]);
 800              		.loc 1 260 1 is_stmt 0 view .LVU189
 801 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccJda0bK.s 			page 32


 802              		.cfi_def_cfa_offset 8
 803              		.cfi_offset 4, -8
 804              		.cfi_offset 14, -4
 805 0002 0C46     		mov	r4, r1
 261:Src/mc_tasks.c **** 
 806              		.loc 1 261 3 is_stmt 1 view .LVU190
 807 0004 0C4B     		ldr	r3, .L54
 808 0006 53F82100 		ldr	r0, [r3, r1, lsl #2]
 809              	.LVL68:
 261:Src/mc_tasks.c **** 
 810              		.loc 1 261 3 is_stmt 0 view .LVU191
 811 000a FFF7FEFF 		bl	R3_2_SwitchOffPWM
 812              	.LVL69:
 263:Src/mc_tasks.c ****   PQD_Clear(pMPM[motor]);
 813              		.loc 1 263 3 is_stmt 1 view .LVU192
 814 000e 2046     		mov	r0, r4
 815 0010 FFF7FEFF 		bl	FOC_Clear
 816              	.LVL70:
 264:Src/mc_tasks.c ****   TSK_SetStopPermanencyTimeM1(STOPPERMANENCY_TICKS);
 817              		.loc 1 264 3 view .LVU193
 818 0014 094B     		ldr	r3, .L54+4
 819 0016 53F82400 		ldr	r0, [r3, r4, lsl #2]
 820 001a FFF7FEFF 		bl	PQD_Clear
 821              	.LVL71:
 265:Src/mc_tasks.c ****   Mci[motor].State = STOP;
 822              		.loc 1 265 3 view .LVU194
 823 001e 4FF44870 		mov	r0, #800
 824 0022 FFF7FEFF 		bl	TSK_SetStopPermanencyTimeM1
 825              	.LVL72:
 266:Src/mc_tasks.c ****   return;
 826              		.loc 1 266 3 view .LVU195
 266:Src/mc_tasks.c ****   return;
 827              		.loc 1 266 20 is_stmt 0 view .LVU196
 828 0026 04EB8404 		add	r4, r4, r4, lsl #2
 829 002a 0549     		ldr	r1, .L54+8
 830 002c 01EBC404 		add	r4, r1, r4, lsl #3
 831 0030 0823     		movs	r3, #8
 832 0032 84F82130 		strb	r3, [r4, #33]
 267:Src/mc_tasks.c **** }
 833              		.loc 1 267 3 is_stmt 1 view .LVU197
 268:Src/mc_tasks.c **** 
 834              		.loc 1 268 1 is_stmt 0 view .LVU198
 835 0036 10BD     		pop	{r4, pc}
 836              	.L55:
 837              		.align	2
 838              	.L54:
 839 0038 00000000 		.word	.LANCHOR3
 840 003c 00000000 		.word	pMPM
 841 0040 00000000 		.word	Mci
 842              		.cfi_endproc
 843              	.LFE1624:
 845              		.section	.text.TSK_StopPermanencyTimeHasElapsedM1,"ax",%progbits
 846              		.align	1
 847              		.weak	TSK_StopPermanencyTimeHasElapsedM1
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
ARM GAS  /tmp/ccJda0bK.s 			page 33


 851              		.fpu fpv4-sp-d16
 853              	TSK_StopPermanencyTimeHasElapsedM1:
 854              	.LFB1634:
 911:Src/mc_tasks.c **** 
 912:Src/mc_tasks.c **** /**
 913:Src/mc_tasks.c ****   * @brief  Use this function to know whether the permanency time in STOP state
 914:Src/mc_tasks.c ****   *         of motor 1 has elapsed
 915:Src/mc_tasks.c ****   * @param  none
 916:Src/mc_tasks.c ****   * @retval bool true if time is elapsed, false otherwise
 917:Src/mc_tasks.c ****   */
 918:Src/mc_tasks.c **** __weak bool TSK_StopPermanencyTimeHasElapsedM1(void)
 919:Src/mc_tasks.c **** {
 855              		.loc 1 919 1 is_stmt 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 920:Src/mc_tasks.c ****   bool retVal = false;
 860              		.loc 1 920 3 view .LVU200
 861              	.LVL73:
 921:Src/mc_tasks.c ****   if (((uint16_t)0) == hStopPermanencyCounterM1)
 862              		.loc 1 921 3 view .LVU201
 863              		.loc 1 921 21 is_stmt 0 view .LVU202
 864 0000 034B     		ldr	r3, .L59
 865 0002 1B88     		ldrh	r3, [r3]
 866 0004 9BB2     		uxth	r3, r3
 867              		.loc 1 921 6 view .LVU203
 868 0006 0BB1     		cbz	r3, .L58
 920:Src/mc_tasks.c ****   bool retVal = false;
 869              		.loc 1 920 8 view .LVU204
 870 0008 0020     		movs	r0, #0
 871 000a 7047     		bx	lr
 872              	.L58:
 922:Src/mc_tasks.c ****   {
 923:Src/mc_tasks.c ****     retVal = true;
 873              		.loc 1 923 12 view .LVU205
 874 000c 0120     		movs	r0, #1
 875              	.LVL74:
 924:Src/mc_tasks.c ****   }
 925:Src/mc_tasks.c ****   return (retVal);
 876              		.loc 1 925 3 is_stmt 1 view .LVU206
 926:Src/mc_tasks.c **** }
 877              		.loc 1 926 1 is_stmt 0 view .LVU207
 878 000e 7047     		bx	lr
 879              	.L60:
 880              		.align	2
 881              	.L59:
 882 0010 00000000 		.word	.LANCHOR8
 883              		.cfi_endproc
 884              	.LFE1634:
 886              		.section	.text.TSK_MediumFrequencyTaskM1,"ax",%progbits
 887              		.align	1
 888              		.weak	TSK_MediumFrequencyTaskM1
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 892              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccJda0bK.s 			page 34


 894              	TSK_MediumFrequencyTaskM1:
 895              	.LFB1627:
 374:Src/mc_tasks.c ****   /* USER CODE BEGIN MediumFrequencyTask M1 0 */
 896              		.loc 1 374 1 is_stmt 1 view -0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 16
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900 0000 30B5     		push	{r4, r5, lr}
 901              		.cfi_def_cfa_offset 12
 902              		.cfi_offset 4, -12
 903              		.cfi_offset 5, -8
 904              		.cfi_offset 14, -4
 905 0002 85B0     		sub	sp, sp, #20
 906              		.cfi_def_cfa_offset 32
 379:Src/mc_tasks.c ****   (void)ENC_CalcAvrgMecSpeedUnit(&ENCODER_M1, &wAux);
 907              		.loc 1 379 3 view .LVU209
 379:Src/mc_tasks.c ****   (void)ENC_CalcAvrgMecSpeedUnit(&ENCODER_M1, &wAux);
 908              		.loc 1 379 11 is_stmt 0 view .LVU210
 909 0004 0023     		movs	r3, #0
 910 0006 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 380:Src/mc_tasks.c ****   bool IsSpeedReliable = STO_PLL_CalcAvrgMecSpeedUnit(&STO_PLL_M1, &wAux);
 911              		.loc 1 380 3 is_stmt 1 view .LVU211
 380:Src/mc_tasks.c ****   bool IsSpeedReliable = STO_PLL_CalcAvrgMecSpeedUnit(&STO_PLL_M1, &wAux);
 912              		.loc 1 380 9 is_stmt 0 view .LVU212
 913 000a 0DF10E01 		add	r1, sp, #14
 914 000e B848     		ldr	r0, .L111
 915 0010 FFF7FEFF 		bl	ENC_CalcAvrgMecSpeedUnit
 916              	.LVL75:
 381:Src/mc_tasks.c ****   PQD_CalcElMotorPower(pMPM[M1]);
 917              		.loc 1 381 3 is_stmt 1 view .LVU213
 381:Src/mc_tasks.c ****   PQD_CalcElMotorPower(pMPM[M1]);
 918              		.loc 1 381 26 is_stmt 0 view .LVU214
 919 0014 0DF10E01 		add	r1, sp, #14
 920 0018 B648     		ldr	r0, .L111+4
 921 001a FFF7FEFF 		bl	STO_PLL_CalcAvrgMecSpeedUnit
 922              	.LVL76:
 923 001e 0446     		mov	r4, r0
 924              	.LVL77:
 382:Src/mc_tasks.c **** 
 925              		.loc 1 382 3 is_stmt 1 view .LVU215
 926 0020 B54B     		ldr	r3, .L111+8
 927 0022 1868     		ldr	r0, [r3]
 928 0024 FFF7FEFF 		bl	PQD_CalcElMotorPower
 929              	.LVL78:
 384:Src/mc_tasks.c ****   {
 930              		.loc 1 384 3 view .LVU216
 384:Src/mc_tasks.c ****   {
 931              		.loc 1 384 7 is_stmt 0 view .LVU217
 932 0028 B448     		ldr	r0, .L111+12
 933 002a FFF7FEFF 		bl	MCI_GetCurrentFaults
 934              	.LVL79:
 384:Src/mc_tasks.c ****   {
 935              		.loc 1 384 6 view .LVU218
 936 002e 28B1     		cbz	r0, .L100
 749:Src/mc_tasks.c ****   }
 937              		.loc 1 749 5 is_stmt 1 view .LVU219
 749:Src/mc_tasks.c ****   }
ARM GAS  /tmp/ccJda0bK.s 			page 35


 938              		.loc 1 749 19 is_stmt 0 view .LVU220
 939 0030 B24B     		ldr	r3, .L111+12
 940 0032 0A22     		movs	r2, #10
 941 0034 83F82120 		strb	r2, [r3, #33]
 942              	.LVL80:
 943              	.L61:
 755:Src/mc_tasks.c **** 
 944              		.loc 1 755 1 view .LVU221
 945 0038 05B0     		add	sp, sp, #20
 946              		.cfi_remember_state
 947              		.cfi_def_cfa_offset 12
 948              		@ sp needed
 949 003a 30BD     		pop	{r4, r5, pc}
 950              	.LVL81:
 951              	.L100:
 952              		.cfi_restore_state
 386:Src/mc_tasks.c ****     {
 953              		.loc 1 386 5 is_stmt 1 view .LVU222
 386:Src/mc_tasks.c ****     {
 954              		.loc 1 386 9 is_stmt 0 view .LVU223
 955 003c AF48     		ldr	r0, .L111+12
 956 003e FFF7FEFF 		bl	MCI_GetOccurredFaults
 957              	.LVL82:
 386:Src/mc_tasks.c ****     {
 958              		.loc 1 386 8 view .LVU224
 959 0042 0028     		cmp	r0, #0
 960 0044 40F03D82 		bne	.L63
 388:Src/mc_tasks.c ****       {
 961              		.loc 1 388 7 is_stmt 1 view .LVU225
 388:Src/mc_tasks.c ****       {
 962              		.loc 1 388 22 is_stmt 0 view .LVU226
 963 0048 AC4B     		ldr	r3, .L111+12
 964 004a 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 965 004e 142B     		cmp	r3, #20
 966 0050 F2D8     		bhi	.L61
 967 0052 01A2     		adr	r2, .L66
 968 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 969              		.p2align 2
 970              	.L66:
 971 0058 AD000000 		.word	.L76+1
 972 005c 39000000 		.word	.L61+1
 973 0060 E9010000 		.word	.L75+1
 974 0064 39000000 		.word	.L61+1
 975 0068 4B020000 		.word	.L74+1
 976 006c 39000000 		.word	.L61+1
 977 0070 D5030000 		.word	.L73+1
 978 0074 39000000 		.word	.L61+1
 979 0078 25040000 		.word	.L72+1
 980 007c 39000000 		.word	.L61+1
 981 0080 69040000 		.word	.L71+1
 982 0084 4F040000 		.word	.L70+1
 983 0088 39000000 		.word	.L61+1
 984 008c 39000000 		.word	.L61+1
 985 0090 39000000 		.word	.L61+1
 986 0094 39000000 		.word	.L61+1
 987 0098 69010000 		.word	.L69+1
 988 009c 07010000 		.word	.L68+1
ARM GAS  /tmp/ccJda0bK.s 			page 36


 989 00a0 39000000 		.word	.L61+1
 990 00a4 39030000 		.word	.L67+1
 991 00a8 73040000 		.word	.L65+1
 992              		.p2align 1
 993              	.L76:
 392:Src/mc_tasks.c ****           {
 994              		.loc 1 392 11 is_stmt 1 view .LVU227
 392:Src/mc_tasks.c ****           {
 995              		.loc 1 392 36 is_stmt 0 view .LVU228
 996 00ac 934B     		ldr	r3, .L111+12
 997 00ae 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 392:Src/mc_tasks.c ****           {
 998              		.loc 1 392 14 view .LVU229
 999 00b2 012B     		cmp	r3, #1
 1000 00b4 01D0     		beq	.L77
 392:Src/mc_tasks.c ****           {
 1001              		.loc 1 392 52 discriminator 1 view .LVU230
 1002 00b6 032B     		cmp	r3, #3
 1003 00b8 BED1     		bne	.L61
 1004              	.L77:
 395:Src/mc_tasks.c ****             }
 1005              		.loc 1 395 15 is_stmt 1 view .LVU231
 1006 00ba 9048     		ldr	r0, .L111+12
 1007 00bc FFF7FEFF 		bl	MCI_GetImposedMotorDirection
 1008              	.LVL83:
 1009 00c0 0146     		mov	r1, r0
 1010 00c2 8F48     		ldr	r0, .L111+16
 1011 00c4 FFF7FEFF 		bl	RUC_Clear
 1012              	.LVL84:
 398:Src/mc_tasks.c ****            {
 1013              		.loc 1 398 12 view .LVU232
 398:Src/mc_tasks.c ****            {
 1014              		.loc 1 398 26 is_stmt 0 view .LVU233
 1015 00c8 8E4B     		ldr	r3, .L111+20
 1016 00ca 1868     		ldr	r0, [r3]
 398:Src/mc_tasks.c ****            {
 1017              		.loc 1 398 30 view .LVU234
 1018 00cc 90F86E30 		ldrb	r3, [r0, #110]	@ zero_extendqisi2
 398:Src/mc_tasks.c ****            {
 1019              		.loc 1 398 15 view .LVU235
 1020 00d0 3BB9     		cbnz	r3, .L78
 400:Src/mc_tasks.c ****              Mci[M1].State = OFFSET_CALIB;
 1021              		.loc 1 400 14 is_stmt 1 view .LVU236
 1022 00d2 0021     		movs	r1, #0
 1023 00d4 FFF7FEFF 		bl	PWMC_CurrentReadingCalibr
 1024              	.LVL85:
 401:Src/mc_tasks.c ****            }
 1025              		.loc 1 401 14 view .LVU237
 401:Src/mc_tasks.c ****            }
 1026              		.loc 1 401 28 is_stmt 0 view .LVU238
 1027 00d8 884B     		ldr	r3, .L111+12
 1028 00da 1122     		movs	r2, #17
 1029 00dc 83F82120 		strb	r2, [r3, #33]
 1030 00e0 AAE7     		b	.L61
 1031              	.L78:
 406:Src/mc_tasks.c ****              PWMC_CurrentReadingCalibr(pwmcHandle[M1], CRC_EXEC);
 1032              		.loc 1 406 14 is_stmt 1 view .LVU239
ARM GAS  /tmp/ccJda0bK.s 			page 37


 406:Src/mc_tasks.c ****              PWMC_CurrentReadingCalibr(pwmcHandle[M1], CRC_EXEC);
 1033              		.loc 1 406 55 is_stmt 0 view .LVU240
 1034 00e2 0121     		movs	r1, #1
 1035 00e4 A0F84E10 		strh	r1, [r0, #78]	@ movhi
 407:Src/mc_tasks.c ****              R3_2_TurnOnLowSides(pwmcHandle[M1],M1_CHARGE_BOOT_CAP_DUTY_CYCLES);
 1036              		.loc 1 407 14 is_stmt 1 view .LVU241
 1037 00e8 FFF7FEFF 		bl	PWMC_CurrentReadingCalibr
 1038              	.LVL86:
 408:Src/mc_tasks.c ****              TSK_SetChargeBootCapDelayM1(CHARGE_BOOT_CAP_TICKS);
 1039              		.loc 1 408 14 view .LVU242
 1040 00ec 0021     		movs	r1, #0
 1041 00ee 854B     		ldr	r3, .L111+20
 1042 00f0 1868     		ldr	r0, [r3]
 1043 00f2 FFF7FEFF 		bl	R3_2_TurnOnLowSides
 1044              	.LVL87:
 409:Src/mc_tasks.c ****              Mci[M1].State = CHARGE_BOOT_CAP;
 1045              		.loc 1 409 14 view .LVU243
 1046 00f6 1420     		movs	r0, #20
 1047 00f8 FFF7FEFF 		bl	TSK_SetChargeBootCapDelayM1
 1048              	.LVL88:
 410:Src/mc_tasks.c **** 
 1049              		.loc 1 410 14 view .LVU244
 410:Src/mc_tasks.c **** 
 1050              		.loc 1 410 28 is_stmt 0 view .LVU245
 1051 00fc 7F4B     		ldr	r3, .L111+12
 1052 00fe 1022     		movs	r2, #16
 1053 0100 83F82120 		strb	r2, [r3, #33]
 1054 0104 98E7     		b	.L61
 1055              	.L68:
 424:Src/mc_tasks.c ****             {
 1056              		.loc 1 424 13 is_stmt 1 view .LVU246
 424:Src/mc_tasks.c ****             {
 1057              		.loc 1 424 36 is_stmt 0 view .LVU247
 1058 0106 7D4B     		ldr	r3, .L111+12
 1059 0108 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 424:Src/mc_tasks.c ****             {
 1060              		.loc 1 424 16 view .LVU248
 1061 010c 052B     		cmp	r3, #5
 1062 010e 18D0     		beq	.L101
 430:Src/mc_tasks.c ****               {
 1063              		.loc 1 430 15 is_stmt 1 view .LVU249
 430:Src/mc_tasks.c ****               {
 1064              		.loc 1 430 19 is_stmt 0 view .LVU250
 1065 0110 0121     		movs	r1, #1
 1066 0112 7C4B     		ldr	r3, .L111+20
 1067 0114 1868     		ldr	r0, [r3]
 1068 0116 FFF7FEFF 		bl	PWMC_CurrentReadingCalibr
 1069              	.LVL89:
 430:Src/mc_tasks.c ****               {
 1070              		.loc 1 430 18 view .LVU251
 1071 011a 0028     		cmp	r0, #0
 1072 011c 8CD0     		beq	.L61
 432:Src/mc_tasks.c ****                 {
 1073              		.loc 1 432 17 is_stmt 1 view .LVU252
 432:Src/mc_tasks.c ****                 {
 1074              		.loc 1 432 51 is_stmt 0 view .LVU253
 1075 011e 774B     		ldr	r3, .L111+12
ARM GAS  /tmp/ccJda0bK.s 			page 38


 1076 0120 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 432:Src/mc_tasks.c ****                 {
 1077              		.loc 1 432 20 view .LVU254
 1078 0124 032B     		cmp	r3, #3
 1079 0126 11D0     		beq	.L102
 441:Src/mc_tasks.c ****                   TSK_SetChargeBootCapDelayM1(CHARGE_BOOT_CAP_TICKS);
 1080              		.loc 1 441 19 is_stmt 1 view .LVU255
 1081 0128 0021     		movs	r1, #0
 1082 012a 764B     		ldr	r3, .L111+20
 1083 012c 1868     		ldr	r0, [r3]
 1084 012e FFF7FEFF 		bl	R3_2_TurnOnLowSides
 1085              	.LVL90:
 442:Src/mc_tasks.c ****                   Mci[M1].State = CHARGE_BOOT_CAP;
 1086              		.loc 1 442 19 view .LVU256
 1087 0132 1420     		movs	r0, #20
 1088 0134 FFF7FEFF 		bl	TSK_SetChargeBootCapDelayM1
 1089              	.LVL91:
 443:Src/mc_tasks.c **** 
 1090              		.loc 1 443 19 view .LVU257
 443:Src/mc_tasks.c **** 
 1091              		.loc 1 443 33 is_stmt 0 view .LVU258
 1092 0138 704B     		ldr	r3, .L111+12
 1093 013a 1022     		movs	r2, #16
 1094 013c 83F82120 		strb	r2, [r3, #33]
 1095 0140 7AE7     		b	.L61
 1096              	.L101:
 426:Src/mc_tasks.c ****             }
 1097              		.loc 1 426 15 is_stmt 1 view .LVU259
 1098 0142 0021     		movs	r1, #0
 1099 0144 6D48     		ldr	r0, .L111+12
 1100 0146 FFF7FEFF 		bl	TSK_MF_StopProcessing
 1101              	.LVL92:
 1102 014a 75E7     		b	.L61
 1103              	.L102:
 434:Src/mc_tasks.c ****                   PQD_Clear(pMPM[M1]);
 1104              		.loc 1 434 19 view .LVU260
 1105 014c 0020     		movs	r0, #0
 1106 014e FFF7FEFF 		bl	FOC_Clear
 1107              	.LVL93:
 435:Src/mc_tasks.c ****                   Mci[M1].DirectCommand = MCI_NO_COMMAND;
 1108              		.loc 1 435 19 view .LVU261
 1109 0152 694B     		ldr	r3, .L111+8
 1110 0154 1868     		ldr	r0, [r3]
 1111 0156 FFF7FEFF 		bl	PQD_Clear
 1112              	.LVL94:
 436:Src/mc_tasks.c ****                   Mci[M1].State = IDLE;
 1113              		.loc 1 436 19 view .LVU262
 436:Src/mc_tasks.c ****                   Mci[M1].State = IDLE;
 1114              		.loc 1 436 41 is_stmt 0 view .LVU263
 1115 015a 684B     		ldr	r3, .L111+12
 1116 015c 0022     		movs	r2, #0
 1117 015e 83F82020 		strb	r2, [r3, #32]
 437:Src/mc_tasks.c ****                 }
 1118              		.loc 1 437 19 is_stmt 1 view .LVU264
 437:Src/mc_tasks.c ****                 }
 1119              		.loc 1 437 33 is_stmt 0 view .LVU265
 1120 0162 83F82120 		strb	r2, [r3, #33]
ARM GAS  /tmp/ccJda0bK.s 			page 39


 1121 0166 67E7     		b	.L61
 1122              	.L69:
 457:Src/mc_tasks.c ****           {
 1123              		.loc 1 457 11 is_stmt 1 view .LVU266
 457:Src/mc_tasks.c ****           {
 1124              		.loc 1 457 34 is_stmt 0 view .LVU267
 1125 0168 644B     		ldr	r3, .L111+12
 1126 016a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 457:Src/mc_tasks.c ****           {
 1127              		.loc 1 457 14 view .LVU268
 1128 016e 052B     		cmp	r3, #5
 1129 0170 2AD0     		beq	.L103
 463:Src/mc_tasks.c ****             {
 1130              		.loc 1 463 13 is_stmt 1 view .LVU269
 463:Src/mc_tasks.c ****             {
 1131              		.loc 1 463 17 is_stmt 0 view .LVU270
 1132 0172 FFF7FEFF 		bl	TSK_ChargeBootCapDelayHasElapsedM1
 1133              	.LVL95:
 463:Src/mc_tasks.c ****             {
 1134              		.loc 1 463 16 view .LVU271
 1135 0176 0028     		cmp	r0, #0
 1136 0178 3FF45EAF 		beq	.L61
 465:Src/mc_tasks.c ****               FOCVars[M1].bDriveInput = EXTERNAL;
 1137              		.loc 1 465 15 is_stmt 1 view .LVU272
 1138 017c 614B     		ldr	r3, .L111+20
 1139 017e 1868     		ldr	r0, [r3]
 1140 0180 FFF7FEFF 		bl	R3_2_SwitchOffPWM
 1141              	.LVL96:
 466:Src/mc_tasks.c ****               STC_SetSpeedSensor( pSTC[M1], &VirtualSpeedSensorM1._Super );
 1142              		.loc 1 466 15 view .LVU273
 466:Src/mc_tasks.c ****               STC_SetSpeedSensor( pSTC[M1], &VirtualSpeedSensorM1._Super );
 1143              		.loc 1 466 39 is_stmt 0 view .LVU274
 1144 0184 604B     		ldr	r3, .L111+24
 1145 0186 0122     		movs	r2, #1
 1146 0188 83F82420 		strb	r2, [r3, #36]
 467:Src/mc_tasks.c ****               STO_PLL_Clear(&STO_PLL_M1);
 1147              		.loc 1 467 15 is_stmt 1 view .LVU275
 1148 018c 5F49     		ldr	r1, .L111+28
 1149 018e 604B     		ldr	r3, .L111+32
 1150 0190 1868     		ldr	r0, [r3]
 1151 0192 FFF7FEFF 		bl	STC_SetSpeedSensor
 1152              	.LVL97:
 468:Src/mc_tasks.c ****               ENC_Clear(&ENCODER_M1);
 1153              		.loc 1 468 15 view .LVU276
 1154 0196 5748     		ldr	r0, .L111+4
 1155 0198 FFF7FEFF 		bl	STO_PLL_Clear
 1156              	.LVL98:
 469:Src/mc_tasks.c ****               FOC_Clear( M1 );
 1157              		.loc 1 469 15 view .LVU277
 1158 019c 5448     		ldr	r0, .L111
 1159 019e FFF7FEFF 		bl	ENC_Clear
 1160              	.LVL99:
 470:Src/mc_tasks.c **** 
 1161              		.loc 1 470 15 view .LVU278
 1162 01a2 0020     		movs	r0, #0
 1163 01a4 FFF7FEFF 		bl	FOC_Clear
 1164              	.LVL100:
ARM GAS  /tmp/ccJda0bK.s 			page 40


 472:Src/mc_tasks.c ****               {
 1165              		.loc 1 472 15 view .LVU279
 472:Src/mc_tasks.c ****               {
 1166              		.loc 1 472 19 is_stmt 0 view .LVU280
 1167 01a8 5A48     		ldr	r0, .L111+36
 1168 01aa FFF7FEFF 		bl	EAC_IsAligned
 1169              	.LVL101:
 472:Src/mc_tasks.c ****               {
 1170              		.loc 1 472 18 view .LVU281
 1171 01ae 80B9     		cbnz	r0, .L82
 474:Src/mc_tasks.c ****                 Mci[M1].State = ALIGNMENT;
 1172              		.loc 1 474 17 is_stmt 1 view .LVU282
 1173 01b0 5848     		ldr	r0, .L111+36
 1174 01b2 FFF7FEFF 		bl	EAC_StartAlignment
 1175              	.LVL102:
 475:Src/mc_tasks.c ****               }
 1176              		.loc 1 475 17 view .LVU283
 475:Src/mc_tasks.c ****               }
 1177              		.loc 1 475 31 is_stmt 0 view .LVU284
 1178 01b6 514B     		ldr	r3, .L111+12
 1179 01b8 0222     		movs	r2, #2
 1180 01ba 83F82120 		strb	r2, [r3, #33]
 1181              	.L83:
 485:Src/mc_tasks.c ****             }
 1182              		.loc 1 485 15 is_stmt 1 view .LVU285
 1183 01be 514B     		ldr	r3, .L111+20
 1184 01c0 1868     		ldr	r0, [r3]
 1185 01c2 FFF7FEFF 		bl	PWMC_SwitchOnPWM
 1186              	.LVL103:
 1187 01c6 37E7     		b	.L61
 1188              	.L103:
 459:Src/mc_tasks.c ****           }
 1189              		.loc 1 459 13 view .LVU286
 1190 01c8 0021     		movs	r1, #0
 1191 01ca 4C48     		ldr	r0, .L111+12
 1192 01cc FFF7FEFF 		bl	TSK_MF_StopProcessing
 1193              	.LVL104:
 1194 01d0 32E7     		b	.L61
 1195              	.L82:
 480:Src/mc_tasks.c ****                 FOC_Clear(M1);
 1196              		.loc 1 480 17 view .LVU287
 1197 01d2 4E48     		ldr	r0, .L111+28
 1198 01d4 FFF7FEFF 		bl	VSS_Clear
 1199              	.LVL105:
 481:Src/mc_tasks.c ****                 Mci[M1].State = START;
 1200              		.loc 1 481 17 view .LVU288
 1201 01d8 0020     		movs	r0, #0
 1202 01da FFF7FEFF 		bl	FOC_Clear
 1203              	.LVL106:
 482:Src/mc_tasks.c ****               }
 1204              		.loc 1 482 17 view .LVU289
 482:Src/mc_tasks.c ****               }
 1205              		.loc 1 482 31 is_stmt 0 view .LVU290
 1206 01de 474B     		ldr	r3, .L111+12
 1207 01e0 0422     		movs	r2, #4
 1208 01e2 83F82120 		strb	r2, [r3, #33]
 1209 01e6 EAE7     		b	.L83
ARM GAS  /tmp/ccJda0bK.s 			page 41


 1210              	.L75:
 497:Src/mc_tasks.c ****           {
 1211              		.loc 1 497 11 is_stmt 1 view .LVU291
 497:Src/mc_tasks.c ****           {
 1212              		.loc 1 497 34 is_stmt 0 view .LVU292
 1213 01e8 444B     		ldr	r3, .L111+12
 1214 01ea 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 497:Src/mc_tasks.c ****           {
 1215              		.loc 1 497 14 view .LVU293
 1216 01ee 052B     		cmp	r3, #5
 1217 01f0 19D0     		beq	.L104
 1218              	.LBB51:
 503:Src/mc_tasks.c ****             bool EACDone = EAC_Exec(&EncAlignCtrlM1);
 1219              		.loc 1 503 13 is_stmt 1 view .LVU294
 503:Src/mc_tasks.c ****             bool EACDone = EAC_Exec(&EncAlignCtrlM1);
 1220              		.loc 1 503 30 is_stmt 0 view .LVU295
 1221 01f2 484D     		ldr	r5, .L111+36
 1222 01f4 2846     		mov	r0, r5
 1223 01f6 FFF7FEFF 		bl	EAC_IsAligned
 1224              	.LVL107:
 1225 01fa 0446     		mov	r4, r0
 1226              	.LVL108:
 504:Src/mc_tasks.c ****             if ((isAligned == false)  && (EACDone == false))
 1227              		.loc 1 504 13 is_stmt 1 view .LVU296
 504:Src/mc_tasks.c ****             if ((isAligned == false)  && (EACDone == false))
 1228              		.loc 1 504 28 is_stmt 0 view .LVU297
 1229 01fc 2846     		mov	r0, r5
 1230 01fe FFF7FEFF 		bl	EAC_Exec
 1231              	.LVL109:
 505:Src/mc_tasks.c ****             {
 1232              		.loc 1 505 13 is_stmt 1 view .LVU298
 505:Src/mc_tasks.c ****             {
 1233              		.loc 1 505 16 is_stmt 0 view .LVU299
 1234 0202 04B9     		cbnz	r4, .L85
 505:Src/mc_tasks.c ****             {
 1235              		.loc 1 505 39 discriminator 1 view .LVU300
 1236 0204 A0B1     		cbz	r0, .L105
 1237              	.L85:
 514:Src/mc_tasks.c **** 
 1238              		.loc 1 514 15 is_stmt 1 view .LVU301
 1239 0206 3F4B     		ldr	r3, .L111+20
 1240 0208 1868     		ldr	r0, [r3]
 1241              	.LVL110:
 514:Src/mc_tasks.c **** 
 1242              		.loc 1 514 15 is_stmt 0 view .LVU302
 1243 020a FFF7FEFF 		bl	R3_2_SwitchOffPWM
 1244              	.LVL111:
 516:Src/mc_tasks.c ****               TSK_SetStopPermanencyTimeM1(STOPPERMANENCY_TICKS);
 1245              		.loc 1 516 15 is_stmt 1 view .LVU303
 1246 020e 0020     		movs	r0, #0
 1247 0210 FFF7FEFF 		bl	FOC_Clear
 1248              	.LVL112:
 517:Src/mc_tasks.c ****               Mci[M1].State = WAIT_STOP_MOTOR;
 1249              		.loc 1 517 15 view .LVU304
 1250 0214 4FF44870 		mov	r0, #800
 1251 0218 FFF7FEFF 		bl	TSK_SetStopPermanencyTimeM1
 1252              	.LVL113:
ARM GAS  /tmp/ccJda0bK.s 			page 42


 518:Src/mc_tasks.c **** 
 1253              		.loc 1 518 15 view .LVU305
 518:Src/mc_tasks.c **** 
 1254              		.loc 1 518 29 is_stmt 0 view .LVU306
 1255 021c 374B     		ldr	r3, .L111+12
 1256 021e 1422     		movs	r2, #20
 1257 0220 83F82120 		strb	r2, [r3, #33]
 1258 0224 08E7     		b	.L61
 1259              	.LVL114:
 1260              	.L104:
 518:Src/mc_tasks.c **** 
 1261              		.loc 1 518 29 view .LVU307
 1262              	.LBE51:
 499:Src/mc_tasks.c ****           }
 1263              		.loc 1 499 13 is_stmt 1 view .LVU308
 1264 0226 0021     		movs	r1, #0
 1265 0228 3448     		ldr	r0, .L111+12
 1266 022a FFF7FEFF 		bl	TSK_MF_StopProcessing
 1267              	.LVL115:
 1268 022e 03E7     		b	.L61
 1269              	.LVL116:
 1270              	.L105:
 1271              	.LBB53:
 1272              	.LBB52:
 507:Src/mc_tasks.c ****                 IqdRef.q = 0;
 1273              		.loc 1 507 17 view .LVU309
 508:Src/mc_tasks.c ****                 IqdRef.d = STC_CalcTorqueReference(pSTC[M1]);
 1274              		.loc 1 508 17 view .LVU310
 508:Src/mc_tasks.c ****                 IqdRef.d = STC_CalcTorqueReference(pSTC[M1]);
 1275              		.loc 1 508 26 is_stmt 0 view .LVU311
 1276 0230 0023     		movs	r3, #0
 1277 0232 ADF80830 		strh	r3, [sp, #8]	@ movhi
 509:Src/mc_tasks.c ****                 FOCVars[M1].Iqdref = IqdRef;
 1278              		.loc 1 509 17 is_stmt 1 view .LVU312
 509:Src/mc_tasks.c ****                 FOCVars[M1].Iqdref = IqdRef;
 1279              		.loc 1 509 28 is_stmt 0 view .LVU313
 1280 0236 364B     		ldr	r3, .L111+32
 1281 0238 1868     		ldr	r0, [r3]
 1282              	.LVL117:
 509:Src/mc_tasks.c ****                 FOCVars[M1].Iqdref = IqdRef;
 1283              		.loc 1 509 28 view .LVU314
 1284 023a FFF7FEFF 		bl	STC_CalcTorqueReference
 1285              	.LVL118:
 509:Src/mc_tasks.c ****                 FOCVars[M1].Iqdref = IqdRef;
 1286              		.loc 1 509 26 view .LVU315
 1287 023e ADF80A00 		strh	r0, [sp, #10]	@ movhi
 510:Src/mc_tasks.c ****             }
 1288              		.loc 1 510 17 is_stmt 1 view .LVU316
 510:Src/mc_tasks.c ****             }
 1289              		.loc 1 510 36 is_stmt 0 view .LVU317
 1290 0242 314B     		ldr	r3, .L111+24
 1291 0244 029A     		ldr	r2, [sp, #8]
 1292 0246 1A61     		str	r2, [r3, #16]
 1293              	.LBE52:
 506:Src/mc_tasks.c ****                 qd_t IqdRef;
 1294              		.loc 1 506 13 view .LVU318
 1295 0248 F6E6     		b	.L61
ARM GAS  /tmp/ccJda0bK.s 			page 43


 1296              	.LVL119:
 1297              	.L74:
 506:Src/mc_tasks.c ****                 qd_t IqdRef;
 1298              		.loc 1 506 13 view .LVU319
 1299              	.LBE53:
 530:Src/mc_tasks.c ****           {
 1300              		.loc 1 530 11 is_stmt 1 view .LVU320
 530:Src/mc_tasks.c ****           {
 1301              		.loc 1 530 34 is_stmt 0 view .LVU321
 1302 024a 2C4B     		ldr	r3, .L111+12
 1303 024c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 530:Src/mc_tasks.c ****           {
 1304              		.loc 1 530 14 view .LVU322
 1305 0250 052B     		cmp	r3, #5
 1306 0252 47D0     		beq	.L106
 1307              	.LBB54:
 537:Src/mc_tasks.c ****             qd_t IqdRef;
 1308              		.loc 1 537 13 is_stmt 1 view .LVU323
 538:Src/mc_tasks.c ****             bool ObserverConverged = false;
 1309              		.loc 1 538 13 view .LVU324
 539:Src/mc_tasks.c **** 
 1310              		.loc 1 539 13 view .LVU325
 1311              	.LVL120:
 542:Src/mc_tasks.c **** 
 1312              		.loc 1 542 13 view .LVU326
 542:Src/mc_tasks.c **** 
 1313              		.loc 1 542 18 is_stmt 0 view .LVU327
 1314 0254 2A48     		ldr	r0, .L111+16
 1315 0256 FFF7FEFF 		bl	RUC_Exec
 1316              	.LVL121:
 542:Src/mc_tasks.c **** 
 1317              		.loc 1 542 15 view .LVU328
 1318 025a 0028     		cmp	r0, #0
 1319 025c 5ED1     		bne	.L87
 546:Src/mc_tasks.c **** 
 1320              		.loc 1 546 15 is_stmt 1 view .LVU329
 1321 025e 0022     		movs	r2, #0
 1322 0260 1021     		movs	r1, #16
 1323 0262 2648     		ldr	r0, .L111+12
 1324 0264 FFF7FEFF 		bl	MCI_FaultProcessing
 1325              	.LVL122:
 1326              	.L88:
 559:Src/mc_tasks.c **** 
 1327              		.loc 1 559 12 view .LVU330
 559:Src/mc_tasks.c **** 
 1328              		.loc 1 559 19 is_stmt 0 view .LVU331
 1329 0268 0DF10201 		add	r1, sp, #2
 1330 026c 2748     		ldr	r0, .L111+28
 1331 026e FFF7FEFF 		bl	VSS_CalcAvrgMecSpeedUnit
 1332              	.LVL123:
 562:Src/mc_tasks.c **** 
 1333              		.loc 1 562 12 is_stmt 1 view .LVU332
 562:Src/mc_tasks.c **** 
 1334              		.loc 1 562 24 is_stmt 0 view .LVU333
 1335 0272 2348     		ldr	r0, .L111+16
 1336 0274 FFF7FEFF 		bl	RUC_FirstAccelerationStageReached
 1337              	.LVL124:
ARM GAS  /tmp/ccJda0bK.s 			page 44


 562:Src/mc_tasks.c **** 
 1338              		.loc 1 562 15 view .LVU334
 1339 0278 0028     		cmp	r0, #0
 1340 027a 3FF4DDAE 		beq	.L61
 565:Src/mc_tasks.c ****              STO_SetDirection(&STO_PLL_M1, (int8_t)MCI_GetImposedMotorDirection(&Mci[M1]));
 1341              		.loc 1 565 14 is_stmt 1 view .LVU335
 565:Src/mc_tasks.c ****              STO_SetDirection(&STO_PLL_M1, (int8_t)MCI_GetImposedMotorDirection(&Mci[M1]));
 1342              		.loc 1 565 34 is_stmt 0 view .LVU336
 1343 027e 1D4D     		ldr	r5, .L111+4
 1344 0280 0DF10201 		add	r1, sp, #2
 1345 0284 2846     		mov	r0, r5
 1346 0286 FFF7FEFF 		bl	STO_PLL_IsObserverConverged
 1347              	.LVL125:
 1348 028a 0446     		mov	r4, r0
 1349              	.LVL126:
 566:Src/mc_tasks.c **** 
 1350              		.loc 1 566 14 is_stmt 1 view .LVU337
 566:Src/mc_tasks.c **** 
 1351              		.loc 1 566 52 is_stmt 0 view .LVU338
 1352 028c 1B48     		ldr	r0, .L111+12
 1353 028e FFF7FEFF 		bl	MCI_GetImposedMotorDirection
 1354              	.LVL127:
 566:Src/mc_tasks.c **** 
 1355              		.loc 1 566 14 view .LVU339
 1356 0292 41B2     		sxtb	r1, r0
 1357 0294 2846     		mov	r0, r5
 1358 0296 FFF7FEFF 		bl	STO_SetDirection
 1359              	.LVL128:
 568:Src/mc_tasks.c ****             }
 1360              		.loc 1 568 15 is_stmt 1 view .LVU340
 568:Src/mc_tasks.c ****             }
 1361              		.loc 1 568 21 is_stmt 0 view .LVU341
 1362 029a 2146     		mov	r1, r4
 1363 029c 1B48     		ldr	r0, .L111+28
 1364 029e FFF7FEFF 		bl	VSS_SetStartTransition
 1365              	.LVL129:
 571:Src/mc_tasks.c ****             {
 1366              		.loc 1 571 13 is_stmt 1 view .LVU342
 571:Src/mc_tasks.c ****             {
 1367              		.loc 1 571 16 is_stmt 0 view .LVU343
 1368 02a2 002C     		cmp	r4, #0
 1369 02a4 3FF4C8AE 		beq	.L61
 1370              	.LBB55:
 573:Src/mc_tasks.c **** 
 1371              		.loc 1 573 15 is_stmt 1 view .LVU344
 573:Src/mc_tasks.c **** 
 1372              		.loc 1 573 36 is_stmt 0 view .LVU345
 1373 02a8 2846     		mov	r0, r5
 1374 02aa FFF7FEFF 		bl	SPD_GetElAngle
 1375              	.LVL130:
 1376 02ae 0146     		mov	r1, r0
 1377 02b0 154D     		ldr	r5, .L111+24
 1378 02b2 6868     		ldr	r0, [r5, #4]
 1379 02b4 FFF7FEFF 		bl	MCM_Park
 1380              	.LVL131:
 1381 02b8 0290     		str	r0, [sp, #8]
 576:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], FOCVars[M1].Iqdref.q, 0);
ARM GAS  /tmp/ccJda0bK.s 			page 45


 1382              		.loc 1 576 15 is_stmt 1 view .LVU346
 1383 02ba 174C     		ldr	r4, .L111+40
 1384              	.LVL132:
 576:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], FOCVars[M1].Iqdref.q, 0);
 1385              		.loc 1 576 15 is_stmt 0 view .LVU347
 1386 02bc 2068     		ldr	r0, [r4]
 1387 02be FFF7FEFF 		bl	REMNG_Init
 1388              	.LVL133:
 577:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], StatorCurrent.q, TRANSITION_DURATION);
 1389              		.loc 1 577 15 is_stmt 1 view .LVU348
 577:Src/mc_tasks.c ****               (void)REMNG_ExecRamp(pREMNG[M1], StatorCurrent.q, TRANSITION_DURATION);
 1390              		.loc 1 577 21 is_stmt 0 view .LVU349
 1391 02c2 0022     		movs	r2, #0
 1392 02c4 B5F91010 		ldrsh	r1, [r5, #16]
 1393 02c8 2068     		ldr	r0, [r4]
 1394 02ca FFF7FEFF 		bl	REMNG_ExecRamp
 1395              	.LVL134:
 578:Src/mc_tasks.c ****               Mci[M1].State = SWITCH_OVER;
 1396              		.loc 1 578 15 is_stmt 1 view .LVU350
 578:Src/mc_tasks.c ****               Mci[M1].State = SWITCH_OVER;
 1397              		.loc 1 578 21 is_stmt 0 view .LVU351
 1398 02ce 1922     		movs	r2, #25
 1399 02d0 BDF90810 		ldrsh	r1, [sp, #8]
 1400 02d4 2068     		ldr	r0, [r4]
 1401 02d6 FFF7FEFF 		bl	REMNG_ExecRamp
 1402              	.LVL135:
 579:Src/mc_tasks.c ****             }
 1403              		.loc 1 579 15 is_stmt 1 view .LVU352
 579:Src/mc_tasks.c ****             }
 1404              		.loc 1 579 29 is_stmt 0 view .LVU353
 1405 02da 084B     		ldr	r3, .L111+12
 1406 02dc 1322     		movs	r2, #19
 1407 02de 83F82120 		strb	r2, [r3, #33]
 579:Src/mc_tasks.c ****             }
 1408              		.loc 1 579 29 view .LVU354
 1409 02e2 A9E6     		b	.L61
 1410              	.LVL136:
 1411              	.L106:
 579:Src/mc_tasks.c ****             }
 1412              		.loc 1 579 29 view .LVU355
 1413              	.LBE55:
 1414              	.LBE54:
 532:Src/mc_tasks.c ****           }
 1415              		.loc 1 532 13 is_stmt 1 view .LVU356
 1416 02e4 0021     		movs	r1, #0
 1417 02e6 0548     		ldr	r0, .L111+12
 1418 02e8 FFF7FEFF 		bl	TSK_MF_StopProcessing
 1419              	.LVL137:
 1420 02ec A4E6     		b	.L61
 1421              	.L112:
 1422 02ee 00BF     		.align	2
 1423              	.L111:
 1424 02f0 00000000 		.word	ENCODER_M1
 1425 02f4 00000000 		.word	STO_PLL_M1
 1426 02f8 00000000 		.word	pMPM
 1427 02fc 00000000 		.word	Mci
 1428 0300 00000000 		.word	RevUpControlM1
ARM GAS  /tmp/ccJda0bK.s 			page 46


 1429 0304 00000000 		.word	.LANCHOR3
 1430 0308 00000000 		.word	.LANCHOR2
 1431 030c 00000000 		.word	VirtualSpeedSensorM1
 1432 0310 00000000 		.word	pSTC
 1433 0314 00000000 		.word	EncAlignCtrlM1
 1434 0318 00000000 		.word	.LANCHOR6
 1435              	.LVL138:
 1436              	.L87:
 1437              	.LBB56:
 553:Src/mc_tasks.c ****              IqdRef.d = FOCVars[M1].UserIdref;
 1438              		.loc 1 553 14 view .LVU357
 553:Src/mc_tasks.c ****              IqdRef.d = FOCVars[M1].UserIdref;
 1439              		.loc 1 553 25 is_stmt 0 view .LVU358
 1440 031c 6B4B     		ldr	r3, .L113
 1441 031e 1868     		ldr	r0, [r3]
 1442 0320 FFF7FEFF 		bl	STC_CalcTorqueReference
 1443              	.LVL139:
 553:Src/mc_tasks.c ****              IqdRef.d = FOCVars[M1].UserIdref;
 1444              		.loc 1 553 23 view .LVU359
 1445 0324 ADF80400 		strh	r0, [sp, #4]	@ movhi
 554:Src/mc_tasks.c ****              /* Iqd reference current used by the High Frequency Loop to generate the PWM output */
 1446              		.loc 1 554 14 is_stmt 1 view .LVU360
 554:Src/mc_tasks.c ****              /* Iqd reference current used by the High Frequency Loop to generate the PWM output */
 1447              		.loc 1 554 36 is_stmt 0 view .LVU361
 1448 0328 694B     		ldr	r3, .L113+4
 1449 032a B3F91420 		ldrsh	r2, [r3, #20]
 554:Src/mc_tasks.c ****              /* Iqd reference current used by the High Frequency Loop to generate the PWM output */
 1450              		.loc 1 554 23 view .LVU362
 1451 032e ADF80620 		strh	r2, [sp, #6]	@ movhi
 556:Src/mc_tasks.c ****            }
 1452              		.loc 1 556 14 is_stmt 1 view .LVU363
 556:Src/mc_tasks.c ****            }
 1453              		.loc 1 556 33 is_stmt 0 view .LVU364
 1454 0332 019A     		ldr	r2, [sp, #4]
 1455 0334 1A61     		str	r2, [r3, #16]
 1456 0336 97E7     		b	.L88
 1457              	.LVL140:
 1458              	.L67:
 556:Src/mc_tasks.c ****            }
 1459              		.loc 1 556 33 view .LVU365
 1460              	.LBE56:
 587:Src/mc_tasks.c ****           {
 1461              		.loc 1 587 11 is_stmt 1 view .LVU366
 587:Src/mc_tasks.c ****           {
 1462              		.loc 1 587 34 is_stmt 0 view .LVU367
 1463 0338 664B     		ldr	r3, .L113+8
 1464 033a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 587:Src/mc_tasks.c ****           {
 1465              		.loc 1 587 14 view .LVU368
 1466 033e 052B     		cmp	r3, #5
 1467 0340 09D0     		beq	.L107
 1468              	.LBB57:
 593:Src/mc_tasks.c ****             int16_t hForcedMecSpeedUnit;
 1469              		.loc 1 593 13 is_stmt 1 view .LVU369
 594:Src/mc_tasks.c **** 
 1470              		.loc 1 594 13 view .LVU370
 596:Src/mc_tasks.c **** 
ARM GAS  /tmp/ccJda0bK.s 			page 47


 1471              		.loc 1 596 13 view .LVU371
 596:Src/mc_tasks.c **** 
 1472              		.loc 1 596 18 is_stmt 0 view .LVU372
 1473 0342 6548     		ldr	r0, .L113+12
 1474 0344 FFF7FEFF 		bl	RUC_Exec
 1475              	.LVL141:
 596:Src/mc_tasks.c **** 
 1476              		.loc 1 596 15 view .LVU373
 1477 0348 50B9     		cbnz	r0, .L91
 600:Src/mc_tasks.c **** 
 1478              		.loc 1 600 15 is_stmt 1 view .LVU374
 1479 034a 0022     		movs	r2, #0
 1480 034c 1021     		movs	r1, #16
 1481 034e 6148     		ldr	r0, .L113+8
 1482 0350 FFF7FEFF 		bl	MCI_FaultProcessing
 1483              	.LVL142:
 1484 0354 70E6     		b	.L61
 1485              	.L107:
 1486              	.LBE57:
 589:Src/mc_tasks.c ****           }
 1487              		.loc 1 589 13 view .LVU375
 1488 0356 0021     		movs	r1, #0
 1489 0358 5E48     		ldr	r0, .L113+8
 1490 035a FFF7FEFF 		bl	TSK_MF_StopProcessing
 1491              	.LVL143:
 1492 035e 6BE6     		b	.L61
 1493              	.L91:
 1494              	.LBB61:
 1495              	.LBB58:
 608:Src/mc_tasks.c ****               /* Check if the transition ramp has completed. */
 1496              		.loc 1 608 15 view .LVU376
 608:Src/mc_tasks.c ****               /* Check if the transition ramp has completed. */
 1497              		.loc 1 608 28 is_stmt 0 view .LVU377
 1498 0360 5E4D     		ldr	r5, .L113+16
 1499 0362 02A9     		add	r1, sp, #8
 1500 0364 2846     		mov	r0, r5
 1501 0366 FFF7FEFF 		bl	VSS_CalcAvrgMecSpeedUnit
 1502              	.LVL144:
 1503 036a 0446     		mov	r4, r0
 1504              	.LVL145:
 610:Src/mc_tasks.c ****               tempBool = VSS_TransitionEnded(&VirtualSpeedSensorM1);
 1505              		.loc 1 610 15 is_stmt 1 view .LVU378
 611:Src/mc_tasks.c ****               LoopClosed = LoopClosed || tempBool;
 1506              		.loc 1 611 15 view .LVU379
 611:Src/mc_tasks.c ****               LoopClosed = LoopClosed || tempBool;
 1507              		.loc 1 611 26 is_stmt 0 view .LVU380
 1508 036c 2846     		mov	r0, r5
 1509 036e FFF7FEFF 		bl	VSS_TransitionEnded
 1510              	.LVL146:
 612:Src/mc_tasks.c **** 
 1511              		.loc 1 612 15 is_stmt 1 view .LVU381
 612:Src/mc_tasks.c **** 
 1512              		.loc 1 612 39 is_stmt 0 view .LVU382
 1513 0372 14B9     		cbnz	r4, .L97
 612:Src/mc_tasks.c **** 
 1514              		.loc 1 612 39 discriminator 2 view .LVU383
 1515 0374 60B3     		cbz	r0, .L98
ARM GAS  /tmp/ccJda0bK.s 			page 48


 612:Src/mc_tasks.c **** 
 1516              		.loc 1 612 39 view .LVU384
 1517 0376 0123     		movs	r3, #1
 1518 0378 00E0     		b	.L93
 1519              	.L97:
 1520 037a 0123     		movs	r3, #1
 1521              	.L93:
 1522              	.LVL147:
 616:Src/mc_tasks.c ****               {
 1523              		.loc 1 616 15 is_stmt 1 discriminator 6 view .LVU385
 616:Src/mc_tasks.c ****               {
 1524              		.loc 1 616 18 is_stmt 0 discriminator 6 view .LVU386
 1525 037c 002B     		cmp	r3, #0
 1526 037e 3FF45BAE 		beq	.L61
 621:Src/mc_tasks.c ****                                     (((int32_t)FOCVars[M1].Iqdref.q * (int16_t)PID_GetKIDivisor(&PI
 1527              		.loc 1 621 17 is_stmt 1 view .LVU387
 622:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 1528              		.loc 1 622 66 is_stmt 0 view .LVU388
 1529 0382 534B     		ldr	r3, .L113+4
 1530              	.LVL148:
 622:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 1531              		.loc 1 622 66 view .LVU389
 1532 0384 B3F91050 		ldrsh	r5, [r3, #16]
 622:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 1533              		.loc 1 622 80 view .LVU390
 1534 0388 554C     		ldr	r4, .L113+20
 1535 038a 2046     		mov	r0, r4
 1536              	.LVL149:
 622:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 1537              		.loc 1 622 80 view .LVU391
 1538 038c FFF7FEFF 		bl	PID_GetKIDivisor
 1539              	.LVL150:
 622:Src/mc_tasks.c ****                                     / PID_SPEED_INTEGRAL_INIT_DIV));
 1540              		.loc 1 622 71 view .LVU392
 1541 0390 01B2     		sxth	r1, r0
 621:Src/mc_tasks.c ****                                     (((int32_t)FOCVars[M1].Iqdref.q * (int16_t)PID_GetKIDivisor(&PI
 1542              		.loc 1 621 17 view .LVU393
 1543 0392 01FB05F1 		mul	r1, r1, r5
 1544 0396 2046     		mov	r0, r4
 1545 0398 FFF7FEFF 		bl	PID_SetIntegralTerm
 1546              	.LVL151:
 627:Src/mc_tasks.c ****                 /* USER CODE END MediumFrequencyTask M1 1 */
 1547              		.loc 1 627 17 is_stmt 1 view .LVU394
 1548              	.LBB59:
 1549              	.LBI59:
 1550              		.file 2 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.0
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     13. March 2019
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
ARM GAS  /tmp/ccJda0bK.s 			page 49


  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
ARM GAS  /tmp/ccJda0bK.s 			page 50


  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
ARM GAS  /tmp/ccJda0bK.s 			page 51


 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
ARM GAS  /tmp/ccJda0bK.s 			page 52


 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:Drivers/CMSIS/Include/core_cm4.h **** /**
 210:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:Drivers/CMSIS/Include/core_cm4.h **** 
 212:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:Drivers/CMSIS/Include/core_cm4.h **** */
 216:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:Drivers/CMSIS/Include/core_cm4.h **** #else
 219:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** 
 224:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:Drivers/CMSIS/Include/core_cm4.h **** 
 231:Drivers/CMSIS/Include/core_cm4.h **** 
 232:Drivers/CMSIS/Include/core_cm4.h **** 
 233:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 237:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
ARM GAS  /tmp/ccJda0bK.s 			page 53


 240:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:Drivers/CMSIS/Include/core_cm4.h **** /**
 245:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:Drivers/CMSIS/Include/core_cm4.h **** */
 248:Drivers/CMSIS/Include/core_cm4.h **** 
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:Drivers/CMSIS/Include/core_cm4.h ****   @{
 254:Drivers/CMSIS/Include/core_cm4.h ****  */
 255:Drivers/CMSIS/Include/core_cm4.h **** 
 256:Drivers/CMSIS/Include/core_cm4.h **** /**
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:Drivers/CMSIS/Include/core_cm4.h ****  */
 259:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 260:Drivers/CMSIS/Include/core_cm4.h **** {
 261:Drivers/CMSIS/Include/core_cm4.h ****   struct
 262:Drivers/CMSIS/Include/core_cm4.h ****   {
 263:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:Drivers/CMSIS/Include/core_cm4.h **** 
 275:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:Drivers/CMSIS/Include/core_cm4.h **** 
 279:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:Drivers/CMSIS/Include/core_cm4.h **** 
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:Drivers/CMSIS/Include/core_cm4.h **** 
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:Drivers/CMSIS/Include/core_cm4.h **** 
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:Drivers/CMSIS/Include/core_cm4.h **** 
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:Drivers/CMSIS/Include/core_cm4.h **** 
 294:Drivers/CMSIS/Include/core_cm4.h **** 
 295:Drivers/CMSIS/Include/core_cm4.h **** /**
 296:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
ARM GAS  /tmp/ccJda0bK.s 			page 54


 297:Drivers/CMSIS/Include/core_cm4.h ****  */
 298:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 299:Drivers/CMSIS/Include/core_cm4.h **** {
 300:Drivers/CMSIS/Include/core_cm4.h ****   struct
 301:Drivers/CMSIS/Include/core_cm4.h ****   {
 302:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:Drivers/CMSIS/Include/core_cm4.h **** 
 308:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:Drivers/CMSIS/Include/core_cm4.h **** 
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /**
 314:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:Drivers/CMSIS/Include/core_cm4.h ****  */
 316:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 317:Drivers/CMSIS/Include/core_cm4.h **** {
 318:Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:Drivers/CMSIS/Include/core_cm4.h ****   {
 320:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:Drivers/CMSIS/Include/core_cm4.h **** 
 336:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:Drivers/CMSIS/Include/core_cm4.h **** 
 340:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:Drivers/CMSIS/Include/core_cm4.h **** 
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:Drivers/CMSIS/Include/core_cm4.h **** 
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:Drivers/CMSIS/Include/core_cm4.h **** 
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:Drivers/CMSIS/Include/core_cm4.h **** 
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
ARM GAS  /tmp/ccJda0bK.s 			page 55


 354:Drivers/CMSIS/Include/core_cm4.h **** 
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm4.h **** 
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** 
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm4.h **** 
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm4.h **** 
 367:Drivers/CMSIS/Include/core_cm4.h **** 
 368:Drivers/CMSIS/Include/core_cm4.h **** /**
 369:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:Drivers/CMSIS/Include/core_cm4.h ****  */
 371:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 372:Drivers/CMSIS/Include/core_cm4.h **** {
 373:Drivers/CMSIS/Include/core_cm4.h ****   struct
 374:Drivers/CMSIS/Include/core_cm4.h ****   {
 375:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:Drivers/CMSIS/Include/core_cm4.h **** 
 383:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:Drivers/CMSIS/Include/core_cm4.h **** 
 387:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:Drivers/CMSIS/Include/core_cm4.h **** 
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:Drivers/CMSIS/Include/core_cm4.h **** 
 393:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** 
 396:Drivers/CMSIS/Include/core_cm4.h **** /**
 397:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:Drivers/CMSIS/Include/core_cm4.h ****   @{
 401:Drivers/CMSIS/Include/core_cm4.h ****  */
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** /**
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:Drivers/CMSIS/Include/core_cm4.h ****  */
 406:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 407:Drivers/CMSIS/Include/core_cm4.h **** {
 408:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
ARM GAS  /tmp/ccJda0bK.s 			page 56


 411:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:Drivers/CMSIS/Include/core_cm4.h **** 
 423:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:Drivers/CMSIS/Include/core_cm4.h **** 
 427:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:Drivers/CMSIS/Include/core_cm4.h **** 
 429:Drivers/CMSIS/Include/core_cm4.h **** 
 430:Drivers/CMSIS/Include/core_cm4.h **** /**
 431:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:Drivers/CMSIS/Include/core_cm4.h ****   @{
 435:Drivers/CMSIS/Include/core_cm4.h ****  */
 436:Drivers/CMSIS/Include/core_cm4.h **** 
 437:Drivers/CMSIS/Include/core_cm4.h **** /**
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:Drivers/CMSIS/Include/core_cm4.h ****  */
 440:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 441:Drivers/CMSIS/Include/core_cm4.h **** {
 442:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:Drivers/CMSIS/Include/core_cm4.h **** 
 465:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
ARM GAS  /tmp/ccJda0bK.s 			page 57


 468:Drivers/CMSIS/Include/core_cm4.h **** 
 469:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:Drivers/CMSIS/Include/core_cm4.h **** 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:Drivers/CMSIS/Include/core_cm4.h **** 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:Drivers/CMSIS/Include/core_cm4.h **** 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:Drivers/CMSIS/Include/core_cm4.h **** 
 481:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** 
 485:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm4.h **** 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:Drivers/CMSIS/Include/core_cm4.h **** 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm4.h **** 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm4.h **** 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm4.h **** 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm4.h **** 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm4.h **** 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm4.h **** 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm4.h **** 
 512:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** 
 516:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
ARM GAS  /tmp/ccJda0bK.s 			page 58


 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm4.h **** 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** 
 538:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm4.h **** 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm4.h **** 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** 
 567:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm4.h **** 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
ARM GAS  /tmp/ccJda0bK.s 			page 59


 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm4.h **** 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm4.h **** 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm4.h **** 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm4.h **** 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm4.h **** 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm4.h **** 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm4.h **** 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm4.h **** 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm4.h **** 
 610:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** 
 614:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm4.h **** 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm4.h **** 
 620:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** 
 624:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm4.h **** 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm4.h **** 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm4.h **** 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJda0bK.s 			page 60


 639:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm4.h **** 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm4.h **** 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm4.h **** 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm4.h **** 
 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:Drivers/CMSIS/Include/core_cm4.h **** 
 661:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
 665:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm4.h **** 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm4.h **** 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm4.h **** 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm4.h **** 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm4.h **** 
 680:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** 
 684:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm4.h **** 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm4.h **** 
 690:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
ARM GAS  /tmp/ccJda0bK.s 			page 61


 696:Drivers/CMSIS/Include/core_cm4.h **** 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:Drivers/CMSIS/Include/core_cm4.h **** 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:Drivers/CMSIS/Include/core_cm4.h **** 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:Drivers/CMSIS/Include/core_cm4.h **** 
 706:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** 
 709:Drivers/CMSIS/Include/core_cm4.h **** /**
 710:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:Drivers/CMSIS/Include/core_cm4.h ****   @{
 714:Drivers/CMSIS/Include/core_cm4.h ****  */
 715:Drivers/CMSIS/Include/core_cm4.h **** 
 716:Drivers/CMSIS/Include/core_cm4.h **** /**
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:Drivers/CMSIS/Include/core_cm4.h ****  */
 719:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 720:Drivers/CMSIS/Include/core_cm4.h **** {
 721:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:Drivers/CMSIS/Include/core_cm4.h **** 
 726:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:Drivers/CMSIS/Include/core_cm4.h **** 
 730:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:Drivers/CMSIS/Include/core_cm4.h **** 
 734:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:Drivers/CMSIS/Include/core_cm4.h **** 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:Drivers/CMSIS/Include/core_cm4.h **** 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:Drivers/CMSIS/Include/core_cm4.h **** 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:Drivers/CMSIS/Include/core_cm4.h **** 
 746:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** 
 749:Drivers/CMSIS/Include/core_cm4.h **** /**
 750:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
ARM GAS  /tmp/ccJda0bK.s 			page 62


 753:Drivers/CMSIS/Include/core_cm4.h ****   @{
 754:Drivers/CMSIS/Include/core_cm4.h ****  */
 755:Drivers/CMSIS/Include/core_cm4.h **** 
 756:Drivers/CMSIS/Include/core_cm4.h **** /**
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:Drivers/CMSIS/Include/core_cm4.h ****  */
 759:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 760:Drivers/CMSIS/Include/core_cm4.h **** {
 761:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:Drivers/CMSIS/Include/core_cm4.h **** 
 767:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:Drivers/CMSIS/Include/core_cm4.h **** 
 771:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:Drivers/CMSIS/Include/core_cm4.h **** 
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:Drivers/CMSIS/Include/core_cm4.h **** 
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:Drivers/CMSIS/Include/core_cm4.h **** 
 780:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** 
 784:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** 
 788:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** 
 792:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:Drivers/CMSIS/Include/core_cm4.h **** 
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:Drivers/CMSIS/Include/core_cm4.h **** 
 798:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** 
 801:Drivers/CMSIS/Include/core_cm4.h **** /**
 802:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:Drivers/CMSIS/Include/core_cm4.h ****   @{
 806:Drivers/CMSIS/Include/core_cm4.h ****  */
 807:Drivers/CMSIS/Include/core_cm4.h **** 
 808:Drivers/CMSIS/Include/core_cm4.h **** /**
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
ARM GAS  /tmp/ccJda0bK.s 			page 63


 810:Drivers/CMSIS/Include/core_cm4.h ****  */
 811:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 812:Drivers/CMSIS/Include/core_cm4.h **** {
 813:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 814:Drivers/CMSIS/Include/core_cm4.h ****   {
 815:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 843:Drivers/CMSIS/Include/core_cm4.h **** 
 844:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:Drivers/CMSIS/Include/core_cm4.h **** 
 848:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:Drivers/CMSIS/Include/core_cm4.h **** 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:Drivers/CMSIS/Include/core_cm4.h **** 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:Drivers/CMSIS/Include/core_cm4.h **** 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJda0bK.s 			page 64


 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:Drivers/CMSIS/Include/core_cm4.h **** 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:Drivers/CMSIS/Include/core_cm4.h **** 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** 
 880:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:Drivers/CMSIS/Include/core_cm4.h **** 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:Drivers/CMSIS/Include/core_cm4.h **** 
 886:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** 
 889:Drivers/CMSIS/Include/core_cm4.h **** /**
 890:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:Drivers/CMSIS/Include/core_cm4.h ****  */
 895:Drivers/CMSIS/Include/core_cm4.h **** 
 896:Drivers/CMSIS/Include/core_cm4.h **** /**
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:Drivers/CMSIS/Include/core_cm4.h ****  */
 899:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:Drivers/CMSIS/Include/core_cm4.h **** {
 901:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
ARM GAS  /tmp/ccJda0bK.s 			page 65


 924:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:Drivers/CMSIS/Include/core_cm4.h **** 
 926:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:Drivers/CMSIS/Include/core_cm4.h **** 
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:Drivers/CMSIS/Include/core_cm4.h **** 
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:Drivers/CMSIS/Include/core_cm4.h **** 
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:Drivers/CMSIS/Include/core_cm4.h **** 
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:Drivers/CMSIS/Include/core_cm4.h **** 
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:Drivers/CMSIS/Include/core_cm4.h **** 
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:Drivers/CMSIS/Include/core_cm4.h **** 
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:Drivers/CMSIS/Include/core_cm4.h **** 
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:Drivers/CMSIS/Include/core_cm4.h **** 
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJda0bK.s 			page 66


 981:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:Drivers/CMSIS/Include/core_cm4.h **** 
 989:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:Drivers/CMSIS/Include/core_cm4.h **** 
 993:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:Drivers/CMSIS/Include/core_cm4.h **** 
1001:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:Drivers/CMSIS/Include/core_cm4.h **** 
1005:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:Drivers/CMSIS/Include/core_cm4.h **** 
1009:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:Drivers/CMSIS/Include/core_cm4.h **** 
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:Drivers/CMSIS/Include/core_cm4.h **** 
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:Drivers/CMSIS/Include/core_cm4.h **** 
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:Drivers/CMSIS/Include/core_cm4.h **** 
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:Drivers/CMSIS/Include/core_cm4.h **** 
1033:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** 
1036:Drivers/CMSIS/Include/core_cm4.h **** /**
1037:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
ARM GAS  /tmp/ccJda0bK.s 			page 67


1038:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:Drivers/CMSIS/Include/core_cm4.h ****   @{
1041:Drivers/CMSIS/Include/core_cm4.h ****  */
1042:Drivers/CMSIS/Include/core_cm4.h **** 
1043:Drivers/CMSIS/Include/core_cm4.h **** /**
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:Drivers/CMSIS/Include/core_cm4.h ****  */
1046:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:Drivers/CMSIS/Include/core_cm4.h **** {
1048:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:Drivers/CMSIS/Include/core_cm4.h **** 
1074:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:Drivers/CMSIS/Include/core_cm4.h **** 
1082:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:Drivers/CMSIS/Include/core_cm4.h **** 
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJda0bK.s 			page 68


1095:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:Drivers/CMSIS/Include/core_cm4.h **** 
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:Drivers/CMSIS/Include/core_cm4.h **** 
1102:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:Drivers/CMSIS/Include/core_cm4.h **** 
1106:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:Drivers/CMSIS/Include/core_cm4.h **** 
1110:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:Drivers/CMSIS/Include/core_cm4.h **** 
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:Drivers/CMSIS/Include/core_cm4.h **** 
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:Drivers/CMSIS/Include/core_cm4.h **** 
1132:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:Drivers/CMSIS/Include/core_cm4.h **** 
1135:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:Drivers/CMSIS/Include/core_cm4.h **** 
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:Drivers/CMSIS/Include/core_cm4.h **** 
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:Drivers/CMSIS/Include/core_cm4.h **** 
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:Drivers/CMSIS/Include/core_cm4.h **** 
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
ARM GAS  /tmp/ccJda0bK.s 			page 69


1152:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:Drivers/CMSIS/Include/core_cm4.h **** 
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:Drivers/CMSIS/Include/core_cm4.h **** 
1157:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:Drivers/CMSIS/Include/core_cm4.h **** 
1161:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:Drivers/CMSIS/Include/core_cm4.h **** 
1164:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:Drivers/CMSIS/Include/core_cm4.h **** 
1168:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:Drivers/CMSIS/Include/core_cm4.h **** 
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:Drivers/CMSIS/Include/core_cm4.h **** 
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:Drivers/CMSIS/Include/core_cm4.h **** 
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:Drivers/CMSIS/Include/core_cm4.h **** 
1187:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** 
1191:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:Drivers/CMSIS/Include/core_cm4.h **** 
1194:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** 
1197:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:Drivers/CMSIS/Include/core_cm4.h **** /**
1199:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:Drivers/CMSIS/Include/core_cm4.h ****   @{
1203:Drivers/CMSIS/Include/core_cm4.h ****  */
1204:Drivers/CMSIS/Include/core_cm4.h **** 
1205:Drivers/CMSIS/Include/core_cm4.h **** /**
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:Drivers/CMSIS/Include/core_cm4.h ****  */
1208:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
ARM GAS  /tmp/ccJda0bK.s 			page 70


1209:Drivers/CMSIS/Include/core_cm4.h **** {
1210:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1222:Drivers/CMSIS/Include/core_cm4.h **** 
1223:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:Drivers/CMSIS/Include/core_cm4.h **** 
1225:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1226:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:Drivers/CMSIS/Include/core_cm4.h **** 
1229:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:Drivers/CMSIS/Include/core_cm4.h **** 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:Drivers/CMSIS/Include/core_cm4.h **** 
1235:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1236:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** 
1239:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:Drivers/CMSIS/Include/core_cm4.h **** 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:Drivers/CMSIS/Include/core_cm4.h **** 
1245:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** 
1249:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** 
1253:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:Drivers/CMSIS/Include/core_cm4.h **** 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:Drivers/CMSIS/Include/core_cm4.h **** 
1259:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** 
1263:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJda0bK.s 			page 71


1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:Drivers/CMSIS/Include/core_cm4.h **** 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:Drivers/CMSIS/Include/core_cm4.h **** 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:Drivers/CMSIS/Include/core_cm4.h **** 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:Drivers/CMSIS/Include/core_cm4.h **** 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:Drivers/CMSIS/Include/core_cm4.h **** 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:Drivers/CMSIS/Include/core_cm4.h **** 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:Drivers/CMSIS/Include/core_cm4.h **** 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:Drivers/CMSIS/Include/core_cm4.h **** 
1290:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:Drivers/CMSIS/Include/core_cm4.h **** 
1293:Drivers/CMSIS/Include/core_cm4.h **** 
1294:Drivers/CMSIS/Include/core_cm4.h **** /**
1295:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:Drivers/CMSIS/Include/core_cm4.h ****   @{
1299:Drivers/CMSIS/Include/core_cm4.h ****  */
1300:Drivers/CMSIS/Include/core_cm4.h **** 
1301:Drivers/CMSIS/Include/core_cm4.h **** /**
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:Drivers/CMSIS/Include/core_cm4.h ****  */
1304:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1305:Drivers/CMSIS/Include/core_cm4.h **** {
1306:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1314:Drivers/CMSIS/Include/core_cm4.h **** 
1315:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:Drivers/CMSIS/Include/core_cm4.h **** 
1319:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:Drivers/CMSIS/Include/core_cm4.h **** 
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
ARM GAS  /tmp/ccJda0bK.s 			page 72


1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:Drivers/CMSIS/Include/core_cm4.h **** 
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:Drivers/CMSIS/Include/core_cm4.h **** 
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:Drivers/CMSIS/Include/core_cm4.h **** 
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:Drivers/CMSIS/Include/core_cm4.h **** 
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:Drivers/CMSIS/Include/core_cm4.h **** 
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:Drivers/CMSIS/Include/core_cm4.h **** 
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:Drivers/CMSIS/Include/core_cm4.h **** 
1343:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:Drivers/CMSIS/Include/core_cm4.h **** 
1347:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:Drivers/CMSIS/Include/core_cm4.h **** 
1351:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:Drivers/CMSIS/Include/core_cm4.h **** 
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:Drivers/CMSIS/Include/core_cm4.h **** 
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:Drivers/CMSIS/Include/core_cm4.h **** 
1360:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:Drivers/CMSIS/Include/core_cm4.h **** 
1364:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:Drivers/CMSIS/Include/core_cm4.h **** 
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:Drivers/CMSIS/Include/core_cm4.h **** 
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:Drivers/CMSIS/Include/core_cm4.h **** 
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:Drivers/CMSIS/Include/core_cm4.h **** 
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:Drivers/CMSIS/Include/core_cm4.h **** 
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
ARM GAS  /tmp/ccJda0bK.s 			page 73


1380:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:Drivers/CMSIS/Include/core_cm4.h **** 
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:Drivers/CMSIS/Include/core_cm4.h **** 
1385:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** 
1389:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:Drivers/CMSIS/Include/core_cm4.h **** 
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:Drivers/CMSIS/Include/core_cm4.h **** 
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:Drivers/CMSIS/Include/core_cm4.h **** 
1398:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** 
1406:Drivers/CMSIS/Include/core_cm4.h **** /**
1407:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:Drivers/CMSIS/Include/core_cm4.h ****   @{
1411:Drivers/CMSIS/Include/core_cm4.h ****  */
1412:Drivers/CMSIS/Include/core_cm4.h **** 
1413:Drivers/CMSIS/Include/core_cm4.h **** /**
1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:Drivers/CMSIS/Include/core_cm4.h ****  */
1416:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1417:Drivers/CMSIS/Include/core_cm4.h **** {
1418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1423:Drivers/CMSIS/Include/core_cm4.h **** 
1424:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccJda0bK.s 			page 74


1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:Drivers/CMSIS/Include/core_cm4.h **** 
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:Drivers/CMSIS/Include/core_cm4.h **** 
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:Drivers/CMSIS/Include/core_cm4.h **** 
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:Drivers/CMSIS/Include/core_cm4.h **** 
1461:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** 
1465:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:Drivers/CMSIS/Include/core_cm4.h **** 
1468:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** 
1472:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:Drivers/CMSIS/Include/core_cm4.h **** 
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:Drivers/CMSIS/Include/core_cm4.h **** 
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:Drivers/CMSIS/Include/core_cm4.h **** 
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:Drivers/CMSIS/Include/core_cm4.h **** 
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
ARM GAS  /tmp/ccJda0bK.s 			page 75


1494:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:Drivers/CMSIS/Include/core_cm4.h **** 
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:Drivers/CMSIS/Include/core_cm4.h **** 
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:Drivers/CMSIS/Include/core_cm4.h **** 
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:Drivers/CMSIS/Include/core_cm4.h **** 
1508:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** 
1511:Drivers/CMSIS/Include/core_cm4.h **** /**
1512:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:Drivers/CMSIS/Include/core_cm4.h ****   @{
1516:Drivers/CMSIS/Include/core_cm4.h ****  */
1517:Drivers/CMSIS/Include/core_cm4.h **** 
1518:Drivers/CMSIS/Include/core_cm4.h **** /**
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1523:Drivers/CMSIS/Include/core_cm4.h **** */
1524:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:Drivers/CMSIS/Include/core_cm4.h **** 
1526:Drivers/CMSIS/Include/core_cm4.h **** /**
1527:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:Drivers/CMSIS/Include/core_cm4.h **** */
1532:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:Drivers/CMSIS/Include/core_cm4.h **** 
1534:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:Drivers/CMSIS/Include/core_cm4.h **** 
1536:Drivers/CMSIS/Include/core_cm4.h **** 
1537:Drivers/CMSIS/Include/core_cm4.h **** /**
1538:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:Drivers/CMSIS/Include/core_cm4.h ****   @{
1542:Drivers/CMSIS/Include/core_cm4.h ****  */
1543:Drivers/CMSIS/Include/core_cm4.h **** 
1544:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
ARM GAS  /tmp/ccJda0bK.s 			page 76


1551:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:Drivers/CMSIS/Include/core_cm4.h **** 
1554:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:Drivers/CMSIS/Include/core_cm4.h **** 
1563:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:Drivers/CMSIS/Include/core_cm4.h **** #endif
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:Drivers/CMSIS/Include/core_cm4.h **** 
1571:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** 
1574:Drivers/CMSIS/Include/core_cm4.h **** 
1575:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1576:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1577:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1578:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1579:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1580:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1581:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1582:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1583:Drivers/CMSIS/Include/core_cm4.h **** /**
1584:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:Drivers/CMSIS/Include/core_cm4.h **** */
1586:Drivers/CMSIS/Include/core_cm4.h **** 
1587:Drivers/CMSIS/Include/core_cm4.h **** 
1588:Drivers/CMSIS/Include/core_cm4.h **** 
1589:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:Drivers/CMSIS/Include/core_cm4.h **** /**
1591:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:Drivers/CMSIS/Include/core_cm4.h ****   @{
1595:Drivers/CMSIS/Include/core_cm4.h ****  */
1596:Drivers/CMSIS/Include/core_cm4.h **** 
1597:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1601:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:Drivers/CMSIS/Include/core_cm4.h **** #else
1603:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
ARM GAS  /tmp/ccJda0bK.s 			page 77


1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:Drivers/CMSIS/Include/core_cm4.h **** 
1617:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1621:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:Drivers/CMSIS/Include/core_cm4.h **** #else
1623:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:Drivers/CMSIS/Include/core_cm4.h **** 
1627:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:Drivers/CMSIS/Include/core_cm4.h **** 
1629:Drivers/CMSIS/Include/core_cm4.h **** 
1630:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:Drivers/CMSIS/Include/core_cm4.h **** 
1638:Drivers/CMSIS/Include/core_cm4.h **** 
1639:Drivers/CMSIS/Include/core_cm4.h **** /**
1640:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1641:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1644:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:Drivers/CMSIS/Include/core_cm4.h ****  */
1648:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:Drivers/CMSIS/Include/core_cm4.h **** {
1650:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1651:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:Drivers/CMSIS/Include/core_cm4.h **** 
1653:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:Drivers/CMSIS/Include/core_cm4.h **** }
1660:Drivers/CMSIS/Include/core_cm4.h **** 
1661:Drivers/CMSIS/Include/core_cm4.h **** 
1662:Drivers/CMSIS/Include/core_cm4.h **** /**
1663:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1664:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
ARM GAS  /tmp/ccJda0bK.s 			page 78


1665:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:Drivers/CMSIS/Include/core_cm4.h ****  */
1667:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:Drivers/CMSIS/Include/core_cm4.h **** {
1669:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1670:Drivers/CMSIS/Include/core_cm4.h **** }
1671:Drivers/CMSIS/Include/core_cm4.h **** 
1672:Drivers/CMSIS/Include/core_cm4.h **** 
1673:Drivers/CMSIS/Include/core_cm4.h **** /**
1674:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1675:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1678:Drivers/CMSIS/Include/core_cm4.h ****  */
1679:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 1551              		.loc 2 1679 22 view .LVU395
 1552              	.LBB60:
1680:Drivers/CMSIS/Include/core_cm4.h **** {
1681:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 1553              		.loc 2 1681 3 view .LVU396
1682:Drivers/CMSIS/Include/core_cm4.h ****   {
1683:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 1554              		.loc 2 1683 5 view .LVU397
1684:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 1555              		.loc 2 1684 5 view .LVU398
 1556              		.loc 2 1684 43 is_stmt 0 view .LVU399
 1557 039c 514B     		ldr	r3, .L113+24
 1558 039e 4FF40002 		mov	r2, #8388608
 1559 03a2 1A60     		str	r2, [r3]
1685:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 1560              		.loc 2 1685 5 is_stmt 1 view .LVU400
 1561              	.LVL152:
 1562              		.loc 2 1685 5 is_stmt 0 view .LVU401
 1563              	.LBE60:
 1564              	.LBE59:
 629:Src/mc_tasks.c ****                 FOC_InitAdditionalMethods(M1);
 1565              		.loc 1 629 17 is_stmt 1 view .LVU402
 1566 03a4 494C     		ldr	r4, .L113
 1567 03a6 5049     		ldr	r1, .L113+28
 1568 03a8 2068     		ldr	r0, [r4]
 1569 03aa FFF7FEFF 		bl	STC_SetSpeedSensor
 1570              	.LVL153:
 630:Src/mc_tasks.c ****                 FOC_CalcCurrRef( M1 );
 1571              		.loc 1 630 17 view .LVU403
 1572 03ae 0020     		movs	r0, #0
 1573 03b0 FFF7FEFF 		bl	FOC_InitAdditionalMethods
 1574              	.LVL154:
 631:Src/mc_tasks.c ****                 STC_ForceSpeedReferenceToCurrentSpeed(pSTC[M1]); /* Init the reference speed to cur
 1575              		.loc 1 631 17 view .LVU404
 1576 03b4 0020     		movs	r0, #0
 1577 03b6 FFF7FEFF 		bl	FOC_CalcCurrRef
 1578              	.LVL155:
 632:Src/mc_tasks.c ****                 MCI_ExecBufferedCommands(&Mci[M1]); /* Exec the speed ramp after changing of the sp
 1579              		.loc 1 632 17 view .LVU405
 1580 03ba 2068     		ldr	r0, [r4]
 1581 03bc FFF7FEFF 		bl	STC_ForceSpeedReferenceToCurrentSpeed
 1582              	.LVL156:
ARM GAS  /tmp/ccJda0bK.s 			page 79


 633:Src/mc_tasks.c ****                 Mci[M1].State = RUN;
 1583              		.loc 1 633 17 view .LVU406
 1584 03c0 444C     		ldr	r4, .L113+8
 1585 03c2 2046     		mov	r0, r4
 1586 03c4 FFF7FEFF 		bl	MCI_ExecBufferedCommands
 1587              	.LVL157:
 634:Src/mc_tasks.c ****               }
 1588              		.loc 1 634 17 view .LVU407
 634:Src/mc_tasks.c ****               }
 1589              		.loc 1 634 31 is_stmt 0 view .LVU408
 1590 03c8 0623     		movs	r3, #6
 1591 03ca 84F82130 		strb	r3, [r4, #33]
 1592 03ce 33E6     		b	.L61
 1593              	.LVL158:
 1594              	.L98:
 612:Src/mc_tasks.c **** 
 1595              		.loc 1 612 39 view .LVU409
 1596 03d0 0023     		movs	r3, #0
 1597 03d2 D3E7     		b	.L93
 1598              	.LVL159:
 1599              	.L73:
 612:Src/mc_tasks.c **** 
 1600              		.loc 1 612 39 view .LVU410
 1601              	.LBE58:
 1602              	.LBE61:
 643:Src/mc_tasks.c ****           {
 1603              		.loc 1 643 11 is_stmt 1 view .LVU411
 643:Src/mc_tasks.c ****           {
 1604              		.loc 1 643 34 is_stmt 0 view .LVU412
 1605 03d4 3F4B     		ldr	r3, .L113+8
 1606 03d6 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 643:Src/mc_tasks.c ****           {
 1607              		.loc 1 643 14 view .LVU413
 1608 03da 052B     		cmp	r3, #5
 1609 03dc 18D0     		beq	.L108
 1610              	.LBB62:
 650:Src/mc_tasks.c ****               lastCommand++;
 1611              		.loc 1 650 15 is_stmt 1 view .LVU414
 650:Src/mc_tasks.c ****               lastCommand++;
 1612              		.loc 1 650 43 is_stmt 0 view .LVU415
 1613 03de 3D4B     		ldr	r3, .L113+8
 1614 03e0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1615              	.LVL160:
 651:Src/mc_tasks.c ****               lastCommand--;
 1616              		.loc 1 651 15 is_stmt 1 view .LVU416
 652:Src/mc_tasks.c ****               if (Mci[M1].lastCommand == MCI_CMD_EXECSPEEDSIN || Mci[M1].lastCommand ==MCI_CMD_EXEC
 1617              		.loc 1 652 15 view .LVU417
 653:Src/mc_tasks.c ****                 Mci[M1].CommandState = MCI_COMMAND_NOT_ALREADY_EXECUTED;
 1618              		.loc 1 653 15 view .LVU418
 653:Src/mc_tasks.c ****                 Mci[M1].CommandState = MCI_COMMAND_NOT_ALREADY_EXECUTED;
 1619              		.loc 1 653 63 is_stmt 0 view .LVU419
 1620 03e2 043B     		subs	r3, r3, #4
 1621              	.LVL161:
 653:Src/mc_tasks.c ****                 Mci[M1].CommandState = MCI_COMMAND_NOT_ALREADY_EXECUTED;
 1622              		.loc 1 653 63 view .LVU420
 1623 03e4 DBB2     		uxtb	r3, r3
 1624              	.LVL162:
ARM GAS  /tmp/ccJda0bK.s 			page 80


 653:Src/mc_tasks.c ****                 Mci[M1].CommandState = MCI_COMMAND_NOT_ALREADY_EXECUTED;
 1625              		.loc 1 653 18 view .LVU421
 1626 03e6 012B     		cmp	r3, #1
 1627 03e8 17D9     		bls	.L109
 1628              	.L95:
 655:Src/mc_tasks.c ****             /* USER CODE END MediumFrequencyTask M1 2 */
 1629              		.loc 1 655 15 is_stmt 1 view .LVU422
 1630 03ea 3A4D     		ldr	r5, .L113+8
 1631              	.LVL163:
 655:Src/mc_tasks.c ****             /* USER CODE END MediumFrequencyTask M1 2 */
 1632              		.loc 1 655 15 is_stmt 0 view .LVU423
 1633 03ec 2846     		mov	r0, r5
 1634 03ee FFF7FEFF 		bl	mechanicalAngleCalculation
 1635              	.LVL164:
 658:Src/mc_tasks.c **** 
 1636              		.loc 1 658 13 is_stmt 1 view .LVU424
 1637 03f2 2846     		mov	r0, r5
 1638 03f4 FFF7FEFF 		bl	MCI_ExecBufferedCommands
 1639              	.LVL165:
 660:Src/mc_tasks.c **** 
 1640              		.loc 1 660 15 view .LVU425
 1641 03f8 0020     		movs	r0, #0
 1642 03fa FFF7FEFF 		bl	FOC_CalcCurrRef
 1643              	.LVL166:
 662:Src/mc_tasks.c ****               {
 1644              		.loc 1 662 15 view .LVU426
 662:Src/mc_tasks.c ****               {
 1645              		.loc 1 662 17 is_stmt 0 view .LVU427
 1646 03fe 002C     		cmp	r4, #0
 1647 0400 7FF41AAE 		bne	.L61
 664:Src/mc_tasks.c ****               }
 1648              		.loc 1 664 17 is_stmt 1 view .LVU428
 1649 0404 0022     		movs	r2, #0
 1650 0406 2021     		movs	r1, #32
 1651 0408 2846     		mov	r0, r5
 1652 040a FFF7FEFF 		bl	MCI_FaultProcessing
 1653              	.LVL167:
 1654 040e 13E6     		b	.L61
 1655              	.L108:
 664:Src/mc_tasks.c ****               }
 1656              		.loc 1 664 17 is_stmt 0 view .LVU429
 1657              	.LBE62:
 645:Src/mc_tasks.c ****           }
 1658              		.loc 1 645 13 is_stmt 1 view .LVU430
 1659 0410 0021     		movs	r1, #0
 1660 0412 3048     		ldr	r0, .L113+8
 1661 0414 FFF7FEFF 		bl	TSK_MF_StopProcessing
 1662              	.LVL168:
 1663 0418 0EE6     		b	.L61
 1664              	.LVL169:
 1665              	.L109:
 1666              	.LBB63:
 654:Src/mc_tasks.c ****               mechanicalAngleCalculation(&Mci[M1]);
 1667              		.loc 1 654 17 view .LVU431
 654:Src/mc_tasks.c ****               mechanicalAngleCalculation(&Mci[M1]);
 1668              		.loc 1 654 38 is_stmt 0 view .LVU432
 1669 041a 2E4B     		ldr	r3, .L113+8
ARM GAS  /tmp/ccJda0bK.s 			page 81


 1670              	.LVL170:
 654:Src/mc_tasks.c ****               mechanicalAngleCalculation(&Mci[M1]);
 1671              		.loc 1 654 38 view .LVU433
 1672 041c 0122     		movs	r2, #1
 1673 041e 83F82620 		strb	r2, [r3, #38]
 1674 0422 E2E7     		b	.L95
 1675              	.LVL171:
 1676              	.L72:
 654:Src/mc_tasks.c ****               mechanicalAngleCalculation(&Mci[M1]);
 1677              		.loc 1 654 38 view .LVU434
 1678              	.LBE63:
 673:Src/mc_tasks.c ****           {
 1679              		.loc 1 673 11 is_stmt 1 view .LVU435
 673:Src/mc_tasks.c ****           {
 1680              		.loc 1 673 15 is_stmt 0 view .LVU436
 1681 0424 FFF7FEFF 		bl	TSK_StopPermanencyTimeHasElapsedM1
 1682              	.LVL172:
 673:Src/mc_tasks.c ****           {
 1683              		.loc 1 673 14 view .LVU437
 1684 0428 0028     		cmp	r0, #0
 1685 042a 3FF405AE 		beq	.L61
 676:Src/mc_tasks.c ****             VSS_Clear(&VirtualSpeedSensorM1); /* Reset measured speed in IDLE */
 1686              		.loc 1 676 13 is_stmt 1 view .LVU438
 1687 042e 2B4C     		ldr	r4, .L113+16
 1688              	.LVL173:
 676:Src/mc_tasks.c ****             VSS_Clear(&VirtualSpeedSensorM1); /* Reset measured speed in IDLE */
 1689              		.loc 1 676 13 is_stmt 0 view .LVU439
 1690 0430 2146     		mov	r1, r4
 1691 0432 264B     		ldr	r3, .L113
 1692 0434 1868     		ldr	r0, [r3]
 1693 0436 FFF7FEFF 		bl	STC_SetSpeedSensor
 1694              	.LVL174:
 677:Src/mc_tasks.c **** 
 1695              		.loc 1 677 13 is_stmt 1 view .LVU440
 1696 043a 2046     		mov	r0, r4
 1697 043c FFF7FEFF 		bl	VSS_Clear
 1698              	.LVL175:
 682:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 1699              		.loc 1 682 13 view .LVU441
 682:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 1700              		.loc 1 682 35 is_stmt 0 view .LVU442
 1701 0440 244B     		ldr	r3, .L113+8
 1702 0442 0022     		movs	r2, #0
 1703 0444 83F82020 		strb	r2, [r3, #32]
 683:Src/mc_tasks.c ****           }
 1704              		.loc 1 683 13 is_stmt 1 view .LVU443
 683:Src/mc_tasks.c ****           }
 1705              		.loc 1 683 27 is_stmt 0 view .LVU444
 1706 0448 83F82120 		strb	r2, [r3, #33]
 1707 044c F4E5     		b	.L61
 1708              	.LVL176:
 1709              	.L70:
 694:Src/mc_tasks.c ****           {
 1710              		.loc 1 694 11 is_stmt 1 view .LVU445
 694:Src/mc_tasks.c ****           {
 1711              		.loc 1 694 40 is_stmt 0 view .LVU446
 1712 044e 214B     		ldr	r3, .L113+8
ARM GAS  /tmp/ccJda0bK.s 			page 82


 1713 0450 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 694:Src/mc_tasks.c ****           {
 1714              		.loc 1 694 14 view .LVU447
 1715 0454 022B     		cmp	r3, #2
 1716 0456 7FF4EFAD 		bne	.L61
 696:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 1717              		.loc 1 696 13 is_stmt 1 view .LVU448
 696:Src/mc_tasks.c ****             Mci[M1].State = IDLE;
 1718              		.loc 1 696 35 is_stmt 0 view .LVU449
 1719 045a 1E4B     		ldr	r3, .L113+8
 1720 045c 0022     		movs	r2, #0
 1721 045e 83F82020 		strb	r2, [r3, #32]
 697:Src/mc_tasks.c ****           }
 1722              		.loc 1 697 13 is_stmt 1 view .LVU450
 697:Src/mc_tasks.c ****           }
 1723              		.loc 1 697 27 is_stmt 0 view .LVU451
 1724 0462 83F82120 		strb	r2, [r3, #33]
 1725 0466 E7E5     		b	.L61
 1726              	.L71:
 708:Src/mc_tasks.c ****         }
 1727              		.loc 1 708 11 is_stmt 1 view .LVU452
 708:Src/mc_tasks.c ****         }
 1728              		.loc 1 708 25 is_stmt 0 view .LVU453
 1729 0468 1A4B     		ldr	r3, .L113+8
 1730 046a 0B22     		movs	r2, #11
 1731 046c 83F82120 		strb	r2, [r3, #33]
 710:Src/mc_tasks.c **** 
 1732              		.loc 1 710 9 is_stmt 1 view .LVU454
 1733 0470 E2E5     		b	.L61
 1734              	.L65:
 714:Src/mc_tasks.c ****           {
 1735              		.loc 1 714 11 view .LVU455
 714:Src/mc_tasks.c ****           {
 1736              		.loc 1 714 34 is_stmt 0 view .LVU456
 1737 0472 184B     		ldr	r3, .L113+8
 1738 0474 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 714:Src/mc_tasks.c ****           {
 1739              		.loc 1 714 14 view .LVU457
 1740 0478 052B     		cmp	r3, #5
 1741 047a 1DD0     		beq	.L110
 720:Src/mc_tasks.c ****             {
 1742              		.loc 1 720 13 is_stmt 1 view .LVU458
 720:Src/mc_tasks.c ****             {
 1743              		.loc 1 720 17 is_stmt 0 view .LVU459
 1744 047c FFF7FEFF 		bl	TSK_StopPermanencyTimeHasElapsedM1
 1745              	.LVL177:
 720:Src/mc_tasks.c ****             {
 1746              		.loc 1 720 16 view .LVU460
 1747 0480 0028     		cmp	r0, #0
 1748 0482 3FF4D9AD 		beq	.L61
 722:Src/mc_tasks.c ****               STO_PLL_Clear( &STO_PLL_M1 );
 1749              		.loc 1 722 15 is_stmt 1 view .LVU461
 1750 0486 134C     		ldr	r4, .L113+8
 1751              	.LVL178:
 722:Src/mc_tasks.c ****               STO_PLL_Clear( &STO_PLL_M1 );
 1752              		.loc 1 722 15 is_stmt 0 view .LVU462
 1753 0488 2046     		mov	r0, r4
ARM GAS  /tmp/ccJda0bK.s 			page 83


 1754 048a FFF7FEFF 		bl	MCI_GetImposedMotorDirection
 1755              	.LVL179:
 1756 048e 0146     		mov	r1, r0
 1757 0490 1148     		ldr	r0, .L113+12
 1758 0492 FFF7FEFF 		bl	RUC_Clear
 1759              	.LVL180:
 723:Src/mc_tasks.c ****               ENC_Clear(&ENCODER_M1);
 1760              		.loc 1 723 15 is_stmt 1 view .LVU463
 1761 0496 1448     		ldr	r0, .L113+28
 1762 0498 FFF7FEFF 		bl	STO_PLL_Clear
 1763              	.LVL181:
 724:Src/mc_tasks.c ****               VSS_Clear(&VirtualSpeedSensorM1);
 1764              		.loc 1 724 15 view .LVU464
 1765 049c 1348     		ldr	r0, .L113+32
 1766 049e FFF7FEFF 		bl	ENC_Clear
 1767              	.LVL182:
 725:Src/mc_tasks.c ****               R3_2_SwitchOnPWM( pwmcHandle[M1] );
 1768              		.loc 1 725 15 view .LVU465
 1769 04a2 0E48     		ldr	r0, .L113+16
 1770 04a4 FFF7FEFF 		bl	VSS_Clear
 1771              	.LVL183:
 726:Src/mc_tasks.c ****               Mci[M1].State = START;
 1772              		.loc 1 726 15 view .LVU466
 1773 04a8 114B     		ldr	r3, .L113+36
 1774 04aa 1868     		ldr	r0, [r3]
 1775 04ac FFF7FEFF 		bl	R3_2_SwitchOnPWM
 1776              	.LVL184:
 727:Src/mc_tasks.c ****             }
 1777              		.loc 1 727 15 view .LVU467
 727:Src/mc_tasks.c ****             }
 1778              		.loc 1 727 29 is_stmt 0 view .LVU468
 1779 04b0 0423     		movs	r3, #4
 1780 04b2 84F82130 		strb	r3, [r4, #33]
 1781 04b6 BFE5     		b	.L61
 1782              	.LVL185:
 1783              	.L110:
 716:Src/mc_tasks.c ****           }
 1784              		.loc 1 716 13 is_stmt 1 view .LVU469
 1785 04b8 0021     		movs	r1, #0
 1786 04ba 0648     		ldr	r0, .L113+8
 1787 04bc FFF7FEFF 		bl	TSK_MF_StopProcessing
 1788              	.LVL186:
 1789 04c0 BAE5     		b	.L61
 1790              	.L63:
 744:Src/mc_tasks.c ****     }
 1791              		.loc 1 744 7 view .LVU470
 744:Src/mc_tasks.c ****     }
 1792              		.loc 1 744 21 is_stmt 0 view .LVU471
 1793 04c2 044B     		ldr	r3, .L113+8
 1794 04c4 0B22     		movs	r2, #11
 1795 04c6 83F82120 		strb	r2, [r3, #33]
 1796 04ca B5E5     		b	.L61
 1797              	.L114:
 1798              		.align	2
 1799              	.L113:
 1800 04cc 00000000 		.word	pSTC
 1801 04d0 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccJda0bK.s 			page 84


 1802 04d4 00000000 		.word	Mci
 1803 04d8 00000000 		.word	RevUpControlM1
 1804 04dc 00000000 		.word	VirtualSpeedSensorM1
 1805 04e0 00000000 		.word	PIDSpeedHandle_M1
 1806 04e4 00E100E0 		.word	-536813312
 1807 04e8 00000000 		.word	STO_PLL_M1
 1808 04ec 00000000 		.word	ENCODER_M1
 1809 04f0 00000000 		.word	.LANCHOR3
 1810              		.cfi_endproc
 1811              	.LFE1627:
 1813              		.section	.text.MC_Scheduler,"ax",%progbits
 1814              		.align	1
 1815              		.weak	MC_Scheduler
 1816              		.syntax unified
 1817              		.thumb
 1818              		.thumb_func
 1819              		.fpu fpv4-sp-d16
 1821              	MC_Scheduler:
 1822              	.LFB1625:
 276:Src/mc_tasks.c **** /* USER CODE BEGIN MC_Scheduler 0 */
 1823              		.loc 1 276 1 is_stmt 1 view -0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 0
 1826              		@ frame_needed = 0, uses_anonymous_args = 0
 1827 0000 38B5     		push	{r3, r4, r5, lr}
 1828              		.cfi_def_cfa_offset 16
 1829              		.cfi_offset 3, -16
 1830              		.cfi_offset 4, -12
 1831              		.cfi_offset 5, -8
 1832              		.cfi_offset 14, -4
 281:Src/mc_tasks.c ****   {
 1833              		.loc 1 281 3 view .LVU473
 281:Src/mc_tasks.c ****   {
 1834              		.loc 1 281 20 is_stmt 0 view .LVU474
 1835 0002 214B     		ldr	r3, .L124
 1836 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1837 0006 DBB2     		uxtb	r3, r3
 281:Src/mc_tasks.c ****   {
 1838              		.loc 1 281 6 view .LVU475
 1839 0008 012B     		cmp	r3, #1
 1840 000a 00D0     		beq	.L122
 1841              	.L115:
 339:Src/mc_tasks.c **** 
 1842              		.loc 1 339 1 view .LVU476
 1843 000c 38BD     		pop	{r3, r4, r5, pc}
 1844              	.L122:
 283:Src/mc_tasks.c ****     {
 1845              		.loc 1 283 5 is_stmt 1 view .LVU477
 283:Src/mc_tasks.c ****     {
 1846              		.loc 1 283 25 is_stmt 0 view .LVU478
 1847 000e 1F4B     		ldr	r3, .L124+4
 1848 0010 1B88     		ldrh	r3, [r3]
 283:Src/mc_tasks.c ****     {
 1849              		.loc 1 283 7 view .LVU479
 1850 0012 C3B1     		cbz	r3, .L117
 285:Src/mc_tasks.c ****     }
 1851              		.loc 1 285 7 is_stmt 1 view .LVU480
ARM GAS  /tmp/ccJda0bK.s 			page 85


 285:Src/mc_tasks.c ****     }
 1852              		.loc 1 285 23 is_stmt 0 view .LVU481
 1853 0014 013B     		subs	r3, r3, #1
 1854 0016 1D4A     		ldr	r2, .L124+4
 1855 0018 1380     		strh	r3, [r2]	@ movhi
 1856              	.L118:
 323:Src/mc_tasks.c ****     {
 1857              		.loc 1 323 5 is_stmt 1 view .LVU482
 323:Src/mc_tasks.c ****     {
 1858              		.loc 1 323 31 is_stmt 0 view .LVU483
 1859 001a 1D4B     		ldr	r3, .L124+8
 1860 001c 1B88     		ldrh	r3, [r3]
 1861 001e 9BB2     		uxth	r3, r3
 323:Src/mc_tasks.c ****     {
 1862              		.loc 1 323 7 view .LVU484
 1863 0020 2BB1     		cbz	r3, .L120
 325:Src/mc_tasks.c ****     }
 1864              		.loc 1 325 7 is_stmt 1 view .LVU485
 325:Src/mc_tasks.c ****     }
 1865              		.loc 1 325 29 is_stmt 0 view .LVU486
 1866 0022 1B4A     		ldr	r2, .L124+8
 1867 0024 1388     		ldrh	r3, [r2]
 1868 0026 9BB2     		uxth	r3, r3
 1869 0028 013B     		subs	r3, r3, #1
 1870 002a 9BB2     		uxth	r3, r3
 1871 002c 1380     		strh	r3, [r2]	@ movhi
 1872              	.L120:
 327:Src/mc_tasks.c ****     {
 1873              		.loc 1 327 5 is_stmt 1 view .LVU487
 327:Src/mc_tasks.c ****     {
 1874              		.loc 1 327 33 is_stmt 0 view .LVU488
 1875 002e 194B     		ldr	r3, .L124+12
 1876 0030 1B88     		ldrh	r3, [r3]
 1877 0032 9BB2     		uxth	r3, r3
 327:Src/mc_tasks.c ****     {
 1878              		.loc 1 327 7 view .LVU489
 1879 0034 002B     		cmp	r3, #0
 1880 0036 E9D0     		beq	.L115
 329:Src/mc_tasks.c ****     }
 1881              		.loc 1 329 7 is_stmt 1 view .LVU490
 329:Src/mc_tasks.c ****     }
 1882              		.loc 1 329 31 is_stmt 0 view .LVU491
 1883 0038 164A     		ldr	r2, .L124+12
 1884 003a 1388     		ldrh	r3, [r2]
 1885 003c 9BB2     		uxth	r3, r3
 1886 003e 013B     		subs	r3, r3, #1
 1887 0040 9BB2     		uxth	r3, r3
 1888 0042 1380     		strh	r3, [r2]	@ movhi
 335:Src/mc_tasks.c ****   /* USER CODE BEGIN MC_Scheduler 2 */
 1889              		.loc 1 335 3 is_stmt 1 view .LVU492
 339:Src/mc_tasks.c **** 
 1890              		.loc 1 339 1 is_stmt 0 view .LVU493
 1891 0044 E2E7     		b	.L115
 1892              	.L117:
 289:Src/mc_tasks.c **** 
 1893              		.loc 1 289 7 is_stmt 1 view .LVU494
 1894 0046 FFF7FEFF 		bl	TSK_MediumFrequencyTaskM1
ARM GAS  /tmp/ccJda0bK.s 			page 86


 1895              	.LVL187:
 292:Src/mc_tasks.c **** 
 1896              		.loc 1 292 7 view .LVU495
 1897 004a FFF7FEFF 		bl	MC_APP_PostMediumFrequencyHook_M1
 1898              	.LVL188:
 294:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 1899              		.loc 1 294 7 view .LVU496
 294:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 1900              		.loc 1 294 47 is_stmt 0 view .LVU497
 1901 004e 124C     		ldr	r4, .L124+16
 1902 0050 2146     		mov	r1, r4
 1903 0052 51F80C0B 		ldr	r0, [r1], #12
 294:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 1904              		.loc 1 294 63 view .LVU498
 1905 0056 8368     		ldr	r3, [r0, #8]
 294:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 1906              		.loc 1 294 33 view .LVU499
 1907 0058 9847     		blx	r3
 1908              	.LVL189:
 294:Src/mc_tasks.c ****                                                                                 &MCP_Over_UartA.rxL
 1909              		.loc 1 294 31 view .LVU500
 1910 005a 6060     		str	r0, [r4, #4]
 296:Src/mc_tasks.c ****       {
 1911              		.loc 1 296 7 is_stmt 1 view .LVU501
 296:Src/mc_tasks.c ****       {
 1912              		.loc 1 296 10 is_stmt 0 view .LVU502
 1913 005c 30B1     		cbz	r0, .L119
 303:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1914              		.loc 1 303 9 is_stmt 1 view .LVU503
 303:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1915              		.loc 1 303 33 is_stmt 0 view .LVU504
 1916 005e 2146     		mov	r1, r4
 1917 0060 51F8080B 		ldr	r0, [r1], #8
 303:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1918              		.loc 1 303 49 view .LVU505
 1919 0064 0368     		ldr	r3, [r0]
 303:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1920              		.loc 1 303 19 view .LVU506
 1921 0066 0A22     		movs	r2, #10
 1922 0068 9847     		blx	r3
 1923              	.LVL190:
 303:Src/mc_tasks.c ****                                                      (void **) &MCP_Over_UartA.txBuffer, //cstat !M
 1924              		.loc 1 303 12 view .LVU507
 1925 006a 18B9     		cbnz	r0, .L123
 1926              	.L119:
 321:Src/mc_tasks.c ****     }
 1927              		.loc 1 321 7 is_stmt 1 view .LVU508
 321:Src/mc_tasks.c ****     }
 1928              		.loc 1 321 24 is_stmt 0 view .LVU509
 1929 006c 074B     		ldr	r3, .L124+4
 1930 006e 0122     		movs	r2, #1
 1931 0070 1A80     		strh	r2, [r3]	@ movhi
 1932 0072 D2E7     		b	.L118
 1933              	.L123:
 311:Src/mc_tasks.c ****           MCP_Over_UartA.pTransportLayer->fSendPacket(MCP_Over_UartA.pTransportLayer, MCP_Over_Uart
 1934              		.loc 1 311 11 is_stmt 1 view .LVU510
 1935 0074 2046     		mov	r0, r4
ARM GAS  /tmp/ccJda0bK.s 			page 87


 1936 0076 FFF7FEFF 		bl	MCP_ReceivedPacket
 1937              	.LVL191:
 312:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 1938              		.loc 1 312 11 view .LVU511
 312:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 1939              		.loc 1 312 25 is_stmt 0 view .LVU512
 1940 007a 2068     		ldr	r0, [r4]
 312:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 1941              		.loc 1 312 41 view .LVU513
 1942 007c 4568     		ldr	r5, [r0, #4]
 312:Src/mc_tasks.c ****                                                       MCP_Over_UartA.txLength, MCTL_SYNC);
 1943              		.loc 1 312 11 view .LVU514
 1944 007e 0A23     		movs	r3, #10
 1945 0080 E289     		ldrh	r2, [r4, #14]
 1946 0082 A168     		ldr	r1, [r4, #8]
 1947 0084 A847     		blx	r5
 1948              	.LVL192:
 1949 0086 F1E7     		b	.L119
 1950              	.L125:
 1951              		.align	2
 1952              	.L124:
 1953 0088 00000000 		.word	.LANCHOR4
 1954 008c 00000000 		.word	.LANCHOR9
 1955 0090 00000000 		.word	.LANCHOR7
 1956 0094 00000000 		.word	.LANCHOR8
 1957 0098 00000000 		.word	MCP_Over_UartA
 1958              		.cfi_endproc
 1959              	.LFE1625:
 1961              		.section	.text.TSK_HighFrequencyTask,"ax",%progbits
 1962              		.align	1
 1963              		.weak	TSK_HighFrequencyTask
 1964              		.syntax unified
 1965              		.thumb
 1966              		.thumb_func
 1967              		.fpu fpv4-sp-d16
 1969              	TSK_HighFrequencyTask:
 1970              	.LFB1635:
 927:Src/mc_tasks.c **** 
 928:Src/mc_tasks.c **** #if defined (CCMRAM)
 929:Src/mc_tasks.c **** #if defined (__ICCARM__)
 930:Src/mc_tasks.c **** #pragma location = ".ccmram"
 931:Src/mc_tasks.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 932:Src/mc_tasks.c **** __attribute__((section (".ccmram")))
 933:Src/mc_tasks.c **** #endif
 934:Src/mc_tasks.c **** #endif
 935:Src/mc_tasks.c **** 
 936:Src/mc_tasks.c **** /**
 937:Src/mc_tasks.c ****   * @brief  Executes the Motor Control duties that require a high frequency rate and a precise timi
 938:Src/mc_tasks.c ****   *
 939:Src/mc_tasks.c ****   *  This is mainly the FOC current control loop. It is executed depending on the state of the Moto
 940:Src/mc_tasks.c ****   * subsystem (see the state machine(s)).
 941:Src/mc_tasks.c ****   *
 942:Src/mc_tasks.c ****   * @retval Number of the  motor instance which FOC loop was executed.
 943:Src/mc_tasks.c ****   */
 944:Src/mc_tasks.c **** __weak uint8_t TSK_HighFrequencyTask(void)
 945:Src/mc_tasks.c **** {
 1971              		.loc 1 945 1 is_stmt 1 view -0
ARM GAS  /tmp/ccJda0bK.s 			page 88


 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 32
 1974              		@ frame_needed = 0, uses_anonymous_args = 0
 1975 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1976              		.cfi_def_cfa_offset 24
 1977              		.cfi_offset 4, -24
 1978              		.cfi_offset 5, -20
 1979              		.cfi_offset 6, -16
 1980              		.cfi_offset 7, -12
 1981              		.cfi_offset 8, -8
 1982              		.cfi_offset 14, -4
 1983 0004 88B0     		sub	sp, sp, #32
 1984              		.cfi_def_cfa_offset 56
 946:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask 0 */
 947:Src/mc_tasks.c **** 
 948:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask 0 */
 949:Src/mc_tasks.c **** 
 950:Src/mc_tasks.c ****   uint16_t hFOCreturn;
 1985              		.loc 1 950 3 view .LVU516
 951:Src/mc_tasks.c ****   uint8_t bMotorNbr = 0;
 1986              		.loc 1 951 3 view .LVU517
 1987              	.LVL193:
 952:Src/mc_tasks.c **** 
 953:Src/mc_tasks.c ****   Observer_Inputs_t STO_Inputs; /*  only if sensorless main*/
 1988              		.loc 1 953 3 view .LVU518
 954:Src/mc_tasks.c **** 
 955:Src/mc_tasks.c ****   (void)ENC_CalcAngle(&ENCODER_M1);   /* if not sensorless then 2nd parameter is MC_NULL*/
 1989              		.loc 1 955 3 view .LVU519
 1990              		.loc 1 955 9 is_stmt 0 view .LVU520
 1991 0006 5C48     		ldr	r0, .L138
 1992 0008 FFF7FEFF 		bl	ENC_CalcAngle
 1993              	.LVL194:
 956:Src/mc_tasks.c **** 
 957:Src/mc_tasks.c ****   STO_Inputs.Valfa_beta = FOCVars[M1].Valphabeta;  /* only if sensorless*/
 1994              		.loc 1 957 3 is_stmt 1 view .LVU521
 1995              		.loc 1 957 25 is_stmt 0 view .LVU522
 1996 000c 5B4B     		ldr	r3, .L138+4
 1997 000e 1868     		ldr	r0, [r3]	@ unaligned
 1998 0010 0590     		str	r0, [sp, #20]
 958:Src/mc_tasks.c ****   if (SWITCH_OVER == Mci[M1].State)
 1999              		.loc 1 958 3 is_stmt 1 view .LVU523
 2000              		.loc 1 958 29 is_stmt 0 view .LVU524
 2001 0012 5B4B     		ldr	r3, .L138+8
 2002 0014 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 2003              		.loc 1 958 6 view .LVU525
 2004 0018 132B     		cmp	r3, #19
 2005 001a 00F08680 		beq	.L134
 2006              	.L127:
 959:Src/mc_tasks.c ****   {
 960:Src/mc_tasks.c ****     if (!REMNG_RampCompleted(pREMNG[M1]))
 961:Src/mc_tasks.c ****     {
 962:Src/mc_tasks.c ****       FOCVars[M1].Iqdref.q = (int16_t)REMNG_Calc(pREMNG[M1]);
 963:Src/mc_tasks.c ****     }
 964:Src/mc_tasks.c ****   }
 965:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask SINGLEDRIVE_1 */
 966:Src/mc_tasks.c **** 
 967:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask SINGLEDRIVE_1 */
ARM GAS  /tmp/ccJda0bK.s 			page 89


 968:Src/mc_tasks.c ****   hFOCreturn = FOC_CurrControllerM1();
 2007              		.loc 1 968 3 is_stmt 1 view .LVU526
 2008              	.LBB68:
 2009              	.LBI68:
 969:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask SINGLEDRIVE_2 */
 970:Src/mc_tasks.c **** 
 971:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask SINGLEDRIVE_2 */
 972:Src/mc_tasks.c ****   if(hFOCreturn == MC_DURATION)
 973:Src/mc_tasks.c ****   {
 974:Src/mc_tasks.c ****     MCI_FaultProcessing(&Mci[M1], MC_DURATION, 0);
 975:Src/mc_tasks.c ****   }
 976:Src/mc_tasks.c ****   else
 977:Src/mc_tasks.c ****   {
 978:Src/mc_tasks.c ****     bool IsAccelerationStageReached = RUC_FirstAccelerationStageReached(&RevUpControlM1);
 979:Src/mc_tasks.c ****     STO_Inputs.Ialfa_beta = FOCVars[M1].Ialphabeta; /*  only if sensorless*/
 980:Src/mc_tasks.c ****     STO_Inputs.Vbus = VBS_GetAvBusVoltage_d(&(BusVoltageSensor_M1._Super)); /*  only for sensorless
 981:Src/mc_tasks.c ****     (void)( void )STO_PLL_CalcElAngle(&STO_PLL_M1, &STO_Inputs);
 982:Src/mc_tasks.c ****     STO_PLL_CalcAvrgElSpeedDpp(&STO_PLL_M1); /*  Only in case of Sensor-less */
 983:Src/mc_tasks.c **** 	 if (false == IsAccelerationStageReached)
 984:Src/mc_tasks.c ****     {
 985:Src/mc_tasks.c ****       STO_ResetPLL(&STO_PLL_M1);
 986:Src/mc_tasks.c ****     }
 987:Src/mc_tasks.c ****     /*  only for sensor-less */
 988:Src/mc_tasks.c ****     if(((uint16_t)START == Mci[M1].State) || ((uint16_t)SWITCH_OVER == Mci[M1].State))
 989:Src/mc_tasks.c ****     {
 990:Src/mc_tasks.c ****       int16_t hObsAngle = SPD_GetElAngle(&STO_PLL_M1._Super);
 991:Src/mc_tasks.c ****       (void)VSS_CalcElAngle(&VirtualSpeedSensorM1, &hObsAngle);
 992:Src/mc_tasks.c ****     }
 993:Src/mc_tasks.c ****     /* USER CODE BEGIN HighFrequencyTask SINGLEDRIVE_3 */
 994:Src/mc_tasks.c **** 
 995:Src/mc_tasks.c ****     /* USER CODE END HighFrequencyTask SINGLEDRIVE_3 */
 996:Src/mc_tasks.c ****   }
 997:Src/mc_tasks.c ****   /* USER CODE BEGIN HighFrequencyTask 1 */
 998:Src/mc_tasks.c **** 
 999:Src/mc_tasks.c ****   /* USER CODE END HighFrequencyTask 1 */
1000:Src/mc_tasks.c **** 
1001:Src/mc_tasks.c ****   GLOBAL_TIMESTAMP++;
1002:Src/mc_tasks.c ****   if (0U == MCPA_UART_A.Mark)
1003:Src/mc_tasks.c ****   {
1004:Src/mc_tasks.c ****     /* Nothing to do */
1005:Src/mc_tasks.c ****   }
1006:Src/mc_tasks.c ****   else
1007:Src/mc_tasks.c ****   {
1008:Src/mc_tasks.c ****     MCPA_dataLog (&MCPA_UART_A);
1009:Src/mc_tasks.c ****   }
1010:Src/mc_tasks.c **** 
1011:Src/mc_tasks.c ****   return (bMotorNbr);
1012:Src/mc_tasks.c **** }
1013:Src/mc_tasks.c **** 
1014:Src/mc_tasks.c **** #if defined (CCMRAM)
1015:Src/mc_tasks.c **** #if defined (__ICCARM__)
1016:Src/mc_tasks.c **** #pragma location = ".ccmram"
1017:Src/mc_tasks.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
1018:Src/mc_tasks.c **** __attribute__((section (".ccmram")))
1019:Src/mc_tasks.c **** #endif
1020:Src/mc_tasks.c **** #endif
1021:Src/mc_tasks.c **** /**
ARM GAS  /tmp/ccJda0bK.s 			page 90


1022:Src/mc_tasks.c ****   * @brief It executes the core of FOC drive that is the controllers for Iqd
1023:Src/mc_tasks.c ****   *        currents regulation. Reference frame transformations are carried out
1024:Src/mc_tasks.c ****   *        accordingly to the active speed sensor. It must be called periodically
1025:Src/mc_tasks.c ****   *        when new motor currents have been converted
1026:Src/mc_tasks.c ****   * @param this related object of class CFOC.
1027:Src/mc_tasks.c ****   * @retval int16_t It returns MC_NO_FAULTS if the FOC has been ended before
1028:Src/mc_tasks.c ****   *         next PWM Update event, MC_DURATION otherwise
1029:Src/mc_tasks.c ****   */
1030:Src/mc_tasks.c **** inline uint16_t FOC_CurrControllerM1(void)
 2010              		.loc 1 1030 17 view .LVU527
 2011              	.LBB69:
1031:Src/mc_tasks.c **** {
1032:Src/mc_tasks.c ****   qd_t Iqd, Vqd;
 2012              		.loc 1 1032 3 view .LVU528
1033:Src/mc_tasks.c ****   ab_t Iab;
 2013              		.loc 1 1033 3 view .LVU529
1034:Src/mc_tasks.c ****   alphabeta_t Ialphabeta, Valphabeta;
 2014              		.loc 1 1034 3 view .LVU530
1035:Src/mc_tasks.c ****   int16_t hElAngle;
 2015              		.loc 1 1035 3 view .LVU531
1036:Src/mc_tasks.c ****   uint16_t hCodeError;
 2016              		.loc 1 1036 3 view .LVU532
1037:Src/mc_tasks.c ****   SpeednPosFdbk_Handle_t *speedHandle;
 2017              		.loc 1 1037 3 view .LVU533
1038:Src/mc_tasks.c ****   speedHandle = STC_GetSpeedSensor(pSTC[M1]);
 2018              		.loc 1 1038 3 view .LVU534
 2019              		.loc 1 1038 17 is_stmt 0 view .LVU535
 2020 001e 594B     		ldr	r3, .L138+12
 2021 0020 1868     		ldr	r0, [r3]
 2022 0022 FFF7FEFF 		bl	STC_GetSpeedSensor
 2023              	.LVL195:
 2024 0026 0746     		mov	r7, r0
 2025              	.LVL196:
1039:Src/mc_tasks.c ****   hElAngle = SPD_GetElAngle(speedHandle);
 2026              		.loc 1 1039 3 is_stmt 1 view .LVU536
 2027              		.loc 1 1039 14 is_stmt 0 view .LVU537
 2028 0028 FFF7FEFF 		bl	SPD_GetElAngle
 2029              	.LVL197:
 2030              		.loc 1 1039 14 view .LVU538
 2031 002c 0546     		mov	r5, r0
 2032              	.LVL198:
1040:Src/mc_tasks.c ****   hElAngle += SPD_GetInstElSpeedDpp(speedHandle)*PARK_ANGLE_COMPENSATION_FACTOR;
 2033              		.loc 1 1040 3 is_stmt 1 view .LVU539
 2034              		.loc 1 1040 15 is_stmt 0 view .LVU540
 2035 002e 3846     		mov	r0, r7
 2036 0030 FFF7FEFF 		bl	SPD_GetInstElSpeedDpp
 2037              	.LVL199:
1041:Src/mc_tasks.c ****   PWMC_GetPhaseCurrents(pwmcHandle[M1], &Iab);
 2038              		.loc 1 1041 3 is_stmt 1 view .LVU541
 2039 0034 544E     		ldr	r6, .L138+16
 2040 0036 02A9     		add	r1, sp, #8
 2041 0038 3068     		ldr	r0, [r6]
 2042 003a FFF7FEFF 		bl	PWMC_GetPhaseCurrents
 2043              	.LVL200:
1042:Src/mc_tasks.c ****   RCM_ReadOngoingConv();
 2044              		.loc 1 1042 3 view .LVU542
 2045 003e FFF7FEFF 		bl	RCM_ReadOngoingConv
ARM GAS  /tmp/ccJda0bK.s 			page 91


 2046              	.LVL201:
1043:Src/mc_tasks.c ****   RCM_ExecNextConv();
 2047              		.loc 1 1043 3 view .LVU543
 2048 0042 FFF7FEFF 		bl	RCM_ExecNextConv
 2049              	.LVL202:
1044:Src/mc_tasks.c ****   Ialphabeta = MCM_Clarke(Iab);
 2050              		.loc 1 1044 3 view .LVU544
 2051              		.loc 1 1044 16 is_stmt 0 view .LVU545
 2052 0046 0298     		ldr	r0, [sp, #8]
 2053 0048 FFF7FEFF 		bl	MCM_Clarke
 2054              	.LVL203:
 2055 004c 0390     		str	r0, [sp, #12]
1045:Src/mc_tasks.c ****   Iqd = MCM_Park(Ialphabeta, hElAngle);
 2056              		.loc 1 1045 3 is_stmt 1 view .LVU546
 2057              		.loc 1 1045 9 is_stmt 0 view .LVU547
 2058 004e 2946     		mov	r1, r5
 2059 0050 FFF7FEFF 		bl	MCM_Park
 2060              	.LVL204:
 2061 0054 0090     		str	r0, [sp]
1046:Src/mc_tasks.c ****   Vqd.q = PI_Controller(pPIDIq[M1], (int32_t)(FOCVars[M1].Iqdref.q) - Iqd.q);
 2062              		.loc 1 1046 3 is_stmt 1 view .LVU548
 2063              		.loc 1 1046 65 is_stmt 0 view .LVU549
 2064 0056 4D4C     		ldr	r4, .L138+20
 2065 0058 B4F91030 		ldrsh	r3, [r4, #16]
 2066              		.loc 1 1046 74 view .LVU550
 2067 005c 01B2     		sxth	r1, r0
 2068              		.loc 1 1046 11 view .LVU551
 2069 005e 591A     		subs	r1, r3, r1
 2070 0060 4B4B     		ldr	r3, .L138+24
 2071 0062 1868     		ldr	r0, [r3]
 2072 0064 FFF7FEFF 		bl	PI_Controller
 2073              	.LVL205:
 2074              		.loc 1 1046 9 view .LVU552
 2075 0068 ADF80400 		strh	r0, [sp, #4]	@ movhi
1047:Src/mc_tasks.c ****   Vqd.d = PI_Controller(pPIDId[M1], (int32_t)(FOCVars[M1].Iqdref.d) - Iqd.d);
 2076              		.loc 1 1047 3 is_stmt 1 view .LVU553
 2077              		.loc 1 1047 65 is_stmt 0 view .LVU554
 2078 006c B4F91210 		ldrsh	r1, [r4, #18]
 2079              		.loc 1 1047 74 view .LVU555
 2080 0070 BDF90230 		ldrsh	r3, [sp, #2]
 2081              		.loc 1 1047 11 view .LVU556
 2082 0074 C91A     		subs	r1, r1, r3
 2083 0076 474B     		ldr	r3, .L138+28
 2084 0078 1868     		ldr	r0, [r3]
 2085 007a FFF7FEFF 		bl	PI_Controller
 2086              	.LVL206:
 2087              		.loc 1 1047 9 view .LVU557
 2088 007e ADF80600 		strh	r0, [sp, #6]	@ movhi
1048:Src/mc_tasks.c ****   Vqd = FF_VqdConditioning(pFF[M1],Vqd);
 2089              		.loc 1 1048 3 is_stmt 1 view .LVU558
 2090              		.loc 1 1048 9 is_stmt 0 view .LVU559
 2091 0082 DFF83481 		ldr	r8, .L138+64
 2092 0086 0199     		ldr	r1, [sp, #4]
 2093 0088 D8F80000 		ldr	r0, [r8]
 2094 008c FFF7FEFF 		bl	FF_VqdConditioning
 2095              	.LVL207:
 2096 0090 0146     		mov	r1, r0
ARM GAS  /tmp/ccJda0bK.s 			page 92


1049:Src/mc_tasks.c ****   Vqd = Circle_Limitation(&CircleLimitationM1, Vqd);
 2097              		.loc 1 1049 3 is_stmt 1 view .LVU560
 2098              		.loc 1 1049 9 is_stmt 0 view .LVU561
 2099 0092 4148     		ldr	r0, .L138+32
 2100 0094 FFF7FEFF 		bl	Circle_Limitation
 2101              	.LVL208:
 2102 0098 0190     		str	r0, [sp, #4]
1050:Src/mc_tasks.c ****   hElAngle += SPD_GetInstElSpeedDpp(speedHandle)*REV_PARK_ANGLE_COMPENSATION_FACTOR;
 2103              		.loc 1 1050 3 is_stmt 1 view .LVU562
 2104              		.loc 1 1050 15 is_stmt 0 view .LVU563
 2105 009a 3846     		mov	r0, r7
 2106 009c FFF7FEFF 		bl	SPD_GetInstElSpeedDpp
 2107              	.LVL209:
1051:Src/mc_tasks.c ****   Valphabeta = MCM_Rev_Park(Vqd, hElAngle);
 2108              		.loc 1 1051 3 is_stmt 1 view .LVU564
 2109              		.loc 1 1051 16 is_stmt 0 view .LVU565
 2110 00a0 2946     		mov	r1, r5
 2111 00a2 0198     		ldr	r0, [sp, #4]
 2112 00a4 FFF7FEFF 		bl	MCM_Rev_Park
 2113              	.LVL210:
 2114 00a8 0146     		mov	r1, r0
 2115 00aa 0490     		str	r0, [sp, #16]
1052:Src/mc_tasks.c ****   hCodeError = PWMC_SetPhaseVoltage(pwmcHandle[M1], Valphabeta);
 2116              		.loc 1 1052 3 is_stmt 1 view .LVU566
 2117              		.loc 1 1052 16 is_stmt 0 view .LVU567
 2118 00ac 3068     		ldr	r0, [r6]
 2119 00ae FFF7FEFF 		bl	PWMC_SetPhaseVoltage
 2120              	.LVL211:
 2121 00b2 0646     		mov	r6, r0
 2122              	.LVL212:
1053:Src/mc_tasks.c **** 
1054:Src/mc_tasks.c ****   FOCVars[M1].Vqd = Vqd;
 2123              		.loc 1 1054 3 is_stmt 1 view .LVU568
 2124              		.loc 1 1054 19 is_stmt 0 view .LVU569
 2125 00b4 0198     		ldr	r0, [sp, #4]
 2126 00b6 C4F81600 		str	r0, [r4, #22]	@ unaligned
1055:Src/mc_tasks.c ****   FOCVars[M1].Iab = Iab;
 2127              		.loc 1 1055 3 is_stmt 1 view .LVU570
 2128              		.loc 1 1055 19 is_stmt 0 view .LVU571
 2129 00ba 029B     		ldr	r3, [sp, #8]
 2130 00bc 2360     		str	r3, [r4]
1056:Src/mc_tasks.c ****   FOCVars[M1].Ialphabeta = Ialphabeta;
 2131              		.loc 1 1056 3 is_stmt 1 view .LVU572
 2132              		.loc 1 1056 26 is_stmt 0 view .LVU573
 2133 00be 039B     		ldr	r3, [sp, #12]
 2134 00c0 6360     		str	r3, [r4, #4]
1057:Src/mc_tasks.c ****   FOCVars[M1].Iqd = Iqd;
 2135              		.loc 1 1057 3 is_stmt 1 view .LVU574
 2136              		.loc 1 1057 19 is_stmt 0 view .LVU575
 2137 00c2 009B     		ldr	r3, [sp]
 2138 00c4 E360     		str	r3, [r4, #12]
1058:Src/mc_tasks.c ****   FOCVars[M1].Valphabeta = Valphabeta;
 2139              		.loc 1 1058 3 is_stmt 1 view .LVU576
 2140              		.loc 1 1058 26 is_stmt 0 view .LVU577
 2141 00c6 0498     		ldr	r0, [sp, #16]
 2142 00c8 C4F81A00 		str	r0, [r4, #26]	@ unaligned
1059:Src/mc_tasks.c ****   FOCVars[M1].hElAngle = hElAngle;
ARM GAS  /tmp/ccJda0bK.s 			page 93


 2143              		.loc 1 1059 3 is_stmt 1 view .LVU578
 2144              		.loc 1 1059 24 is_stmt 0 view .LVU579
 2145 00cc 2584     		strh	r5, [r4, #32]	@ movhi
1060:Src/mc_tasks.c **** 
1061:Src/mc_tasks.c ****   FF_DataProcess(pFF[M1]);
 2146              		.loc 1 1061 3 is_stmt 1 view .LVU580
 2147 00ce D8F80000 		ldr	r0, [r8]
 2148 00d2 FFF7FEFF 		bl	FF_DataProcess
 2149              	.LVL213:
1062:Src/mc_tasks.c ****   return(hCodeError);
 2150              		.loc 1 1062 3 view .LVU581
 2151              		.loc 1 1062 3 is_stmt 0 view .LVU582
 2152              	.LBE69:
 2153              	.LBE68:
 972:Src/mc_tasks.c ****   {
 2154              		.loc 1 972 3 is_stmt 1 view .LVU583
 972:Src/mc_tasks.c ****   {
 2155              		.loc 1 972 5 is_stmt 0 view .LVU584
 2156 00d6 012E     		cmp	r6, #1
 2157 00d8 35D0     		beq	.L135
 2158              	.LBB70:
 978:Src/mc_tasks.c ****     STO_Inputs.Ialfa_beta = FOCVars[M1].Ialphabeta; /*  only if sensorless*/
 2159              		.loc 1 978 5 is_stmt 1 view .LVU585
 978:Src/mc_tasks.c ****     STO_Inputs.Ialfa_beta = FOCVars[M1].Ialphabeta; /*  only if sensorless*/
 2160              		.loc 1 978 39 is_stmt 0 view .LVU586
 2161 00da 3048     		ldr	r0, .L138+36
 2162 00dc FFF7FEFF 		bl	RUC_FirstAccelerationStageReached
 2163              	.LVL214:
 2164 00e0 0446     		mov	r4, r0
 2165              	.LVL215:
 979:Src/mc_tasks.c ****     STO_Inputs.Vbus = VBS_GetAvBusVoltage_d(&(BusVoltageSensor_M1._Super)); /*  only for sensorless
 2166              		.loc 1 979 5 is_stmt 1 view .LVU587
 979:Src/mc_tasks.c ****     STO_Inputs.Vbus = VBS_GetAvBusVoltage_d(&(BusVoltageSensor_M1._Super)); /*  only for sensorless
 2167              		.loc 1 979 27 is_stmt 0 view .LVU588
 2168 00e2 2A4B     		ldr	r3, .L138+20
 2169 00e4 5B68     		ldr	r3, [r3, #4]
 2170 00e6 0693     		str	r3, [sp, #24]
 980:Src/mc_tasks.c ****     (void)( void )STO_PLL_CalcElAngle(&STO_PLL_M1, &STO_Inputs);
 2171              		.loc 1 980 5 is_stmt 1 view .LVU589
 980:Src/mc_tasks.c ****     (void)( void )STO_PLL_CalcElAngle(&STO_PLL_M1, &STO_Inputs);
 2172              		.loc 1 980 23 is_stmt 0 view .LVU590
 2173 00e8 2D48     		ldr	r0, .L138+40
 2174 00ea FFF7FEFF 		bl	VBS_GetAvBusVoltage_d
 2175              	.LVL216:
 980:Src/mc_tasks.c ****     (void)( void )STO_PLL_CalcElAngle(&STO_PLL_M1, &STO_Inputs);
 2176              		.loc 1 980 21 view .LVU591
 2177 00ee ADF81C00 		strh	r0, [sp, #28]	@ movhi
 981:Src/mc_tasks.c ****     STO_PLL_CalcAvrgElSpeedDpp(&STO_PLL_M1); /*  Only in case of Sensor-less */
 2178              		.loc 1 981 5 is_stmt 1 view .LVU592
 981:Src/mc_tasks.c ****     STO_PLL_CalcAvrgElSpeedDpp(&STO_PLL_M1); /*  Only in case of Sensor-less */
 2179              		.loc 1 981 19 is_stmt 0 view .LVU593
 2180 00f2 2C4D     		ldr	r5, .L138+44
 2181 00f4 05A9     		add	r1, sp, #20
 2182 00f6 2846     		mov	r0, r5
 2183 00f8 FFF7FEFF 		bl	STO_PLL_CalcElAngle
 2184              	.LVL217:
 982:Src/mc_tasks.c **** 	 if (false == IsAccelerationStageReached)
ARM GAS  /tmp/ccJda0bK.s 			page 94


 2185              		.loc 1 982 5 is_stmt 1 view .LVU594
 2186 00fc 2846     		mov	r0, r5
 2187 00fe FFF7FEFF 		bl	STO_PLL_CalcAvrgElSpeedDpp
 2188              	.LVL218:
 983:Src/mc_tasks.c ****     {
 2189              		.loc 1 983 3 view .LVU595
 983:Src/mc_tasks.c ****     {
 2190              		.loc 1 983 6 is_stmt 0 view .LVU596
 2191 0102 34B3     		cbz	r4, .L136
 2192              	.L130:
 988:Src/mc_tasks.c ****     {
 2193              		.loc 1 988 5 is_stmt 1 view .LVU597
 988:Src/mc_tasks.c ****     {
 2194              		.loc 1 988 35 is_stmt 0 view .LVU598
 2195 0104 1E4B     		ldr	r3, .L138+8
 2196 0106 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 988:Src/mc_tasks.c ****     {
 2197              		.loc 1 988 7 view .LVU599
 2198 010a 042B     		cmp	r3, #4
 2199 010c 25D0     		beq	.L131
 988:Src/mc_tasks.c ****     {
 2200              		.loc 1 988 43 discriminator 1 view .LVU600
 2201 010e 132B     		cmp	r3, #19
 2202 0110 23D0     		beq	.L131
 2203              	.LVL219:
 2204              	.L129:
 988:Src/mc_tasks.c ****     {
 2205              		.loc 1 988 43 discriminator 1 view .LVU601
 2206              	.LBE70:
1001:Src/mc_tasks.c ****   if (0U == MCPA_UART_A.Mark)
 2207              		.loc 1 1001 3 is_stmt 1 view .LVU602
1001:Src/mc_tasks.c ****   if (0U == MCPA_UART_A.Mark)
 2208              		.loc 1 1001 19 is_stmt 0 view .LVU603
 2209 0112 254A     		ldr	r2, .L138+48
 2210 0114 1368     		ldr	r3, [r2]
 2211 0116 0133     		adds	r3, r3, #1
 2212 0118 1360     		str	r3, [r2]
1002:Src/mc_tasks.c ****   {
 2213              		.loc 1 1002 3 is_stmt 1 view .LVU604
1002:Src/mc_tasks.c ****   {
 2214              		.loc 1 1002 24 is_stmt 0 view .LVU605
 2215 011a 244B     		ldr	r3, .L138+52
 2216 011c 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
1002:Src/mc_tasks.c ****   {
 2217              		.loc 1 1002 6 view .LVU606
 2218 0120 2BBB     		cbnz	r3, .L137
 2219              	.L132:
1011:Src/mc_tasks.c **** }
 2220              		.loc 1 1011 3 is_stmt 1 view .LVU607
1012:Src/mc_tasks.c **** 
 2221              		.loc 1 1012 1 is_stmt 0 view .LVU608
 2222 0122 0020     		movs	r0, #0
 2223 0124 08B0     		add	sp, sp, #32
 2224              		.cfi_remember_state
 2225              		.cfi_def_cfa_offset 24
 2226              		@ sp needed
 2227 0126 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /tmp/ccJda0bK.s 			page 95


 2228              	.LVL220:
 2229              	.L134:
 2230              		.cfi_restore_state
 960:Src/mc_tasks.c ****     {
 2231              		.loc 1 960 5 is_stmt 1 view .LVU609
 960:Src/mc_tasks.c ****     {
 2232              		.loc 1 960 10 is_stmt 0 view .LVU610
 2233 012a 214B     		ldr	r3, .L138+56
 2234 012c 1868     		ldr	r0, [r3]
 2235 012e FFF7FEFF 		bl	REMNG_RampCompleted
 2236              	.LVL221:
 960:Src/mc_tasks.c ****     {
 2237              		.loc 1 960 8 view .LVU611
 2238 0132 0028     		cmp	r0, #0
 2239 0134 7FF473AF 		bne	.L127
 962:Src/mc_tasks.c ****     }
 2240              		.loc 1 962 7 is_stmt 1 view .LVU612
 962:Src/mc_tasks.c ****     }
 2241              		.loc 1 962 39 is_stmt 0 view .LVU613
 2242 0138 1D4B     		ldr	r3, .L138+56
 2243 013a 1868     		ldr	r0, [r3]
 2244 013c FFF7FEFF 		bl	REMNG_Calc
 2245              	.LVL222:
 962:Src/mc_tasks.c ****     }
 2246              		.loc 1 962 28 view .LVU614
 2247 0140 124B     		ldr	r3, .L138+20
 2248 0142 1882     		strh	r0, [r3, #16]	@ movhi
 2249 0144 6BE7     		b	.L127
 2250              	.LVL223:
 2251              	.L135:
 974:Src/mc_tasks.c ****   }
 2252              		.loc 1 974 5 is_stmt 1 view .LVU615
 2253 0146 0022     		movs	r2, #0
 2254 0148 0121     		movs	r1, #1
 2255 014a 0D48     		ldr	r0, .L138+8
 2256 014c FFF7FEFF 		bl	MCI_FaultProcessing
 2257              	.LVL224:
 2258 0150 DFE7     		b	.L129
 2259              	.LVL225:
 2260              	.L136:
 2261              	.LBB72:
 985:Src/mc_tasks.c ****     }
 2262              		.loc 1 985 7 view .LVU616
 2263 0152 2846     		mov	r0, r5
 2264 0154 FFF7FEFF 		bl	STO_ResetPLL
 2265              	.LVL226:
 2266 0158 D4E7     		b	.L130
 2267              	.L131:
 2268              	.LBB71:
 990:Src/mc_tasks.c ****       (void)VSS_CalcElAngle(&VirtualSpeedSensorM1, &hObsAngle);
 2269              		.loc 1 990 7 view .LVU617
 990:Src/mc_tasks.c ****       (void)VSS_CalcElAngle(&VirtualSpeedSensorM1, &hObsAngle);
 2270              		.loc 1 990 27 is_stmt 0 view .LVU618
 2271 015a 1248     		ldr	r0, .L138+44
 2272 015c FFF7FEFF 		bl	SPD_GetElAngle
 2273              	.LVL227:
 990:Src/mc_tasks.c ****       (void)VSS_CalcElAngle(&VirtualSpeedSensorM1, &hObsAngle);
ARM GAS  /tmp/ccJda0bK.s 			page 96


 2274              		.loc 1 990 15 view .LVU619
 2275 0160 ADF81000 		strh	r0, [sp, #16]	@ movhi
 991:Src/mc_tasks.c ****     }
 2276              		.loc 1 991 7 is_stmt 1 view .LVU620
 991:Src/mc_tasks.c ****     }
 2277              		.loc 1 991 13 is_stmt 0 view .LVU621
 2278 0164 04A9     		add	r1, sp, #16
 2279 0166 1348     		ldr	r0, .L138+60
 2280 0168 FFF7FEFF 		bl	VSS_CalcElAngle
 2281              	.LVL228:
 2282 016c D1E7     		b	.L129
 2283              	.LVL229:
 2284              	.L137:
 991:Src/mc_tasks.c ****     }
 2285              		.loc 1 991 13 view .LVU622
 2286              	.LBE71:
 2287              	.LBE72:
1008:Src/mc_tasks.c ****   }
 2288              		.loc 1 1008 5 is_stmt 1 view .LVU623
 2289 016e 0F48     		ldr	r0, .L138+52
 2290 0170 FFF7FEFF 		bl	MCPA_dataLog
 2291              	.LVL230:
 2292 0174 D5E7     		b	.L132
 2293              	.L139:
 2294 0176 00BF     		.align	2
 2295              	.L138:
 2296 0178 00000000 		.word	ENCODER_M1
 2297 017c 1A000000 		.word	.LANCHOR2+26
 2298 0180 00000000 		.word	Mci
 2299 0184 00000000 		.word	pSTC
 2300 0188 00000000 		.word	.LANCHOR3
 2301 018c 00000000 		.word	.LANCHOR2
 2302 0190 00000000 		.word	pPIDIq
 2303 0194 00000000 		.word	pPIDId
 2304 0198 00000000 		.word	CircleLimitationM1
 2305 019c 00000000 		.word	RevUpControlM1
 2306 01a0 00000000 		.word	BusVoltageSensor_M1
 2307 01a4 00000000 		.word	STO_PLL_M1
 2308 01a8 00000000 		.word	GLOBAL_TIMESTAMP
 2309 01ac 00000000 		.word	MCPA_UART_A
 2310 01b0 00000000 		.word	.LANCHOR6
 2311 01b4 00000000 		.word	VirtualSpeedSensorM1
 2312 01b8 00000000 		.word	pFF
 2313              		.cfi_endproc
 2314              	.LFE1635:
 2316              		.section	.text.TSK_SafetyTask_PWMOFF,"ax",%progbits
 2317              		.align	1
 2318              		.weak	TSK_SafetyTask_PWMOFF
 2319              		.syntax unified
 2320              		.thumb
 2321              		.thumb_func
 2322              		.fpu fpv4-sp-d16
 2324              	TSK_SafetyTask_PWMOFF:
 2325              	.LVL231:
 2326              	.LFB1638:
1063:Src/mc_tasks.c **** }
1064:Src/mc_tasks.c **** 
ARM GAS  /tmp/ccJda0bK.s 			page 97


1065:Src/mc_tasks.c **** /**
1066:Src/mc_tasks.c ****   * @brief  Executes safety checks (e.g. bus voltage and temperature) for all drive instances.
1067:Src/mc_tasks.c ****   *
1068:Src/mc_tasks.c ****   * Faults flags are updated here.
1069:Src/mc_tasks.c ****   */
1070:Src/mc_tasks.c **** __weak void TSK_SafetyTask(void)
1071:Src/mc_tasks.c **** {
1072:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 0 */
1073:Src/mc_tasks.c **** 
1074:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask 0 */
1075:Src/mc_tasks.c ****   if (1U == bMCBootCompleted)
1076:Src/mc_tasks.c ****   {
1077:Src/mc_tasks.c ****     TSK_SafetyTask_PWMOFF(M1);
1078:Src/mc_tasks.c ****     /* User conversion execution */
1079:Src/mc_tasks.c ****     RCM_ExecUserConv();
1080:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 1 */
1081:Src/mc_tasks.c **** 
1082:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask 1 */
1083:Src/mc_tasks.c ****   }
1084:Src/mc_tasks.c **** }
1085:Src/mc_tasks.c **** 
1086:Src/mc_tasks.c **** /**
1087:Src/mc_tasks.c ****   * @brief  Safety task implementation if  MC.ON_OVER_VOLTAGE == TURN_OFF_PWM
1088:Src/mc_tasks.c ****   * @param  bMotor Motor reference number defined
1089:Src/mc_tasks.c ****   *         \link Motors_reference_number here \endlink
1090:Src/mc_tasks.c ****   * @retval None
1091:Src/mc_tasks.c ****   */
1092:Src/mc_tasks.c **** __weak void TSK_SafetyTask_PWMOFF(uint8_t bMotor)
1093:Src/mc_tasks.c **** {
 2327              		.loc 1 1093 1 view -0
 2328              		.cfi_startproc
 2329              		@ args = 0, pretend = 0, frame = 0
 2330              		@ frame_needed = 0, uses_anonymous_args = 0
 2331              		.loc 1 1093 1 is_stmt 0 view .LVU625
 2332 0000 70B5     		push	{r4, r5, r6, lr}
 2333              		.cfi_def_cfa_offset 16
 2334              		.cfi_offset 4, -16
 2335              		.cfi_offset 5, -12
 2336              		.cfi_offset 6, -8
 2337              		.cfi_offset 14, -4
 2338 0002 0446     		mov	r4, r0
1094:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 0 */
1095:Src/mc_tasks.c **** 
1096:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask_PWMOFF 0 */
1097:Src/mc_tasks.c ****   uint16_t CodeReturn = MC_NO_ERROR;
 2339              		.loc 1 1097 3 is_stmt 1 view .LVU626
 2340              	.LVL232:
1098:Src/mc_tasks.c ****   uint16_t errMask[NBR_OF_MOTORS] = {VBUS_TEMP_ERR_MASK};
 2341              		.loc 1 1098 3 view .LVU627
1099:Src/mc_tasks.c **** 
1100:Src/mc_tasks.c ****   CodeReturn |= errMask[bMotor] & NTC_CalcAvTemp(pTemperatureSensor[bMotor]); /* check for fault if
 2342              		.loc 1 1100 3 view .LVU628
 2343              		.loc 1 1100 35 is_stmt 0 view .LVU629
 2344 0004 204B     		ldr	r3, .L148
 2345 0006 53F82000 		ldr	r0, [r3, r0, lsl #2]
 2346              	.LVL233:
 2347              		.loc 1 1100 35 view .LVU630
ARM GAS  /tmp/ccJda0bK.s 			page 98


 2348 000a FFF7FEFF 		bl	NTC_CalcAvTemp
 2349              	.LVL234:
 2350              		.loc 1 1100 33 view .LVU631
 2351 000e 00F00E05 		and	r5, r0, #14
 2352              	.LVL235:
1101:Src/mc_tasks.c ****   CodeReturn |= PWMC_CheckOverCurrent(pwmcHandle[bMotor]);                    /* check for fault. I
 2353              		.loc 1 1101 3 is_stmt 1 view .LVU632
 2354              		.loc 1 1101 17 is_stmt 0 view .LVU633
 2355 0012 1E4B     		ldr	r3, .L148+4
 2356 0014 53F82400 		ldr	r0, [r3, r4, lsl #2]
 2357 0018 FFF7FEFF 		bl	PWMC_CheckOverCurrent
 2358              	.LVL236:
 2359              		.loc 1 1101 14 view .LVU634
 2360 001c 0543     		orrs	r5, r5, r0
 2361              	.LVL237:
 2362              		.loc 1 1101 14 view .LVU635
 2363 001e ADB2     		uxth	r5, r5
 2364              	.LVL238:
1102:Src/mc_tasks.c ****                                                                                  (for STM32F30x can
1103:Src/mc_tasks.c ****   if(M1 == bMotor)
 2365              		.loc 1 1103 3 is_stmt 1 view .LVU636
 2366              		.loc 1 1103 5 is_stmt 0 view .LVU637
 2367 0020 3CB3     		cbz	r4, .L146
 2368              	.L141:
1104:Src/mc_tasks.c ****   {
1105:Src/mc_tasks.c ****     CodeReturn |= errMask[bMotor] & RVBS_CalcAvVbus(&BusVoltageSensor_M1);
1106:Src/mc_tasks.c ****   }
1107:Src/mc_tasks.c ****   MCI_FaultProcessing(&Mci[bMotor], CodeReturn, ~CodeReturn); /* process faults */
 2369              		.loc 1 1107 3 is_stmt 1 view .LVU638
 2370 0022 04EB8406 		add	r6, r4, r4, lsl #2
 2371 0026 1A4B     		ldr	r3, .L148+8
 2372 0028 03EBC606 		add	r6, r3, r6, lsl #3
 2373 002c EA43     		mvns	r2, r5
 2374 002e 92B2     		uxth	r2, r2
 2375 0030 2946     		mov	r1, r5
 2376 0032 3046     		mov	r0, r6
 2377 0034 FFF7FEFF 		bl	MCI_FaultProcessing
 2378              	.LVL239:
1108:Src/mc_tasks.c **** 
1109:Src/mc_tasks.c ****   if (MCI_GetFaultState(&Mci[bMotor]) != (uint32_t)MC_NO_FAULTS)
 2379              		.loc 1 1109 3 view .LVU639
 2380              		.loc 1 1109 7 is_stmt 0 view .LVU640
 2381 0038 3046     		mov	r0, r6
 2382 003a FFF7FEFF 		bl	MCI_GetFaultState
 2383              	.LVL240:
 2384              		.loc 1 1109 6 view .LVU641
 2385 003e B8B1     		cbz	r0, .L140
1110:Src/mc_tasks.c ****   {
1111:Src/mc_tasks.c ****     /* reset Encoder state */
1112:Src/mc_tasks.c ****     if (pEAC[bMotor] != MC_NULL)
 2386              		.loc 1 1112 5 is_stmt 1 view .LVU642
 2387              		.loc 1 1112 13 is_stmt 0 view .LVU643
 2388 0040 144B     		ldr	r3, .L148+12
 2389 0042 53F82400 		ldr	r0, [r3, r4, lsl #2]
 2390              		.loc 1 1112 8 view .LVU644
 2391 0046 10B1     		cbz	r0, .L143
1113:Src/mc_tasks.c ****     {
ARM GAS  /tmp/ccJda0bK.s 			page 99


1114:Src/mc_tasks.c ****       EAC_SetRestartState(pEAC[bMotor], false);
 2392              		.loc 1 1114 7 is_stmt 1 view .LVU645
 2393 0048 0021     		movs	r1, #0
 2394 004a FFF7FEFF 		bl	EAC_SetRestartState
 2395              	.LVL241:
 2396              	.L143:
1115:Src/mc_tasks.c ****     }
1116:Src/mc_tasks.c ****     PWMC_SwitchOffPWM(pwmcHandle[bMotor]);
 2397              		.loc 1 1116 5 view .LVU646
 2398 004e 0F4B     		ldr	r3, .L148+4
 2399 0050 53F82400 		ldr	r0, [r3, r4, lsl #2]
 2400 0054 FFF7FEFF 		bl	PWMC_SwitchOffPWM
 2401              	.LVL242:
1117:Src/mc_tasks.c ****     if (MCPA_UART_A.Mark != 0)
 2402              		.loc 1 1117 5 view .LVU647
 2403              		.loc 1 1117 20 is_stmt 0 view .LVU648
 2404 0058 0F4B     		ldr	r3, .L148+16
 2405 005a 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 2406              		.loc 1 1117 8 view .LVU649
 2407 005e 7BB9     		cbnz	r3, .L147
 2408              	.L144:
1118:Src/mc_tasks.c ****     {
1119:Src/mc_tasks.c ****       MCPA_flushDataLog (&MCPA_UART_A);
1120:Src/mc_tasks.c ****     }
1121:Src/mc_tasks.c ****     FOC_Clear(bMotor);
 2409              		.loc 1 1121 5 is_stmt 1 view .LVU650
 2410 0060 2046     		mov	r0, r4
 2411 0062 FFF7FEFF 		bl	FOC_Clear
 2412              	.LVL243:
1122:Src/mc_tasks.c ****     PQD_Clear(pMPM[bMotor]); //cstat !MISRAC2012-Rule-11.3
 2413              		.loc 1 1122 5 view .LVU651
 2414 0066 0D4B     		ldr	r3, .L148+20
 2415 0068 53F82400 		ldr	r0, [r3, r4, lsl #2]
 2416 006c FFF7FEFF 		bl	PQD_Clear
 2417              	.LVL244:
1123:Src/mc_tasks.c ****     /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 1 */
1124:Src/mc_tasks.c **** 
1125:Src/mc_tasks.c ****     /* USER CODE END TSK_SafetyTask_PWMOFF 1 */
1126:Src/mc_tasks.c ****   }
1127:Src/mc_tasks.c ****   else
1128:Src/mc_tasks.c ****   {
1129:Src/mc_tasks.c ****     /* no errors */
1130:Src/mc_tasks.c ****   }
 2418              		.loc 1 1130 3 view .LVU652
 2419              	.L140:
1131:Src/mc_tasks.c **** 
1132:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask_PWMOFF 3 */
1133:Src/mc_tasks.c **** 
1134:Src/mc_tasks.c ****   /* USER CODE END TSK_SafetyTask_PWMOFF 3 */
1135:Src/mc_tasks.c **** }
 2420              		.loc 1 1135 1 is_stmt 0 view .LVU653
 2421 0070 70BD     		pop	{r4, r5, r6, pc}
 2422              	.LVL245:
 2423              	.L146:
1105:Src/mc_tasks.c ****   }
 2424              		.loc 1 1105 5 is_stmt 1 view .LVU654
1105:Src/mc_tasks.c ****   }
ARM GAS  /tmp/ccJda0bK.s 			page 100


 2425              		.loc 1 1105 37 is_stmt 0 view .LVU655
 2426 0072 0B48     		ldr	r0, .L148+24
 2427 0074 FFF7FEFF 		bl	RVBS_CalcAvVbus
 2428              	.LVL246:
1105:Src/mc_tasks.c ****   }
 2429              		.loc 1 1105 35 view .LVU656
 2430 0078 00F00E00 		and	r0, r0, #14
1105:Src/mc_tasks.c ****   }
 2431              		.loc 1 1105 16 view .LVU657
 2432 007c 0543     		orrs	r5, r5, r0
 2433              	.LVL247:
1105:Src/mc_tasks.c ****   }
 2434              		.loc 1 1105 16 view .LVU658
 2435 007e D0E7     		b	.L141
 2436              	.L147:
1119:Src/mc_tasks.c ****     }
 2437              		.loc 1 1119 7 is_stmt 1 view .LVU659
 2438 0080 0548     		ldr	r0, .L148+16
 2439 0082 FFF7FEFF 		bl	MCPA_flushDataLog
 2440              	.LVL248:
 2441 0086 EBE7     		b	.L144
 2442              	.L149:
 2443              		.align	2
 2444              	.L148:
 2445 0088 00000000 		.word	pTemperatureSensor
 2446 008c 00000000 		.word	.LANCHOR3
 2447 0090 00000000 		.word	Mci
 2448 0094 00000000 		.word	.LANCHOR5
 2449 0098 00000000 		.word	MCPA_UART_A
 2450 009c 00000000 		.word	pMPM
 2451 00a0 00000000 		.word	BusVoltageSensor_M1
 2452              		.cfi_endproc
 2453              	.LFE1638:
 2455              		.section	.text.TSK_SafetyTask,"ax",%progbits
 2456              		.align	1
 2457              		.weak	TSK_SafetyTask
 2458              		.syntax unified
 2459              		.thumb
 2460              		.thumb_func
 2461              		.fpu fpv4-sp-d16
 2463              	TSK_SafetyTask:
 2464              	.LFB1637:
1071:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 0 */
 2465              		.loc 1 1071 1 view -0
 2466              		.cfi_startproc
 2467              		@ args = 0, pretend = 0, frame = 0
 2468              		@ frame_needed = 0, uses_anonymous_args = 0
 2469 0000 08B5     		push	{r3, lr}
 2470              		.cfi_def_cfa_offset 8
 2471              		.cfi_offset 3, -8
 2472              		.cfi_offset 14, -4
1075:Src/mc_tasks.c ****   {
 2473              		.loc 1 1075 3 view .LVU661
1075:Src/mc_tasks.c ****   {
 2474              		.loc 1 1075 10 is_stmt 0 view .LVU662
 2475 0002 064B     		ldr	r3, .L154
 2476 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccJda0bK.s 			page 101


 2477 0006 DBB2     		uxtb	r3, r3
1075:Src/mc_tasks.c ****   {
 2478              		.loc 1 1075 6 view .LVU663
 2479 0008 012B     		cmp	r3, #1
 2480 000a 00D0     		beq	.L153
 2481              	.L150:
1084:Src/mc_tasks.c **** 
 2482              		.loc 1 1084 1 view .LVU664
 2483 000c 08BD     		pop	{r3, pc}
 2484              	.L153:
1077:Src/mc_tasks.c ****     /* User conversion execution */
 2485              		.loc 1 1077 5 is_stmt 1 view .LVU665
 2486 000e 0020     		movs	r0, #0
 2487 0010 FFF7FEFF 		bl	TSK_SafetyTask_PWMOFF
 2488              	.LVL249:
1079:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_SafetyTask 1 */
 2489              		.loc 1 1079 5 view .LVU666
 2490 0014 FFF7FEFF 		bl	RCM_ExecUserConv
 2491              	.LVL250:
1084:Src/mc_tasks.c **** 
 2492              		.loc 1 1084 1 is_stmt 0 view .LVU667
 2493 0018 F8E7     		b	.L150
 2494              	.L155:
 2495 001a 00BF     		.align	2
 2496              	.L154:
 2497 001c 00000000 		.word	.LANCHOR4
 2498              		.cfi_endproc
 2499              	.LFE1637:
 2501              		.section	.text.MC_RunMotorControlTasks,"ax",%progbits
 2502              		.align	1
 2503              		.weak	MC_RunMotorControlTasks
 2504              		.syntax unified
 2505              		.thumb
 2506              		.thumb_func
 2507              		.fpu fpv4-sp-d16
 2509              	MC_RunMotorControlTasks:
 2510              	.LFB1623:
 238:Src/mc_tasks.c ****   if (0U == bMCBootCompleted)
 2511              		.loc 1 238 1 is_stmt 1 view -0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 0, uses_anonymous_args = 0
 2515 0000 08B5     		push	{r3, lr}
 2516              		.cfi_def_cfa_offset 8
 2517              		.cfi_offset 3, -8
 2518              		.cfi_offset 14, -4
 239:Src/mc_tasks.c ****   {
 2519              		.loc 1 239 3 view .LVU669
 239:Src/mc_tasks.c ****   {
 2520              		.loc 1 239 10 is_stmt 0 view .LVU670
 2521 0002 044B     		ldr	r3, .L160
 2522 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239:Src/mc_tasks.c ****   {
 2523              		.loc 1 239 6 view .LVU671
 2524 0006 03B9     		cbnz	r3, .L159
 2525              	.L156:
 253:Src/mc_tasks.c **** 
ARM GAS  /tmp/ccJda0bK.s 			page 102


 2526              		.loc 1 253 1 view .LVU672
 2527 0008 08BD     		pop	{r3, pc}
 2528              	.L159:
 246:Src/mc_tasks.c **** 
 2529              		.loc 1 246 5 is_stmt 1 view .LVU673
 2530 000a FFF7FEFF 		bl	MC_Scheduler
 2531              	.LVL251:
 250:Src/mc_tasks.c **** 
 2532              		.loc 1 250 5 view .LVU674
 2533 000e FFF7FEFF 		bl	TSK_SafetyTask
 2534              	.LVL252:
 253:Src/mc_tasks.c **** 
 2535              		.loc 1 253 1 is_stmt 0 view .LVU675
 2536 0012 F9E7     		b	.L156
 2537              	.L161:
 2538              		.align	2
 2539              	.L160:
 2540 0014 00000000 		.word	.LANCHOR4
 2541              		.cfi_endproc
 2542              	.LFE1623:
 2544              		.section	.text.GetMCI,"ax",%progbits
 2545              		.align	1
 2546              		.weak	GetMCI
 2547              		.syntax unified
 2548              		.thumb
 2549              		.thumb_func
 2550              		.fpu fpv4-sp-d16
 2552              	GetMCI:
 2553              	.LVL253:
 2554              	.LFB1639:
1136:Src/mc_tasks.c **** 
1137:Src/mc_tasks.c **** /**
1138:Src/mc_tasks.c ****   * @brief  This function returns the reference of the MCInterface relative to
1139:Src/mc_tasks.c ****   *         the selected drive.
1140:Src/mc_tasks.c ****   * @param  bMotor Motor reference number defined
1141:Src/mc_tasks.c ****   *         \link Motors_reference_number here \endlink
1142:Src/mc_tasks.c ****   * @retval MCI_Handle_t * Reference to MCInterface relative to the selected drive.
1143:Src/mc_tasks.c ****   *         Note: it can be MC_NULL if MCInterface of selected drive is not
1144:Src/mc_tasks.c ****   *         allocated.
1145:Src/mc_tasks.c ****   */
1146:Src/mc_tasks.c **** __weak MCI_Handle_t * GetMCI(uint8_t bMotor)
1147:Src/mc_tasks.c **** {
 2555              		.loc 1 1147 1 is_stmt 1 view -0
 2556              		.cfi_startproc
 2557              		@ args = 0, pretend = 0, frame = 0
 2558              		@ frame_needed = 0, uses_anonymous_args = 0
 2559              		@ link register save eliminated.
1148:Src/mc_tasks.c ****   MCI_Handle_t * retVal = MC_NULL;
 2560              		.loc 1 1148 3 view .LVU677
1149:Src/mc_tasks.c ****   if (bMotor < (uint8_t)NBR_OF_MOTORS)
 2561              		.loc 1 1149 3 view .LVU678
 2562              		.loc 1 1149 6 is_stmt 0 view .LVU679
 2563 0000 28B9     		cbnz	r0, .L164
1150:Src/mc_tasks.c ****   {
1151:Src/mc_tasks.c ****     retVal = &Mci[bMotor];
 2564              		.loc 1 1151 5 is_stmt 1 view .LVU680
 2565              		.loc 1 1151 12 is_stmt 0 view .LVU681
ARM GAS  /tmp/ccJda0bK.s 			page 103


 2566 0002 00EB8003 		add	r3, r0, r0, lsl #2
 2567 0006 0348     		ldr	r0, .L165
 2568              	.LVL254:
 2569              		.loc 1 1151 12 view .LVU682
 2570 0008 00EBC300 		add	r0, r0, r3, lsl #3
 2571              	.LVL255:
 2572              		.loc 1 1151 12 view .LVU683
 2573 000c 7047     		bx	lr
 2574              	.LVL256:
 2575              	.L164:
1148:Src/mc_tasks.c ****   if (bMotor < (uint8_t)NBR_OF_MOTORS)
 2576              		.loc 1 1148 18 view .LVU684
 2577 000e 0020     		movs	r0, #0
 2578              	.LVL257:
1152:Src/mc_tasks.c ****   }
1153:Src/mc_tasks.c ****   return (retVal);
 2579              		.loc 1 1153 3 is_stmt 1 view .LVU685
1154:Src/mc_tasks.c **** }
 2580              		.loc 1 1154 1 is_stmt 0 view .LVU686
 2581 0010 7047     		bx	lr
 2582              	.L166:
 2583 0012 00BF     		.align	2
 2584              	.L165:
 2585 0014 00000000 		.word	Mci
 2586              		.cfi_endproc
 2587              	.LFE1639:
 2589              		.section	.text.TSK_HardwareFaultTask,"ax",%progbits
 2590              		.align	1
 2591              		.weak	TSK_HardwareFaultTask
 2592              		.syntax unified
 2593              		.thumb
 2594              		.thumb_func
 2595              		.fpu fpv4-sp-d16
 2597              	TSK_HardwareFaultTask:
 2598              	.LFB1640:
1155:Src/mc_tasks.c **** 
1156:Src/mc_tasks.c **** /**
1157:Src/mc_tasks.c ****   * @brief  Puts the Motor Control subsystem in in safety conditions on a Hard Fault
1158:Src/mc_tasks.c ****   *
1159:Src/mc_tasks.c ****   *  This function is to be executed when a general hardware failure has been detected
1160:Src/mc_tasks.c ****   * by the microcontroller and is used to put the system in safety condition.
1161:Src/mc_tasks.c ****   */
1162:Src/mc_tasks.c **** __weak void TSK_HardwareFaultTask(void)
1163:Src/mc_tasks.c **** {
 2599              		.loc 1 1163 1 is_stmt 1 view -0
 2600              		.cfi_startproc
 2601              		@ args = 0, pretend = 0, frame = 0
 2602              		@ frame_needed = 0, uses_anonymous_args = 0
 2603 0000 08B5     		push	{r3, lr}
 2604              		.cfi_def_cfa_offset 8
 2605              		.cfi_offset 3, -8
 2606              		.cfi_offset 14, -4
1164:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_HardwareFaultTask 0 */
1165:Src/mc_tasks.c **** 
1166:Src/mc_tasks.c ****   /* USER CODE END TSK_HardwareFaultTask 0 */
1167:Src/mc_tasks.c ****   R3_2_SwitchOffPWM(pwmcHandle[M1]);
 2607              		.loc 1 1167 3 view .LVU688
ARM GAS  /tmp/ccJda0bK.s 			page 104


 2608 0002 054B     		ldr	r3, .L169
 2609 0004 1868     		ldr	r0, [r3]
 2610 0006 FFF7FEFF 		bl	R3_2_SwitchOffPWM
 2611              	.LVL258:
1168:Src/mc_tasks.c ****   MCI_FaultProcessing(&Mci[M1], MC_SW_ERROR, 0);
 2612              		.loc 1 1168 3 view .LVU689
 2613 000a 0022     		movs	r2, #0
 2614 000c 8021     		movs	r1, #128
 2615 000e 0348     		ldr	r0, .L169+4
 2616 0010 FFF7FEFF 		bl	MCI_FaultProcessing
 2617              	.LVL259:
1169:Src/mc_tasks.c **** 
1170:Src/mc_tasks.c ****   /* USER CODE BEGIN TSK_HardwareFaultTask 1 */
1171:Src/mc_tasks.c **** 
1172:Src/mc_tasks.c ****   /* USER CODE END TSK_HardwareFaultTask 1 */
1173:Src/mc_tasks.c **** }
 2618              		.loc 1 1173 1 is_stmt 0 view .LVU690
 2619 0014 08BD     		pop	{r3, pc}
 2620              	.L170:
 2621 0016 00BF     		.align	2
 2622              	.L169:
 2623 0018 00000000 		.word	.LANCHOR3
 2624 001c 00000000 		.word	Mci
 2625              		.cfi_endproc
 2626              	.LFE1640:
 2628              		.section	.text.UI_HandleStartStopButton_cb,"ax",%progbits
 2629              		.align	1
 2630              		.weak	UI_HandleStartStopButton_cb
 2631              		.syntax unified
 2632              		.thumb
 2633              		.thumb_func
 2634              		.fpu fpv4-sp-d16
 2636              	UI_HandleStartStopButton_cb:
 2637              	.LFB1641:
1174:Src/mc_tasks.c **** 
1175:Src/mc_tasks.c **** __weak void UI_HandleStartStopButton_cb (void)
1176:Src/mc_tasks.c **** {
 2638              		.loc 1 1176 1 is_stmt 1 view -0
 2639              		.cfi_startproc
 2640              		@ args = 0, pretend = 0, frame = 0
 2641              		@ frame_needed = 0, uses_anonymous_args = 0
 2642 0000 08B5     		push	{r3, lr}
 2643              		.cfi_def_cfa_offset 8
 2644              		.cfi_offset 3, -8
 2645              		.cfi_offset 14, -4
1177:Src/mc_tasks.c **** /* USER CODE BEGIN START_STOP_BTN */
1178:Src/mc_tasks.c ****   if (IDLE == MC_GetSTMStateMotor1())
 2646              		.loc 1 1178 3 view .LVU692
 2647              		.loc 1 1178 15 is_stmt 0 view .LVU693
 2648 0002 FFF7FEFF 		bl	MC_GetSTMStateMotor1
 2649              	.LVL260:
 2650              		.loc 1 1178 6 view .LVU694
 2651 0006 10B9     		cbnz	r0, .L172
1179:Src/mc_tasks.c ****   {
1180:Src/mc_tasks.c ****     /* Ramp parameters should be tuned for the actual motor */
1181:Src/mc_tasks.c ****     (void)MC_StartMotor1();
 2652              		.loc 1 1181 5 is_stmt 1 view .LVU695
ARM GAS  /tmp/ccJda0bK.s 			page 105


 2653              		.loc 1 1181 11 is_stmt 0 view .LVU696
 2654 0008 FFF7FEFF 		bl	MC_StartMotor1
 2655              	.LVL261:
 2656              	.L171:
1182:Src/mc_tasks.c ****   }
1183:Src/mc_tasks.c ****   else
1184:Src/mc_tasks.c ****   {
1185:Src/mc_tasks.c ****     (void)MC_StopMotor1();
1186:Src/mc_tasks.c ****   }
1187:Src/mc_tasks.c **** /* USER CODE END START_STOP_BTN */
1188:Src/mc_tasks.c **** }
 2657              		.loc 1 1188 1 view .LVU697
 2658 000c 08BD     		pop	{r3, pc}
 2659              	.L172:
1185:Src/mc_tasks.c ****   }
 2660              		.loc 1 1185 5 is_stmt 1 view .LVU698
1185:Src/mc_tasks.c ****   }
 2661              		.loc 1 1185 11 is_stmt 0 view .LVU699
 2662 000e FFF7FEFF 		bl	MC_StopMotor1
 2663              	.LVL262:
 2664              		.loc 1 1188 1 view .LVU700
 2665 0012 FBE7     		b	.L171
 2666              		.cfi_endproc
 2667              	.LFE1641:
 2669              		.section	.text.mc_lock_pins,"ax",%progbits
 2670              		.align	1
 2671              		.weak	mc_lock_pins
 2672              		.syntax unified
 2673              		.thumb
 2674              		.thumb_func
 2675              		.fpu fpv4-sp-d16
 2677              	mc_lock_pins:
 2678              	.LFB1642:
1189:Src/mc_tasks.c **** 
1190:Src/mc_tasks.c ****  /**
1191:Src/mc_tasks.c ****   * @brief  Locks GPIO pins used for Motor Control to prevent accidental reconfiguration
1192:Src/mc_tasks.c ****   */
1193:Src/mc_tasks.c **** __weak void mc_lock_pins (void)
1194:Src/mc_tasks.c **** {
 2679              		.loc 1 1194 1 is_stmt 1 view -0
 2680              		.cfi_startproc
 2681              		@ args = 0, pretend = 0, frame = 80
 2682              		@ frame_needed = 0, uses_anonymous_args = 0
 2683 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2684              		.cfi_def_cfa_offset 24
 2685              		.cfi_offset 4, -24
 2686              		.cfi_offset 5, -20
 2687              		.cfi_offset 6, -16
 2688              		.cfi_offset 7, -12
 2689              		.cfi_offset 8, -8
 2690              		.cfi_offset 14, -4
 2691 0004 94B0     		sub	sp, sp, #80
 2692              		.cfi_def_cfa_offset 104
1195:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP3_INT_GAIN_GPIO_Port, M1_OPAMP3_INT_GAIN_Pin);
 2693              		.loc 1 1195 1 view .LVU702
 2694              	.LVL263:
 2695              	.LBB73:
ARM GAS  /tmp/ccJda0bK.s 			page 106


 2696              	.LBI73:
 2697              		.file 3 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h"
   1:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @file    stm32g4xx_ll_gpio.h
   4:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
   9:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Copyright (c) 2019 STMicroelectronics.
  10:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *
  16:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  18:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  19:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifndef STM32G4xx_LL_GPIO_H
  21:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define STM32G4xx_LL_GPIO_H
  22:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  23:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif
  26:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  27:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #include "stm32g4xx.h"
  29:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  30:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @addtogroup STM32G4xx_LL_Driver
  31:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  32:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  33:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  34:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  36:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  38:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  39:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  40:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  41:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  42:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  43:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  44:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  45:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  46:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  47:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  48:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  49:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  50:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  51:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  54:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  55:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
ARM GAS  /tmp/ccJda0bK.s 			page 107


  56:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  57:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  58:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
  59:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  60:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  62:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  65:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
  66:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  67:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  68:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
  69:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  70:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
  71:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** typedef struct
  72:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
  73:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  74:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  75:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  76:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  77:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  78:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  79:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  80:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  81:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  82:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  83:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  84:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  85:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  86:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  87:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  88:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  89:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  90:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  91:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  92:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  93:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  94:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  95:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  96:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  97:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  98:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
  99:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 101:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 102:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 103:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 104:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 105:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 106:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 107:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 108:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 109:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 110:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 111:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 112:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
ARM GAS  /tmp/ccJda0bK.s 			page 108


 113:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 114:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 115:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 116:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 117:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 118:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 119:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 120:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 121:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 122:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 123:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 124:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 125:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 126:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 127:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 128:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 129:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 130:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 131:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 132:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 133:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 134:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 135:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 136:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 137:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 138:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 139:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 140:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 141:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 142:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 143:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 144:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 145:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 146:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 147:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 148:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 149:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 150:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 151:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 152:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 153:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 154:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 155:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 156:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 157:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 158:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 159:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 160:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 161:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 163:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 164:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 165:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 166:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 167:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 168:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 169:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
ARM GAS  /tmp/ccJda0bK.s 			page 109


 170:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 171:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 172:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 173:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 174:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 175:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 176:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 177:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 178:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 179:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 180:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 181:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 182:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 183:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 184:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 185:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 186:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 187:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 188:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 189:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 190:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 191:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 192:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 193:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 194:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 195:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 196:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 197:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 198:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 199:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 200:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 201:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 202:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 203:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 204:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 205:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 206:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 207:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 208:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 209:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 210:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 211:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 212:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 213:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 214:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 215:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 216:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 217:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 218:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 219:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 220:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 221:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 222:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 223:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 224:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 225:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 226:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
ARM GAS  /tmp/ccJda0bK.s 			page 110


 227:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 228:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 229:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 230:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 231:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 232:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 233:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 234:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Register value
 236:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 237:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 238:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 239:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 240:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 241:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 242:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 243:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @}
 244:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 245:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 246:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 247:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 248:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 249:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 250:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 251:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 252:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @{
 253:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 254:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 255:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 256:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 257:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 258:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 259:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 260:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 261:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 262:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 263:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 264:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 265:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 266:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 267:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 268:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 269:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 270:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 271:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 272:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 273:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 274:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 275:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 276:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 277:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 278:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 279:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 280:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 281:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 282:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 283:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
ARM GAS  /tmp/ccJda0bK.s 			page 111


 284:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 285:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 286:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 287:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 288:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 289:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 290:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 291:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 292:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 293:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 294:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 295:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 296:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 297:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 298:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 299:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 300:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 301:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 302:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 303:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 304:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 305:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 306:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 307:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 308:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 309:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 310:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 311:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 312:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 313:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 314:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 315:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 316:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 317:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 318:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 319:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 320:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 321:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 322:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 323:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 324:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 325:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 326:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 335:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 340:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
ARM GAS  /tmp/ccJda0bK.s 			page 112


 341:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 344:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 350:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 354:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 356:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 357:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 358:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 359:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 360:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 374:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 375:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 376:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 381:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 388:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 390:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 391:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 392:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 393:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 394:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 397:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
ARM GAS  /tmp/ccJda0bK.s 			page 113


 398:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 401:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 407:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 414:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 425:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 427:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 428:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 429:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 430:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 431:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 432:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 433:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 434:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 435:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 436:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 437:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 438:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 439:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 440:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 441:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 442:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 443:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 444:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 445:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 446:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 447:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 448:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 449:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 450:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 451:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 452:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 453:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 454:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
ARM GAS  /tmp/ccJda0bK.s 			page 114


 455:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 456:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 457:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 458:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 459:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 460:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 461:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 462:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 463:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 464:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 465:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 466:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 467:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 468:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 469:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 470:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 471:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 472:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 473:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 474:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 475:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 476:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 477:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 478:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 479:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 480:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 481:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 482:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 483:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 484:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 485:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 486:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 487:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 488:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 489:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 490:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 491:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 492:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 493:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 494:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 495:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 496:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 497:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 498:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 499:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 500:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 501:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 502:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 503:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 504:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 505:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 506:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 507:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 508:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 509:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 510:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 511:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
ARM GAS  /tmp/ccJda0bK.s 			page 115


 512:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 513:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 514:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 515:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 516:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 517:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 518:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 519:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 520:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 521:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 522:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 523:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 524:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 525:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 526:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 527:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 528:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 529:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 530:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 531:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 532:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 533:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 534:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 535:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 536:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 537:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 538:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 539:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 540:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 541:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 542:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 543:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 544:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 545:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 546:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 547:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 548:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 549:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 550:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 551:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 552:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 553:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 554:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 555:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 556:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 557:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 558:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 559:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 560:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 561:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 562:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 563:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 564:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 565:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 566:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 567:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 568:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
ARM GAS  /tmp/ccJda0bK.s 			page 116


 569:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 570:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 571:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
 572:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 573:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 574:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 575:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 576:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 577:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 578:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 579:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 580:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 581:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 582:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 583:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 584:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 585:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 586:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 587:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 588:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 589:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 590:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 591:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 592:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 593:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 594:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 595:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 596:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 597:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 598:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 599:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 600:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 601:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 602:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 603:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 604:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 605:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 606:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 607:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 608:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
 609:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 610:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 611:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 612:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 613:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 614:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 615:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 616:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 617:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 618:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 619:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 620:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 621:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 622:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 623:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 624:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 625:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
ARM GAS  /tmp/ccJda0bK.s 			page 117


 626:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 627:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 628:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 629:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 630:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 631:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 632:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 633:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 634:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 635:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 636:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 637:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 638:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 639:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 640:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 641:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 642:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 643:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 644:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 645:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 646:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 647:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 648:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 649:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 650:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 651:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 652:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 653:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 654:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 655:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 656:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 657:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 658:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 659:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 660:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 661:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 662:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 663:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 664:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 665:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 666:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 667:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 668:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 669:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 670:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 671:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 672:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 673:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 674:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 675:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 676:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 677:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 678:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 679:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 680:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 681:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 682:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
ARM GAS  /tmp/ccJda0bK.s 			page 118


 683:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 684:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 685:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 686:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 687:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** }
 688:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 689:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** 
 690:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** /**
 691:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 692:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 693:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 694:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         next reset.
 695:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 696:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         (control and alternate function registers).
 697:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 698:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 699:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 700:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 701:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 702:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 703:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 704:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 705:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 706:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 707:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 708:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 709:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 710:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 711:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 712:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 713:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 714:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 715:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 716:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 717:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   * @retval None
 718:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   */
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 2698              		.loc 3 719 22 view .LVU703
 2699              	.LBB74:
 720:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   __IO uint32_t temp;
 2700              		.loc 3 721 3 view .LVU704
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2701              		.loc 3 722 3 view .LVU705
 2702 0006 614A     		ldr	r2, .L177
 2703 0008 614C     		ldr	r4, .L177+4
 2704 000a D461     		str	r4, [r2, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2705              		.loc 3 723 3 view .LVU706
 2706 000c 4FF0040C 		mov	ip, #4
 2707 0010 C2F81CC0 		str	ip, [r2, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2708              		.loc 3 724 3 view .LVU707
 2709 0014 D461     		str	r4, [r2, #28]
 725:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 2710              		.loc 3 726 3 view .LVU708
ARM GAS  /tmp/ccJda0bK.s 			page 119


 2711              		.loc 3 726 10 is_stmt 0 view .LVU709
 2712 0016 D369     		ldr	r3, [r2, #28]
 2713              		.loc 3 726 8 view .LVU710
 2714 0018 1393     		str	r3, [sp, #76]
 727:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2715              		.loc 3 727 3 is_stmt 1 view .LVU711
 2716 001a 139B     		ldr	r3, [sp, #76]
 2717              	.LVL264:
 2718              		.loc 3 727 3 is_stmt 0 view .LVU712
 2719              	.LBE74:
 2720              	.LBE73:
1196:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP3_OUT_GPIO_Port, M1_OPAMP3_OUT_Pin);
 2721              		.loc 1 1196 1 is_stmt 1 view .LVU713
 2722              	.LBB75:
 2723              	.LBI75:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2724              		.loc 3 719 22 view .LVU714
 2725              	.LBB76:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2726              		.loc 3 721 3 view .LVU715
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2727              		.loc 3 722 3 view .LVU716
 2728 001c 5D4D     		ldr	r5, .L177+8
 2729 001e D561     		str	r5, [r2, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2730              		.loc 3 723 3 view .LVU717
 2731 0020 4FF0020E 		mov	lr, #2
 2732 0024 C2F81CE0 		str	lr, [r2, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2733              		.loc 3 724 3 view .LVU718
 2734 0028 D561     		str	r5, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2735              		.loc 3 726 3 view .LVU719
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2736              		.loc 3 726 10 is_stmt 0 view .LVU720
 2737 002a D369     		ldr	r3, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2738              		.loc 3 726 8 view .LVU721
 2739 002c 1293     		str	r3, [sp, #72]
 2740              		.loc 3 727 3 is_stmt 1 view .LVU722
 2741 002e 129B     		ldr	r3, [sp, #72]
 2742              	.LVL265:
 2743              		.loc 3 727 3 is_stmt 0 view .LVU723
 2744              	.LBE76:
 2745              	.LBE75:
1197:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_ENCODER_I_GPIO_Port, M1_ENCODER_I_Pin);
 2746              		.loc 1 1197 1 is_stmt 1 view .LVU724
 2747              	.LBB77:
 2748              	.LBI77:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2749              		.loc 3 719 22 view .LVU725
 2750              	.LBB78:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2751              		.loc 3 721 3 view .LVU726
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2752              		.loc 3 722 3 view .LVU727
 2753 0030 5949     		ldr	r1, .L177+12
ARM GAS  /tmp/ccJda0bK.s 			page 120


 2754 0032 D161     		str	r1, [r2, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2755              		.loc 3 723 3 view .LVU728
 2756 0034 4FF48076 		mov	r6, #256
 2757 0038 D661     		str	r6, [r2, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2758              		.loc 3 724 3 view .LVU729
 2759 003a D161     		str	r1, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2760              		.loc 3 726 3 view .LVU730
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2761              		.loc 3 726 10 is_stmt 0 view .LVU731
 2762 003c D369     		ldr	r3, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2763              		.loc 3 726 8 view .LVU732
 2764 003e 1193     		str	r3, [sp, #68]
 2765              		.loc 3 727 3 is_stmt 1 view .LVU733
 2766 0040 119B     		ldr	r3, [sp, #68]
 2767              	.LVL266:
 2768              		.loc 3 727 3 is_stmt 0 view .LVU734
 2769              	.LBE78:
 2770              	.LBE77:
1198:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_TEMPERATURE_GPIO_Port, M1_TEMPERATURE_Pin);
 2771              		.loc 1 1198 1 is_stmt 1 view .LVU735
 2772              	.LBB79:
 2773              	.LBI79:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2774              		.loc 3 719 22 view .LVU736
 2775              	.LBB80:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2776              		.loc 3 721 3 view .LVU737
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2777              		.loc 3 722 3 view .LVU738
 2778 0042 4FF4A033 		mov	r3, #81920
 2779 0046 D361     		str	r3, [r2, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2780              		.loc 3 723 3 view .LVU739
 2781 0048 4FF48040 		mov	r0, #16384
 2782 004c D061     		str	r0, [r2, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2783              		.loc 3 724 3 view .LVU740
 2784 004e D361     		str	r3, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2785              		.loc 3 726 3 view .LVU741
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2786              		.loc 3 726 10 is_stmt 0 view .LVU742
 2787 0050 D369     		ldr	r3, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2788              		.loc 3 726 8 view .LVU743
 2789 0052 1093     		str	r3, [sp, #64]
 2790              		.loc 3 727 3 is_stmt 1 view .LVU744
 2791 0054 109B     		ldr	r3, [sp, #64]
 2792              	.LVL267:
 2793              		.loc 3 727 3 is_stmt 0 view .LVU745
 2794              	.LBE80:
 2795              	.LBE79:
1199:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_BUS_VOLTAGE_GPIO_Port, M1_BUS_VOLTAGE_Pin);
ARM GAS  /tmp/ccJda0bK.s 			page 121


 2796              		.loc 1 1199 1 is_stmt 1 view .LVU746
 2797              	.LBB81:
 2798              	.LBI81:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2799              		.loc 3 719 22 view .LVU747
 2800              	.LBB82:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2801              		.loc 3 721 3 view .LVU748
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2802              		.loc 3 722 3 view .LVU749
 2803 0056 4FF09043 		mov	r3, #1207959552
 2804 005a 4FF00110 		mov	r0, #65537
 2805 005e D861     		str	r0, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2806              		.loc 3 723 3 view .LVU750
 2807 0060 0127     		movs	r7, #1
 2808 0062 DF61     		str	r7, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2809              		.loc 3 724 3 view .LVU751
 2810 0064 D861     		str	r0, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2811              		.loc 3 726 3 view .LVU752
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2812              		.loc 3 726 10 is_stmt 0 view .LVU753
 2813 0066 D3F81C80 		ldr	r8, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2814              		.loc 3 726 8 view .LVU754
 2815 006a CDF83C80 		str	r8, [sp, #60]
 2816              		.loc 3 727 3 is_stmt 1 view .LVU755
 2817 006e DDF83C80 		ldr	r8, [sp, #60]
 2818              	.LVL268:
 2819              		.loc 3 727 3 is_stmt 0 view .LVU756
 2820              	.LBE82:
 2821              	.LBE81:
1200:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_SHUNT_W_GPIO_Port, M1_CURR_SHUNT_W_Pin);
 2822              		.loc 1 1200 1 is_stmt 1 view .LVU757
 2823              	.LBB83:
 2824              	.LBI83:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2825              		.loc 3 719 22 view .LVU758
 2826              	.LBB84:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2827              		.loc 3 721 3 view .LVU759
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2828              		.loc 3 722 3 view .LVU760
 2829 0072 D061     		str	r0, [r2, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2830              		.loc 3 723 3 view .LVU761
 2831 0074 D761     		str	r7, [r2, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2832              		.loc 3 724 3 view .LVU762
 2833 0076 D061     		str	r0, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2834              		.loc 3 726 3 view .LVU763
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2835              		.loc 3 726 10 is_stmt 0 view .LVU764
 2836 0078 D069     		ldr	r0, [r2, #28]
ARM GAS  /tmp/ccJda0bK.s 			page 122


 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2837              		.loc 3 726 8 view .LVU765
 2838 007a 0E90     		str	r0, [sp, #56]
 2839              		.loc 3 727 3 is_stmt 1 view .LVU766
 2840 007c 0E98     		ldr	r0, [sp, #56]
 2841              	.LVL269:
 2842              		.loc 3 727 3 is_stmt 0 view .LVU767
 2843              	.LBE84:
 2844              	.LBE83:
1201:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_SHUNT_V_GPIO_Port, M1_CURR_SHUNT_V_Pin);
 2845              		.loc 1 1201 1 is_stmt 1 view .LVU768
 2846              	.LBB85:
 2847              	.LBI85:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2848              		.loc 3 719 22 view .LVU769
 2849              	.LBB86:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2850              		.loc 3 721 3 view .LVU770
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2851              		.loc 3 722 3 view .LVU771
 2852 007e 4748     		ldr	r0, .L177+16
 2853 0080 D861     		str	r0, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2854              		.loc 3 723 3 view .LVU772
 2855 0082 8027     		movs	r7, #128
 2856 0084 DF61     		str	r7, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2857              		.loc 3 724 3 view .LVU773
 2858 0086 D861     		str	r0, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2859              		.loc 3 726 3 view .LVU774
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2860              		.loc 3 726 10 is_stmt 0 view .LVU775
 2861 0088 D3F81C80 		ldr	r8, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2862              		.loc 3 726 8 view .LVU776
 2863 008c CDF83480 		str	r8, [sp, #52]
 2864              		.loc 3 727 3 is_stmt 1 view .LVU777
 2865 0090 DDF83480 		ldr	r8, [sp, #52]
 2866              	.LVL270:
 2867              		.loc 3 727 3 is_stmt 0 view .LVU778
 2868              	.LBE86:
 2869              	.LBE85:
1202:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_CURR_SHUNT_U_GPIO_Port, M1_CURR_SHUNT_U_Pin);
 2870              		.loc 1 1202 1 is_stmt 1 view .LVU779
 2871              	.LBB87:
 2872              	.LBI87:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2873              		.loc 3 719 22 view .LVU780
 2874              	.LBB88:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2875              		.loc 3 721 3 view .LVU781
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2876              		.loc 3 722 3 view .LVU782
 2877 0094 DD61     		str	r5, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2878              		.loc 3 723 3 view .LVU783
ARM GAS  /tmp/ccJda0bK.s 			page 123


 2879 0096 C3F81CE0 		str	lr, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2880              		.loc 3 724 3 view .LVU784
 2881 009a DD61     		str	r5, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2882              		.loc 3 726 3 view .LVU785
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2883              		.loc 3 726 10 is_stmt 0 view .LVU786
 2884 009c DD69     		ldr	r5, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2885              		.loc 3 726 8 view .LVU787
 2886 009e 0C95     		str	r5, [sp, #48]
 2887              		.loc 3 727 3 is_stmt 1 view .LVU788
 2888 00a0 0C9D     		ldr	r5, [sp, #48]
 2889              	.LVL271:
 2890              		.loc 3 727 3 is_stmt 0 view .LVU789
 2891              	.LBE88:
 2892              	.LBE87:
1203:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP1_INT_GAIN_GPIO_Port, M1_OPAMP1_INT_GAIN_Pin);
 2893              		.loc 1 1203 1 is_stmt 1 view .LVU790
 2894              	.LBB89:
 2895              	.LBI89:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2896              		.loc 3 719 22 view .LVU791
 2897              	.LBB90:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2898              		.loc 3 721 3 view .LVU792
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2899              		.loc 3 722 3 view .LVU793
 2900 00a2 3F4D     		ldr	r5, .L177+20
 2901 00a4 DD61     		str	r5, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2902              		.loc 3 723 3 view .LVU794
 2903 00a6 4FF0080E 		mov	lr, #8
 2904 00aa C3F81CE0 		str	lr, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2905              		.loc 3 724 3 view .LVU795
 2906 00ae DD61     		str	r5, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2907              		.loc 3 726 3 view .LVU796
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2908              		.loc 3 726 10 is_stmt 0 view .LVU797
 2909 00b0 DD69     		ldr	r5, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2910              		.loc 3 726 8 view .LVU798
 2911 00b2 0B95     		str	r5, [sp, #44]
 2912              		.loc 3 727 3 is_stmt 1 view .LVU799
 2913 00b4 0B9D     		ldr	r5, [sp, #44]
 2914              	.LVL272:
 2915              		.loc 3 727 3 is_stmt 0 view .LVU800
 2916              	.LBE90:
 2917              	.LBE89:
1204:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP1_OUT_GPIO_Port, M1_OPAMP1_OUT_Pin);
 2918              		.loc 1 1204 1 is_stmt 1 view .LVU801
 2919              	.LBB91:
 2920              	.LBI91:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
ARM GAS  /tmp/ccJda0bK.s 			page 124


 2921              		.loc 3 719 22 view .LVU802
 2922              	.LBB92:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2923              		.loc 3 721 3 view .LVU803
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2924              		.loc 3 722 3 view .LVU804
 2925 00b6 DC61     		str	r4, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2926              		.loc 3 723 3 view .LVU805
 2927 00b8 C3F81CC0 		str	ip, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2928              		.loc 3 724 3 view .LVU806
 2929 00bc DC61     		str	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2930              		.loc 3 726 3 view .LVU807
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2931              		.loc 3 726 10 is_stmt 0 view .LVU808
 2932 00be DC69     		ldr	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2933              		.loc 3 726 8 view .LVU809
 2934 00c0 0A94     		str	r4, [sp, #40]
 2935              		.loc 3 727 3 is_stmt 1 view .LVU810
 2936 00c2 0A9C     		ldr	r4, [sp, #40]
 2937              	.LVL273:
 2938              		.loc 3 727 3 is_stmt 0 view .LVU811
 2939              	.LBE92:
 2940              	.LBE91:
1205:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP2_OUT_GPIO_Port, M1_OPAMP2_OUT_Pin);
 2941              		.loc 1 1205 1 is_stmt 1 view .LVU812
 2942              	.LBB93:
 2943              	.LBI93:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2944              		.loc 3 719 22 view .LVU813
 2945              	.LBB94:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2946              		.loc 3 721 3 view .LVU814
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2947              		.loc 3 722 3 view .LVU815
 2948 00c4 374C     		ldr	r4, .L177+24
 2949 00c6 DC61     		str	r4, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2950              		.loc 3 723 3 view .LVU816
 2951 00c8 4025     		movs	r5, #64
 2952 00ca DD61     		str	r5, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2953              		.loc 3 724 3 view .LVU817
 2954 00cc DC61     		str	r4, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2955              		.loc 3 726 3 view .LVU818
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2956              		.loc 3 726 10 is_stmt 0 view .LVU819
 2957 00ce D3F81CC0 		ldr	ip, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2958              		.loc 3 726 8 view .LVU820
 2959 00d2 CDF824C0 		str	ip, [sp, #36]
 2960              		.loc 3 727 3 is_stmt 1 view .LVU821
 2961 00d6 DDF824C0 		ldr	ip, [sp, #36]
ARM GAS  /tmp/ccJda0bK.s 			page 125


 2962              	.LVL274:
 2963              		.loc 3 727 3 is_stmt 0 view .LVU822
 2964              	.LBE94:
 2965              	.LBE93:
1206:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_OPAMP2_INT_GAIN_GPIO_Port, M1_OPAMP2_INT_GAIN_Pin);
 2966              		.loc 1 1206 1 is_stmt 1 view .LVU823
 2967              	.LBB95:
 2968              	.LBI95:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2969              		.loc 3 719 22 view .LVU824
 2970              	.LBB96:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2971              		.loc 3 721 3 view .LVU825
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2972              		.loc 3 722 3 view .LVU826
 2973 00da DFF8D0C0 		ldr	ip, .L177+32
 2974 00de C3F81CC0 		str	ip, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2975              		.loc 3 723 3 view .LVU827
 2976 00e2 4FF0200E 		mov	lr, #32
 2977 00e6 C3F81CE0 		str	lr, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 2978              		.loc 3 724 3 view .LVU828
 2979 00ea C3F81CC0 		str	ip, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2980              		.loc 3 726 3 view .LVU829
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2981              		.loc 3 726 10 is_stmt 0 view .LVU830
 2982 00ee D3F81CC0 		ldr	ip, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 2983              		.loc 3 726 8 view .LVU831
 2984 00f2 CDF820C0 		str	ip, [sp, #32]
 2985              		.loc 3 727 3 is_stmt 1 view .LVU832
 2986 00f6 DDF820C0 		ldr	ip, [sp, #32]
 2987              	.LVL275:
 2988              		.loc 3 727 3 is_stmt 0 view .LVU833
 2989              	.LBE96:
 2990              	.LBE95:
1207:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_ENCODER_A_GPIO_Port, M1_ENCODER_A_Pin);
 2991              		.loc 1 1207 1 is_stmt 1 view .LVU834
 2992              	.LBB97:
 2993              	.LBI97:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 2994              		.loc 3 719 22 view .LVU835
 2995              	.LBB98:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2996              		.loc 3 721 3 view .LVU836
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 2997              		.loc 3 722 3 view .LVU837
 2998 00fa D461     		str	r4, [r2, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 2999              		.loc 3 723 3 view .LVU838
 3000 00fc D561     		str	r5, [r2, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 3001              		.loc 3 724 3 view .LVU839
 3002 00fe D461     		str	r4, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
ARM GAS  /tmp/ccJda0bK.s 			page 126


 3003              		.loc 3 726 3 view .LVU840
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3004              		.loc 3 726 10 is_stmt 0 view .LVU841
 3005 0100 D469     		ldr	r4, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3006              		.loc 3 726 8 view .LVU842
 3007 0102 0794     		str	r4, [sp, #28]
 3008              		.loc 3 727 3 is_stmt 1 view .LVU843
 3009 0104 079C     		ldr	r4, [sp, #28]
 3010              	.LVL276:
 3011              		.loc 3 727 3 is_stmt 0 view .LVU844
 3012              	.LBE98:
 3013              	.LBE97:
1208:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_ENCODER_B_GPIO_Port, M1_ENCODER_B_Pin);
 3014              		.loc 1 1208 1 is_stmt 1 view .LVU845
 3015              	.LBB99:
 3016              	.LBI99:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 3017              		.loc 3 719 22 view .LVU846
 3018              	.LBB100:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3019              		.loc 3 721 3 view .LVU847
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 3020              		.loc 3 722 3 view .LVU848
 3021 0106 D061     		str	r0, [r2, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3022              		.loc 3 723 3 view .LVU849
 3023 0108 D761     		str	r7, [r2, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 3024              		.loc 3 724 3 view .LVU850
 3025 010a D061     		str	r0, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3026              		.loc 3 726 3 view .LVU851
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3027              		.loc 3 726 10 is_stmt 0 view .LVU852
 3028 010c D069     		ldr	r0, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3029              		.loc 3 726 8 view .LVU853
 3030 010e 0690     		str	r0, [sp, #24]
 3031              		.loc 3 727 3 is_stmt 1 view .LVU854
 3032 0110 0698     		ldr	r0, [sp, #24]
 3033              	.LVL277:
 3034              		.loc 3 727 3 is_stmt 0 view .LVU855
 3035              	.LBE100:
 3036              	.LBE99:
1209:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_UH_GPIO_Port, M1_PWM_UH_Pin);
 3037              		.loc 1 1209 1 is_stmt 1 view .LVU856
 3038              	.LBB101:
 3039              	.LBI101:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 3040              		.loc 3 719 22 view .LVU857
 3041              	.LBB102:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3042              		.loc 3 721 3 view .LVU858
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 3043              		.loc 3 722 3 view .LVU859
 3044 0112 D961     		str	r1, [r3, #28]
ARM GAS  /tmp/ccJda0bK.s 			page 127


 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3045              		.loc 3 723 3 view .LVU860
 3046 0114 DE61     		str	r6, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 3047              		.loc 3 724 3 view .LVU861
 3048 0116 D961     		str	r1, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3049              		.loc 3 726 3 view .LVU862
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3050              		.loc 3 726 10 is_stmt 0 view .LVU863
 3051 0118 D969     		ldr	r1, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3052              		.loc 3 726 8 view .LVU864
 3053 011a 0591     		str	r1, [sp, #20]
 3054              		.loc 3 727 3 is_stmt 1 view .LVU865
 3055 011c 0599     		ldr	r1, [sp, #20]
 3056              	.LVL278:
 3057              		.loc 3 727 3 is_stmt 0 view .LVU866
 3058              	.LBE102:
 3059              	.LBE101:
1210:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_VH_GPIO_Port, M1_PWM_VH_Pin);
 3060              		.loc 1 1210 1 is_stmt 1 view .LVU867
 3061              	.LBB103:
 3062              	.LBI103:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 3063              		.loc 3 719 22 view .LVU868
 3064              	.LBB104:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3065              		.loc 3 721 3 view .LVU869
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 3066              		.loc 3 722 3 view .LVU870
 3067 011e 4FF48131 		mov	r1, #66048
 3068 0122 D961     		str	r1, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3069              		.loc 3 723 3 view .LVU871
 3070 0124 4FF40070 		mov	r0, #512
 3071 0128 D861     		str	r0, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 3072              		.loc 3 724 3 view .LVU872
 3073 012a D961     		str	r1, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3074              		.loc 3 726 3 view .LVU873
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3075              		.loc 3 726 10 is_stmt 0 view .LVU874
 3076 012c D969     		ldr	r1, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3077              		.loc 3 726 8 view .LVU875
 3078 012e 0491     		str	r1, [sp, #16]
 3079              		.loc 3 727 3 is_stmt 1 view .LVU876
 3080 0130 0499     		ldr	r1, [sp, #16]
 3081              	.LVL279:
 3082              		.loc 3 727 3 is_stmt 0 view .LVU877
 3083              	.LBE104:
 3084              	.LBE103:
1211:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_WH_GPIO_Port, M1_PWM_WH_Pin);
 3085              		.loc 1 1211 1 is_stmt 1 view .LVU878
 3086              	.LBB105:
ARM GAS  /tmp/ccJda0bK.s 			page 128


 3087              	.LBI105:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 3088              		.loc 3 719 22 view .LVU879
 3089              	.LBB106:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3090              		.loc 3 721 3 view .LVU880
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 3091              		.loc 3 722 3 view .LVU881
 3092 0132 4FF48231 		mov	r1, #66560
 3093 0136 D961     		str	r1, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3094              		.loc 3 723 3 view .LVU882
 3095 0138 4FF48060 		mov	r0, #1024
 3096 013c D861     		str	r0, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 3097              		.loc 3 724 3 view .LVU883
 3098 013e D961     		str	r1, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3099              		.loc 3 726 3 view .LVU884
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3100              		.loc 3 726 10 is_stmt 0 view .LVU885
 3101 0140 D969     		ldr	r1, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3102              		.loc 3 726 8 view .LVU886
 3103 0142 0391     		str	r1, [sp, #12]
 3104              		.loc 3 727 3 is_stmt 1 view .LVU887
 3105 0144 0399     		ldr	r1, [sp, #12]
 3106              	.LVL280:
 3107              		.loc 3 727 3 is_stmt 0 view .LVU888
 3108              	.LBE106:
 3109              	.LBE105:
1212:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_VL_GPIO_Port, M1_PWM_VL_Pin);
 3110              		.loc 1 1212 1 is_stmt 1 view .LVU889
 3111              	.LBB107:
 3112              	.LBI107:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 3113              		.loc 3 719 22 view .LVU890
 3114              	.LBB108:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3115              		.loc 3 721 3 view .LVU891
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 3116              		.loc 3 722 3 view .LVU892
 3117 0146 4FF48831 		mov	r1, #69632
 3118 014a D961     		str	r1, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3119              		.loc 3 723 3 view .LVU893
 3120 014c 4FF48050 		mov	r0, #4096
 3121 0150 D861     		str	r0, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 3122              		.loc 3 724 3 view .LVU894
 3123 0152 D961     		str	r1, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3124              		.loc 3 726 3 view .LVU895
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3125              		.loc 3 726 10 is_stmt 0 view .LVU896
 3126 0154 DB69     		ldr	r3, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
ARM GAS  /tmp/ccJda0bK.s 			page 129


 3127              		.loc 3 726 8 view .LVU897
 3128 0156 0293     		str	r3, [sp, #8]
 3129              		.loc 3 727 3 is_stmt 1 view .LVU898
 3130 0158 029B     		ldr	r3, [sp, #8]
 3131              	.LVL281:
 3132              		.loc 3 727 3 is_stmt 0 view .LVU899
 3133              	.LBE108:
 3134              	.LBE107:
1213:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_WL_GPIO_Port, M1_PWM_WL_Pin);
 3135              		.loc 1 1213 1 is_stmt 1 view .LVU900
 3136              	.LBB109:
 3137              	.LBI109:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 3138              		.loc 3 719 22 view .LVU901
 3139              	.LBB110:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3140              		.loc 3 721 3 view .LVU902
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 3141              		.loc 3 722 3 view .LVU903
 3142 015a 4FF4C033 		mov	r3, #98304
 3143 015e D361     		str	r3, [r2, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3144              		.loc 3 723 3 view .LVU904
 3145 0160 4FF40041 		mov	r1, #32768
 3146 0164 D161     		str	r1, [r2, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 3147              		.loc 3 724 3 view .LVU905
 3148 0166 D361     		str	r3, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3149              		.loc 3 726 3 view .LVU906
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3150              		.loc 3 726 10 is_stmt 0 view .LVU907
 3151 0168 D369     		ldr	r3, [r2, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3152              		.loc 3 726 8 view .LVU908
 3153 016a 0193     		str	r3, [sp, #4]
 3154              		.loc 3 727 3 is_stmt 1 view .LVU909
 3155 016c 019B     		ldr	r3, [sp, #4]
 3156              	.LVL282:
 3157              		.loc 3 727 3 is_stmt 0 view .LVU910
 3158              	.LBE110:
 3159              	.LBE109:
1214:Src/mc_tasks.c **** LL_GPIO_LockPin(M1_PWM_UL_GPIO_Port, M1_PWM_UL_Pin);
 3160              		.loc 1 1214 1 is_stmt 1 view .LVU911
 3161              	.LBB111:
 3162              	.LBI111:
 719:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h **** {
 3163              		.loc 3 719 22 view .LVU912
 3164              	.LBB112:
 721:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 3165              		.loc 3 721 3 view .LVU913
 722:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 3166              		.loc 3 722 3 view .LVU914
 3167 016e 0E4B     		ldr	r3, .L177+28
 3168 0170 4FF49032 		mov	r2, #73728
 3169 0174 DA61     		str	r2, [r3, #28]
 723:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
ARM GAS  /tmp/ccJda0bK.s 			page 130


 3170              		.loc 3 723 3 view .LVU915
 3171 0176 4FF40051 		mov	r1, #8192
 3172 017a D961     		str	r1, [r3, #28]
 724:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   /* Read LCKR register. This read is mandatory to complete key lock sequence */
 3173              		.loc 3 724 3 view .LVU916
 3174 017c DA61     		str	r2, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3175              		.loc 3 726 3 view .LVU917
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3176              		.loc 3 726 10 is_stmt 0 view .LVU918
 3177 017e DB69     		ldr	r3, [r3, #28]
 726:Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_gpio.h ****   (void) temp;
 3178              		.loc 3 726 8 view .LVU919
 3179 0180 0093     		str	r3, [sp]
 3180              		.loc 3 727 3 is_stmt 1 view .LVU920
 3181 0182 009B     		ldr	r3, [sp]
 3182              	.LVL283:
 3183              		.loc 3 727 3 is_stmt 0 view .LVU921
 3184              	.LBE112:
 3185              	.LBE111:
1215:Src/mc_tasks.c **** }
 3186              		.loc 1 1215 1 view .LVU922
 3187 0184 14B0     		add	sp, sp, #80
 3188              		.cfi_def_cfa_offset 24
 3189              		@ sp needed
 3190 0186 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3191              	.L178:
 3192 018a 00BF     		.align	2
 3193              	.L177:
 3194 018c 00040048 		.word	1207960576
 3195 0190 04000100 		.word	65540
 3196 0194 02000100 		.word	65538
 3197 0198 00010100 		.word	65792
 3198 019c 80000100 		.word	65664
 3199 01a0 08000100 		.word	65544
 3200 01a4 40000100 		.word	65600
 3201 01a8 00080048 		.word	1207961600
 3202 01ac 20000100 		.word	65568
 3203              		.cfi_endproc
 3204              	.LFE1642:
 3206              		.section	.bss.FOCVars,"aw",%nobits
 3207              		.align	2
 3208              		.set	.LANCHOR2,. + 0
 3211              	FOCVars:
 3212 0000 00000000 		.space	38
 3212      00000000 
 3212      00000000 
 3212      00000000 
 3212      00000000 
 3213              		.section	.bss.bMCBootCompleted,"aw",%nobits
 3214              		.set	.LANCHOR4,. + 0
 3217              	bMCBootCompleted:
 3218 0000 00       		.space	1
 3219              		.section	.bss.hBootCapDelayCounterM1,"aw",%nobits
 3220              		.align	1
 3221              		.set	.LANCHOR7,. + 0
 3224              	hBootCapDelayCounterM1:
ARM GAS  /tmp/ccJda0bK.s 			page 131


 3225 0000 0000     		.space	2
 3226              		.section	.bss.hMFTaskCounterM1,"aw",%nobits
 3227              		.align	1
 3228              		.set	.LANCHOR9,. + 0
 3231              	hMFTaskCounterM1:
 3232 0000 0000     		.space	2
 3233              		.section	.bss.hStopPermanencyCounterM1,"aw",%nobits
 3234              		.align	1
 3235              		.set	.LANCHOR8,. + 0
 3238              	hStopPermanencyCounterM1:
 3239 0000 0000     		.space	2
 3240              		.section	.bss.pEAC,"aw",%nobits
 3241              		.align	2
 3242              		.set	.LANCHOR5,. + 0
 3245              	pEAC:
 3246 0000 00000000 		.space	4
 3247              		.section	.bss.pREMNG,"aw",%nobits
 3248              		.align	2
 3249              		.set	.LANCHOR6,. + 0
 3252              	pREMNG:
 3253 0000 00000000 		.space	4
 3254              		.section	.bss.prevAngle.15751,"aw",%nobits
 3255              		.align	1
 3256              		.set	.LANCHOR0,. + 0
 3259              	prevAngle.15751:
 3260 0000 0000     		.space	2
 3261              		.section	.bss.pwmcHandle,"aw",%nobits
 3262              		.align	2
 3263              		.set	.LANCHOR3,. + 0
 3266              	pwmcHandle:
 3267 0000 00000000 		.space	4
 3268              		.section	.bss.sectionCounter.15752,"aw",%nobits
 3269              		.align	1
 3270              		.set	.LANCHOR1,. + 0
 3273              	sectionCounter.15752:
 3274 0000 0000     		.space	2
 3275              		.weak	STO_SetDirection
 3276              		.text
 3277              	.Letext0:
 3278              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 3279              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3280              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 3281              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 3282              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 3283              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 3284              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 3285              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 3286              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 3287              		.file 13 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/mc_type.h"
 3288              		.file 14 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/pid_regulator.h"
 3289              		.file 15 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h"
 3290              		.file 16 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_torq_ctrl.h"
 3291              		.file 17 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/virtual_speed_sensor.h"
 3292              		.file 18 "Inc/regular_conversion_manager.h"
 3293              		.file 19 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/ntc_temperature_sensor.h"
 3294              		.file 20 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_speed_pos_fdbk.h"
 3295              		.file 21 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/pwm_curr_fdbk.h"
ARM GAS  /tmp/ccJda0bK.s 			page 132


 3296              		.file 22 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h"
 3297              		.file 23 "Inc/mc_interface.h"
 3298              		.file 24 "Inc/mc_configuration_registers.h"
 3299              		.file 25 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/bus_voltage_sensor.h"
 3300              		.file 26 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/r_divider_bus_voltage_sensor.h"
 3301              		.file 27 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/feed_forward_ctrl.h"
 3302              		.file 28 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/pqd_motor_power_measurement.h"
 3303              		.file 29 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/G4xx/Inc/r3_2_g4xx_pwm_curr_fdbk.h"
 3304              		.file 30 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/encoder_speed_pos_fdbk.h"
 3305              		.file 31 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/enc_align_ctrl.h"
 3306              		.file 32 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/ramp_ext_mngr.h"
 3307              		.file 33 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/circle_limitation.h"
 3308              		.file 34 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h"
 3309              		.file 35 "Inc/mc_config.h"
 3310              		.file 36 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcptl.h"
 3311              		.file 37 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcp.h"
 3312              		.file 38 "Inc/aspep.h"
 3313              		.file 39 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcpa.h"
 3314              		.file 40 "Inc/mcp_config.h"
 3315              		.file 41 "Inc/mc_api.h"
 3316              		.file 42 "Inc/mc_math.h"
 3317              		.file 43 "Inc/mc_app_hooks.h"
 3318              		.file 44 "MCSDK_v6.1.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/pwm_common.h"
ARM GAS  /tmp/ccJda0bK.s 			page 133


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mc_tasks.c
     /tmp/ccJda0bK.s:18     .text.mechanicalAngleCalculation:0000000000000000 $t
     /tmp/ccJda0bK.s:26     .text.mechanicalAngleCalculation:0000000000000000 mechanicalAngleCalculation
     /tmp/ccJda0bK.s:183    .text.mechanicalAngleCalculation:0000000000000094 $d
     /tmp/ccJda0bK.s:192    .text.FOC_Clear:0000000000000000 $t
     /tmp/ccJda0bK.s:199    .text.FOC_Clear:0000000000000000 FOC_Clear
     /tmp/ccJda0bK.s:302    .text.FOC_Clear:0000000000000084 $d
     /tmp/ccJda0bK.s:312    .text.MCboot:0000000000000000 $t
     /tmp/ccJda0bK.s:319    .text.MCboot:0000000000000000 MCboot
     /tmp/ccJda0bK.s:533    .text.MCboot:0000000000000118 $d
     /tmp/ccJda0bK.s:562    .text.FOC_InitAdditionalMethods:0000000000000000 $t
     /tmp/ccJda0bK.s:569    .text.FOC_InitAdditionalMethods:0000000000000000 FOC_InitAdditionalMethods
     /tmp/ccJda0bK.s:608    .text.FOC_InitAdditionalMethods:0000000000000018 $d
     /tmp/ccJda0bK.s:613    .text.FOC_CalcCurrRef:0000000000000000 $t
     /tmp/ccJda0bK.s:620    .text.FOC_CalcCurrRef:0000000000000000 FOC_CalcCurrRef
     /tmp/ccJda0bK.s:680    .text.FOC_CalcCurrRef:0000000000000048 $d
     /tmp/ccJda0bK.s:687    .text.TSK_SetChargeBootCapDelayM1:0000000000000000 $t
     /tmp/ccJda0bK.s:694    .text.TSK_SetChargeBootCapDelayM1:0000000000000000 TSK_SetChargeBootCapDelayM1
     /tmp/ccJda0bK.s:711    .text.TSK_SetChargeBootCapDelayM1:0000000000000008 $d
     /tmp/ccJda0bK.s:716    .text.TSK_ChargeBootCapDelayHasElapsedM1:0000000000000000 $t
     /tmp/ccJda0bK.s:723    .text.TSK_ChargeBootCapDelayHasElapsedM1:0000000000000000 TSK_ChargeBootCapDelayHasElapsedM1
     /tmp/ccJda0bK.s:752    .text.TSK_ChargeBootCapDelayHasElapsedM1:0000000000000010 $d
     /tmp/ccJda0bK.s:757    .text.TSK_SetStopPermanencyTimeM1:0000000000000000 $t
     /tmp/ccJda0bK.s:764    .text.TSK_SetStopPermanencyTimeM1:0000000000000000 TSK_SetStopPermanencyTimeM1
     /tmp/ccJda0bK.s:781    .text.TSK_SetStopPermanencyTimeM1:0000000000000008 $d
     /tmp/ccJda0bK.s:786    .text.TSK_MF_StopProcessing:0000000000000000 $t
     /tmp/ccJda0bK.s:793    .text.TSK_MF_StopProcessing:0000000000000000 TSK_MF_StopProcessing
     /tmp/ccJda0bK.s:839    .text.TSK_MF_StopProcessing:0000000000000038 $d
     /tmp/ccJda0bK.s:846    .text.TSK_StopPermanencyTimeHasElapsedM1:0000000000000000 $t
     /tmp/ccJda0bK.s:853    .text.TSK_StopPermanencyTimeHasElapsedM1:0000000000000000 TSK_StopPermanencyTimeHasElapsedM1
     /tmp/ccJda0bK.s:882    .text.TSK_StopPermanencyTimeHasElapsedM1:0000000000000010 $d
     /tmp/ccJda0bK.s:887    .text.TSK_MediumFrequencyTaskM1:0000000000000000 $t
     /tmp/ccJda0bK.s:894    .text.TSK_MediumFrequencyTaskM1:0000000000000000 TSK_MediumFrequencyTaskM1
     /tmp/ccJda0bK.s:971    .text.TSK_MediumFrequencyTaskM1:0000000000000058 $d
     /tmp/ccJda0bK.s:992    .text.TSK_MediumFrequencyTaskM1:00000000000000ac $t
     /tmp/ccJda0bK.s:1424   .text.TSK_MediumFrequencyTaskM1:00000000000002f0 $d
     /tmp/ccJda0bK.s:1440   .text.TSK_MediumFrequencyTaskM1:000000000000031c $t
     /tmp/ccJda0bK.s:1800   .text.TSK_MediumFrequencyTaskM1:00000000000004cc $d
     /tmp/ccJda0bK.s:1814   .text.MC_Scheduler:0000000000000000 $t
     /tmp/ccJda0bK.s:1821   .text.MC_Scheduler:0000000000000000 MC_Scheduler
     /tmp/ccJda0bK.s:1953   .text.MC_Scheduler:0000000000000088 $d
     /tmp/ccJda0bK.s:1962   .text.TSK_HighFrequencyTask:0000000000000000 $t
     /tmp/ccJda0bK.s:1969   .text.TSK_HighFrequencyTask:0000000000000000 TSK_HighFrequencyTask
     /tmp/ccJda0bK.s:2296   .text.TSK_HighFrequencyTask:0000000000000178 $d
     /tmp/ccJda0bK.s:2317   .text.TSK_SafetyTask_PWMOFF:0000000000000000 $t
     /tmp/ccJda0bK.s:2324   .text.TSK_SafetyTask_PWMOFF:0000000000000000 TSK_SafetyTask_PWMOFF
     /tmp/ccJda0bK.s:2445   .text.TSK_SafetyTask_PWMOFF:0000000000000088 $d
     /tmp/ccJda0bK.s:2456   .text.TSK_SafetyTask:0000000000000000 $t
     /tmp/ccJda0bK.s:2463   .text.TSK_SafetyTask:0000000000000000 TSK_SafetyTask
     /tmp/ccJda0bK.s:2497   .text.TSK_SafetyTask:000000000000001c $d
     /tmp/ccJda0bK.s:2502   .text.MC_RunMotorControlTasks:0000000000000000 $t
     /tmp/ccJda0bK.s:2509   .text.MC_RunMotorControlTasks:0000000000000000 MC_RunMotorControlTasks
     /tmp/ccJda0bK.s:2540   .text.MC_RunMotorControlTasks:0000000000000014 $d
     /tmp/ccJda0bK.s:2545   .text.GetMCI:0000000000000000 $t
     /tmp/ccJda0bK.s:2552   .text.GetMCI:0000000000000000 GetMCI
     /tmp/ccJda0bK.s:2585   .text.GetMCI:0000000000000014 $d
ARM GAS  /tmp/ccJda0bK.s 			page 134


     /tmp/ccJda0bK.s:2590   .text.TSK_HardwareFaultTask:0000000000000000 $t
     /tmp/ccJda0bK.s:2597   .text.TSK_HardwareFaultTask:0000000000000000 TSK_HardwareFaultTask
     /tmp/ccJda0bK.s:2623   .text.TSK_HardwareFaultTask:0000000000000018 $d
     /tmp/ccJda0bK.s:2629   .text.UI_HandleStartStopButton_cb:0000000000000000 $t
     /tmp/ccJda0bK.s:2636   .text.UI_HandleStartStopButton_cb:0000000000000000 UI_HandleStartStopButton_cb
     /tmp/ccJda0bK.s:2670   .text.mc_lock_pins:0000000000000000 $t
     /tmp/ccJda0bK.s:2677   .text.mc_lock_pins:0000000000000000 mc_lock_pins
     /tmp/ccJda0bK.s:3194   .text.mc_lock_pins:000000000000018c $d
     /tmp/ccJda0bK.s:3207   .bss.FOCVars:0000000000000000 $d
     /tmp/ccJda0bK.s:3211   .bss.FOCVars:0000000000000000 FOCVars
     /tmp/ccJda0bK.s:3217   .bss.bMCBootCompleted:0000000000000000 bMCBootCompleted
     /tmp/ccJda0bK.s:3218   .bss.bMCBootCompleted:0000000000000000 $d
     /tmp/ccJda0bK.s:3220   .bss.hBootCapDelayCounterM1:0000000000000000 $d
     /tmp/ccJda0bK.s:3224   .bss.hBootCapDelayCounterM1:0000000000000000 hBootCapDelayCounterM1
     /tmp/ccJda0bK.s:3227   .bss.hMFTaskCounterM1:0000000000000000 $d
     /tmp/ccJda0bK.s:3231   .bss.hMFTaskCounterM1:0000000000000000 hMFTaskCounterM1
     /tmp/ccJda0bK.s:3234   .bss.hStopPermanencyCounterM1:0000000000000000 $d
     /tmp/ccJda0bK.s:3238   .bss.hStopPermanencyCounterM1:0000000000000000 hStopPermanencyCounterM1
     /tmp/ccJda0bK.s:3241   .bss.pEAC:0000000000000000 $d
     /tmp/ccJda0bK.s:3245   .bss.pEAC:0000000000000000 pEAC
     /tmp/ccJda0bK.s:3248   .bss.pREMNG:0000000000000000 $d
     /tmp/ccJda0bK.s:3252   .bss.pREMNG:0000000000000000 pREMNG
     /tmp/ccJda0bK.s:3255   .bss.prevAngle.15751:0000000000000000 $d
     /tmp/ccJda0bK.s:3259   .bss.prevAngle.15751:0000000000000000 prevAngle.15751
     /tmp/ccJda0bK.s:3262   .bss.pwmcHandle:0000000000000000 $d
     /tmp/ccJda0bK.s:3266   .bss.pwmcHandle:0000000000000000 pwmcHandle
     /tmp/ccJda0bK.s:3269   .bss.sectionCounter.15752:0000000000000000 $d
     /tmp/ccJda0bK.s:3273   .bss.sectionCounter.15752:0000000000000000 sectionCounter.15752

UNDEFINED SYMBOLS
EncRefM1
PID_SetIntegralTerm
STC_Clear
PWMC_SwitchOffPWM
FF_Clear
pPIDIq
pPIDId
pSTC
pFF
R3_2_Init
ASPEP_start
startTimers
PID_HandleInit
STO_PLL_Init
STC_Init
ENC_Init
EAC_Init
VSS_Init
RUC_Init
RVBS_Init
NTC_Init
FF_Init
REMNG_Init
STC_GetDefaultIqdref
MCI_Init
MCI_ExecTorqueRamp
MC_APP_BootHook
ARM GAS  /tmp/ccJda0bK.s 			page 135


PWM_Handle_M1
aspepOverUartA
PIDSpeedHandle_M1
STO_PLL_M1
VirtualSpeedSensorM1
EncAlignCtrlM1
STO_M1
RevUpControlM1
PIDIqHandle_M1
PIDIdHandle_M1
BusVoltageSensor_M1
pMPM
TempSensor_M1
RampExtMngrHFParamsM1
Mci
ENCODER_M1
FF_InitFOCAdditionalMethods
STC_CalcTorqueReference
FF_VqdffComputation
R3_2_SwitchOffPWM
PQD_Clear
ENC_CalcAvrgMecSpeedUnit
STO_PLL_CalcAvrgMecSpeedUnit
PQD_CalcElMotorPower
MCI_GetCurrentFaults
MCI_GetOccurredFaults
MCI_GetImposedMotorDirection
RUC_Clear
PWMC_CurrentReadingCalibr
R3_2_TurnOnLowSides
STC_SetSpeedSensor
STO_PLL_Clear
ENC_Clear
EAC_IsAligned
EAC_StartAlignment
PWMC_SwitchOnPWM
VSS_Clear
EAC_Exec
RUC_Exec
MCI_FaultProcessing
VSS_CalcAvrgMecSpeedUnit
RUC_FirstAccelerationStageReached
STO_PLL_IsObserverConverged
STO_SetDirection
VSS_SetStartTransition
SPD_GetElAngle
MCM_Park
REMNG_ExecRamp
VSS_TransitionEnded
PID_GetKIDivisor
STC_ForceSpeedReferenceToCurrentSpeed
MCI_ExecBufferedCommands
R3_2_SwitchOnPWM
MC_APP_PostMediumFrequencyHook_M1
MCP_ReceivedPacket
MCP_Over_UartA
ENC_CalcAngle
ARM GAS  /tmp/ccJda0bK.s 			page 136


STC_GetSpeedSensor
SPD_GetInstElSpeedDpp
PWMC_GetPhaseCurrents
RCM_ReadOngoingConv
RCM_ExecNextConv
MCM_Clarke
PI_Controller
FF_VqdConditioning
Circle_Limitation
MCM_Rev_Park
PWMC_SetPhaseVoltage
FF_DataProcess
VBS_GetAvBusVoltage_d
STO_PLL_CalcElAngle
STO_PLL_CalcAvrgElSpeedDpp
REMNG_RampCompleted
REMNG_Calc
STO_ResetPLL
VSS_CalcElAngle
MCPA_dataLog
CircleLimitationM1
GLOBAL_TIMESTAMP
MCPA_UART_A
NTC_CalcAvTemp
PWMC_CheckOverCurrent
MCI_GetFaultState
EAC_SetRestartState
RVBS_CalcAvVbus
MCPA_flushDataLog
pTemperatureSensor
RCM_ExecUserConv
MC_GetSTMStateMotor1
MC_StartMotor1
MC_StopMotor1
